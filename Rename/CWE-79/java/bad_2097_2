

import var_0.var_1.var_2.var_3.var_4;
import var_0.var_1.var_5.var_6;
import var_7.var_8;
import var_7.var_9;
import var_7.var_10.var_11;
import var_7.var_10.var_12;
import var_7.var_10.var_13;
import var_7.var_10.var_14;
import var_7.var_10.var_15;
import var_7.var_10.var_16;
import var_7.var_10.var_17;
import var_7.var_10.var_18;
import var_7.var_10.var_19;
import var_7.var_10.var_20;
import var_7.var_10.var_21;
import var_7.var_10.var_22;
import var_7.var_10.var_23;
import var_7.var_10.var_24;
import var_7.var_10.var_25;
import var_7.var_10.var_26;
import var_7.var_10.var_27;
import var_7.var_10.var_28;
import var_7.var_10.var_29;
import var_7.var_10.var_30;
import var_7.var_10.var_31;
import var_7.var_10.var_32;
import var_7.var_10.var_33;
import var_7.var_10.var_34;
import var_7.var_10.var_35;
import var_7.var_10.var_36;
import var_7.var_10.var_37;
import var_7.var_10.var_38;
import var_7.var_10.var_39;
import var_7.var_10.var_40;
import var_7.var_10.var_41;
import var_7.var_10.var_42;
import var_7.var_10.var_43;
import var_7.var_10.var_44;
import var_7.var_10.var_45;
import var_7.var_10.var_46;
import var_7.var_10.var_47;
import var_7.var_10.var_48;
import var_7.var_10.var_49;
import var_7.var_10.var_50;
import var_7.var_10.var_51;
import var_7.var_10.var_52;
import var_7.var_10.var_53;
import var_7.var_10.var_54;
import var_7.var_10.var_55;
import var_7.var_10.var_56;
import var_7.var_10.var_57;
import var_7.var_10.var_58;
import var_7.var_10.var_24.var_59;
import var_7.var_10.var_60.var_61;
import var_7.var_10.var_62.var_63;
import var_7.var_10.var_62.var_64;
import var_7.var_10.var_62.var_65;
import var_7.var_10.var_66;
import var_7.var_10.var_67;

import var_68.var_69;
import var_0.var_1.var_2.var_3.var_70;
import var_0.var_71.var_72.var_73;
import var_7.var_74;
import var_7.var_75;
import var_7.var_76;
import var_7.var_77;
import var_7.var_78;
import var_7.var_79;
import var_7.var_80;
import var_7.var_81;
import var_7.var_82;
import var_7.var_82.var_83;
import var_7.var_84;
import var_7.var_85;
import var_7.var_86.var_87;
import var_7.var_88;
import var_7.var_89;
import var_7.var_90;
import var_7.var_91;
import var_7.var_92;
import var_7.var_93;
import var_7.var_94;
import static var_7.var_94.var_95;
import static var_7.var_94.var_96;
import var_7.var_97;
import var_7.var_98;
import var_7.var_99.var_100;
import var_7.var_99.var_101;
import var_7.var_99.var_102;
import var_7.var_99.var_103.var_104;
import var_7.var_99.var_103.var_105;
import var_7.var_106.var_107;
import var_7.var_106.var_108;
import var_7.var_109.var_110;
import var_7.var_111.var_112;
import var_7.var_109.var_113;
import var_7.var_86.var_114;
import var_7.var_115.var_116;
import var_7.var_115.var_117;
import var_7.var_115.var_118;
import var_7.var_119.var_120;
import var_7.var_119.var_121;
import var_7.var_122.var_123;
import var_7.var_122.var_124;
import var_7.var_122.var_125;
import var_7.var_126.var_127;
import var_7.var_126.var_128;
import var_7.var_126.var_129;
import var_7.var_126.var_130;
import var_7.var_126.var_131;
import var_7.var_126.var_132;
import var_7.var_126.var_133;
import var_7.var_126.var_134;
import var_7.var_126.var_135;
import var_7.var_126.var_136;
import var_7.var_126.var_137;
import var_7.var_126.var_138;
import var_7.var_126.var_139;
import var_7.var_126.var_140.var_141;
import var_7.var_142.var_143;
import var_7.var_142.var_144;
import var_7.var_142.var_145;
import var_7.var_142.var_146;
import var_7.var_142.var_147;
import var_7.var_142.var_148;
import var_7.var_142.var_149;
import var_7.var_142.var_150;
import var_7.var_142.var_151;
import var_7.var_142.var_152;
import var_7.var_142.var_153;
import var_7.var_154.var_155;
import var_7.var_154.var_156;
import var_7.var_154.var_157;
import var_7.var_158.var_159;
import var_7.var_158.var_160;
import var_7.var_158.var_161;
import var_7.var_162.var_163;
import var_7.var_162.var_164;
import var_7.var_162.var_165;
import var_7.var_162.var_166;
import var_7.var_162.var_167;
import var_7.var_162.var_168;
import var_7.var_162.var_169;
import var_7.var_162.var_170;
import var_7.var_162.var_171;
import var_7.var_162.var_172;
import var_7.var_162.var_173;
import var_7.var_162.var_174;
import var_7.var_162.var_175;
import var_7.var_162.var_176;
import var_7.var_162.var_177;
import var_7.var_162.var_178;
import var_7.var_162.var_179;
import var_7.var_162.var_179.var_180;
import var_7.var_162.var_181;
import var_7.var_162.var_182;
import var_7.var_162.var_183;
import var_7.var_162.var_184;
import var_7.var_162.var_185;
import var_7.var_186.var_187;
import var_7.var_186.var_188;
import var_7.var_186.var_189;
import var_7.var_186.var_190;
import var_7.var_191.var_192;
import var_193.var_194;
import var_193.var_195;
import var_193.var_196;
import var_193.var_10.var_197.var_198;
import var_193.var_126.var_199;
import var_193.var_126.var_200;
import var_193.var_142.var_201;
import var_193.var_162.var_202.var_203;
import var_204.var_205.var_206.var_207;
import var_208.var_209.var_210;
import var_208.var_209.var_211;
import var_208.var_209.var_212;
import var_208.var_209.var_213;
import var_208.var_209.var_214;
import var_208.var_209.var_215.var_216;
import var_208.var_209.var_217.var_218.var_219;
import var_208.var_209.var_220.var_221;
import var_208.var_222.var_223.var_224.var_225;
import var_208.var_222.var_223.var_224.var_226;
import var_208.var_222.var_223.var_111.var_227;
import var_208.var_228.var_7.var_229.var_230;
import var_208.var_228.var_7.var_229.var_231;
import var_208.var_228.var_7.var_229.var_232;
import var_208.var_228.var_7.var_229.var_233;
import var_208.var_228.var_7.var_229.var_234;
import var_208.var_228.var_7.var_229.var_235;
import var_208.var_228.var_7.var_229.var_234.var_236;
import var_208.var_237.var_238.var_239;
import var_208.var_237.var_238.var_240.var_241;
import var_208.var_237.var_242.var_243;
import var_208.var_237.var_242.var_244;
import var_208.var_237.var_245.var_246;
import var_208.var_237.var_245.var_247;
import var_208.var_237.var_245.var_248;
import var_208.var_237.var_245.var_249;
import var_208.var_237.var_245.var_250;
import var_208.var_237.var_245.var_251;
import var_208.var_237.var_245.var_252;
import var_208.var_237.var_245.var_253;
import var_208.var_237.var_245.var_254;
import var_208.var_237.var_245.var_255;
import var_208.var_237.var_245.var_256;
import var_208.var_237.var_245.var_257;
import var_208.var_237.var_245.var_258.var_259;
import var_208.var_237.var_245.var_258.var_260;
import var_208.var_237.var_245.var_261.var_262.var_263;
import var_208.var_237.var_245.var_264.var_265;
import var_208.var_237.var_245.var_224.var_266;
import var_208.var_237.var_245.var_224.var_267;
import var_208.var_268.var_269.var_270;

import var_271.var_272.var_273;
import var_271.var_274.var_275;
import var_271.var_274.var_276;
import var_271.var_274.var_277;
import var_271.var_274.var_278.var_279;
import var_271.var_274.var_278.var_280;

import static var_7.var_106.var_107.*;
import var_7.var_126.var_281;
import static var_271.var_274.var_278.var_280.var_282;
import static var_271.var_274.var_278.var_280.var_283;
import var_284.var_202.var_285;
import var_284.var_202.var_286;
import var_284.var_202.var_287;
import var_284.var_202.var_288;
import var_284.var_202.var_289;
import var_284.var_202.var_290;
import var_284.var_204.var_291;
import var_284.var_204.var_292;
import var_284.var_293.var_294.var_295;
import var_284.var_126.var_296;
import var_284.var_297.var_298;
import var_284.var_162.var_299;
import var_284.var_162.var_300;
import var_284.var_162.var_301;
import var_284.var_162.var_302;
import var_284.var_162.var_303;
import var_284.var_162.var_304;
import var_284.var_162.var_305;
import var_284.var_162.var_306;
import var_284.var_162.var_307;
import var_284.var_162.var_308;
import var_284.var_162.var_308.var_309;
import var_284.var_162.var_310;
import var_284.var_162.var_311;
import var_284.var_162.var_312;
import var_284.var_162.var_313;
import var_284.var_162.var_314;
import var_284.var_162.var_315;
import var_284.var_162.var_316;
import var_284.var_162.var_317.var_318;
import var_284.var_162.var_317.var_319;
import var_284.var_162.var_317.var_320;
import var_284.var_162.var_317.var_321;
import var_284.var_162.var_317.var_322;
import var_284.var_162.var_317.var_323;
import var_284.var_162.var_317.var_324;
import var_284.var_162.var_317.var_325;
import var_284.var_162.var_317.var_326;
import var_284.var_162.var_111.var_327;
import static var_284.var_162.var_111.var_327.var_328;
import var_284.var_162.var_111.var_329;
import var_284.var_162.var_111.var_330;
import var_284.var_162.var_331.var_332;
import var_271.var_333.var_334;
import var_271.var_333.var_335;
import var_271.var_333.var_336;


@var_260
public class class_0 extends AbstractCIBase implements ModifiableTopLevelItemGroup, StaplerProxy, StaplerFallback, ViewGroup, AccessControlled, DescriptorByNameOwner, ModelObjectWithContextMenu {
    private transient final Queue var_338;

    
    public transient final Lookup var_339 = new Lookup();

    
    
    private String var_340 = "1.0";

    
    private int var_341 = 2;

    
    private Mode var_342 = var_343.var_344;

    
    private Boolean var_345;

    
    private volatile AuthorizationStrategy var_346 = var_129.var_347;

    
    private volatile SecurityRealm var_348 = var_139.var_349;
    
    
    private ProjectNamingStrategy var_350 = var_198.var_351;

    
    private String var_352 = "${ITEM_ROOTDIR}/"+var_353;

    
    private String var_354 = "${ITEM_ROOTDIR}/builds";

    
    private String var_355;

    private MarkupFormatter var_356;

    
    public transient final File var_357;

    
    private transient volatile InitMilestone var_358 = var_107.var_359;

    
     transient final Map<String,TopLevelItem> var_360 = new CopyOnWriteMap.Tree<String,TopLevelItem>(var_164.var_361);

    
    private static Jenkins var_362;

    private transient volatile boolean var_363;
    private transient volatile boolean var_364;

    private List<JDK> var_365 = new ArrayList<JDK>();

    private transient volatile DependencyGraph var_366;

    
    private volatile ViewsTabBar var_367 = new DefaultViewsTabBar();

    
    private volatile MyViewsTabBar var_368 = new DefaultMyViewsTabBar();

    
    private transient final Memoizer<Class,ExtensionList> var_369 = new Memoizer<Class,ExtensionList>() {
        public ExtensionList method_3(Class param_8) {
            return var_78.var_371(var_337.this,var_370);
        }
    };

    
    private transient final Memoizer<Class,DescriptorExtensionList> var_372 = new Memoizer<Class,DescriptorExtensionList>() {
        public DescriptorExtensionList method_3(Class param_8) {
            return var_76.var_373(var_337.this,var_370);
        }
    };

    
    protected transient final Map<Node,Computer> var_374 = new CopyOnWriteMap.Hash<Node,Computer>();

    
    public final Hudson.CloudList var_375 = new Hudson.CloudList(this);

    public static class class_1 extends DescribableList<Cloud,Descriptor<Cloud>> {
        public var_376(Jenkins param_9) {
            super(var_377);
        }

        public var_376() {
        }

        public Cloud method_4(String param_10) {
            for (Cloud var_380 : this)
                if (var_380.var_379.var_381(var_379))
                    return var_380;
            return null;
        }

        @var_382
        protected void method_5() throws IOException {
            super.var_383();
            var_337.var_384().var_385();
        }
    }

    
    protected volatile NodeList var_142;

    
     Integer var_386;

    
     int var_387;

    
    private final CopyOnWriteArrayList<View> var_186 = new CopyOnWriteArrayList<View>();

    
    private volatile String var_388;

    private transient final ViewGroupMixIn var_389 = new ViewGroupMixIn(this) {
        protected List<View> method_0() { return var_186; }
        protected String method_8() { return var_388; }
        protected void method_8(String param_10) { var_388=var_379; }
    };


    private transient final FingerprintMap var_390 = new FingerprintMap();

    
    public transient final PluginManager var_391;

    public transient volatile TcpSlaveAgentListener var_392;

    private transient UDPBroadcastThread var_393;

    private transient DNSMultiCast var_394;

    
    private transient final CopyOnWriteList<SCMListener> var_395 = new CopyOnWriteList<SCMListener>();

    
    private int var_396 =0;

    
    private String var_397="";

    
    private volatile CrumbIssuer var_398;

    
    private transient final ConcurrentHashMap<String,Label> var_60 = new ConcurrentHashMap<String,Label>();

    
    @var_259
    public transient final OverallLoadStatistics var_399 = new OverallLoadStatistics();

    
    @var_259
    public transient final LoadStatistics var_400 = new UnlabeledLoadStatistics();

    
    public transient final NodeProvisioner var_401 = new NodeProvisioner(null,var_400);

    
    @var_239(NoExternalUse.class)
    public transient final NodeProvisioner var_402 = var_401;


    public transient final ServletContext var_403;

    
    private transient final List<Action> var_404 = new CopyOnWriteArrayList<Action>();

    
    private DescribableList<NodeProperty<?>,NodePropertyDescriptor> var_405 = new DescribableList<NodeProperty<?>,NodePropertyDescriptor>(this);

    
    private DescribableList<NodeProperty<?>,NodePropertyDescriptor> var_406 = new DescribableList<NodeProperty<?>,NodePropertyDescriptor>(this);

    
    public transient final List<AdministrativeMonitor> var_407 = var_408(AdministrativeMonitor.class);

    
    private transient final List<Widget> var_191 = var_408(Widget.class);

    
    private transient final AdjunctManager var_409;

    
    private transient final ItemGroupMixIn var_410 = new ItemGroupMixIn(this,this) {
        @var_382
        protected void method_10(TopLevelItem param_15) {
            var_360.var_413(var_412.var_414(),var_412);
        }

        @var_382
        protected File method_12(String param_10) {
            return var_337.this.var_415(var_379);
        }

        
        @var_382
        protected String method_13(StaplerRequest param_16, TopLevelItem param_17) throws IOException {
            String var_418 = var_417.var_419()+"configure";
            List<Ancestor> var_420 = var_416.var_421();
            for (int var_422 = var_420.var_423() - 1; var_422 >= 0; var_422--) {
                Object var_424 = var_420.var_425(var_422).var_426();
                if (var_424 instanceof View) {
                    var_418 = var_416.var_427() + '/' + ((View)var_424).var_419() + var_418;
                    break;
                }
            }
            return var_418;
        }
    };


    
    public interface interface_0 {
        Jenkins method_6();
    }

    static JenkinsHolder var_428 = new JenkinsHolder() {
        public Jenkins method_6() {
            return var_362;
        }
    };

    @var_105
    public static Jenkins method_6() {
        return var_428.var_384();
    }

    
    private transient final String var_429;

    private transient final UpdateCenter var_430 = new UpdateCenter();

    
    private Boolean var_431;

    
    public transient volatile ProxyConfiguration var_432;

    
    private transient final LogRecorderManager var_433 = new LogRecorderManager();

    protected var_337(File param_5, ServletContext param_1) throws IOException, InterruptedException, ReactorException {
        this(var_357,var_215,null);
    }

    
    @var_434.var_435.var_436.var_437.var_438.var_439({
        "SC_START_IN_CTOR", 
        "ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" 
    })
    protected var_337(File param_5, ServletContext param_1, PluginManager param_13) throws IOException, InterruptedException, ReactorException {
        long var_440 = var_441.var_442();
        
    	
        var_127.var_443(var_127.var_444);
        try {
            this.var_357 = var_357;
            this.var_403 = var_215;
            var_445(var_215);
            if(var_362!=null)
                throw new IllegalStateException();
            var_362 = this;

            if (!new File(var_357,"jobs").var_446()) {
                
                var_352 = "${JENKINS_HOME}/workspace/${ITEM_FULLNAME}";
            }

            
            final InitStrategy var_447 = var_108.var_425(var_448.var_449().var_450());

            var_160.var_451 = new Timer();
            var_338 = new Queue(var_42.var_452);

            try {
                var_366 = var_22.var_453;
            } catch (InternalError var_454) {}
                throw var_454;
            }

            
            TextFile var_455 = new TextFile(new File(var_456(),"secret.key"));
            if(var_455.var_446()) {
                var_429 = var_455.var_457();
            } else {
                SecureRandom var_458 = new SecureRandom();
                byte[] var_459 = new byte[32];
                var_458.var_460(var_459);
                var_429 = var_94.var_461(var_459);
                var_455.var_462(var_429);

                
                
                new FileBoolean(new File(var_357,"secret.key.not-so-secret")).var_463();
            }

            try {
                var_432 = var_91.var_464();
            } catch (IOException var_454) {}

            if (var_391==null)
                var_391 = new LocalPluginManager(this);
            this.var_391 = var_391;
            
            var_257.var_425(var_403).var_465(var_391.var_466);

            var_409 = new AdjunctManager(var_403, var_391.var_466,"adjuncts/"+var_467, var_183.var_468.var_469(365));

            
            var_470( var_447,
                    var_391.var_471(var_447),    
                    var_472(),                    
                    var_107.var_473()        
            );

            if(var_474)
                var_441.var_475(0);

            if(var_396!=-1) {
                try {
                    var_392 = new TcpSlaveAgentListener(var_396);
                } catch (BindException var_454) {}
            } else
                var_392 = null;

            try {
                var_393 = new UDPBroadcastThread(this);
                var_393.var_440();
            } catch (IOException var_454) {}
            var_394 = new DNSMultiCast(this);

            Timer var_451 = var_160.var_451;
            if (var_451 != null) {
                var_451.var_476(new SafeTimerTask() {
                    @var_382
                    protected void method_19() throws Exception {
                        var_385();
                    }
                }, var_183.var_477.var_469(5), var_183.var_477.var_469(5));
            }

            var_478();

            {
                Computer var_380 = var_479();
                if(var_380!=null)
                    for (ComputerListener var_480 : var_144.var_481())
                        var_480.var_482(var_380,var_181.var_483());
            }

            for (ItemListener var_484 : var_63.var_481()) {
                long var_485 = var_441.var_442();
                var_484.var_486();
                if (var_487)
                    var_488.var_489(var_490.var_491("Took %dms for item listener %s startup",
                            var_441.var_442()-var_485,var_484.var_492().var_414()));
            }
            
            if (var_487)
                var_488.var_489(var_490.var_491("Took %dms for complete Jenkins startup",
                        var_441.var_442()-var_440));
        } var_493 {
            var_216.var_494();
        }
    }

    
    private void method_17(final InitStrategy param_19, TaskBuilder... var_495) throws IOException, InterruptedException, ReactorException {
        Reactor var_229 = new Reactor(var_495) {
            
            @var_382
            protected void method_22(Task param_20) throws Exception {
                if (var_447!=null && var_447.var_498(var_497))  return;

                var_127.var_443(var_127.var_444); 
                String var_499 = var_497.var_500();

                Thread var_501 = var_448.var_449();
                String var_379 = var_501.var_414();
                if (var_499 !=null)
                    var_501.var_502(var_499);
                try {
                    long var_440 = var_441.var_442();
                    super.var_496(var_497);
                    if(var_487)
                        var_488.var_489(var_490.var_491("Took %dms for %s by %s",
                                var_441.var_442()-var_440, var_499, var_379));
                } finally {
                    var_501.var_502(var_379);
                    var_216.var_494();
                }
            }
        };

        new InitReactorRunner() {
            @var_382
            protected void method_24(InitMilestone param_21) {
                var_358 = var_503;
            }
        }.var_504(var_229);
    }


    public TcpSlaveAgentListener method_26() {
        return var_392;
    }

    
    public AdjunctManager method_27(String param_22) {
        return var_409;
    }

    @var_259
    public int method_28() {
        return var_396;
    }

    
    public void method_29(int param_23) throws IOException {
        this.var_396 = var_505;

        
        if(var_392==null) {
            if(var_396!=-1)
                var_392 = new TcpSlaveAgentListener(var_396);
        } else {
            if(var_392.var_506!=var_396) {
                var_392.var_507();
                var_392 = null;
                if(var_396!=-1)
                    var_392 = new TcpSlaveAgentListener(var_396);
            }
        }
    }

    public void method_30(String param_10) {
        throw new UnsupportedOperationException(); 
    }

    public String method_31() {
        return var_12.var_508();
    }

    @var_259
    public String method_32() {
        return var_355;
    }

    public PluginManager method_33() {
        return var_391;
    }

    public UpdateCenter method_34() {
        return var_430;
    }

    public boolean method_35() {
        return var_431==null || !var_431;
    }

    public void method_36(Boolean param_18) throws IOException {
        this.var_431 = var_431;
        var_509();
    }

    public View.People method_38() {
        return new View.People(this);
    }

    
    public View.AsynchPeople method_39() {
        return new View.AsynchPeople(this);
    }

    
    public boolean method_40() {
        return var_56.var_510.var_511(var_360.var_512());
    }

    public Api method_41() {
        return new Api(this);
    }

    
    public String method_42() {
        return var_429;
    }

    
    public SecretKey method_43() {
        return var_94.var_514(var_429);
    }

    
    @var_439("deprecation")
    public String method_44() {
        return var_94.var_515(var_513());
    }

    
    public Descriptor<SCM> method_45(String param_24) {
        return var_517(var_516,var_121.var_481());
    }

    
    public Descriptor<RepositoryBrowser<?>> method_47(String param_24) {
        return var_517(var_516,var_120.var_481());
    }

    
    public Descriptor<Builder> method_48(String param_24) {
        return var_517(var_516, var_156.var_481());
    }

    
    public Descriptor<BuildWrapper> method_49(String param_24) {
        return var_517(var_516, var_155.var_481());
    }

    
    public Descriptor<Publisher> method_50(String param_24) {
        return var_517(var_516, var_157.var_481());
    }

    
    public TriggerDescriptor method_51(String param_24) {
        return (TriggerDescriptor) var_517(var_516, var_160.var_481());
    }

    
    public Descriptor<RetentionStrategy<?>> method_52(String param_24) {
        return var_517(var_516, var_153.var_481());
    }

    
    public JobPropertyDescriptor method_53(String param_24) {
        
        Descriptor var_518 = var_517(var_516, var_39.var_481());
        return (JobPropertyDescriptor) var_518;
    }

    
    public ComputerSet method_54() {
        return new ComputerSet();
    }

    
    @var_439({"unchecked", "rawtypes"}) 
    public Descriptor method_55(String param_26) {
        
        Iterable<Descriptor> var_522 = var_175.var_523(var_408(Descriptor.class), var_76.var_524());
        for (Descriptor var_518 : var_522) {
            if (var_518.var_525().var_381(var_521)) {
                return var_518;
            }
        }
        Descriptor var_526 = null;
        for (Descriptor var_518 : var_522) {
            String var_379 = var_518.var_525();
            if (var_379.var_527(var_379.var_528('.') + 1).var_381(var_521)) {
                if (var_526 == null) {
                    var_526 = var_518;
                } else {
                    throw new IllegalArgumentException(var_521 + " is ambiguous; matches both " + var_379 + " and " + var_526.var_525());
                }
            }
        }
        return var_526;
    }

    
    public Descriptor method_56(String param_26) {
        return var_520(var_521);
    }

    
    public Descriptor method_55(Class<? extends Describable> param_28) {
        for( Descriptor var_518 : var_408(Descriptor.class) )
            if(var_518.var_530==var_529)
                return var_518;
        return null;
    }

    
    public Descriptor method_57(Class<? extends Describable> param_28) {
        Descriptor var_518 = var_520(var_529);
        if (var_518==null)
            throw new AssertionError(var_529+" is missing its descriptor");
        return var_518;
    }

    
    public <T extends Descriptor> T method_58(Class<T> param_28) {
        for( Descriptor var_518 : var_408(Descriptor.class) )
            if(var_518.var_492()==var_529)
                return var_529.var_531(var_518);
        return null;
    }

    
    public Descriptor<SecurityRealm> method_59(String param_24) {
        return var_517(var_516,var_139.var_481());
    }

    
    private <T extends Describable<T>>
    Descriptor<T> method_46(String param_24, Collection<? extends Descriptor<T>> param_27) {
        String var_379 = '.'+var_516;
        for (Descriptor<T> var_518 : var_522) {
            if(var_518.var_530.var_414().var_532(var_379))
                return var_518;
        }
        return null;
    }

    protected void method_20() throws IOException {
        var_478(var_533);
    }

    
    public CopyOnWriteList<SCMListener> method_60() {
        return var_395;
    }

    
    public Plugin method_61(String param_30) {
        PluginWrapper var_536 = var_391.var_534(var_535);
        if(var_536==null)     return null;
        return var_536.var_534();
    }

    
    @var_439("unchecked")
    public <P extends Plugin> P method_61(Class<P> param_29) {
        PluginWrapper var_536 = var_391.var_534(var_530);
        if(var_536==null)     return null;
        return (P) var_536.var_534();
    }

    
    public <P extends Plugin> List<P> method_62(Class<P> param_29) {
        List<P> var_417 = new ArrayList<P>();
        for (PluginWrapper var_538: var_391.var_537(var_530)) {
            var_417.var_411((P)var_538.var_534());
        }
        return var_302.var_539(var_417);
    }

    
    public String method_63() {
        return var_355;
    }

    
    public MarkupFormatter method_64() {
        return var_356!=null ? var_356 : var_114.var_361;
    }

    
    public void method_65(MarkupFormatter param_31) {
        this.var_356 = var_540;
    }

    
    public void method_66(String param_32) throws IOException {
        this.var_355 = var_541;
        var_509();
    }

    public FederatedLoginService method_67(String param_10) {
        for (FederatedLoginService var_542 : var_130.var_481()) {
            if (var_542.var_543().var_381(var_379))
                return var_542;
        }
        return null;
    }

    public List<FederatedLoginService> method_68() {
        return var_130.var_481();
    }

    public Launcher method_69(TaskListener param_33) {
        return new LocalLauncher(var_544).var_545(this);
    }


    public String method_70() {
        return "";
    }

    public String method_71() {
        return "";
    }

    
    public List<Action> method_72() {
        return var_404;
    }

    
    @var_259(var_379="jobs")
    public List<TopLevelItem> method_73() {
		if (var_346 instanceof AuthorizationStrategy.Unsecured ||
			var_346 instanceof FullControlOnceLoggedInAuthorizationStrategy) {
			return new ArrayList(var_360.var_512());
		}

        List<TopLevelItem> var_549 = new ArrayList<TopLevelItem>();
        for (TopLevelItem var_412 : var_360.var_512()) {
            if (var_412.var_550(var_33.var_551))
                var_549.var_411(var_412);
        }
		
        return var_549;
    }

    
    public Map<String,TopLevelItem> method_75() {
        return var_302.var_552(var_360);
    }

    
    public <T> List<T> method_73(Class<T> param_28) {
        List<T> var_553 = new ArrayList<T>();
        for (TopLevelItem var_422 : var_548())
            if (var_529.var_554(var_422))
                 var_553.var_411(var_529.var_531(var_422));
        return var_553;
    }

    
    public <T extends Item> List<T> method_76(Class<T> param_28) {
        List<T> var_553 = new ArrayList<T>();

        Stack<ItemGroup> var_556 = new Stack<ItemGroup>();
        var_556.var_557(this);

        while(!var_556.var_558()) {
            ItemGroup<?> var_559 = var_556.var_560();
            for (Item var_422 : var_559.var_548()) {
                if(var_529.var_554(var_422)) {
                    if (var_422.var_550(var_33.var_551))
                        var_553.var_411(var_529.var_531(var_422));
                }
                if(var_422 instanceof ItemGroup)
                    var_556.var_557((ItemGroup)var_422);
            }
        }

        return var_553;
    }

    
    public List<Item> method_76() {
        return var_555(Item.class);
    }

    
    @var_561
    public List<Project> method_77() {
        return var_94.var_562(var_360.var_512(),Project.class);
    }

    
    public Collection<String> method_78() {
        List<String> var_563 = new ArrayList<String>();
        for (Job var_564 : var_555(Job.class))
            var_563.var_411(var_564.var_546());
        return var_563;
    }

    public List<Action> method_79() {
        return var_547();
    }

    
    public Collection<String> method_80() {
        List<String> var_563 = new ArrayList<String>();
        for (TopLevelItem var_564 : var_360.var_512())
            var_563.var_411(var_564.var_414());
        return var_563;
    }

    public View method_81(String param_10) {
        return var_389.var_565(var_379);
    }

    
    @var_259
    public Collection<View> method_82() {
        return var_389.var_566();
    }

    public void method_83(View param_34) throws IOException {
        var_389.var_567(var_568);
    }

    public boolean method_84(View param_35) {
        return var_389.var_569(var_570);
    }

    public synchronized void method_85(View param_35) throws IOException {
        var_389.var_571(var_570);
    }

    public void method_86(View param_35, String param_36, String param_37) {
        var_389.var_572(var_570,var_573,var_574);
    }

    
    @var_259
    public View method_87() {
        return var_389.var_575();
     }

    public void method_88(View param_34) {
        this.var_388 = var_568.var_576();
    }

    public ViewsTabBar method_89() {
        return var_367;
    }

    public void method_90(ViewsTabBar param_6) {
        this.var_367 = var_367;
    }

    public Jenkins method_91() {
        return this;
   }

    public MyViewsTabBar method_92() {
        return var_368;
    }

    public void method_93(MyViewsTabBar param_7) {
        this.var_368 = var_368;
    }

    
    public boolean method_94(VersionNumber param_34) {
        try {
            return new VersionNumber(var_340).var_577(var_568);
        } catch (IllegalArgumentException var_454) {}
    }

    
    public Computer[] method_95() {
        Computer[] var_553 = var_374.var_512().var_579(new Computer[var_374.var_423()]);
        var_300.var_580(var_553,new Comparator<Computer>() {
            final Collator var_581 = var_298.var_384();
            public int method_96(Computer param_38, Computer param_39) {
                if(var_583.var_585()==var_337.this)  return -1;
                if(var_584.var_585()==var_337.this)  return 1;
                return var_581.var_582(var_583.var_500(), var_584.var_500());
            }
        });
        return var_553;
    }

    @var_105
    public Computer method_54(@var_243(var_586=true,var_587="NAME",var_588="Node name") String param_10) {
        if(var_379.var_381("(master)"))
            var_379 = "";

        for (Computer var_380 : var_374.var_512()) {
            if(var_380.var_414().var_381(var_379))
                return var_380;
        }
        return null;
    }

    
    public Label method_98(String param_40) {
        if(var_589==null)  return null;
        var_589 = var_7.var_162.var_590.var_591(var_589);
        while(true) {
            Label var_484 = var_60.var_425(var_589);
            if(var_484!=null)
                return var_484;

            
            try {
                var_60.var_592(var_589,var_40.var_593(var_589));
            } catch (ANTLRException var_454) {}
        }
    }

    
    public @var_336 LabelAtom method_99(@var_334 String param_10) {
        if (var_379==null)  return null;

        while(true) {
            Label var_484 = var_60.var_425(var_379);
            if(var_484!=null)
                return (LabelAtom)var_484;

            
            LabelAtom var_595 = new LabelAtom(var_379);
            if (var_60.var_592(var_379, var_595)==null)
                var_595.var_464();
        }
    }

    
    public Set<Label> method_100() {
        Set<Label> var_553 = new TreeSet<Label>();
        for (Label var_484 : var_60.var_512()) {
            if(!var_484.var_558())
                var_553.var_411(var_484);
        }
        return var_553;
    }

    public Set<LabelAtom> method_101() {
        Set<LabelAtom> var_553 = new TreeSet<LabelAtom>();
        for (Label var_484 : var_60.var_512()) {
            if(!var_484.var_558() && var_484 instanceof LabelAtom)
                var_553.var_411((LabelAtom)var_484);
        }
        return var_553;
    }

    public Queue method_102() {
        return var_338;
    }

    @var_382
    public String method_23() {
        return var_12.var_597();
    }

    public List<JDK> method_103() {
        if(var_365==null)
            var_365 = new ArrayList<JDK>();
        return var_365;
    }

    
    public JDK method_104(String param_10) {
        if(var_379==null) {
            
            List<JDK> var_365 = var_598();
            if(var_365.var_423()==1)  return var_365.var_425(0);
            return null;
        }
        for (JDK var_564 : var_598()) {
            if(var_564.var_414().var_381(var_379))
                return var_564;
        }
        return null;
    }



    
    public @var_334 Node method_97(String param_10) {
        return var_142.var_585(var_379);
    }

    
    public Cloud method_105(String param_10) {
        return var_375.var_378(var_379);
    }

    protected Map<Node,Computer> method_106() {
        return var_374;
    }

    
    public List<Node> method_107() {
        return var_142;
    }

    
    public synchronized void method_108(Node param_41) throws IOException {
        if(var_599==null)     throw new IllegalArgumentException();
        ArrayList<Node> var_600 = new ArrayList<Node>(this.var_142);
        if(!var_600.var_601(var_599)) 
            var_600.var_411(var_599);
        var_602(var_600);
    }

    
    public synchronized void method_110(@var_335 Node param_41) throws IOException {
        Computer var_380 = var_599.var_479();
        if (var_380!=null)
            var_380.var_603(var_152.var_371(var_12.var_604()));

        ArrayList<Node> var_600 = new ArrayList<Node>(this.var_142);
        var_600.var_605(var_599);
        var_602(var_600);
    }

    public void method_109(List<? extends Node> param_42) throws IOException {
        this.var_142 = new NodeList(var_606);
        var_478();
        var_385();
        var_509();
    }

    public DescribableList<NodeProperty<?>, NodePropertyDescriptor> method_111() {
    	return var_405;
    }

    public DescribableList<NodeProperty<?>, NodePropertyDescriptor> method_112() {
    	return var_406;
    }

    
    private void method_7() {
        for (Iterator<Label> var_608 = var_60.var_512().var_609(); var_608.var_610();) {
            Label var_484 = var_608.var_611();
            var_612(var_484);
            if(var_484.var_558())
                var_608.var_605();
        }
    }

    
    public AdministrativeMonitor method_113(String param_26) {
        for (AdministrativeMonitor var_613 : var_407)
            if(var_613.var_521.var_381(var_521))
                return var_613;
        return null;
    }

    public NodeDescriptor method_55() {
        return var_614.var_361;
    }

    public static final class class_2 extends NodeDescriptor {
        @var_77
        public static final DescriptorImpl var_361 = new DescriptorImpl();

        public String method_23() {
            return "";
        }

        @var_382
        public boolean method_114() {
            return false;
        }

        public FormValidation method_115(@var_251 String param_44) {
            return var_171.var_616(var_615);
        }

        public FormValidation method_116(@var_251 String param_44) {
            if (!var_615.var_601("${")) {
                File var_518 = new File(var_615);
                if (!var_518.var_617() && (var_518.var_618() == null || !var_518.var_618().var_619())) {
                    return var_171.var_620(var_615 + " does not exist and probably cannot be created");
                }
                
            }
            return var_171.var_621(); 
        }

        
        public Object method_117(String param_45) {
            return var_337.var_384().var_520(var_622);
        }
    }

    
    public int method_118() {
        return var_386!=null ? var_386 : 5;
    }

    
    public void method_119(Integer param_11) throws IOException {
        this.var_386 = var_386;
        var_509();
    }

    
    public int method_120() {
        return var_387;
    }

    public void method_121(int param_12) throws IOException {
        this.var_387 = var_387;
        var_509();
    }

    @var_382
    public String method_122() {
        return "";
    }

    @var_382
    public SearchIndexBuilder method_123() {
        return super.var_623()
            .var_411("configure", "config","configure")
            .var_411("manage")
            .var_411("log")
            .var_411(new CollectionSearchIndex<TopLevelItem>() {
                protected SearchItem method_15(String param_8) { return var_624(var_370); }
                protected Collection<TopLevelItem> method_21() { return var_548(); }
            })
            .var_411(var_575().var_623())
            .var_411(new CollectionSearchIndex() {
                protected Computer method_15(String param_8) { return var_519(var_370); }
                protected Collection<Computer> method_21() { return var_374.var_512(); }
            })
            .var_411(new CollectionSearchIndex() {
                protected User method_15(String param_8) { return var_55.var_425(var_370,false); }
                protected Collection<User> method_21() { return var_55.var_625(); }
            })
            .var_411(new CollectionSearchIndex() {
                protected View method_15(String param_8) { return var_565(var_370); }
                protected Collection<View> method_21() { return var_186; }
            });
    }

    public String method_125() {
        return "job";
    }

    
    public String method_126() {
        String var_627 = var_628.var_425().var_419();
        if(var_627!=null) {
            return var_94.var_629(var_627,"/");
        }
        StaplerRequest var_416 = var_252.var_630();
        if(var_416!=null)
            return var_631();
        return null;
    }

    
    public boolean method_128() {
        String var_627 = var_626();
        return var_627!=null && var_627.var_632("https");
    }

    
    public String method_127() {
        StaplerRequest var_416 = var_252.var_630();
        StringBuilder var_633 = new StringBuilder();
        var_633.var_634(var_416.var_635()+":
        buf.append(req.getServerName());
        if(req.getServerPort()!=80)
            buf.append(':').append(req.getServerPort());
        buf.append(req.getContextPath()).append('/');
        return buf.toString();
    }

    public File getRootDir() {
        return root;
    }

    public FilePath getWorkspaceFor(TopLevelItem item) {
        for (WorkspaceLocator l : WorkspaceLocator.all()) {
            FilePath workspace = l.locate(item, this);
            if (workspace != null) {
                return workspace;
            }
        }
 
        return new FilePath(expandVariablesForDirectory(workspaceDir, item));
    }

    public File getBuildDirFor(Job job) {
        return expandVariablesForDirectory(buildsDir, job);
    }

    private File expandVariablesForDirectory(String base, Item item) {
        return new File(Util.replaceMacro(base, ImmutableMap.of(
                "var_636", var_456().var_637(),
                "ITEM_ROOTDIR", var_412.var_456().var_637(),
                "ITEM_FULLNAME", var_412.var_546(),   
                "ITEM_FULL_NAME", var_412.var_546().var_638(':','$')))); 
    }
    
    public String method_129() {
        return var_352;
    }

    public String method_130() {
        return var_354;
    }

    public FilePath method_131() {
        return new FilePath(var_456());
    }

    @var_382
    public FilePath method_132(String param_46) {
        return new FilePath((VirtualChannel)null,var_640);
    }

    public ClockDifference method_133() {
        return var_165.var_641;
    }

    
    public LogRecorderManager method_134() {
        var_642(var_643);
        return var_433;
    }

    
    @var_259
    public boolean method_135() {
        return var_348!=var_139.var_349 || var_346!=var_129.var_347;
    }
    
    public boolean method_136(){
        return var_350 != var_198.var_351;
    }

    
    @var_259
    public boolean method_137() {
        return var_398!=null;
    }

    
    public SecurityMode method_138() {
        
        SecurityRealm var_645 = var_348;

        if(var_645==var_139.var_349)
            return var_138.var_347;
        if(var_645 instanceof LegacySecurityRealm)
            return var_138.var_646;
        return var_138.var_647;
    }

    
    public SecurityRealm method_139() {
        return var_348;
    }

    public void method_140(SecurityRealm param_4) {
        if(var_348==null)
            var_348= var_139.var_349;
        this.var_345 = true;
        this.var_348 = var_348;
        
        try {
            HudsonFilter var_650 = var_132.var_425(var_403);
            if (var_650 == null) {
                
                
                var_488.var_651("HudsonFilter has not yet been initialized: Can't perform security setup for now");
            } else {
                var_488.var_651("HudsonFilter has been previously initialized: Setting security up");
                var_650.var_652(var_348);
                var_488.var_651("Security is now fully set up");
            }
        } catch (ServletException var_454) {};
        }
    }

    public void method_141(AuthorizationStrategy param_47) {
        if (var_653 == null)
            var_653 = var_129.var_347;
        var_345 = true;
        var_346 = var_653;
    }

    public void method_142() {
        var_345 = null;
        var_649(var_139.var_349);
        var_346 = var_129.var_347;
        var_356 = null;
    }

    public void method_143(ProjectNamingStrategy param_48) {
        if(var_654 == null){
            var_654 = var_198.var_351;
        }
        var_350 = var_654;
    }
    
    public Lifecycle method_144() {
        return var_110.var_425();
    }

    
    public Injector method_145() {
        return var_339(Injector.class);
    }

    
    @var_439({"unchecked"})
    public <T> ExtensionList<T> method_9(Class<T> param_49) {
        return var_369.var_425(var_655);
    }

    
    public ExtensionList method_9(String param_49) throws ClassNotFoundException {
        return var_408(var_391.var_466.var_656(var_655));
    }

    
    @var_439({"unchecked"})
    public <T extends Describable<T>,D extends Descriptor<T>> DescriptorExtensionList<T,D> method_146(Class<T> param_28) {
        return var_372.var_425(var_529);
    }

    
    public void method_147() throws ExtensionRefreshException {
        ExtensionList<ExtensionFinder> var_657 = var_408(ExtensionFinder.class);
        for (ExtensionFinder var_658 : var_657) {
            if (!var_658.var_659())
                throw new ExtensionRefreshException(var_658+" doesn't support refresh");
        }

        List<ExtensionComponentSet> var_660 = var_4.var_661();
        for (ExtensionFinder var_658 : var_657) {
            var_660.var_411(var_658.var_662());
        }
        ExtensionComponentSet var_663 = var_194.var_664(var_660).var_665();

        
        List<ExtensionComponent<ExtensionFinder>> var_666 = var_4.var_661(var_663.var_667(ExtensionFinder.class));
        while (!var_666.var_558()) {
            ExtensionFinder var_540 = var_666.var_605(var_666.var_423()-1).var_384();

            ExtensionComponentSet var_668 = var_194.var_669(var_540).var_665();
            var_666.var_670(var_668.var_667(ExtensionFinder.class));
            var_663 = var_194.var_664(var_663, var_668);
        }

        for (ExtensionList var_671 : var_369.var_512()) {
            var_671.var_662(var_663);
        }
        for (ExtensionList var_671 : var_372.var_512()) {
            var_671.var_662(var_663);
        }

        
        for (ExtensionComponent<RootAction> var_672 : var_663.var_667(RootAction.class)) {
            Action var_653 = var_672.var_384();
            if (!var_404.var_601(var_653)) var_404.var_411(var_653);
        }
    }

    
    @var_382
    public ACL method_148() {
        return var_346.var_673();
    }

    
    public AuthorizationStrategy method_149() {
        return var_346;
    }
    
    
    public ProjectNamingStrategy method_150() {
        return var_350 == null ? var_197.var_351 : var_350;
    }

    
    @var_259
    public boolean method_2() {
        return var_363;
    }

    
    public boolean method_151() {
        return var_364;
    }

    
    public InitMilestone method_152() {
        return var_358;
    }

    public void method_153(int param_41) throws IOException {
        this.var_341 = var_599;
        var_509();
    }



    
    public TopLevelItem method_124(String param_10) {
        if (var_379==null)    return null;
    	TopLevelItem var_412 = var_360.var_425(var_379);
        if (var_412==null)
            return null;
        if (!var_412.var_550(var_33.var_551)) {
            if (var_412.var_550(var_33.var_674)) {
                throw new AccessDeniedException("Please login to access job " + var_379);
            }
            return null;
        }
        return var_412;
    }

    
    public Item method_124(String param_50, ItemGroup param_1) {
        if (var_215==null)  var_215 = this;
        if (var_675==null) return null;

        if (var_675.var_632("/"))   
            return var_676(var_675);

        Object var_677 = var_215;

        StringTokenizer var_678 = new StringTokenizer(var_675,"/");
        while (var_678.var_679()) {
            String var_680 = var_678.var_681();
            if (var_680.var_381("..")) {
                if (var_677 instanceof Item) {
                    var_677 = ((Item)var_677).var_682();
                    continue;
                }

                var_677=null;    
                break;
            }
            if (var_680.var_381(".")) {
                continue;
            }

            if (var_677 instanceof ItemGroup) {
                ItemGroup var_683 = (ItemGroup) var_677;
                Item var_422 = var_683.var_624(var_680);
                if (var_422==null || !var_422.var_550(var_33.var_551)) { 
                    var_677=null;    
                    break;
                }
                var_677=var_422;
            } else {
                return null;
            }
        }

        if (var_677 instanceof Item)
            return (Item)var_677;

        
        return var_676(var_675);
    }

    public final Item method_124(String param_50, Item param_1) {
        return var_624(var_675,var_215!=null?var_215.var_682():null);
    }

    public final <T extends Item> T method_124(String param_50, ItemGroup param_1, Class<T> param_28) {
        Item var_553 = var_624(var_675, var_215);
        if (var_529.var_554(var_553))
            return var_529.var_531(var_553);
        return null;
    }

    public final <T extends Item> T method_124(String param_50, Item param_1, Class<T> param_28) {
        return var_624(var_675,var_215!=null?var_215.var_682():null,var_529);
    }

    public File method_12(TopLevelItem param_51) {
        return var_415(var_684.var_414());
    }

    private File method_12(String param_10) {
        return new File(new File(var_456(),"jobs"), var_379);
    }

    
    public @var_334 <T extends Item> T method_154(String param_52, Class<T> param_28) {
        StringTokenizer var_678 = new StringTokenizer(var_685,"/");
        ItemGroup var_559 = this;

        if(!var_678.var_679()) return null;    

        while(true) {
            Item var_412 = var_559.var_624(var_678.var_681());
            if(!var_678.var_679()) {
                if(var_529.var_554(var_412))
                    return var_529.var_531(var_412);
                else
                    return null;
            }

            if(!(var_412 instanceof ItemGroup))
                return null;    

            if (!var_412.var_550(var_33.var_551))
                return null; 

            var_559 = (ItemGroup) var_412;
        }
    }

    public @var_334 Item method_154(String param_52) {
        return var_676(var_685,Item.class);
    }

    
    public @var_334 User method_155(String param_10) {
        return var_55.var_425(var_379,var_550(var_643));
    }

    public synchronized TopLevelItem method_156( TopLevelItemDescriptor param_28, String param_10 ) throws IOException {
        return var_686(var_529, var_379, true);
    }

    public synchronized TopLevelItem method_156( TopLevelItemDescriptor param_28, String param_10, boolean param_53 ) throws IOException {
        return var_410.var_686(var_529,var_379,var_687);
    }

    
    public synchronized void method_157(TopLevelItem param_15) throws IOException, InterruptedException {
        String var_379 = var_412.var_414();
        TopLevelItem var_688 = var_360.var_425(var_379);
        if (var_688 ==var_412)  return; 

        var_642(var_33.var_689);
        if (var_688!=null)
            var_688.var_690();
        var_360.var_413(var_379,var_412);
        var_63.var_691(var_412);
    }

    
    public synchronized <T extends TopLevelItem> T method_156( Class<T> param_28, String param_10 ) throws IOException {
        return var_529.var_531(var_686((TopLevelItemDescriptor)var_520(var_529),var_379));
    }

    
    public void method_158(TopLevelItem param_54, String param_36, String param_37) throws IOException {
        var_360.var_605(var_573);
        var_360.var_413(var_574,var_692);

        for (View var_568 : var_186)
            var_568.var_693(var_692, var_573, var_574);
        var_509();
    }

    
    public void method_159(TopLevelItem param_15) throws IOException {
        for (ItemListener var_484 : var_63.var_481())
            var_484.var_694(var_412);

        var_360.var_605(var_412.var_414());
        for (View var_568 : var_186)
            var_568.var_693(var_412, var_412.var_414(), null);
        var_509();
    }

    public FingerprintMap method_160() {
        return var_390;
    }

    
    public Object method_161( String param_55 ) throws IOException {
        Fingerprint var_553 = var_390.var_425(var_695);
        if(var_553==null)     return new NoFingerprintMatch(var_695);
        else            return var_553;
    }

    
    public Fingerprint method_162( String param_55 ) throws IOException {
        return var_390.var_425(var_695);
    }

    
    private XmlFile method_163() {
        return new XmlFile(var_697, new File(var_357,"config.xml"));
    }

    public int method_164() {
        return var_341;
    }

    public Mode method_165() {
        return var_342;
    }

    public void method_166(Mode param_43) throws IOException {
        this.var_342 = var_613;
        var_509();
    }

    public String method_167() {
        return var_96(var_397).var_698();
    }

    @var_382
    public void method_168(String param_14) throws IOException {
        this.var_397 = var_397;
        var_509();
    }

    @var_382
    public LabelAtom method_169() {
        return var_594("master");
    }

    public Computer method_170() {
        return new Hudson.MasterComputer();
    }

    private synchronized TaskBuilder method_18() throws IOException {
        File var_699 = new File(var_357,"jobs");
        if(!var_699.var_700().var_617() && !var_699.var_701()) {
            if(var_699.var_446())
                throw new IOException(var_699+" is not a directory");
            throw new IOException();
        }
        File[] var_702 = var_699.var_703(new FileFilter() {
            public boolean method_171(File param_51) {
                return var_684.var_617() && var_36.var_696(var_684).var_446();
            }
        });

        final Set<String> var_704 = var_302.var_705(new HashSet<String>());

        TaskGraphBuilder var_683 = new TaskGraphBuilder();
        Handle var_706 = var_683.var_707(var_708).var_709(var_710).var_411("Loading global config", new Executable() {
            public void method_25(Reactor param_56) throws Exception {
                
                
                NodeList var_711 = var_142;
                
                XmlFile var_712 = var_696();
                if (var_712.var_446()) {
                    
                    
                    var_388 = null;
                    var_186.var_713();

                    
                    var_712.var_714(var_337.this);
                }

                
                if (var_142 == null) var_142 = new NodeList();

                var_375.var_715(var_337.this);

                
                
                if (var_711 != null) {
                    ArrayList<Node> var_716 = new ArrayList<Node>(var_142);
                    for (Node var_599: var_711) {
                        if (var_599 instanceof EphemeralNode) {
                            if(!var_716.var_601(var_599)) {
                                var_716.var_411(var_599);
                            }
                        }
                    }
                    var_602(var_716);
                }
            }
        });

        for (final File var_717 : var_702) {
            var_683.var_707(var_706).var_709(var_710).var_718().var_411("Loading job "+var_717.var_414(),new Executable() {
                public void method_25(Reactor param_56) throws Exception {
                    TopLevelItem var_412 = (TopLevelItem) var_36.var_464(var_337.this, var_717);
                    var_360.var_413(var_412.var_414(), var_412);
                    var_704.var_411(var_412.var_414());
                }
            });
        }

        var_683.var_707(var_710).var_411("Cleaning up old builds",new Executable() {
            public void method_25(Reactor param_2) throws Exception {
                
                
                

                
                
                for (String var_379 : var_360.var_719()) {
                    if (!var_704.var_601(var_379))
                        var_360.var_605(var_379);
                }
            }
        });

        var_683.var_707(var_710).var_411("Finalizing set up",new Executable() {
            public void method_25(Reactor param_56) throws Exception {
                var_720();

                {
                    for (Node var_721 : var_142)
                        
                        var_721.var_722();
                    var_722();
                }

                
                
                if(var_186.var_423()==0 || var_388==null) {
                    View var_568 = new AllView(var_12.var_723());
                    var_724(var_568);
                    var_186.var_411(0,var_568);
                    var_388 = var_568.var_576();
                }

                
                if(var_346==null) {
                    if(var_345==null || !var_345)
                        var_346 = var_129.var_347;
                    else
                        var_346 = new LegacyAuthorizationStrategy();
                }
                if(var_348==null) {
                    if(var_345==null || !var_345)
                        var_649(var_139.var_349);
                    else
                        var_649(new LegacySecurityRealm());
                } else {
                    
                    var_649(var_348);
                }

                if(var_345!=null && !var_345) {
                    
                    
                    var_346 = var_129.var_347;
                    var_649(var_139.var_349);
                }

                
                var_725(var_398);

                
                for (Action var_653 : var_408(RootAction.class))
                    if (!var_404.var_601(var_653)) var_404.var_411(var_653);
            }
        });

        return var_683;
    }

    
    public synchronized void method_37() throws IOException {
        if(var_74.var_601(this))   return;
        var_696().var_462(this);
        var_65.var_726(this, var_696());
    }


    
    @var_434.var_435.var_436.var_437.var_438.var_439("ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD")
    public void method_174() {
        for (ItemListener var_484 : var_63.var_481())
            var_484.var_728();

        Set<Future<?>> var_729 = new HashSet<Future<?>>();
        var_364 = true;
        for( Computer var_380 : var_374.var_512() ) {
            var_380.var_730();
            var_731(var_380);
            var_729.var_411(var_380.var_603(null));
        }
        if(var_393!=null)
            var_393.var_507();
        if(var_394!=null)
            var_394.var_732();
        var_733();
        Timer var_451 = var_160.var_451;
        if (var_451 != null) {
            var_451.var_734();
        }
        
        var_160.var_451 = null;
        if(var_392!=null)
            var_392.var_507();

        if(var_391!=null) 
            var_391.var_735();

        if(var_456().var_446())
            
            
            var_596().var_509();

        var_736.var_507();
        for (Future<?> var_540 : var_729)
            try {
                var_540.var_425(10, var_325.var_737);    
            } catch (InterruptedException var_454) {} catch (ExecutionException var_454) {} catch (TimeoutException var_454) {}

        var_227.var_738();

        var_362 = null;
    }

    public Object method_117(String param_45) {
        for (Action var_653 : var_547()) {
            String var_627 = var_653.var_543();
            if (var_627==null)  continue;
            if (var_627.var_381(var_622) || var_627.var_381('/' + var_622))
                return var_653;
        }
        for (Action var_653 : var_739())
            if(var_653.var_543().var_381(var_622))
                return var_653;
        return null;
    }







    
    public synchronized void method_176( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        BulkChange var_741 = new BulkChange(this);
        try {
            var_642(var_643);

            JSONObject var_206 = var_416.var_742();

            var_352 = var_206.var_743("rawWorkspaceDir");
            var_354 = var_206.var_743("rawBuildsDir");

            var_355 = var_94.var_744(var_416.var_745("system_message"));

            var_365.var_713();
            var_365.var_670(var_416.var_746(JDK.class,var_206.var_425("jdks")));

            boolean var_417 = true;
            for (Descriptor<?> var_518 : var_81.var_747())
                var_417 &= var_748(var_416,var_206,var_518);

            var_340 = var_749;

            var_509();
            var_478();
            if(var_417)
                var_170.var_750(var_416.var_427()+'/').var_751(var_416, var_740, null);
            else
                var_170.var_750("configure").var_751(var_416, var_740, null);    
        } finally {
            var_741.var_752();
        }
    }

    
    public CrumbIssuer method_178() {
        return var_398;
    }

    public void method_173(CrumbIssuer param_58) {
        var_398 = var_754;
    }

    public synchronized void method_179( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_740.var_755("foo");
    }

    private boolean method_177(StaplerRequest param_16, JSONObject param_0, Descriptor<?> param_25) throws FormException {
        
        String var_379 = var_518.var_756();
        JSONObject var_757 = var_206.var_758(var_379) ? var_206.var_759(var_379) : new JSONObject(); 
        var_206.var_760(var_757);
        return var_518.var_761(var_416, var_757);
    }

    
    public synchronized void method_180( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        var_642(var_643);

        BulkChange var_741 = new BulkChange(this);
        try {
            JSONObject var_206 = var_416.var_742();

            MasterBuildConfiguration var_763 = var_764.var_481().var_425(MasterBuildConfiguration.class);
            if (var_763!=null)
                var_763.var_761(var_416,var_206);

            var_607().var_765(var_416, var_206.var_766("nodeProperties"), var_149.var_481());
        } finally {
            var_741.var_752();
        }

        var_740.var_755(var_416.var_427()+'/'+var_479().var_419());  
    }

    
    public synchronized void method_181( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_575().var_767(var_416, var_740);
    }

    public synchronized HttpRedirect method_182() throws IOException {
        try {
            return var_768(false,0);
        } catch (InterruptedException var_454) {}
    }

    @var_104(var_379="quiet-down")
    public HttpRedirect method_182(
            @var_244(var_379="-block",var_588="Block until the system really quiets down and no builds are running") @var_251 boolean param_59,
            @var_244(var_379="-timeout",var_588="If non-zero, only block up to the specified number of milliseconds") @var_251 int param_60) throws InterruptedException, IOException {
        synchronized (this) {
            var_642(var_643);
            var_363 = true;
        }
        if (var_769) {
            if (var_770 > 0) var_770 += var_441.var_442();
            while (var_363
                   && (var_770 <= 0 || var_441.var_442() < var_770)
                   && !var_47.var_771()) {
                var_448.var_772(1000);
            }
        }
        return new HttpRedirect();
    }

    @var_104(var_379="cancel-quiet-down")
    public synchronized HttpRedirect method_183() {
        var_642(var_643);
        var_363 = false;
        var_596().var_773();
        return new HttpRedirect();
    }

    
    public void method_184(StaplerResponse param_57) throws IOException, ServletException {
        var_740.var_774("threadDump");
    }

    
    public Map<String,Map<String,String>> method_185() throws IOException, InterruptedException {
        var_642(var_643);

        
        Map<String,Future<Map<String,String>>> var_775 = new HashMap<String, Future<Map<String, String>>>();

        for (Computer var_380 : var_578()) {
            try {
                var_775.var_413(var_380.var_414(), var_179.var_776(var_380.var_777()));
            } catch(Exception var_454) {}
        }
		if (var_479() == null) {
			var_775.var_413("master", var_179.var_776(var_778.var_779));
		}

        
        
        long var_780 = var_441.var_442() + 5000;

        Map<String,Map<String,String>> var_553 = new HashMap<String, Map<String, String>>();
        for (Entry<String, Future<Map<String, String>>> var_454 : var_775.var_781()) {
            try {
                var_553.var_413(var_454.var_782(), var_454.var_783().var_425(var_780-var_441.var_442(), var_325.var_784));
            } catch (Exception var_785) {}
        }
        return var_553;
    }

    public synchronized TopLevelItem method_187( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        return var_410.var_786(var_416, var_740);
    }

    
    public TopLevelItem method_188(String param_10, InputStream param_3) throws IOException {
        return var_410.var_787(var_379, var_268);
    }


    @var_439({"unchecked"})
    public <T extends TopLevelItem> T method_189(T param_61, String param_10) throws IOException {
        return var_410.var_788(var_789, var_379);
    }

    
    
    public <T extends AbstractProject<?,?>> T method_189(T param_61, String param_10) throws IOException {
        return (T)var_788((TopLevelItem)var_789,var_379);
    }

    public synchronized void method_190( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        var_642(var_56.var_689);
        var_567(var_56.var_371(var_416,var_740, this));
    }

    
    public static void method_191(String param_10) throws Failure {
        if(var_379==null || var_379.var_791()==0)
            throw new Failure(var_12.var_792());

        if("..".var_381(var_379.var_698())) 
            throw new Failure(var_12.var_793(".."));
        for( int var_422=0; var_422<var_379.var_791(); var_422++ ) {
            char var_794 = var_379.var_795(var_422);
            if(var_796.var_797(var_794)) {
                throw new Failure(var_12.var_798(var_799(var_379)));
            }
            if("?*/\\%!@#$^&|<>[]:;".var_800(var_794)!=-1)
                throw new Failure(var_12.var_801(var_794));
        }

        
    }

    
    private String method_193(String param_10) throws Failure {
        var_790(var_379);
        var_379 = var_379.var_698();
        var_350.var_803(var_379);
        if(var_624(var_379)!=null)
            throw new Failure(var_12.var_804(var_379));
        
        return var_379;
    }

    private static String method_192(String param_10) {
        StringBuilder var_805 = new StringBuilder();
        for( int var_422=0; var_422<var_379.var_791(); var_422++ ) {
            char var_794 = var_379.var_795(var_422);
            if(var_796.var_797(var_794))
                var_805.var_634("\\u").var_634((int)var_794).var_634(';');
            else
                var_805.var_634(var_794);
        }
        return var_805.var_806();
    }

    
    public void method_194( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        if(var_416.var_807()==null) {
            
            var_740.var_808(var_280.var_809);
            return;
        }

        
        String var_810 = var_416.var_427()+var_416.var_811();
        String var_556 = var_416.var_812();
        if(var_556!=null)
            var_810 += '?'+var_556;

        var_740.var_774(var_810);
    }

    
    public void method_195( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException {
        if(var_416.var_807()==null) {
            var_740.var_774("noPrincipal");
            return;
        }

        String var_813 = var_416.var_745("from");
        if(var_813!=null && var_813.var_632("/") && !var_813.var_381("/loginError")) {
            var_740.var_774(var_813);    
            return;
        }

        String var_627 = var_221.var_814(var_416);
        if(var_627!=null) {
            
            
            var_740.var_774(var_627);
            return;
        }

        var_740.var_774(".");
    }

    
    public void method_196( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_348.var_815(var_416, var_740);
    }

    
    public Slave.JnlpJar method_197(String param_62) {
        return new Slave.JnlpJar(var_816);
    }

    public Slave.JnlpJar method_198(StaplerRequest param_16) {
        return new Slave.JnlpJar(var_416.var_817().var_527(1));
    }

    
    @var_104(var_379="reload-configuration")
    public synchronized HttpResponse method_199() throws IOException {
        var_642(var_643);

        
        var_403.var_818("app", new HudsonIsLoading());

        new Thread() {
            @var_382
            public void method_25() {
                try {
                    var_127.var_443(var_127.var_444);
                    var_819();
                } catch (Exception var_454) {}
            }
        }.var_440();

        return var_249.var_820("/");
    }

    
    public void method_200() throws IOException, InterruptedException, ReactorException {
        var_470(null, var_472());
        var_55.var_819();
        var_403.var_818("app", this);
    }

    
    public void method_201( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        
        MultipartFormDataParser var_536 = new MultipartFormDataParser(var_416);
        if(var_644() && !var_753().var_821(var_416, var_536)) {
            var_740.var_822(var_280.var_823,"No crumb found");
        }
        try {
            var_740.var_774(var_416.var_427()+"/fingerprint/"+
                var_94.var_515(var_536.var_824("name").var_825())+'/');
        } finally {
            var_536.var_727();
        }
    }

    
    @var_434.var_435.var_436.var_437.var_438.var_439("DM_GC")
    public void method_202(StaplerResponse param_57) throws IOException {
        var_642(var_337.var_643);
        var_441.var_826();
        var_740.var_808(var_280.var_827);
        var_740.var_828("text/plain");
        var_740.var_829().var_830("GCed");
    }

    
    public void method_203() {
        throw new RuntimeException();
    }

    public ContextMenu method_204(StaplerRequest param_63, StaplerResponse param_64) throws IOException, JellyException {
        ContextMenu var_833 = new ContextMenu().var_813(this, var_831, var_832);
        for (MenuItem var_422 : var_833.var_360) {
            if (var_422.var_627.var_381(var_831.var_427() + "/manage")) {
                
                var_422.var_834 = new ContextMenu().var_813(this, var_831, var_832, "manage");
            }
        }
        return var_833;
    }

    
    public HeapDump method_205() throws IOException {
        return new HeapDump(this,var_778.var_779);
    }

    
    public void method_206() throws IOException {
        var_642(var_643);

        List<Object> var_835 = new ArrayList<Object>();
        while (true)
            var_835.var_411(new byte[1048576]);
    }

    private transient final Map<UUID,FullDuplexHttpChannel> var_836 = new HashMap<UUID, FullDuplexHttpChannel>();

    
    public void method_207(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, InterruptedException {
        if (!"POST".var_381(var_416.var_837())) {
            
            var_642(var_551);
            var_416.var_565(this,"_cli.jelly").var_838(var_416,var_740);
            return;
        }

        
        

        UUID var_839 = var_316.var_840(var_416.var_841("Session"));
        var_740.var_842("Hudson-Duplex",""); 

        FullDuplexHttpChannel var_843;
        if(var_416.var_841("Side").var_381("download")) {
            var_836.var_413(var_839,var_843=new FullDuplexHttpChannel(var_839, !var_550(var_643)) {
                protected void method_208(Channel param_65) throws IOException, InterruptedException {
                    
                    var_844.var_845(var_100.var_846,var_847());
                    var_844.var_845(CliEntryPoint.class.var_414(),new CliManagerImpl(var_844));
                }
            });
            try {
                var_843.var_848(var_416,var_740);
            } finally {
                var_836.var_605(var_839);
            }
        } else {
            var_836.var_425(var_839).var_849(var_416,var_740);
        }
    }

    
    public DirectoryBrowserSupport method_210() {
        return new DirectoryBrowserSupport(this,var_639().var_684("userContent"),"User content","folder.png",true);
    }

    
    @var_104(var_379="restart")
    public void method_211(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, RestartNotSupportedException {
        var_642(var_643);
        if (var_416 != null && var_416.var_837().var_381("GET")) {
            var_416.var_565(this,"_restart.jelly").var_838(var_416,var_740);
            return;
        }

        var_850();

        if (var_740 != null) 
            var_740.var_774(".");
    }

    
    @var_104(var_379="safe-restart")
    public HttpResponse method_213(StaplerRequest param_16) throws IOException, ServletException, RestartNotSupportedException {
        var_642(var_643);
        if (var_416 != null && var_416.var_837().var_381("GET"))
            return var_249.var_851(this,"_safeRestart.jelly");

        var_852();

        return var_249.var_853();
    }

    
    public void method_212() throws RestartNotSupportedException {
        final Lifecycle var_109 = var_110.var_425();
        var_109.var_854(); 
        var_403.var_818("app", new HudsonIsRestarting());

        new Thread() {
            final String var_855 = var_847().var_414();
            @var_382
            public void method_25() {
                try {
                    var_127.var_443(var_127.var_444);

                    
                    var_448.var_772(5000);
                    var_488.var_856(var_490.var_491("Restarting VM as requested by %s",var_855));
                    for (RestartListener var_544 : var_47.var_481())
                        var_544.var_857();
                    var_109.var_850();
                } catch (InterruptedException var_454) {} catch (IOException var_454) {}
            }
        }.var_440();
    }

    
    public void method_214() throws RestartNotSupportedException {
        final Lifecycle var_109 = var_110.var_425();
        var_109.var_854(); 
        
        var_363 = true;

        new Thread() {
            final String var_855 = var_847().var_414();
            @var_382
            public void method_25() {
                try {
                    var_127.var_443(var_127.var_444);

                    
                    var_768(true, 0);

                    
                    if (var_363) {
                        var_403.var_818("app",new HudsonIsRestarting());
                        
                        var_488.var_489("Restart in 10 seconds");
                        var_448.var_772(10000);
                        var_488.var_856(var_490.var_491("Restarting VM as requested by %s",var_855));
                        for (RestartListener var_544 : var_47.var_481())
                            var_544.var_857();
                        var_109.var_850();
                    } else {
                        var_488.var_489("Safe-restart mode cancelled");
                    }
                } catch (InterruptedException var_454) {} catch (IOException var_454) {}
            }
        }.var_440();
    }

    
    @var_104(var_379="shutdown")
    public void method_215( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException {
        var_642(var_643);
        var_488.var_856(var_490.var_491("Shutting down VM as requested by %s from %s",
                var_847().var_414(), var_416!=null?var_416.var_858():"???"));
        if (var_740!=null) {
            var_740.var_808(var_280.var_827);
            var_740.var_828("text/plain");
            PrintWriter var_538 = var_740.var_829();
            var_538.var_830("Shutting down");
            var_538.var_732();
        }

        var_441.var_475(0);
    }


    
    @var_104(var_379="safe-shutdown")
    public HttpResponse method_216(StaplerRequest param_16) throws IOException {
        var_642(var_643);
        var_363 = true;
        final String var_855 = var_847().var_414();
        final String var_859 = var_416!=null ? var_416.var_858() : "unknown";
        new Thread() {
            @var_382
            public void method_25() {
                try {
                    var_127.var_443(var_127.var_444);
                    var_488.var_856(var_490.var_491("Shutting down VM as requested by %s from %s",
                                                var_855, var_859));
                    
                    while (var_363
                           && (var_399.var_860() > var_399.var_861())) {
                        var_448.var_772(5000);
                    }
                    
                    if (var_363) {
                        var_727();
                        var_441.var_475(0);
                    }
                } catch (InterruptedException var_454) {}
            }
        }.var_440();

        return var_249.var_862("Shutting down as soon as all jobs are complete");
    }

    
    public static Authentication method_209() {
        Authentication var_653 = var_216.var_863().var_847();
        
        
        
        
        if(var_653==null)
            var_653 = var_864;
        return var_653;
    }

    
    public void method_217(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_865(var_416, var_740, var_416.var_565(this, "_script.jelly"));
    }

    
    public void method_218(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_865(var_416, var_740, var_416.var_565(this, "_scriptText.jelly"));
    }

    private void method_217(StaplerRequest param_16, StaplerResponse param_57, RequestDispatcher param_35) throws IOException, ServletException {
        
        var_642(var_866);

        String var_297 = var_416.var_745("script");
        if (var_297 != null) {
            try {
                var_416.var_818("output",
                        var_179.var_867(var_297, var_778.var_779));
            } catch (InterruptedException var_454) {}
        }

        var_570.var_838(var_416, var_740);
    }

    
    @var_265
    public void method_219(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_642(var_643);

        try {
            MetaClass var_868 = var_257.var_869().var_870(var_492());
            Script var_871 = var_868.var_872.var_873(JellyClassLoaderTearOff.class).var_874().var_875(new InputSource(var_416.var_876()));
            new JellyRequestDispatcher(this,var_871).var_838(var_416,var_740);
        } catch (JellyException var_454) {}
    }

    
    public void method_220( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_416.var_565(var_648(), "signup.jelly").var_838(var_416, var_740);
    }

    
    public void method_221( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        String var_877 = var_416.var_812();
        if(var_877==null || !var_878.var_879(var_877).var_880())
            throw new ServletException();
        Cookie var_881 = new Cookie("iconSize", var_877);
        var_881.var_882(9999999); 
        var_740.var_883(var_881);
        String var_884 = var_416.var_841("Referer");
        if(var_884==null)   var_884=".";
        var_740.var_774(var_884);
    }

    public void method_222(StaplerResponse param_57) throws IOException {
        var_29.var_885();
        var_740.var_808(var_280.var_827);
        var_740.var_828("text/plain");
        var_740.var_829().var_830("Invoked");
    }

    public void method_223(StaplerResponse param_57) throws IOException {
        var_67.var_885();
        var_740.var_808(var_280.var_827);
        var_740.var_828("text/plain");
        var_740.var_829().var_830("Invoked");
    }

    
    public FormValidation method_224(StaplerRequest param_63, @var_251 String param_44) {
        if(!var_615.var_381("(Default)"))
            
            
            return var_171.var_621();

        
        if(var_37.var_886(var_337.this))
            return var_171.var_621();
        else
            return var_171.var_887(var_12.var_888(var_831.var_427()));
    }

    
    public FormValidation method_225(@var_251 String param_44) {
        
        
        var_642(var_33.var_689);

        if(var_95(var_615)==null)
            return var_171.var_621();

        try {
            var_802(var_615);
            return var_171.var_621();
        } catch (Failure var_454) {}
    }

    
    public FormValidation method_226(@var_251 String param_44) {
        var_642(var_56.var_689);

        String var_570 = var_95(var_615);
        if(var_570==null) return var_171.var_621();

        if(var_565(var_570)==null)
            return var_171.var_621();
        else
            return var_171.var_620(var_12.var_889(var_570));
    }

    
    public void method_227(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        String var_810 = var_416.var_817();
        
        
        
        var_810 = var_810.var_527(var_810.var_800('/',1)+1);

        int var_890 = var_810.var_528('.');
        String var_891 = var_810.var_527(var_890+1);
        if(var_892.var_601(var_891)) {
            URL var_627 = var_391.var_466.var_893(var_810);
            if(var_627!=null) {
                long var_894 = var_250.var_895 ? 0 : 365L * 24 * 60 * 60 * 1000; 
                var_740.var_896(var_416,var_627,var_894);
                return;
            }
        }
        var_740.var_822(var_280.var_283);
    }

    
    public static final Set<String> var_892 = new HashSet<String>(var_300.var_897(
        "js|css|jpeg|jpg|png|gif|html|htm".var_898("\\|")
    ));

    
    public FormValidation method_228(StaplerRequest param_63) throws IOException {
        
        final String var_899 = "\u57f7\u4e8b";
        final String var_615 = var_95(var_831.var_745("value"));
        if (!var_899.var_381(var_615))
            return var_171.var_900(var_12.var_901());
        return var_171.var_621();
    }

    
    public static boolean method_229() {
        return !"ISO-8859-1".var_902(var_441.var_903("file.encoding"));
    }

    
    public void method_172() {
        DependencyGraph var_904 = new DependencyGraph();
        var_904.var_905();
        
        
        var_366 = var_904;
    }

    public DependencyGraph method_230() {
        return var_366;
    }

    
    public List<ManagementLink> method_175() {
        return var_43.var_481();
    }

    
    public User method_231() {
        User var_906 = var_55.var_907();
        if (var_906 == null)
            throw new AccessDeniedException();
        return var_906;
    }

    
    public List<Widget> method_232() {
        return var_191;
    }

    public Object method_233() {
        try {
            var_642(var_551);
        } catch (AccessDeniedException var_454) {}
            }

            throw var_454;
        }
        return this;
    }

    
    public Collection<String> method_234() {
        Set<String> var_563 = new TreeSet<String>();
        var_563.var_411("jnlpJars"); 
        
        for (Action var_653 : var_547()) {
            if (var_653 instanceof UnprotectedRootAction) {
                var_563.var_411(var_653.var_543());
            }
        }
        return var_563;
    }

    
    public View method_235() {
        return var_575();
    }

    
    boolean method_236(String param_66, String param_67) {
        Collection<TopLevelItem> var_911 = var_360.var_512();
        
        
        
        for(TopLevelItem var_412 : var_911) {
            if(var_412.var_414().var_381(var_910)) {
                
                
                
                continue;
            }
            else if(var_909.var_381(var_412.var_500())) {
                return false;
            }
        }
        
        return true;
    }
    
    
    boolean method_237(String param_10, String param_67) {
        Item var_412 = var_624(var_379);
        
        if(null==var_412) {
            
            return true;
        }
        else if(var_412.var_414().var_381(var_910)) {
            
            
            return true;
        } 
        else {
            
            return false;
        }
    }
    
    
    public FormValidation method_238(@var_251 String param_66, 
            @var_251 String param_68) {
        var_909 = var_909.var_698();
        
        if(var_488.var_914(var_327.var_915)) {
            var_488.var_433(var_327.var_915, "Current job name is " + var_913);
        }
        
        if(!var_912(var_909, var_913)) {
            return var_171.var_916(var_12.var_917(var_909));
        }
        else if(!var_908(var_909, var_913)){
            return var_171.var_916(var_12.var_918(var_909));
        }
        else {
            return var_171.var_621();
        }
    }
    
    public static class class_3 extends Computer {
        protected var_778() {
            super(var_337.var_384());
        }

        
        @var_382
        public String method_11() {
            return "";
        }

        @var_382
        public boolean method_239() {
            return false;
        }

        @var_382
        public String method_23() {
            return var_12.var_919();
        }

        @var_382
        public String method_240() {
            return var_12.var_920();
        }

        @var_382
        public String method_14() {
            return "computer/(master)/";
        }

        public RetentionStrategy method_52() {
            return var_153.var_921;
        }

        
        @var_382
        public HttpResponse method_241() throws IOException {
            throw var_249.var_922(var_282);
        }

        @var_382
        public void method_176(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, FormException {
            var_337.var_384().var_762(var_416, var_740);
        }

        @var_382
        public boolean method_74(Permission param_69) {
            
            
            if(var_923==var_20.var_924)
                return false;
            
            return super.var_550(var_923==var_20.var_925 ? var_337.var_643 : var_923);
        }

        @var_382
        public VirtualChannel method_186() {
            return var_779;
        }

        @var_382
        public Charset method_242() {
            return var_295.var_926();
        }

        public List<LogRecord> method_243() throws IOException, InterruptedException {
            return var_927;
        }

        public void method_244(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
            
            
            var_740.var_822(var_283);
        }

        protected Future<?> method_245(boolean param_70) {
            return var_172.var_928(null);
        }

        
        public static final LocalChannel var_779 = new LocalChannel(var_929);
    }

    
    public static <T> T method_1(Class<T> param_28) {
        return var_337.var_384().var_339.var_425(var_529);
    }

    
    public static List<LogRecord> var_927 = var_302.var_930(); 

    
    public static final XStream var_697 = new XStream2();

    
    public static final XStream2 var_931 = (XStream2)var_697;

    private static final int var_932 = var_933.var_934(4, var_935.var_936().var_937() * 2);

    
     transient final ExecutorService var_736 = new ThreadPoolExecutor(
        var_932, var_932,
        5L, var_325.var_737, new LinkedBlockingQueue<Runnable>(), new DaemonThreadFactory());


    private static void method_16(ServletContext param_1) {
        
        Properties var_938 = new Properties();
        try {
            InputStream var_447 = Jenkins.class.var_939("jenkins-version.properties");
            if(var_447!=null)
                var_938.var_464(var_447);
        } catch (IOException var_454) {}
        String var_940 = var_938.var_903("version");
        if(var_940==null)   var_940="?";
        var_749 = var_940;
        var_215.var_818("version",var_940);

        var_941 = var_94.var_515(var_940).var_527(0, 8);
        var_467 = var_94.var_515(var_940+var_441.var_442()).var_527(0, 8);

        if(var_940.var_381("?") || var_942.var_943("hudson.script.noCache"))
            var_944 = "";
        else
            var_944 = "/static/"+var_467;

        var_945 = "/resources/"+ var_467;
    }

    
    public static String var_749="?";

    
    public static VersionNumber method_246() {
        try {
            return new VersionNumber(var_749);
        } catch (NumberFormatException var_454) {} catch (NumberFormatException _) {}

            
            return null;
        } var_946 (IllegalArgumentException var_454) {}
    }

    
    public static String var_941;

    
    public static String var_467;

    
    public static String var_944 = "";

    
    public static String var_945 = "/resources/TBD";

    public static boolean var_947 = var_948.var_949("parallelLoad", true);
    public static boolean var_474 = var_948.var_949("killAfterLoad", false);
    
    public static boolean var_950 = var_948.var_949("flyweightSupport", true);

    
    @var_239(NoExternalUse.class)
    public static boolean var_951 = true;

    
    private static final String var_353 = var_948.var_952("workspaceDirName", "workspace");

    
    public static boolean var_533 = true;

    private static final Logger var_488 = var_330.var_953(Jenkins.class.var_414());

    private static final Pattern var_878 = var_332.var_954("\\d+x\\d+");

    public static final PermissionGroup var_955 = var_135.var_956;
    public static final Permission var_643 = var_135.var_957;
    public static final Permission var_551 = new Permission(var_955,"Read",var_12.var_958(),var_135.var_551,var_137.var_959);
    public static final Permission var_866 = new Permission(var_955, "RunScripts", var_12.var_960(),var_643,var_137.var_959);

    
    public static final Authentication var_864 = new AnonymousAuthenticationToken()});

    static {
        var_697.var_961("jenkins",Jenkins.class);
        var_697.var_961("slave", DumbSlave.class);
        var_697.var_961("jdk",JDK.class);
        
        var_697.var_961("view", ListView.class);
        var_697.var_961("listView", ListView.class);
        
        Mode.class.var_962();

        
        assert var_955!=null;
        assert var_643!=null;
    }

}
