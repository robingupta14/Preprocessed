

import var_0.var_1.var_2.var_3.var_4.var_5;
import var_0.var_1.var_2.var_3.var_4.var_6;
import var_0.var_1.var_2.var_3.var_7.var_8.var_9;
import var_0.var_1.var_2.var_3.var_7.var_8.var_10;
import var_0.var_1.var_2.var_3.var_7.var_8.var_11;
import var_0.var_1.var_2.var_3.var_12.var_13;
import var_0.var_1.var_2.var_14.var_15.var_16;

import var_17.var_18.var_19.var_20.var_21;
import var_17.var_18.var_22.var_23;

import var_24.var_25.var_26;
import var_24.var_25.var_27;
import var_24.var_25.var_28;
import var_24.var_25.var_29;
import var_24.var_12.var_30;
import var_24.var_12.var_31;
import var_24.var_12.var_32;
import var_24.var_12.var_33;
import var_24.var_12.var_34;
import var_24.var_12.var_35;
import var_24.var_12.var_36;
import var_24.var_12.var_37;
import var_24.var_12.var_38;
import var_24.var_12.var_39;
import var_24.var_12.var_40;
import var_24.var_12.var_41;
import var_24.var_12.var_42;
import var_24.var_12.var_43;
import var_24.var_12.var_44;
import var_24.var_12.var_45;
import var_24.var_12.var_46;


public class class_0 {

    
    public static final String var_48 = "yyyy-MM-dd HH:mm:ss";
    public static final String var_49 = "yyyy-MM-dd HH:mm:ss z";

    private static Logger var_50 = var_23.var_51(LocalizationService.class);
    private static Logger var_52 = var_23
            .var_51("com.redhat.rhn.common.localization.messages");

    public static final Locale var_53 = new Locale();
    
    private static LocalizationService var_54 = new LocalizationService();
    
    
    
    
    private Map<String, String> var_55;

    
    private final Map<String, LocaleInfo> var_56 =
            new HashMap<String, LocaleInfo>();

    
    private var_47() {
        var_57();
    }

    
    protected void method_0() {
        
        if (var_55 != null) {
            
            var_50.var_58("Reloading XML StringResource files.");
            var_59.var_60().var_61();
        }
        var_55 = new HashMap<String, String>();

        
        String[] var_62 = var_5.var_63().var_64(
                var_6.var_65);
        for (int var_66 = 0; var_66 < var_62.var_67; var_66++) {
            var_68(var_62[var_66]);
        }
        if (var_56.var_69() > 0) {
            var_56.var_70();
        }
        var_71();
    }

    
    private void method_2(String param_0) {
        try {
            Class var_73 = var_74.var_75(var_72);
            
            
            
            
            Enumeration<String> var_76 = var_59.var_60().var_77(var_73, var_38.var_78);
            while (var_76.var_79()) {
                String var_80 = var_76.var_81();
                var_55.var_82(var_80, var_72);
            }
        }
        catch (ClassNotFoundException var_83) {}
    }

    private void method_3() {
        String var_84 = var_5.var_63().var_85("java.supported_locales");
        if (var_84 == null) {
            return;
        }
        List<String> var_86 = new LinkedList<String>();
        for (Enumeration<Object> var_87 = new StringTokenizer(var_84, ","); var_87
                .var_79();) {
            String var_88 = (String) var_87.var_81();
            if (var_88.var_89('_') > -1) {
                var_86.var_90(var_88);
            }
            LocaleInfo var_91 = new LocaleInfo(var_88);
            this.var_56.var_82(var_88, var_91);
        }
        for (Iterator<String> var_92 = var_86.var_93(); var_92.var_94();) {
            String var_95 = var_92.var_96();
            String[] var_97 = var_95.var_98("_");
            LocaleInfo var_91 = new LocaleInfo(var_97[0], var_95);
            if (this.var_56.var_63(var_97[0]) == null) {
                this.var_56.var_82(var_97[0], var_91);
            }
        }
    }

    
    public static LocalizationService method_1() {
        return var_54;
    }

    
    public boolean method_4() {
        if (var_5.var_63().var_99("java.development_environment")) {
            var_57();
            return true;
        }
        var_50.var_100("Tried to reload XML StringResource files but " +
                "we aren't in java.development_environment mode");
        return false;
    }

    
    public String method_5(String param_2) {
        Context var_103 = var_16.var_104();
        return var_101(var_102, var_103.var_105(), new Object[0]);
    }

    
    public String method_5(String param_2, Locale param_1) {
        return var_101(var_102, var_88, new Object[0]);
    }

    
    public String method_5(String param_2, Object... var_106) {
        Context var_103 = var_16.var_104();
        return var_101(var_102, var_103.var_105(), var_106);
    }

    
    public String method_6(String param_2, Object... var_106) {
        String var_108 = var_101(var_102, var_106);
        String var_109 = var_21.var_110(var_108);
        return var_13.var_111(var_109);
    }

    
    public String method_6(String param_2) {
        return var_107(var_102, (Object[])null);
    }
    
    public String[] method_7(String[] param_3) {
        String[] var_113 = new String[var_112.var_67];
        for (int var_66 = 0; var_66 < var_112.var_67; var_66++) {
            var_113[var_66] = var_101(var_112[var_66]);
        }
        return var_113;
    }

    
    public String method_5(String param_2, Locale param_1, Object... var_106) {
        var_50.var_114("getMessage() called with messageId: " + var_102 +
                " and locale: " + var_88);
        
        
        if (var_102 == null) {
            return var_115(var_102);
        }
        String var_116 = var_88 == null ? "null" : var_88.var_117();
        if (var_52.var_118()) {
            var_52.var_114("Resolving message \"" + var_102 +
                    "\" for locale " + var_116);
        }
        String var_119 = null;
        Class var_73 = null;
        try {
            
            
            if (!var_55.var_120(var_102)) {
                return var_115(var_102);
            }
            var_73 = var_74.var_75(var_55.var_63(var_102));
            
            
            
            
            var_119 = var_59.var_60().var_121(var_73, var_88,
                    var_102, var_106);
        }
        catch (MissingResourceException var_76) {}
            try {
                var_119 = var_59.var_60().var_121(var_73, var_53,
                        var_102, var_106);
            }
            catch (MissingResourceException var_122) {}
                return var_115(var_102);
            }
        }
        var_123 (ClassNotFoundException var_83) {}
        return var_124(var_119);
    }

    private String method_9(String param_4) {
        
        
        boolean var_125 = var_5.var_63().var_99("java.l10n_debug");
        if (var_125) {
            StringBuilder var_114 = new StringBuilder();
            String var_126 = var_5.var_63().var_85("java.l10n_debug_marker",
                    "$$$");
            var_114.var_127(var_126);
            var_114.var_127(var_119);
            var_114.var_127(var_126);
            var_119 = var_114.var_117();
        }
        return var_119;
    }

    
    
    private StackTraceElement method_10() {
        try {
            throw new RuntimeException();
        }
        catch (RuntimeException var_76) {}
                }
            }
            catch (Throwable param_5) {}
        }
        return null;
    }

    private String method_8(String param_2) {
        String var_129 = "";
        StackTraceElement var_130 = var_128();
        if (var_130 != null) {
            var_129 = " called by " + var_130;
        }
        if (var_102 == null) {
            var_102 = "null";
        }
        String var_131 = "*** ERROR: Message with id: [" + var_102 +
                "] not found.***" + var_129;
        var_50.var_100(var_131);
        boolean var_132 = var_5.var_63().var_99(
                "java.l10n_missingmessage_exceptions");
        if (var_132) {
            throw new IllegalArgumentException(var_131);
        }
        return "**" + var_102 + "**";
    }

    
    public String method_11(String param_2) {
        return var_101(var_102, var_38.var_78);
    }

    
    public String method_12(Date param_6) {
        Context var_103 = var_16.var_104();
        return var_133(var_134, var_103.var_105());
    }

    
    public String method_13(Date param_6) {
        Context var_103 = var_16.var_104();
        return var_135(var_134, var_103.var_105());
    }

    
    public String method_13(Date param_6, Locale param_1) {

        StringBuilder var_136 = new StringBuilder();
        DateFormat var_137 = var_27.var_138(var_27.var_139, var_88);

        var_136.var_127(var_137.var_121(var_134));

        return var_124(var_136.var_117());
    }

    
    public String method_14() {
        return var_133(new Date());
    }

    
    public String method_12(Date param_6, Locale param_1) {
        
        StringBuilder var_136 = new StringBuilder();
        DateFormat var_137 = var_27.var_138(var_27.var_139, var_88);
        var_137.var_140(var_141());
        DateFormat var_142 = var_27.var_143(var_27.var_144, var_88);
        var_142.var_140(var_141());

        var_136.var_127(var_137.var_121(var_134));
        var_136.var_127(" ");
        var_136.var_127(var_142.var_121(var_134));

        return var_124(var_136.var_117());
    }

    
    public String method_16(Date param_6) {
        TimeZone var_145 = var_141();
        SimpleDateFormat var_146 = new SimpleDateFormat(var_49);
        var_146.var_140(var_145);
        return var_146.var_121(var_134);
    }

    
    public String method_17(Number param_7) {
        Context var_103 = var_16.var_104();
        return var_147(var_148, var_103.var_105());
    }

    
    public String method_17(Number param_7, int param_8) {
        Context var_103 = var_16.var_104();
        return var_147(var_148, var_103.var_105(), var_149);
    }

    
    public String method_17(Number param_7, Locale param_9) {
        return var_124(var_28.var_60(var_150)
                .var_121(var_148));
    }

    
    public String method_17(Number param_7, Locale param_9,
            int param_8) {
        NumberFormat var_151 = var_28.var_60(var_150);
        var_151.var_152(var_149);
        return var_124(var_151.var_121(var_148));
    }

    
    public List<String> method_18() {
        return var_13.var_153(var_101("alphabet"));
    }

    
    public List<String> method_19() {
        return var_13.var_153(var_101("digits"));
    }

    
    public SortedSet<String> method_20() {
        SelectMode var_154 = var_10.var_155("util_queries",
                "available_prefixes");
        
        DataResult<Map<String, Object>> var_156 = var_154.var_157(new HashMap());

        SortedSet<String> var_158 = new TreeSet<String>();
        Iterator<Map<String, Object>> var_66 = var_156.var_93();
        while (var_66.var_94()) {
            Map<String, Object> var_159 = var_66.var_96();
            var_158.var_90((String) var_159.var_63("prefix"));
        }
        return var_158;
    }

    
    public SortedMap<String, String> method_21() {
        List<String> var_160 = new LinkedList<String>(
                var_30.var_161(var_38
                .var_162()));
        String[] var_163 = var_5.var_63().var_64(
                var_6.var_164);
        if (var_163 != null) {
            var_160.var_165(new LinkedList<String>(var_30
                    .var_161(var_163)));
        }
        SortedMap<String, String> var_158 = new TreeMap<String, String>();
        for (Iterator<String> var_92 = var_160.var_93(); var_92.var_94();) {
            String var_166 = var_92.var_96();
            var_158.var_82(this.var_101(var_166), var_166);
        }

        return var_158;
    }

    
    public boolean method_22(String param_2) {
        return this.var_55.var_120(var_102);
    }

    
    public List<String> method_23() {
        List<String> var_167 = new LinkedList<String>(this.var_56.var_168());
        var_31.var_169(var_167);
        return var_31.var_170(var_167);
    }

    
    public List<String> method_24() {
        List<String> var_167 = new LinkedList<String>();
        for (Iterator<String> var_92 = this.var_56.var_168().var_93(); var_92
                .var_94();) {
            String var_80 = var_92.var_96();
            LocaleInfo var_91 = this.var_56.var_63(var_80);
            if (!var_91.var_171()) {
                var_167.var_90(var_80);
            }
        }
        var_31.var_169(var_167);
        return var_31.var_170(var_167);
    }

    
    public boolean method_25(Locale param_1) {
        return this.var_56.var_63(var_88.var_117()) != null;
    }

    
    private TimeZone method_15() {
        TimeZone var_113 = null;
        Context var_103 = var_16.var_104();

        if (var_103 != null) {
            var_113 = var_103.var_172();
        }
        if (var_113 == null) {
            var_50.var_114("Context is null");
            
            var_113 = var_44.var_173();
        }
        if (var_50.var_118()) {
            var_50.var_114("Determined timeZone to be: " + var_113);
        }
        return var_113;

    }

    
    public Collator method_26() {
        Context var_15 = var_16.var_104();
        if (var_15 != null && var_15.var_105() != null) {
            return var_26.var_60(var_15.var_105());
        }
        return var_26.var_60();
    }
}
