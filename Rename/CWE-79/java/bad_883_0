
import var_0.var_1.var_2.var_3.var_4;
import var_0.var_1.var_2.var_3.var_5;
import var_0.var_1.var_2.var_3.var_6;
import var_0.var_1.var_2.var_7.var_8.var_9;
import var_0.var_1.var_2.var_7.var_8.var_10;
import var_0.var_1.var_2.var_7.var_11.var_12.var_13;
import var_0.var_1.var_2.var_7.var_14.var_15;
import var_0.var_1.var_2.var_16.var_8.var_17;
import var_0.var_1.var_2.var_16.var_8.var_18;
import var_0.var_1.var_2.var_16.var_19.var_8.var_20;
import var_0.var_1.var_2.var_16.var_19.var_8.var_21;
import var_0.var_1.var_2.var_16.var_19.var_8.var_22;
import var_0.var_1.var_2.var_16.var_19.var_23.var_24;
import var_0.var_1.var_2.var_25.var_7.var_26;
import var_0.var_1.var_2.var_27.var_28;
import var_29.var_30.var_31.var_32.var_33;
import var_29.var_30.var_31.var_34.var_35;
import var_29.var_30.var_31.var_34.var_36;
import var_29.var_30.var_37.var_38;
import var_29.var_30.var_37.var_39.var_40;
import var_29.var_30.var_37.var_41.var_42;
import var_29.var_43.var_2.var_44.var_7.var_45;
import var_29.var_43.var_2.var_44.var_7.var_45.var_46;
import var_29.var_43.var_2.var_44.var_7.var_45.var_47;
import var_29.var_43.var_2.var_44.var_7.var_48;
import var_29.var_43.var_2.var_44.var_7.var_49;
import var_29.var_43.var_2.var_50.var_7.var_8.var_51;
import var_29.var_43.var_2.var_50.var_7.var_8.var_52;
import var_29.var_43.var_2.var_50.var_7.var_8.var_53;
import var_29.var_54.var_55.var_56.var_57.var_58;
import var_29.var_54.var_59.var_60;
import var_29.var_61.var_62;
import var_29.var_61.var_63;

import var_64.var_65.var_66;
import var_64.var_65.var_37.var_67;
import var_68.var_32.var_69;
import var_68.var_32.var_70;
import var_68.var_71.var_72;
import var_68.var_27.*;

import static var_29.var_30.var_31.var_34.var_36.var_73;

public class var_74 {
	static final String var_75 = "resource";
	static final String var_76 = "http:
	private static final org.slf4j.Logger ourLog = org.slf4j.LoggerFactory.getLogger(BaseController.class);
	@Autowired
	protected TesterConfig myConfig;
	private Map<FhirVersionEnum, FhirContext> myContexts = new HashMap<FhirVersionEnum, FhirContext>();
	private List<String> myFilterHeaders;
	@Autowired
	private ITemplateEngine myTemplateEngine;

	public BaseController() {
		super();
	}

	protected IBaseResource addCommonParams(HttpServletRequest theServletRequest, final HomeRequest theRequest, final ModelMap theModel) {
		final String serverId = theRequest.getServerIdWithDefault(myConfig);
		final String serverBase = theRequest.getServerBase(theServletRequest, myConfig);
		final String serverName = theRequest.getServerName(myConfig);
		final String apiKey = theRequest.getApiKey(theServletRequest, myConfig);
		theModel.put("var_77", var_77);
		var_78.var_79("base", var_80);
		theModel.put("var_81", serverName);
		theModel.put("var_82", apiKey);
		theModel.put("var_83", defaultString(theRequest.getResource()));
		theModel.put("var_84", theRequest.getEncoding());
		theModel.put("var_85", theRequest.getPretty());
		theModel.put("var_86", theRequest.get_summary());
		theModel.put("var_87", myConfig.getIdToServerName());

		return loadAndAddConf(theServletRequest, theRequest, theModel);
	}

	private Header[] applyHeaderFilters(Header[] theAllHeaders) {
		if (myFilterHeaders == null || myFilterHeaders.isEmpty()) {
			return theAllHeaders;
		}
		ArrayList<Header> retVal = new ArrayList<Header>();
		for (Header next : theAllHeaders) {
			if (!myFilterHeaders.contains(next.getName().toLowerCase())) {
				retVal.add(next);
			}
		}
		return retVal.toArray(new Header[retVal.size()]);
	}

	private Header[] applyHeaderFilters(Map<String, List<String>> theAllHeaders) {
		ArrayList<Header> retVal = new ArrayList<Header>();
		for (String nextKey : theAllHeaders.keySet()) {
			for (String nextValue : theAllHeaders.get(nextKey)) {
				if (myFilterHeaders == null || !myFilterHeaders.contains(nextKey.toLowerCase())) {
					retVal.add(new BasicHeader(nextKey, nextValue));
				}
			}
		}
		return retVal.toArray(new Header[retVal.size()]);
	}

	private String format(String theResultBody, EncodingEnum theEncodingEnum) {
		String str = StringEscapeUtils.escapeHtml4(theResultBody);
		if (str == null || theEncodingEnum == null) {
			return str;
		}

		StringBuilder b = new StringBuilder();

		if (theEncodingEnum == EncodingEnum.JSON) {

			boolean inValue = false;
			boolean inQuote = false;
			for (int i = 0; i < str.length(); i++) {
				char prevChar = (i > 0) ? str.charAt(i - 1) : ' ';
				char nextChar = str.charAt(i);
				char nextChar2 = (i + 1) < str.length() ? str.charAt(i + 1) : ' ';
				char nextChar3 = (i + 2) < str.length() ? str.charAt(i + 2) : ' ';
				char nextChar4 = (i + 3) < str.length() ? str.charAt(i + 3) : ' ';
				char nextChar5 = (i + 4) < str.length() ? str.charAt(i + 4) : ' ';
				char nextChar6 = (i + 5) < str.length() ? str.charAt(i + 5) : ' ';
				if (inQuote) {
					b.append(nextChar);
					if (prevChar != '\\' && nextChar == '&' && nextChar2 == 'q' && nextChar3 == 'u' && nextChar4 == 'o' && nextChar5 == 't' && nextChar6 == ';') {
						b.append("var_88;</span>");
						i += 5;
						inQuote = false;
					} else if (nextChar == '\\' && nextChar2 == '"') {
						var_89.var_90("quot;</span>");
						var_91 += 5;
						var_92 = false;
					}
				} else {
					if (var_93 == ':') {
						var_94 = true;
						var_89.var_90(var_93);
					} else if (var_93 == '[' || var_93 == '{') {
						var_89.var_90("<span class='hlControl'>");
						var_89.var_90(var_93);
						var_89.var_90("</span>");
						var_94 = false;
					} else if (var_93 == '{' || var_93 == '}' || var_93 == ',') {
						var_89.var_90("<span class='hlControl'>");
						var_89.var_90(var_93);
						var_89.var_90("</span>");
						var_94 = false;
					} else if (var_93 == '&' && var_95 == 'q' && var_96 == 'u' && var_97 == 'o' && var_98 == 't' && var_99 == ';') {
						if (var_94) {
							var_89.var_90("<span class='hlQuot'>&quot;");
						} else {
							var_89.var_90("<span class='hlTagName'>&quot;");
						}
						var_92 = true;
						var_91 += 5;
					} else if (var_93 == ':') {
						var_89.var_90("<span class='hlControl'>");
						var_89.var_90(var_93);
						var_89.var_90("</span>");
						var_94 = true;
					} else {
						var_89.var_90(var_93);
					}
				}
			}

		} else {
			boolean var_92 = false;
			boolean var_100 = false;
			for (int var_91 = 0; var_91 < var_101.var_102(); var_91++) {
				char var_93 = var_101.var_103(var_91);
				char var_95 = (var_91 + 1) < var_101.var_102() ? var_101.var_103(var_91 + 1) : ' ';
				char var_96 = (var_91 + 2) < var_101.var_102() ? var_101.var_103(var_91 + 2) : ' ';
				char var_97 = (var_91 + 3) < var_101.var_102() ? var_101.var_103(var_91 + 3) : ' ';
				char var_98 = (var_91 + 4) < var_101.var_102() ? var_101.var_103(var_91 + 4) : ' ';
				char var_99 = (var_91 + 5) < var_101.var_102() ? var_101.var_103(var_91 + 5) : ' ';
				if (var_92) {
					var_89.var_90(var_93);
					if (var_93 == '&' && var_95 == 'q' && var_96 == 'u' && var_97 == 'o' && var_98 == 't' && var_99 == ';') {
						var_89.var_90("quot;</span>");
						var_91 += 5;
						var_92 = false;
					}
				} else if (var_100) {
					if (var_93 == '&' && var_95 == 'g' && var_96 == 't' && var_97 == ';') {
						var_89.var_90("</span><span class='hlControl'>&gt;</span>");
						var_100 = false;
						var_91 += 3;
					} else if (var_93 == ' ') {
						var_89.var_90("</span><span class='hlAttr'>");
						var_89.var_90(var_93);
					} else if (var_93 == '&' && var_95 == 'q' && var_96 == 'u' && var_97 == 'o' && var_98 == 't' && var_99 == ';') {
						var_89.var_90("<span class='hlQuot'>&quot;");
						var_92 = true;
						var_91 += 5;
					} else {
						var_89.var_90(var_93);
					}
				} else {
					if (var_93 == '&' && var_95 == 'l' && var_96 == 't' && var_97 == ';') {
						var_89.var_90("<span class='hlControl'>&lt;</span><span class='hlTagName'>");
						var_100 = true;
						var_91 += 3;
					} else {
						var_89.var_90(var_93);
					}
				}
			}
		}

		return var_89.var_104();
	}

	private String method_0(String param_1, String param_2) {
		String var_101 = var_107;
		if (var_101 == null) {
			return var_101;
		}

		try {
			var_101 = var_72.var_108(var_101, "UTF-8");
		} catch (UnsupportedEncodingException var_109) {}

		StringBuilder var_89 = new StringBuilder();
		var_89.var_90("<span class='hlUrlBase'>");

		boolean var_110 = false;
		for (int var_91 = 0; var_91 < var_101.var_102(); var_91++) {
			char var_93 = var_101.var_103(var_91);
			
			
			if (!var_110) {
				if (var_93 == '?') {
					var_110 = true;
					var_89.var_90("</span><wbr /><span class='hlControl'>?</span><span class='hlTagName'>");
				} else {
					if (var_91 == var_106.var_102()) {
						var_89.var_90("</span><wbr /><span class='hlText'>");
					}
					var_89.var_90(var_93);
				}
			} else {
				if (var_93 == '&') {
					var_89.var_90("</span><wbr /><span class='hlControl'>&amp;</span><span class='hlTagName'>");
				} else if (var_93 == '=') {
					var_89.var_90("</span><span class='hlControl'>=</span><span class='hlAttr'>");
					
					
				} else {
					var_89.var_90(var_93);
				}
			}
		}

		if (var_110) {
			var_89.var_90("</span>");
		}
		return var_89.var_104();
	}

	protected FhirContext method_1(HomeRequest param_4) {
		FhirVersionEnum var_113 = var_112.var_114(var_115);
		FhirContext var_116 = var_117.var_118(var_113);
		if (var_116 == null) {
			var_116 = var_119(var_113);
			var_117.var_79(var_113, var_116);
		}
		return var_116;
	}

	protected RuntimeResourceDefinition method_3(HomeRequest param_4, HttpServletRequest param_6) throws ServletException {
		String var_83 = var_36.var_73(var_120.var_121(var_75));
		RuntimeResourceDefinition var_122 = var_111(var_112).var_123(var_83);
		if (var_122 == null) {
			throw new ServletException("Invalid resourceName: " + var_83);
		}
		return var_122;
	}

	protected ResultType method_4(GenericClient param_7, Exception param_3, ModelMap param_0) {
		ResultType var_125;
		var_125 = var_126.var_127;
		var_128.var_129("Failed to invoke server", var_109);

		if (var_109 != null) {
			var_78.var_79("errorMsg", var_130("Error: " + var_109.var_131(), var_109));
		}

		return var_125;
	}

	private IBaseResource method_6(HttpServletRequest param_8, final HomeRequest param_4, final ModelMap param_0) {
		switch (var_112.var_114(var_115)) {
			case var_133:
				return var_134(var_132, var_112, var_78);
			case var_135:
				return var_136(var_132, var_112, var_78);
			case var_137:
				return var_138(var_132, var_112, var_78);
			case var_139:
			case var_140:
				break;
		}
		throw new IllegalStateException("Unknown version: " + var_112.var_114(var_115));
	}


	private IResource method_7(HttpServletRequest param_8, final HomeRequest param_4, final ModelMap param_0) {
		CaptureInterceptor var_141 = new CaptureInterceptor();
		GenericClient var_19 = var_112.var_142(var_132, var_111(var_112), var_115, var_141);

		ca.uhn.fhir.model.dstu2.resource.Conformance var_143;
		try {
			var_143 = (ca.uhn.fhir.model.dstu2.resource.Conformance) var_19.var_144().var_145(Conformance.class).var_146();
		} catch (Exception var_109) {}", e.toString());
			theModel.put("var_147", var_130("Failed to load conformance statement, error was: " + var_109.var_104(), var_109));
			var_143 = new ca.uhn.fhir.model.dstu2.resource.Conformance();
		}

		var_78.var_79("jsonEncodedConf", var_111(var_112).var_148().var_149(var_143));

		Map<String, Number> var_150 = new HashMap<String, Number>();
		long var_151 = 0;
		for (ca.uhn.fhir.model.dstu2.resource.Conformance.Rest var_152 : var_143.var_153()) {
			for (ca.uhn.fhir.model.dstu2.resource.Conformance.RestResource var_154 : var_152.var_155()) {
				List<ExtensionDt> var_156 = var_154.var_157(var_76);
				if (var_156 != null && var_156.var_158() > 0) {
					Number var_159 = ((DecimalDt) (var_156.var_118(0).var_160())).var_161();
					var_150.var_79(var_154.var_162().var_160(), var_159);
					var_151 += var_159.var_163();
				}
			}
		}
		var_78.var_79("resourceCounts", var_150);

		if (var_151 > 0) {
			for (ca.uhn.fhir.model.dstu2.resource.Conformance.Rest var_152 : var_143.var_153()) {
				var_164.var_165(var_152.var_155(), new Comparator<ca.uhn.fhir.model.dstu2.resource.Conformance.RestResource>() {
					@var_166
					public int method_10(ca.uhn.fhir.model.dstu2.resource.Conformance.RestResource param_9, ca.uhn.fhir.model.dstu2.resource.Conformance.RestResource param_10) {
						DecimalDt var_169 = new DecimalDt();
						List<ExtensionDt> var_170 = var_167.var_157(var_76);
						if (var_170 != null && var_170.var_158() > 0) {
							var_169 = (DecimalDt) var_170.var_118(0).var_160();
						}
						DecimalDt var_171 = new DecimalDt();
						List<ExtensionDt> var_172 = var_168.var_157(var_76);
						if (var_172 != null && var_172.var_158() > 0) {
							var_171 = (DecimalDt) var_172.var_118(0).var_160();
						}
						int var_116 = var_171.var_173(var_169);
						if (var_116 == 0) {
							var_116 = var_167.var_162().var_160().var_173(var_168.var_162().var_160());
						}
						return var_116;
					}
				});
			}
		}

		var_78.var_79("conf", var_143);
		var_78.var_79("requiredParamExtension", var_28.var_174);

		return var_143;
	}

	private IBaseResource method_8(HttpServletRequest param_8, final HomeRequest param_4, final ModelMap param_0) {
		CaptureInterceptor var_141 = new CaptureInterceptor();
		GenericClient var_19 = var_112.var_142(var_132, var_111(var_112), var_115, var_141);

		org.hl7.fhir.dstu3.model.CapabilityStatement var_175 = new CapabilityStatement();
		try {
			var_175 = var_19.var_144().var_145(org.hl7.fhir.dstu3.model.CapabilityStatement.class).var_146();
		} catch (Exception var_176) {}", ex.toString());
			theModel.put("var_147", var_130("Failed to load conformance statement, error was: " + var_176.var_104(), var_176));
		}

		var_78.var_79("jsonEncodedConf", var_111(var_112).var_148().var_149(var_175));

		Map<String, Number> var_150 = new HashMap<String, Number>();
		long var_151 = 0;

		for (CapabilityStatementRestComponent var_152 : var_175.var_153()) {
			for (CapabilityStatementRestResourceComponent var_154 : var_152.var_155()) {
				List<Extension> var_156 = var_154.var_177(var_76);
				if (var_156 != null && var_156.var_158() > 0) {
					Number var_159 = ((DecimalType) (var_156.var_118(0).var_160())).var_161();
					var_150.var_79(var_154.var_162().var_160(), var_159);
					var_151 += var_159.var_163();
				}
			}
		}

		var_78.var_79("resourceCounts", var_150);

		if (var_151 > 0) {
			for (CapabilityStatementRestComponent var_152 : var_175.var_153()) {
				var_164.var_165(var_152.var_155(), new Comparator<CapabilityStatementRestResourceComponent>() {
					@var_166
					public int method_10(CapabilityStatementRestResourceComponent param_9, CapabilityStatementRestResourceComponent param_10) {
						DecimalType var_169 = new DecimalType();
						List<Extension> var_170 = var_167.var_177(var_76);
						if (var_170 != null && var_170.var_158() > 0) {
							var_169 = (DecimalType) var_170.var_118(0).var_160();
						}
						DecimalType var_171 = new DecimalType();
						List<Extension> var_172 = var_168.var_177(var_76);
						if (var_172 != null && var_172.var_158() > 0) {
							var_171 = (DecimalType) var_172.var_118(0).var_160();
						}
						int var_116 = var_171.var_173(var_169);
						if (var_116 == 0) {
							var_116 = var_167.var_162().var_160().var_173(var_168.var_162().var_160());
						}
						return var_116;
					}
				});
			}
		}

		var_78.var_79("requiredParamExtension", var_28.var_174);

		var_78.var_79("conf", var_175);
		return var_175;
	}

	private IBaseResource method_9(HttpServletRequest param_8, final HomeRequest param_4, final ModelMap param_0) {
		CaptureInterceptor var_141 = new CaptureInterceptor();
		GenericClient var_19 = var_112.var_142(var_132, var_111(var_112), var_115, var_141);

		org.hl7.fhir.r4.model.CapabilityStatement var_175 = new org.hl7.fhir.r4.model.CapabilityStatement();
		try {
			var_175 = var_19.var_144().var_145(org.hl7.fhir.r4.model.CapabilityStatement.class).var_146();
		} catch (Exception var_176) {}", ex.toString());
			theModel.put("var_147", var_130("Failed to load conformance statement, error was: " + var_176.var_104(), var_176));
		}

		var_78.var_79("jsonEncodedConf", var_111(var_112).var_148().var_149(var_175));

		Map<String, Number> var_150 = new HashMap<String, Number>();
		long var_151 = 0;

		for (org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestComponent var_152 : var_175.var_153()) {
			for (org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestResourceComponent var_154 : var_152.var_155()) {
				List<org.hl7.fhir.r4.model.Extension> var_156 = var_154.var_177(var_76);
				if (var_156 != null && var_156.var_158() > 0) {
					Number var_159 = ((org.hl7.fhir.r4.model.DecimalType) (var_156.var_118(0).var_160())).var_161();
					var_150.var_79(var_154.var_162().var_160(), var_159);
					var_151 += var_159.var_163();
				}
			}
		}

		var_78.var_79("resourceCounts", var_150);

		if (var_151 > 0) {
			for (org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestComponent var_152 : var_175.var_153()) {
				var_164.var_165(var_152.var_155(), new Comparator<org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestResourceComponent>() {
					@var_166
					public int method_10(org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestResourceComponent param_9, org.hl7.fhir.r4.model.CapabilityStatement.CapabilityStatementRestResourceComponent param_10) {
						org.hl7.fhir.r4.model.DecimalType var_169 = new org.hl7.fhir.r4.model.DecimalType();
						List<org.hl7.fhir.r4.model.Extension> var_170 = var_167.var_177(var_76);
						if (var_170 != null && var_170.var_158() > 0) {
							var_169 = (org.hl7.fhir.r4.model.DecimalType) var_170.var_118(0).var_160();
						}
						org.hl7.fhir.r4.model.DecimalType var_171 = new org.hl7.fhir.r4.model.DecimalType();
						List<org.hl7.fhir.r4.model.Extension> var_172 = var_168.var_177(var_76);
						if (var_172 != null && var_172.var_158() > 0) {
							var_171 = (org.hl7.fhir.r4.model.DecimalType) var_172.var_118(0).var_160();
						}
						int var_116 = var_171.var_173(var_169);
						if (var_116 == 0) {
							var_116 = var_167.var_162().var_160().var_173(var_168.var_162().var_160());
						}
						return var_116;
					}
				});
			}
		}

		var_78.var_79("requiredParamExtension", var_28.var_174);

		var_78.var_79("conf", var_175);
		return var_175;
	}

	protected String method_11(ModelMap param_0) {
		return "[server=" + var_78.var_118("serverId") + "] - ";
	}

	protected FhirContext method_2(FhirVersionEnum param_5) {
		FhirContext var_116;
		var_116 = new FhirContext(var_113);
		return var_116;
	}

	private String method_12(HomeRequest param_4, EncodingEnum param_11, String param_2) {
		try {
			IBaseResource var_180 = var_179.var_181(var_111(var_112)).var_182(var_107);
			String var_116;
			if (var_180 instanceof IResource) {
				IResource var_12 = (IResource) var_180;
				var_116 = var_12.var_183().var_184().var_185();
			} else if (var_180 instanceof IDomainResource) {
				var_116 = ((IDomainResource) var_180).var_183().var_186();
			} else {
				var_116 = null;
			}
			return var_36.var_73(var_116);
		} catch (Exception var_109) {}
	}

	protected String method_13(String param_12) {
		if (var_187 == null) {
			return "";
		}
		String var_116 = var_187.var_188();

		StringBuilder var_89 = new StringBuilder();
		for (int var_91 = 0; var_91 < var_116.var_102(); var_91++) {
			char var_93 = var_116.var_103(var_91);
			int var_189 = var_93;
			if (var_189 == 65533) {
				var_89.var_90(' ');
				continue;
			}
			if (var_189 == 160) {
				var_89.var_90(' ');
				continue;
			}
			if (var_189 == 194) {
				var_89.var_90(' ');
				continue;
			}
			var_89.var_90(var_93);
		}
		var_116 = var_89.var_104();
		return var_116;
	}

	protected void method_14(GenericClient param_7, ResultType param_13, ModelMap param_14, long param_15, String param_16,
																	 CaptureInterceptor param_17, HomeRequest param_4) {
		try {



















			IHttpRequest var_195 = var_194.var_196();
			IHttpResponse var_197 = var_194.var_198();
			String var_199 = null;
			String var_200 = null;
			String var_201 = null;
			String var_202 = null;
			String var_203 = null;
			String var_204 = null;
			ContentType var_205 = null;
			if (var_195 != null) {
				var_199 = var_195.var_206();
				var_200 = var_195.var_207();
				var_201 = var_195.var_208();
			}
			if (var_197 != null) {
				var_202 = "HTTP " + var_197.var_209() + " " + var_197.var_210();
				var_197.var_211();
				var_203 = var_33.var_104(var_197.var_212(), var_17.var_213);

				List<String> var_214 = var_197.var_215(var_17.var_216);
				if (var_214 != null && var_214.var_217() == false) {
					var_205 = var_40.var_218(var_214.var_118(0));
					var_204 = var_205.var_219();
				}
			}

			EncodingEnum var_220 = var_18.var_221(var_204);
			String var_222 = "";

			StringBuilder var_223 = new StringBuilder();
			IBaseResource var_224 = null;

			FhirContext var_3 = var_111(var_112);
			if (var_220 == null) {
				var_223.var_90("Non-FHIR response");
			} else {
				switch (var_220) {
					case var_225:
						if (var_190 == var_126.var_226) {
							var_222 = var_178(var_112, var_220, var_203);
							var_223.var_90("JSON resource");
						} else if (var_190 == var_126.var_227) {
							var_223.var_90("JSON bundle");
							var_224 = var_3.var_148().var_182(var_203);
						}
						break;
					case var_228:
					default:
						if (var_190 == var_126.var_226) {
							var_222 = var_178(var_112, var_220, var_203);
							var_223.var_90("XML resource");
						} else if (var_190 == var_126.var_227) {
							var_223.var_90("XML bundle");
							var_224 = var_3.var_229().var_182(var_203);
						}
						break;
				}
			}

			var_223.var_90(" (").var_90(var_73(var_203).var_102() + " bytes)");

			Header[] var_230 = var_195 != null ? var_231(var_195.var_232()) : new Header[0];
			Header[] var_233 = var_197 != null ? var_231(var_197.var_232()) : new Header[0];

			var_191.var_79("outcomeDescription", var_193);
			var_191.var_79("resultDescription", var_223.var_104());
			var_191.var_79("action", var_201);
			var_191.var_79("ri", var_224 instanceof IAnyResource);
			var_191.var_79("riBundle", var_224);
			var_191.var_79("resultStatus", var_202);

			var_191.var_79("requestUrl", var_200);
			var_191.var_79("requestUrlText", var_105(var_124.var_234(), var_200));

			String var_235 = var_236(var_199, var_220);
			var_191.var_79("requestBody", var_235);

			String var_237 = var_236(var_203, var_220);
			var_191.var_79("resultBody", var_237);

			var_191.var_79("resultBodyIsLong", var_237.var_102() > 1000);
			var_191.var_79("requestHeaders", var_230);
			var_191.var_79("responseHeaders", var_233);
			var_191.var_79("narrative", var_222);
			var_191.var_79("latencyMs", var_192);

		} catch (Exception var_109) {}

	}

	
	protected String method_5(String param_18, Exception param_19) {
		return var_238;
	}

	protected enum enum_0 {
		var_227, var_127, var_226, var_239
	}

	public static class class_0 implements IClientInterceptor {

		private IHttpRequest var_240;
		private IHttpResponse var_241;


		public IHttpRequest method_15() {
			return var_240;
		}

		public IHttpResponse method_16() {
			return var_241;
		}





		@var_166
		public void method_17(IHttpRequest param_4) {
			assert var_240 == null;

			var_240 = var_112;
		}

		@var_166
		public void method_18(IHttpResponse param_20) throws IOException {
			assert var_241 == null;
			var_241 = var_242;














		}






















	}

}
