

import var_0.var_1.var_2.var_3.var_4;
import var_0.var_1.var_5.var_6;
import var_7.var_8;
import var_7.var_9;
import var_7.var_10.var_11;
import var_7.var_10.var_12;
import var_7.var_10.var_13;
import var_7.var_10.var_14;
import var_7.var_10.var_15;
import var_7.var_10.var_16;
import var_7.var_10.var_17;
import var_7.var_10.var_18;
import var_7.var_10.var_19;
import var_7.var_10.var_20;
import var_7.var_10.var_21;
import var_7.var_10.var_22;
import var_7.var_10.var_23;
import var_7.var_10.var_24;
import var_7.var_10.var_25;
import var_7.var_10.var_26;
import var_7.var_10.var_27;
import var_7.var_10.var_28;
import var_7.var_10.var_29;
import var_7.var_10.var_30;
import var_7.var_10.var_31;
import var_7.var_10.var_32;
import var_7.var_10.var_33;
import var_7.var_10.var_34;
import var_7.var_10.var_35;
import var_7.var_10.var_36;
import var_7.var_10.var_37;
import var_7.var_10.var_38;
import var_7.var_10.var_39;
import var_7.var_10.var_40;
import var_7.var_10.var_41;
import var_7.var_10.var_42;
import var_7.var_10.var_43;
import var_7.var_10.var_44;
import var_7.var_10.var_45;
import var_7.var_10.var_46;
import var_7.var_10.var_47;
import var_7.var_10.var_48;
import var_7.var_10.var_49;
import var_7.var_10.var_50;
import var_7.var_10.var_51;
import var_7.var_10.var_52;
import var_7.var_10.var_53;
import var_7.var_10.var_54;
import var_7.var_10.var_55;
import var_7.var_10.var_56;
import var_7.var_10.var_57;
import var_7.var_10.var_58;
import var_7.var_10.var_24.var_59;
import var_7.var_10.var_60.var_61;
import var_7.var_10.var_62.var_63;
import var_7.var_10.var_62.var_64;
import var_7.var_10.var_62.var_65;
import var_7.var_10.var_66;
import var_7.var_10.var_67;

import var_68.var_69;
import var_0.var_1.var_2.var_3.var_70;
import var_0.var_71.var_72.var_73;
import var_7.var_74;
import var_7.var_75;
import var_7.var_76;
import var_7.var_77;
import var_7.var_78;
import var_7.var_79;
import var_7.var_80;
import var_7.var_81;
import var_7.var_82;
import var_7.var_82.var_83;
import var_7.var_84;
import var_7.var_85;
import var_7.var_86.var_87;
import var_7.var_88;
import var_7.var_89;
import var_7.var_90;
import var_7.var_91;
import var_7.var_92;
import var_7.var_93;
import var_7.var_94;
import static var_7.var_94.var_95;
import static var_7.var_94.var_96;
import var_7.var_97;
import var_7.var_98;
import var_7.var_99.var_100;
import var_7.var_99.var_101;
import var_7.var_99.var_102;
import var_7.var_99.var_103.var_104;
import var_7.var_99.var_103.var_105;
import var_7.var_106.var_107;
import var_7.var_106.var_108;
import var_7.var_109.var_110;
import var_7.var_111.var_112;
import var_7.var_109.var_113;
import var_7.var_86.var_114;
import var_7.var_115.var_116;
import var_7.var_115.var_117;
import var_7.var_115.var_118;
import var_7.var_119.var_120;
import var_7.var_119.var_121;
import var_7.var_122.var_123;
import var_7.var_122.var_124;
import var_7.var_122.var_125;
import var_7.var_126.var_127;
import var_7.var_126.var_128;
import var_7.var_126.var_129;
import var_7.var_126.var_130;
import var_7.var_126.var_131;
import var_7.var_126.var_132;
import var_7.var_126.var_133;
import var_7.var_126.var_134;
import var_7.var_126.var_135;
import var_7.var_126.var_136;
import var_7.var_126.var_137;
import var_7.var_126.var_138;
import var_7.var_126.var_139;
import var_7.var_126.var_140.var_141;
import var_7.var_142.var_143;
import var_7.var_142.var_144;
import var_7.var_142.var_145;
import var_7.var_142.var_146;
import var_7.var_142.var_147;
import var_7.var_142.var_148;
import var_7.var_142.var_149;
import var_7.var_142.var_150;
import var_7.var_142.var_151;
import var_7.var_142.var_152;
import var_7.var_142.var_153;
import var_7.var_154.var_155;
import var_7.var_154.var_156;
import var_7.var_154.var_157;
import var_7.var_158.var_159;
import var_7.var_158.var_160;
import var_7.var_158.var_161;
import var_7.var_162.var_163;
import var_7.var_162.var_164;
import var_7.var_162.var_165;
import var_7.var_162.var_166;
import var_7.var_162.var_167;
import var_7.var_162.var_168;
import var_7.var_162.var_169;
import var_7.var_162.var_170;
import var_7.var_162.var_171;
import var_7.var_162.var_172;
import var_7.var_162.var_173;
import var_7.var_162.var_174;
import var_7.var_162.var_175;
import var_7.var_162.var_176;
import var_7.var_162.var_177;
import var_7.var_162.var_178;
import var_7.var_162.var_179;
import var_7.var_162.var_179.var_180;
import var_7.var_162.var_181;
import var_7.var_162.var_182;
import var_7.var_162.var_183;
import var_7.var_162.var_184;
import var_7.var_162.var_185;
import var_7.var_186.var_187;
import var_7.var_186.var_188;
import var_7.var_186.var_189;
import var_7.var_186.var_190;
import var_7.var_191.var_192;
import var_193.var_194;
import var_193.var_195;
import var_193.var_196;
import var_193.var_10.var_197.var_198;
import var_193.var_126.var_199;
import var_193.var_126.var_200;
import var_193.var_142.var_201;
import var_193.var_162.var_202.var_203;
import var_204.var_205.var_206.var_207;
import var_208.var_209.var_210;
import var_208.var_209.var_211;
import var_208.var_209.var_212;
import var_208.var_209.var_213;
import var_208.var_209.var_214;
import var_208.var_209.var_215.var_216;
import var_208.var_209.var_217.var_218.var_219;
import var_208.var_209.var_220.var_221;
import var_208.var_222.var_223.var_224.var_225;
import var_208.var_222.var_223.var_224.var_226;
import var_208.var_222.var_223.var_111.var_227;
import var_208.var_228.var_7.var_229.var_230;
import var_208.var_228.var_7.var_229.var_231;
import var_208.var_228.var_7.var_229.var_232;
import var_208.var_228.var_7.var_229.var_233;
import var_208.var_228.var_7.var_229.var_234;
import var_208.var_228.var_7.var_229.var_235;
import var_208.var_228.var_7.var_229.var_234.var_236;
import var_208.var_237.var_238.var_239;
import var_208.var_237.var_238.var_240.var_241;
import var_208.var_237.var_242.var_243;
import var_208.var_237.var_242.var_244;
import var_208.var_237.var_245.var_246;
import var_208.var_237.var_245.var_247;
import var_208.var_237.var_245.var_248;
import var_208.var_237.var_245.var_249;
import var_208.var_237.var_245.var_250;
import var_208.var_237.var_245.var_251;
import var_208.var_237.var_245.var_252;
import var_208.var_237.var_245.var_253;
import var_208.var_237.var_245.var_254;
import var_208.var_237.var_245.var_255;
import var_208.var_237.var_245.var_256;
import var_208.var_237.var_245.var_257;
import var_208.var_237.var_245.var_258.var_259;
import var_208.var_237.var_245.var_258.var_260;
import var_208.var_237.var_245.var_261.var_262.var_263;
import var_208.var_237.var_245.var_264.var_265;
import var_208.var_237.var_245.var_224.var_266;
import var_208.var_237.var_245.var_224.var_267;
import var_208.var_268.var_269.var_270;

import var_271.var_272.var_273;
import var_271.var_274.var_275;
import var_271.var_274.var_276;
import var_271.var_274.var_277;
import var_271.var_274.var_278.var_279;
import var_271.var_274.var_278.var_280;

import static var_7.var_106.var_107.*;
import var_7.var_126.var_281;
import static var_271.var_274.var_278.var_280.var_282;
import static var_271.var_274.var_278.var_280.var_283;
import var_284.var_202.var_285;
import var_284.var_202.var_286;
import var_284.var_202.var_287;
import var_284.var_202.var_288;
import var_284.var_202.var_289;
import var_284.var_202.var_290;
import var_284.var_204.var_291;
import var_284.var_204.var_292;
import var_284.var_293.var_294.var_295;
import var_284.var_126.var_296;
import var_284.var_297.var_298;
import var_284.var_162.var_299;
import var_284.var_162.var_300;
import var_284.var_162.var_301;
import var_284.var_162.var_302;
import var_284.var_162.var_303;
import var_284.var_162.var_304;
import var_284.var_162.var_305;
import var_284.var_162.var_306;
import var_284.var_162.var_307;
import var_284.var_162.var_308;
import var_284.var_162.var_308.var_309;
import var_284.var_162.var_310;
import var_284.var_162.var_311;
import var_284.var_162.var_312;
import var_284.var_162.var_313;
import var_284.var_162.var_314;
import var_284.var_162.var_315;
import var_284.var_162.var_316;
import var_284.var_162.var_317.var_318;
import var_284.var_162.var_317.var_319;
import var_284.var_162.var_317.var_320;
import var_284.var_162.var_317.var_321;
import var_284.var_162.var_317.var_322;
import var_284.var_162.var_317.var_323;
import var_284.var_162.var_317.var_324;
import var_284.var_162.var_317.var_325;
import var_284.var_162.var_317.var_326;
import var_284.var_162.var_111.var_327;
import static var_284.var_162.var_111.var_327.var_328;
import var_284.var_162.var_111.var_329;
import var_284.var_162.var_111.var_330;
import var_271.var_331.var_332;
import var_271.var_331.var_333;
import var_271.var_331.var_334;


@var_260
public class class_0 extends AbstractCIBase implements ModifiableTopLevelItemGroup, StaplerProxy, StaplerFallback, ViewGroup, AccessControlled, DescriptorByNameOwner, ModelObjectWithContextMenu {
    private transient final Queue var_336;

    
    public transient final Lookup var_337 = new Lookup();

    
    
    private String var_338 = "1.0";

    
    private int var_339 = 2;

    
    private Mode var_340 = var_341.var_342;

    
    private Boolean var_343;

    
    private volatile AuthorizationStrategy var_344 = var_129.var_345;

    
    private volatile SecurityRealm var_346 = var_139.var_347;
    
    
    private ProjectNamingStrategy var_348 = var_198.var_349;

    
    private String var_350 = "${ITEM_ROOTDIR}/"+var_351;

    
    private String var_352 = "${ITEM_ROOTDIR}/builds";

    
    private String var_353;

    private MarkupFormatter var_354;

    
    public transient final File var_355;

    
    private transient volatile InitMilestone var_356 = var_107.var_357;

    
     transient final Map<String,TopLevelItem> var_358 = new CopyOnWriteMap.Tree<String,TopLevelItem>(var_164.var_359);

    
    private static Jenkins var_360;

    private transient volatile boolean var_361;
    private transient volatile boolean var_362;

    private List<JDK> var_363 = new ArrayList<JDK>();

    private transient volatile DependencyGraph var_364;

    
    private volatile ViewsTabBar var_365 = new DefaultViewsTabBar();

    
    private volatile MyViewsTabBar var_366 = new DefaultMyViewsTabBar();

    
    private transient final Memoizer<Class,ExtensionList> var_367 = new Memoizer<Class,ExtensionList>() {
        public ExtensionList method_3(Class param_8) {
            return var_78.var_369(var_335.this,var_368);
        }
    };

    
    private transient final Memoizer<Class,DescriptorExtensionList> var_370 = new Memoizer<Class,DescriptorExtensionList>() {
        public DescriptorExtensionList method_3(Class param_8) {
            return var_76.var_371(var_335.this,var_368);
        }
    };

    
    protected transient final Map<Node,Computer> var_372 = new CopyOnWriteMap.Hash<Node,Computer>();

    
    public final Hudson.CloudList var_373 = new Hudson.CloudList(this);

    public static class class_1 extends DescribableList<Cloud,Descriptor<Cloud>> {
        public var_374(Jenkins param_9) {
            super(var_375);
        }

        public var_374() {
        }

        public Cloud method_4(String param_10) {
            for (Cloud var_378 : this)
                if (var_378.var_377.var_379(var_377))
                    return var_378;
            return null;
        }

        @var_380
        protected void method_5() throws IOException {
            super.var_381();
            var_335.var_382().var_383();
        }
    }

    
    protected volatile NodeList var_142;

    
     Integer var_384;

    
     int var_385;

    
    private final CopyOnWriteArrayList<View> var_186 = new CopyOnWriteArrayList<View>();

    
    private volatile String var_386;

    private transient final ViewGroupMixIn var_387 = new ViewGroupMixIn(this) {
        protected List<View> method_0() { return var_186; }
        protected String method_8() { return var_386; }
        protected void method_8(String param_10) { var_386=var_377; }
    };


    private transient final FingerprintMap var_388 = new FingerprintMap();

    
    public transient final PluginManager var_389;

    public transient volatile TcpSlaveAgentListener var_390;

    private transient UDPBroadcastThread var_391;

    private transient DNSMultiCast var_392;

    
    private transient final CopyOnWriteList<SCMListener> var_393 = new CopyOnWriteList<SCMListener>();

    
    private int var_394 =0;

    
    private String var_395="";

    
    private volatile CrumbIssuer var_396;

    
    private transient final ConcurrentHashMap<String,Label> var_60 = new ConcurrentHashMap<String,Label>();

    
    @var_259
    public transient final OverallLoadStatistics var_397 = new OverallLoadStatistics();

    
    @var_259
    public transient final LoadStatistics var_398 = new UnlabeledLoadStatistics();

    
    public transient final NodeProvisioner var_399 = new NodeProvisioner(null,var_398);

    
    @var_239(NoExternalUse.class)
    public transient final NodeProvisioner var_400 = var_399;


    public transient final ServletContext var_401;

    
    private transient final List<Action> var_402 = new CopyOnWriteArrayList<Action>();

    
    private DescribableList<NodeProperty<?>,NodePropertyDescriptor> var_403 = new DescribableList<NodeProperty<?>,NodePropertyDescriptor>(this);

    
    private DescribableList<NodeProperty<?>,NodePropertyDescriptor> var_404 = new DescribableList<NodeProperty<?>,NodePropertyDescriptor>(this);

    
    public transient final List<AdministrativeMonitor> var_405 = var_406(AdministrativeMonitor.class);

    
    private transient final List<Widget> var_191 = var_406(Widget.class);

    
    private transient final AdjunctManager var_407;

    
    private transient final ItemGroupMixIn var_408 = new ItemGroupMixIn(this,this) {
        @var_380
        protected void method_10(TopLevelItem param_15) {
            var_358.var_411(var_410.var_412(),var_410);
        }

        @var_380
        protected File method_12(String param_10) {
            return var_335.this.var_413(var_377);
        }

        
        @var_380
        protected String method_13(StaplerRequest param_16, TopLevelItem param_17) throws IOException {
            String var_416 = var_415.var_417()+"configure";
            List<Ancestor> var_418 = var_414.var_419();
            for (int var_420 = var_418.var_421() - 1; var_420 >= 0; var_420--) {
                Object var_422 = var_418.var_423(var_420).var_424();
                if (var_422 instanceof View) {
                    var_416 = var_414.var_425() + '/' + ((View)var_422).var_417() + var_416;
                    break;
                }
            }
            return var_416;
        }
    };


    
    public interface interface_0 {
        Jenkins method_6();
    }

    static JenkinsHolder var_426 = new JenkinsHolder() {
        public Jenkins method_6() {
            return var_360;
        }
    };

    @var_105
    public static Jenkins method_6() {
        return var_426.var_382();
    }

    
    private transient final String var_427;

    private transient final UpdateCenter var_428 = new UpdateCenter();

    
    private Boolean var_429;

    
    public transient volatile ProxyConfiguration var_430;

    
    private transient final LogRecorderManager var_431 = new LogRecorderManager();

    protected var_335(File param_5, ServletContext param_1) throws IOException, InterruptedException, ReactorException {
        this(var_355,var_215,null);
    }

    
    @var_432.var_433.var_434.var_435.var_436.var_437({
        "SC_START_IN_CTOR", 
        "ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" 
    })
    protected var_335(File param_5, ServletContext param_1, PluginManager param_13) throws IOException, InterruptedException, ReactorException {
        long var_438 = var_439.var_440();
        
    	
        var_127.var_441(var_127.var_442);
        try {
            this.var_355 = var_355;
            this.var_401 = var_215;
            var_443(var_215);
            if(var_360!=null)
                throw new IllegalStateException();
            var_360 = this;

            if (!new File(var_355,"jobs").var_444()) {
                
                var_350 = "${JENKINS_HOME}/workspace/${ITEM_FULLNAME}";
            }

            
            final InitStrategy var_445 = var_108.var_423(var_446.var_447().var_448());

            var_160.var_449 = new Timer();
            var_336 = new Queue(var_42.var_450);

            try {
                var_364 = var_22.var_451;
            } catch (InternalError var_452) {}
                throw var_452;
            }

            
            TextFile var_453 = new TextFile(new File(var_454(),"secret.key"));
            if(var_453.var_444()) {
                var_427 = var_453.var_455();
            } else {
                SecureRandom var_456 = new SecureRandom();
                byte[] var_457 = new byte[32];
                var_456.var_458(var_457);
                var_427 = var_94.var_459(var_457);
                var_453.var_460(var_427);

                
                
                new FileBoolean(new File(var_355,"secret.key.not-so-secret")).var_461();
            }

            try {
                var_430 = var_91.var_462();
            } catch (IOException var_452) {}

            if (var_389==null)
                var_389 = new LocalPluginManager(this);
            this.var_389 = var_389;
            
            var_257.var_423(var_401).var_463(var_389.var_464);

            var_407 = new AdjunctManager(var_401, var_389.var_464,"adjuncts/"+var_465, var_183.var_466.var_467(365));

            
            var_468( var_445,
                    var_389.var_469(var_445),    
                    var_470(),                    
                    var_107.var_471()        
            );

            if(var_472)
                var_439.var_473(0);

            if(var_394!=-1) {
                try {
                    var_390 = new TcpSlaveAgentListener(var_394);
                } catch (BindException var_452) {}
            } else
                var_390 = null;

            try {
                var_391 = new UDPBroadcastThread(this);
                var_391.var_438();
            } catch (IOException var_452) {}
            var_392 = new DNSMultiCast(this);

            Timer var_449 = var_160.var_449;
            if (var_449 != null) {
                var_449.var_474(new SafeTimerTask() {
                    @var_380
                    protected void method_19() throws Exception {
                        var_383();
                    }
                }, var_183.var_475.var_467(5), var_183.var_475.var_467(5));
            }

            var_476();

            {
                Computer var_378 = var_477();
                if(var_378!=null)
                    for (ComputerListener var_478 : var_144.var_479())
                        var_478.var_480(var_378,var_181.var_481());
            }

            for (ItemListener var_482 : var_63.var_479()) {
                long var_483 = var_439.var_440();
                var_482.var_484();
                if (var_485)
                    var_486.var_487(var_488.var_489("Took %dms for item listener %s startup",
                            var_439.var_440()-var_483,var_482.var_490().var_412()));
            }
            
            if (var_485)
                var_486.var_487(var_488.var_489("Took %dms for complete Jenkins startup",
                        var_439.var_440()-var_438));
        } var_491 {
            var_216.var_492();
        }
    }

    
    private void method_17(final InitStrategy param_19, TaskBuilder... var_493) throws IOException, InterruptedException, ReactorException {
        Reactor var_229 = new Reactor(var_493) {
            
            @var_380
            protected void method_22(Task param_20) throws Exception {
                if (var_445!=null && var_445.var_496(var_495))  return;

                var_127.var_441(var_127.var_442); 
                String var_497 = var_495.var_498();

                Thread var_499 = var_446.var_447();
                String var_377 = var_499.var_412();
                if (var_497 !=null)
                    var_499.var_500(var_497);
                try {
                    long var_438 = var_439.var_440();
                    super.var_494(var_495);
                    if(var_485)
                        var_486.var_487(var_488.var_489("Took %dms for %s by %s",
                                var_439.var_440()-var_438, var_497, var_377));
                } finally {
                    var_499.var_500(var_377);
                    var_216.var_492();
                }
            }
        };

        new InitReactorRunner() {
            @var_380
            protected void method_24(InitMilestone param_21) {
                var_356 = var_501;
            }
        }.var_502(var_229);
    }


    public TcpSlaveAgentListener method_26() {
        return var_390;
    }

    
    public AdjunctManager method_27(String param_22) {
        return var_407;
    }

    @var_259
    public int method_28() {
        return var_394;
    }

    
    public void method_29(int param_23) throws IOException {
        this.var_394 = var_503;

        
        if(var_390==null) {
            if(var_394!=-1)
                var_390 = new TcpSlaveAgentListener(var_394);
        } else {
            if(var_390.var_504!=var_394) {
                var_390.var_505();
                var_390 = null;
                if(var_394!=-1)
                    var_390 = new TcpSlaveAgentListener(var_394);
            }
        }
    }

    public void method_30(String param_10) {
        throw new UnsupportedOperationException(); 
    }

    public String method_31() {
        return var_12.var_506();
    }

    @var_259
    public String method_32() {
        return var_353;
    }

    public PluginManager method_33() {
        return var_389;
    }

    public UpdateCenter method_34() {
        return var_428;
    }

    public boolean method_35() {
        return var_429==null || !var_429;
    }

    public void method_36(Boolean param_18) throws IOException {
        this.var_429 = var_429;
        var_507();
    }

    public View.People method_38() {
        return new View.People(this);
    }

    
    public View.AsynchPeople method_39() {
        return new View.AsynchPeople(this);
    }

    
    public boolean method_40() {
        return var_56.var_508.var_509(var_358.var_510());
    }

    public Api method_41() {
        return new Api(this);
    }

    
    public String method_42() {
        return var_427;
    }

    
    public SecretKey method_43() {
        return var_94.var_512(var_427);
    }

    
    @var_437("deprecation")
    public String method_44() {
        return var_94.var_513(var_511());
    }

    
    public Descriptor<SCM> method_45(String param_24) {
        return var_515(var_514,var_121.var_479());
    }

    
    public Descriptor<RepositoryBrowser<?>> method_47(String param_24) {
        return var_515(var_514,var_120.var_479());
    }

    
    public Descriptor<Builder> method_48(String param_24) {
        return var_515(var_514, var_156.var_479());
    }

    
    public Descriptor<BuildWrapper> method_49(String param_24) {
        return var_515(var_514, var_155.var_479());
    }

    
    public Descriptor<Publisher> method_50(String param_24) {
        return var_515(var_514, var_157.var_479());
    }

    
    public TriggerDescriptor method_51(String param_24) {
        return (TriggerDescriptor) var_515(var_514, var_160.var_479());
    }

    
    public Descriptor<RetentionStrategy<?>> method_52(String param_24) {
        return var_515(var_514, var_153.var_479());
    }

    
    public JobPropertyDescriptor method_53(String param_24) {
        
        Descriptor var_516 = var_515(var_514, var_39.var_479());
        return (JobPropertyDescriptor) var_516;
    }

    
    public ComputerSet method_54() {
        return new ComputerSet();
    }

    
    @var_437({"unchecked", "rawtypes"}) 
    public Descriptor method_55(String param_26) {
        
        Iterable<Descriptor> var_520 = var_175.var_521(var_406(Descriptor.class), var_76.var_522());
        for (Descriptor var_516 : var_520) {
            if (var_516.var_523().var_379(var_519)) {
                return var_516;
            }
        }
        Descriptor var_524 = null;
        for (Descriptor var_516 : var_520) {
            String var_377 = var_516.var_523();
            if (var_377.var_525(var_377.var_526('.') + 1).var_379(var_519)) {
                if (var_524 == null) {
                    var_524 = var_516;
                } else {
                    throw new IllegalArgumentException(var_519 + " is ambiguous; matches both " + var_377 + " and " + var_524.var_523());
                }
            }
        }
        return var_524;
    }

    
    public Descriptor method_56(String param_26) {
        return var_518(var_519);
    }

    
    public Descriptor method_55(Class<? extends Describable> param_28) {
        for( Descriptor var_516 : var_406(Descriptor.class) )
            if(var_516.var_528==var_527)
                return var_516;
        return null;
    }

    
    public Descriptor method_57(Class<? extends Describable> param_28) {
        Descriptor var_516 = var_518(var_527);
        if (var_516==null)
            throw new AssertionError(var_527+" is missing its descriptor");
        return var_516;
    }

    
    public <T extends Descriptor> T method_58(Class<T> param_28) {
        for( Descriptor var_516 : var_406(Descriptor.class) )
            if(var_516.var_490()==var_527)
                return var_527.var_529(var_516);
        return null;
    }

    
    public Descriptor<SecurityRealm> method_59(String param_24) {
        return var_515(var_514,var_139.var_479());
    }

    
    private <T extends Describable<T>>
    Descriptor<T> method_46(String param_24, Collection<? extends Descriptor<T>> param_27) {
        String var_377 = '.'+var_514;
        for (Descriptor<T> var_516 : var_520) {
            if(var_516.var_528.var_412().var_530(var_377))
                return var_516;
        }
        return null;
    }

    protected void method_20() throws IOException {
        var_476(var_531);
    }

    
    public CopyOnWriteList<SCMListener> method_60() {
        return var_393;
    }

    
    public Plugin method_61(String param_30) {
        PluginWrapper var_534 = var_389.var_532(var_533);
        if(var_534==null)     return null;
        return var_534.var_532();
    }

    
    @var_437("unchecked")
    public <P extends Plugin> P method_61(Class<P> param_29) {
        PluginWrapper var_534 = var_389.var_532(var_528);
        if(var_534==null)     return null;
        return (P) var_534.var_532();
    }

    
    public <P extends Plugin> List<P> method_62(Class<P> param_29) {
        List<P> var_415 = new ArrayList<P>();
        for (PluginWrapper var_536: var_389.var_535(var_528)) {
            var_415.var_409((P)var_536.var_532());
        }
        return var_302.var_537(var_415);
    }

    
    public String method_63() {
        return var_353;
    }

    
    public MarkupFormatter method_64() {
        return var_354!=null ? var_354 : var_114.var_359;
    }

    
    public void method_65(MarkupFormatter param_31) {
        this.var_354 = var_538;
    }

    
    public void method_66(String param_32) throws IOException {
        this.var_353 = var_539;
        var_507();
    }

    public FederatedLoginService method_67(String param_10) {
        for (FederatedLoginService var_540 : var_130.var_479()) {
            if (var_540.var_541().var_379(var_377))
                return var_540;
        }
        return null;
    }

    public List<FederatedLoginService> method_68() {
        return var_130.var_479();
    }

    public Launcher method_69(TaskListener param_33) {
        return new LocalLauncher(var_542).var_543(this);
    }


    public String method_70() {
        return "";
    }

    public String method_71() {
        return "";
    }

    
    public List<Action> method_72() {
        return var_402;
    }

    
    @var_259(var_377="jobs")
    public List<TopLevelItem> method_73() {
		if (var_344 instanceof AuthorizationStrategy.Unsecured ||
			var_344 instanceof FullControlOnceLoggedInAuthorizationStrategy) {
			return new ArrayList(var_358.var_510());
		}

        List<TopLevelItem> var_547 = new ArrayList<TopLevelItem>();
        for (TopLevelItem var_410 : var_358.var_510()) {
            if (var_410.var_548(var_33.var_549))
                var_547.var_409(var_410);
        }
		
        return var_547;
    }

    
    public Map<String,TopLevelItem> method_75() {
        return var_302.var_550(var_358);
    }

    
    public <T> List<T> method_73(Class<T> param_28) {
        List<T> var_551 = new ArrayList<T>();
        for (TopLevelItem var_420 : var_546())
            if (var_527.var_552(var_420))
                 var_551.var_409(var_527.var_529(var_420));
        return var_551;
    }

    
    public <T extends Item> List<T> method_76(Class<T> param_28) {
        List<T> var_551 = new ArrayList<T>();

        Stack<ItemGroup> var_554 = new Stack<ItemGroup>();
        var_554.var_555(this);

        while(!var_554.var_556()) {
            ItemGroup<?> var_557 = var_554.var_558();
            for (Item var_420 : var_557.var_546()) {
                if(var_527.var_552(var_420)) {
                    if (var_420.var_548(var_33.var_549))
                        var_551.var_409(var_527.var_529(var_420));
                }
                if(var_420 instanceof ItemGroup)
                    var_554.var_555((ItemGroup)var_420);
            }
        }

        return var_551;
    }

    
    public List<Item> method_76() {
        return var_553(Item.class);
    }

    
    @var_559
    public List<Project> method_77() {
        return var_94.var_560(var_358.var_510(),Project.class);
    }

    
    public Collection<String> method_78() {
        List<String> var_561 = new ArrayList<String>();
        for (Job var_562 : var_553(Job.class))
            var_561.var_409(var_562.var_544());
        return var_561;
    }

    public List<Action> method_79() {
        return var_545();
    }

    
    public Collection<String> method_80() {
        List<String> var_561 = new ArrayList<String>();
        for (TopLevelItem var_562 : var_358.var_510())
            var_561.var_409(var_562.var_412());
        return var_561;
    }

    public View method_81(String param_10) {
        return var_387.var_563(var_377);
    }

    
    @var_259
    public Collection<View> method_82() {
        return var_387.var_564();
    }

    public void method_83(View param_34) throws IOException {
        var_387.var_565(var_566);
    }

    public boolean method_84(View param_35) {
        return var_387.var_567(var_568);
    }

    public synchronized void method_85(View param_35) throws IOException {
        var_387.var_569(var_568);
    }

    public void method_86(View param_35, String param_36, String param_37) {
        var_387.var_570(var_568,var_571,var_572);
    }

    
    @var_259
    public View method_87() {
        return var_387.var_573();
     }

    public void method_88(View param_34) {
        this.var_386 = var_566.var_574();
    }

    public ViewsTabBar method_89() {
        return var_365;
    }

    public void method_90(ViewsTabBar param_6) {
        this.var_365 = var_365;
    }

    public Jenkins method_91() {
        return this;
   }

    public MyViewsTabBar method_92() {
        return var_366;
    }

    public void method_93(MyViewsTabBar param_7) {
        this.var_366 = var_366;
    }

    
    public boolean method_94(VersionNumber param_34) {
        try {
            return new VersionNumber(var_338).var_575(var_566);
        } catch (IllegalArgumentException var_452) {}
    }

    
    public Computer[] method_95() {
        Computer[] var_551 = var_372.var_510().var_577(new Computer[var_372.var_421()]);
        var_300.var_578(var_551,new Comparator<Computer>() {
            final Collator var_579 = var_298.var_382();
            public int method_96(Computer param_38, Computer param_39) {
                if(var_581.var_583()==var_335.this)  return -1;
                if(var_582.var_583()==var_335.this)  return 1;
                return var_579.var_580(var_581.var_498(), var_582.var_498());
            }
        });
        return var_551;
    }

    @var_105
    public Computer method_54(@var_243(var_584=true,var_585="NAME",var_586="Node name") String param_10) {
        if(var_377.var_379("(master)"))
            var_377 = "";

        for (Computer var_378 : var_372.var_510()) {
            if(var_378.var_412().var_379(var_377))
                return var_378;
        }
        return null;
    }

    
    public Label method_98(String param_40) {
        if(var_587==null)  return null;
        var_587 = var_7.var_162.var_588.var_589(var_587);
        while(true) {
            Label var_482 = var_60.var_423(var_587);
            if(var_482!=null)
                return var_482;

            
            try {
                var_60.var_590(var_587,var_40.var_591(var_587));
            } catch (ANTLRException var_452) {}
        }
    }

    
    public @var_334 LabelAtom method_99(@var_332 String param_10) {
        if (var_377==null)  return null;

        while(true) {
            Label var_482 = var_60.var_423(var_377);
            if(var_482!=null)
                return (LabelAtom)var_482;

            
            LabelAtom var_593 = new LabelAtom(var_377);
            if (var_60.var_590(var_377, var_593)==null)
                var_593.var_462();
        }
    }

    
    public Set<Label> method_100() {
        Set<Label> var_551 = new TreeSet<Label>();
        for (Label var_482 : var_60.var_510()) {
            if(!var_482.var_556())
                var_551.var_409(var_482);
        }
        return var_551;
    }

    public Set<LabelAtom> method_101() {
        Set<LabelAtom> var_551 = new TreeSet<LabelAtom>();
        for (Label var_482 : var_60.var_510()) {
            if(!var_482.var_556() && var_482 instanceof LabelAtom)
                var_551.var_409((LabelAtom)var_482);
        }
        return var_551;
    }

    public Queue method_102() {
        return var_336;
    }

    @var_380
    public String method_23() {
        return var_12.var_595();
    }

    public List<JDK> method_103() {
        if(var_363==null)
            var_363 = new ArrayList<JDK>();
        return var_363;
    }

    
    public JDK method_104(String param_10) {
        if(var_377==null) {
            
            List<JDK> var_363 = var_596();
            if(var_363.var_421()==1)  return var_363.var_423(0);
            return null;
        }
        for (JDK var_562 : var_596()) {
            if(var_562.var_412().var_379(var_377))
                return var_562;
        }
        return null;
    }



    
    public @var_332 Node method_97(String param_10) {
        return var_142.var_583(var_377);
    }

    
    public Cloud method_105(String param_10) {
        return var_373.var_376(var_377);
    }

    protected Map<Node,Computer> method_106() {
        return var_372;
    }

    
    public List<Node> method_107() {
        return var_142;
    }

    
    public synchronized void method_108(Node param_41) throws IOException {
        if(var_597==null)     throw new IllegalArgumentException();
        ArrayList<Node> var_598 = new ArrayList<Node>(this.var_142);
        if(!var_598.var_599(var_597)) 
            var_598.var_409(var_597);
        var_600(var_598);
    }

    
    public synchronized void method_110(@var_333 Node param_41) throws IOException {
        Computer var_378 = var_597.var_477();
        if (var_378!=null)
            var_378.var_601(var_152.var_369(var_12.var_602()));

        ArrayList<Node> var_598 = new ArrayList<Node>(this.var_142);
        var_598.var_603(var_597);
        var_600(var_598);
    }

    public void method_109(List<? extends Node> param_42) throws IOException {
        this.var_142 = new NodeList(var_604);
        var_476();
        var_383();
        var_507();
    }

    public DescribableList<NodeProperty<?>, NodePropertyDescriptor> method_111() {
    	return var_403;
    }

    public DescribableList<NodeProperty<?>, NodePropertyDescriptor> method_112() {
    	return var_404;
    }

    
    private void method_7() {
        for (Iterator<Label> var_606 = var_60.var_510().var_607(); var_606.var_608();) {
            Label var_482 = var_606.var_609();
            var_610(var_482);
            if(var_482.var_556())
                var_606.var_603();
        }
    }

    
    public AdministrativeMonitor method_113(String param_26) {
        for (AdministrativeMonitor var_611 : var_405)
            if(var_611.var_519.var_379(var_519))
                return var_611;
        return null;
    }

    public NodeDescriptor method_55() {
        return var_612.var_359;
    }

    public static final class class_2 extends NodeDescriptor {
        @var_77
        public static final DescriptorImpl var_359 = new DescriptorImpl();

        public String method_23() {
            return "";
        }

        @var_380
        public boolean method_114() {
            return false;
        }

        public FormValidation method_115(@var_251 String param_44) {
            return var_171.var_614(var_613);
        }

        public FormValidation method_116(@var_251 String param_44) {
            if (!var_613.var_599("${")) {
                File var_516 = new File(var_613);
                if (!var_516.var_615() && (var_516.var_616() == null || !var_516.var_616().var_617())) {
                    return var_171.var_618(var_613 + " does not exist and probably cannot be created");
                }
                
            }
            return var_171.var_619(); 
        }

        
        public Object method_117(String param_45) {
            return var_335.var_382().var_518(var_620);
        }
    }

    
    public int method_118() {
        return var_384!=null ? var_384 : 5;
    }

    
    public void method_119(Integer param_11) throws IOException {
        this.var_384 = var_384;
        var_507();
    }

    
    public int method_120() {
        return var_385;
    }

    public void method_121(int param_12) throws IOException {
        this.var_385 = var_385;
        var_507();
    }

    @var_380
    public String method_122() {
        return "";
    }

    @var_380
    public SearchIndexBuilder method_123() {
        return super.var_621()
            .var_409("configure", "config","configure")
            .var_409("manage")
            .var_409("log")
            .var_409(new CollectionSearchIndex<TopLevelItem>() {
                protected SearchItem method_15(String param_8) { return var_622(var_368); }
                protected Collection<TopLevelItem> method_21() { return var_546(); }
            })
            .var_409(var_573().var_621())
            .var_409(new CollectionSearchIndex() {
                protected Computer method_15(String param_8) { return var_517(var_368); }
                protected Collection<Computer> method_21() { return var_372.var_510(); }
            })
            .var_409(new CollectionSearchIndex() {
                protected User method_15(String param_8) { return var_55.var_423(var_368,false); }
                protected Collection<User> method_21() { return var_55.var_623(); }
            })
            .var_409(new CollectionSearchIndex() {
                protected View method_15(String param_8) { return var_563(var_368); }
                protected Collection<View> method_21() { return var_186; }
            });
    }

    public String method_125() {
        return "job";
    }

    
    public String method_126() {
        String var_625 = var_626.var_423().var_417();
        if(var_625!=null) {
            return var_94.var_627(var_625,"/");
        }
        StaplerRequest var_414 = var_252.var_628();
        if(var_414!=null)
            return var_629();
        return null;
    }

    
    public boolean method_128() {
        String var_625 = var_624();
        return var_625!=null && var_625.var_630("https");
    }

    
    public String method_127() {
        StaplerRequest var_414 = var_252.var_628();
        StringBuilder var_631 = new StringBuilder();
        var_631.var_632(var_414.var_633()+":
        buf.append(req.getServerName());
        if(req.getServerPort()!=80)
            buf.append(':').append(req.getServerPort());
        buf.append(req.getContextPath()).append('/');
        return buf.toString();
    }

    public File getRootDir() {
        return root;
    }

    public FilePath getWorkspaceFor(TopLevelItem item) {
        for (WorkspaceLocator l : WorkspaceLocator.all()) {
            FilePath workspace = l.locate(item, this);
            if (workspace != null) {
                return workspace;
            }
        }
 
        return new FilePath(expandVariablesForDirectory(workspaceDir, item));
    }

    public File getBuildDirFor(Job job) {
        return expandVariablesForDirectory(buildsDir, job);
    }

    private File expandVariablesForDirectory(String base, Item item) {
        return new File(Util.replaceMacro(base, ImmutableMap.of(
                "var_634", var_454().var_635(),
                "ITEM_ROOTDIR", var_410.var_454().var_635(),
                "ITEM_FULLNAME", var_410.var_544(),   
                "ITEM_FULL_NAME", var_410.var_544().var_636(':','$')))); 
    }
    
    public String method_129() {
        return var_350;
    }

    public String method_130() {
        return var_352;
    }

    public FilePath method_131() {
        return new FilePath(var_454());
    }

    @var_380
    public FilePath method_132(String param_46) {
        return new FilePath((VirtualChannel)null,var_638);
    }

    public ClockDifference method_133() {
        return var_165.var_639;
    }

    
    public LogRecorderManager method_134() {
        var_640(var_641);
        return var_431;
    }

    
    @var_259
    public boolean method_135() {
        return var_346!=var_139.var_347 || var_344!=var_129.var_345;
    }
    
    public boolean method_136(){
        return var_348 != var_198.var_349;
    }

    
    @var_259
    public boolean method_137() {
        return var_396!=null;
    }

    
    public SecurityMode method_138() {
        
        SecurityRealm var_643 = var_346;

        if(var_643==var_139.var_347)
            return var_138.var_345;
        if(var_643 instanceof LegacySecurityRealm)
            return var_138.var_644;
        return var_138.var_645;
    }

    
    public SecurityRealm method_139() {
        return var_346;
    }

    public void method_140(SecurityRealm param_4) {
        if(var_346==null)
            var_346= var_139.var_347;
        this.var_343 = true;
        this.var_346 = var_346;
        
        try {
            HudsonFilter var_648 = var_132.var_423(var_401);
            if (var_648 == null) {
                
                
                var_486.var_649("HudsonFilter has not yet been initialized: Can't perform security setup for now");
            } else {
                var_486.var_649("HudsonFilter has been previously initialized: Setting security up");
                var_648.var_650(var_346);
                var_486.var_649("Security is now fully set up");
            }
        } catch (ServletException var_452) {};
        }
    }

    public void method_141(AuthorizationStrategy param_47) {
        if (var_651 == null)
            var_651 = var_129.var_345;
        var_343 = true;
        var_344 = var_651;
    }

    public void method_142() {
        var_343 = null;
        var_647(var_139.var_347);
        var_344 = var_129.var_345;
        var_354 = null;
    }

    public void method_143(ProjectNamingStrategy param_48) {
        if(var_652 == null){
            var_652 = var_198.var_349;
        }
        var_348 = var_652;
    }
    
    public Lifecycle method_144() {
        return var_110.var_423();
    }

    
    public Injector method_145() {
        return var_337(Injector.class);
    }

    
    @var_437({"unchecked"})
    public <T> ExtensionList<T> method_9(Class<T> param_49) {
        return var_367.var_423(var_653);
    }

    
    public ExtensionList method_9(String param_49) throws ClassNotFoundException {
        return var_406(var_389.var_464.var_654(var_653));
    }

    
    @var_437({"unchecked"})
    public <T extends Describable<T>,D extends Descriptor<T>> DescriptorExtensionList<T,D> method_146(Class<T> param_28) {
        return var_370.var_423(var_527);
    }

    
    public void method_147() throws ExtensionRefreshException {
        ExtensionList<ExtensionFinder> var_655 = var_406(ExtensionFinder.class);
        for (ExtensionFinder var_656 : var_655) {
            if (!var_656.var_657())
                throw new ExtensionRefreshException(var_656+" doesn't support refresh");
        }

        List<ExtensionComponentSet> var_658 = var_4.var_659();
        for (ExtensionFinder var_656 : var_655) {
            var_658.var_409(var_656.var_660());
        }
        ExtensionComponentSet var_661 = var_194.var_662(var_658).var_663();

        
        List<ExtensionComponent<ExtensionFinder>> var_664 = var_4.var_659(var_661.var_665(ExtensionFinder.class));
        while (!var_664.var_556()) {
            ExtensionFinder var_538 = var_664.var_603(var_664.var_421()-1).var_382();

            ExtensionComponentSet var_666 = var_194.var_667(var_538).var_663();
            var_664.var_668(var_666.var_665(ExtensionFinder.class));
            var_661 = var_194.var_662(var_661, var_666);
        }

        for (ExtensionList var_669 : var_367.var_510()) {
            var_669.var_660(var_661);
        }
        for (ExtensionList var_669 : var_370.var_510()) {
            var_669.var_660(var_661);
        }

        
        for (ExtensionComponent<RootAction> var_670 : var_661.var_665(RootAction.class)) {
            Action var_651 = var_670.var_382();
            if (!var_402.var_599(var_651)) var_402.var_409(var_651);
        }
    }

    
    @var_380
    public ACL method_148() {
        return var_344.var_671();
    }

    
    public AuthorizationStrategy method_149() {
        return var_344;
    }
    
    
    public ProjectNamingStrategy method_150() {
        return var_348 == null ? var_197.var_349 : var_348;
    }

    
    @var_259
    public boolean method_2() {
        return var_361;
    }

    
    public boolean method_151() {
        return var_362;
    }

    
    public InitMilestone method_152() {
        return var_356;
    }

    public void method_153(int param_41) throws IOException {
        this.var_339 = var_597;
        var_507();
    }



    
    public TopLevelItem method_124(String param_10) {
        if (var_377==null)    return null;
    	TopLevelItem var_410 = var_358.var_423(var_377);
        if (var_410==null)
            return null;
        if (!var_410.var_548(var_33.var_549)) {
            if (var_410.var_548(var_33.var_672)) {
                throw new AccessDeniedException("Please login to access job " + var_377);
            }
            return null;
        }
        return var_410;
    }

    
    public Item method_124(String param_50, ItemGroup param_1) {
        if (var_215==null)  var_215 = this;
        if (var_673==null) return null;

        if (var_673.var_630("/"))   
            return var_674(var_673);

        Object var_675 = var_215;

        StringTokenizer var_676 = new StringTokenizer(var_673,"/");
        while (var_676.var_677()) {
            String var_678 = var_676.var_679();
            if (var_678.var_379("..")) {
                if (var_675 instanceof Item) {
                    var_675 = ((Item)var_675).var_680();
                    continue;
                }

                var_675=null;    
                break;
            }
            if (var_678.var_379(".")) {
                continue;
            }

            if (var_675 instanceof ItemGroup) {
                ItemGroup var_681 = (ItemGroup) var_675;
                Item var_420 = var_681.var_622(var_678);
                if (var_420==null || !var_420.var_548(var_33.var_549)) { 
                    var_675=null;    
                    break;
                }
                var_675=var_420;
            } else {
                return null;
            }
        }

        if (var_675 instanceof Item)
            return (Item)var_675;

        
        return var_674(var_673);
    }

    public final Item method_124(String param_50, Item param_1) {
        return var_622(var_673,var_215!=null?var_215.var_680():null);
    }

    public final <T extends Item> T method_124(String param_50, ItemGroup param_1, Class<T> param_28) {
        Item var_551 = var_622(var_673, var_215);
        if (var_527.var_552(var_551))
            return var_527.var_529(var_551);
        return null;
    }

    public final <T extends Item> T method_124(String param_50, Item param_1, Class<T> param_28) {
        return var_622(var_673,var_215!=null?var_215.var_680():null,var_527);
    }

    public File method_12(TopLevelItem param_51) {
        return var_413(var_682.var_412());
    }

    private File method_12(String param_10) {
        return new File(new File(var_454(),"jobs"), var_377);
    }

    
    public @var_332 <T extends Item> T method_154(String param_52, Class<T> param_28) {
        StringTokenizer var_676 = new StringTokenizer(var_683,"/");
        ItemGroup var_557 = this;

        if(!var_676.var_677()) return null;    

        while(true) {
            Item var_410 = var_557.var_622(var_676.var_679());
            if(!var_676.var_677()) {
                if(var_527.var_552(var_410))
                    return var_527.var_529(var_410);
                else
                    return null;
            }

            if(!(var_410 instanceof ItemGroup))
                return null;    

            if (!var_410.var_548(var_33.var_549))
                return null; 

            var_557 = (ItemGroup) var_410;
        }
    }

    public @var_332 Item method_154(String param_52) {
        return var_674(var_683,Item.class);
    }

    
    public @var_332 User method_155(String param_10) {
        return var_55.var_423(var_377,var_548(var_641));
    }

    public synchronized TopLevelItem method_156( TopLevelItemDescriptor param_28, String param_10 ) throws IOException {
        return var_684(var_527, var_377, true);
    }

    public synchronized TopLevelItem method_156( TopLevelItemDescriptor param_28, String param_10, boolean param_53 ) throws IOException {
        return var_408.var_684(var_527,var_377,var_685);
    }

    
    public synchronized void method_157(TopLevelItem param_15) throws IOException, InterruptedException {
        String var_377 = var_410.var_412();
        TopLevelItem var_686 = var_358.var_423(var_377);
        if (var_686 ==var_410)  return; 

        var_640(var_33.var_687);
        if (var_686!=null)
            var_686.var_688();
        var_358.var_411(var_377,var_410);
        var_63.var_689(var_410);
    }

    
    public synchronized <T extends TopLevelItem> T method_156( Class<T> param_28, String param_10 ) throws IOException {
        return var_527.var_529(var_684((TopLevelItemDescriptor)var_518(var_527),var_377));
    }

    
    public void method_158(TopLevelItem param_54, String param_36, String param_37) throws IOException {
        var_358.var_603(var_571);
        var_358.var_411(var_572,var_690);

        for (View var_566 : var_186)
            var_566.var_691(var_690, var_571, var_572);
        var_507();
    }

    
    public void method_159(TopLevelItem param_15) throws IOException {
        for (ItemListener var_482 : var_63.var_479())
            var_482.var_692(var_410);

        var_358.var_603(var_410.var_412());
        for (View var_566 : var_186)
            var_566.var_691(var_410, var_410.var_412(), null);
        var_507();
    }

    public FingerprintMap method_160() {
        return var_388;
    }

    
    public Object method_161( String param_55 ) throws IOException {
        Fingerprint var_551 = var_388.var_423(var_693);
        if(var_551==null)     return new NoFingerprintMatch(var_693);
        else            return var_551;
    }

    
    public Fingerprint method_162( String param_55 ) throws IOException {
        return var_388.var_423(var_693);
    }

    
    private XmlFile method_163() {
        return new XmlFile(var_695, new File(var_355,"config.xml"));
    }

    public int method_164() {
        return var_339;
    }

    public Mode method_165() {
        return var_340;
    }

    public void method_166(Mode param_43) throws IOException {
        this.var_340 = var_611;
        var_507();
    }

    public String method_167() {
        return var_96(var_395).var_696();
    }

    @var_380
    public void method_168(String param_14) throws IOException {
        this.var_395 = var_395;
        var_507();
    }

    @var_380
    public LabelAtom method_169() {
        return var_592("master");
    }

    public Computer method_170() {
        return new Hudson.MasterComputer();
    }

    private synchronized TaskBuilder method_18() throws IOException {
        File var_697 = new File(var_355,"jobs");
        if(!var_697.var_698().var_615() && !var_697.var_699()) {
            if(var_697.var_444())
                throw new IOException(var_697+" is not a directory");
            throw new IOException();
        }
        File[] var_700 = var_697.var_701(new FileFilter() {
            public boolean method_171(File param_51) {
                return var_682.var_615() && var_36.var_694(var_682).var_444();
            }
        });

        final Set<String> var_702 = var_302.var_703(new HashSet<String>());

        TaskGraphBuilder var_681 = new TaskGraphBuilder();
        Handle var_704 = var_681.var_705(var_706).var_707(var_708).var_409("Loading global config", new Executable() {
            public void method_25(Reactor param_56) throws Exception {
                
                
                NodeList var_709 = var_142;
                
                XmlFile var_710 = var_694();
                if (var_710.var_444()) {
                    
                    
                    var_386 = null;
                    var_186.var_711();

                    
                    var_710.var_712(var_335.this);
                }

                
                if (var_142 == null) var_142 = new NodeList();

                var_373.var_713(var_335.this);

                
                
                if (var_709 != null) {
                    ArrayList<Node> var_714 = new ArrayList<Node>(var_142);
                    for (Node var_597: var_709) {
                        if (var_597 instanceof EphemeralNode) {
                            if(!var_714.var_599(var_597)) {
                                var_714.var_409(var_597);
                            }
                        }
                    }
                    var_600(var_714);
                }
            }
        });

        for (final File var_715 : var_700) {
            var_681.var_705(var_704).var_707(var_708).var_716().var_409("Loading job "+var_715.var_412(),new Executable() {
                public void method_25(Reactor param_56) throws Exception {
                    TopLevelItem var_410 = (TopLevelItem) var_36.var_462(var_335.this, var_715);
                    var_358.var_411(var_410.var_412(), var_410);
                    var_702.var_409(var_410.var_412());
                }
            });
        }

        var_681.var_705(var_708).var_409("Cleaning up old builds",new Executable() {
            public void method_25(Reactor param_2) throws Exception {
                
                
                

                
                
                for (String var_377 : var_358.var_717()) {
                    if (!var_702.var_599(var_377))
                        var_358.var_603(var_377);
                }
            }
        });

        var_681.var_705(var_708).var_409("Finalizing set up",new Executable() {
            public void method_25(Reactor param_56) throws Exception {
                var_718();

                {
                    for (Node var_719 : var_142)
                        
                        var_719.var_720();
                    var_720();
                }

                
                
                if(var_186.var_421()==0 || var_386==null) {
                    View var_566 = new AllView(var_12.var_721());
                    var_722(var_566);
                    var_186.var_409(0,var_566);
                    var_386 = var_566.var_574();
                }

                
                if(var_344==null) {
                    if(var_343==null || !var_343)
                        var_344 = var_129.var_345;
                    else
                        var_344 = new LegacyAuthorizationStrategy();
                }
                if(var_346==null) {
                    if(var_343==null || !var_343)
                        var_647(var_139.var_347);
                    else
                        var_647(new LegacySecurityRealm());
                } else {
                    
                    var_647(var_346);
                }

                if(var_343!=null && !var_343) {
                    
                    
                    var_344 = var_129.var_345;
                    var_647(var_139.var_347);
                }

                
                var_723(var_396);

                
                for (Action var_651 : var_406(RootAction.class))
                    if (!var_402.var_599(var_651)) var_402.var_409(var_651);
            }
        });

        return var_681;
    }

    
    public synchronized void method_37() throws IOException {
        if(var_74.var_599(this))   return;
        var_694().var_460(this);
        var_65.var_724(this, var_694());
    }


    
    @var_432.var_433.var_434.var_435.var_436.var_437("ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD")
    public void method_174() {
        for (ItemListener var_482 : var_63.var_479())
            var_482.var_726();

        Set<Future<?>> var_727 = new HashSet<Future<?>>();
        var_362 = true;
        for( Computer var_378 : var_372.var_510() ) {
            var_378.var_728();
            var_729(var_378);
            var_727.var_409(var_378.var_601(null));
        }
        if(var_391!=null)
            var_391.var_505();
        if(var_392!=null)
            var_392.var_730();
        var_731();
        Timer var_449 = var_160.var_449;
        if (var_449 != null) {
            var_449.var_732();
        }
        
        var_160.var_449 = null;
        if(var_390!=null)
            var_390.var_505();

        if(var_389!=null) 
            var_389.var_733();

        if(var_454().var_444())
            
            
            var_594().var_507();

        var_734.var_505();
        for (Future<?> var_538 : var_727)
            try {
                var_538.var_423(10, var_325.var_735);    
            } catch (InterruptedException var_452) {} catch (ExecutionException var_452) {} catch (TimeoutException var_452) {}

        var_227.var_736();

        var_360 = null;
    }

    public Object method_117(String param_45) {
        for (Action var_651 : var_545()) {
            String var_625 = var_651.var_541();
            if (var_625==null)  continue;
            if (var_625.var_379(var_620) || var_625.var_379('/' + var_620))
                return var_651;
        }
        for (Action var_651 : var_737())
            if(var_651.var_541().var_379(var_620))
                return var_651;
        return null;
    }







    
    public synchronized void method_176( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        BulkChange var_739 = new BulkChange(this);
        try {
            var_640(var_641);

            JSONObject var_206 = var_414.var_740();

            var_350 = var_206.var_741("rawWorkspaceDir");
            var_352 = var_206.var_741("rawBuildsDir");

            var_353 = var_94.var_742(var_414.var_743("system_message"));

            var_363.var_711();
            var_363.var_668(var_414.var_744(JDK.class,var_206.var_423("jdks")));

            boolean var_415 = true;
            for (Descriptor<?> var_516 : var_81.var_745())
                var_415 &= var_746(var_414,var_206,var_516);

            var_338 = var_747;

            var_507();
            var_476();
            if(var_415)
                var_170.var_748(var_414.var_425()+'/').var_749(var_414, var_738, null);
            else
                var_170.var_748("configure").var_749(var_414, var_738, null);    
        } finally {
            var_739.var_750();
        }
    }

    
    public CrumbIssuer method_178() {
        return var_396;
    }

    public void method_173(CrumbIssuer param_58) {
        var_396 = var_752;
    }

    public synchronized void method_179( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_738.var_753("foo");
    }

    private boolean method_177(StaplerRequest param_16, JSONObject param_0, Descriptor<?> param_25) throws FormException {
        
        String var_377 = var_516.var_754();
        JSONObject var_755 = var_206.var_756(var_377) ? var_206.var_757(var_377) : new JSONObject(); 
        var_206.var_758(var_755);
        return var_516.var_759(var_414, var_755);
    }

    
    public synchronized void method_180( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        var_640(var_641);

        BulkChange var_739 = new BulkChange(this);
        try {
            JSONObject var_206 = var_414.var_740();

            MasterBuildConfiguration var_761 = var_762.var_479().var_423(MasterBuildConfiguration.class);
            if (var_761!=null)
                var_761.var_759(var_414,var_206);

            var_605().var_763(var_414, var_206.var_764("nodeProperties"), var_149.var_479());
        } finally {
            var_739.var_750();
        }

        var_738.var_753(var_414.var_425()+'/'+var_477().var_417());  
    }

    
    public synchronized void method_181( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_573().var_765(var_414, var_738);
    }

    public synchronized HttpRedirect method_182() throws IOException {
        try {
            return var_766(false,0);
        } catch (InterruptedException var_452) {}
    }

    @var_104(var_377="quiet-down")
    public HttpRedirect method_182(
            @var_244(var_377="-block",var_586="Block until the system really quiets down and no builds are running") @var_251 boolean param_59,
            @var_244(var_377="-timeout",var_586="If non-zero, only block up to the specified number of milliseconds") @var_251 int param_60) throws InterruptedException, IOException {
        synchronized (this) {
            var_640(var_641);
            var_361 = true;
        }
        if (var_767) {
            if (var_768 > 0) var_768 += var_439.var_440();
            while (var_361
                   && (var_768 <= 0 || var_439.var_440() < var_768)
                   && !var_47.var_769()) {
                var_446.var_770(1000);
            }
        }
        return new HttpRedirect();
    }

    @var_104(var_377="cancel-quiet-down")
    public synchronized HttpRedirect method_183() {
        var_640(var_641);
        var_361 = false;
        var_594().var_771();
        return new HttpRedirect();
    }

    
    public void method_184(StaplerResponse param_57) throws IOException, ServletException {
        var_738.var_772("threadDump");
    }

    
    public Map<String,Map<String,String>> method_185() throws IOException, InterruptedException {
        var_640(var_641);

        
        Map<String,Future<Map<String,String>>> var_773 = new HashMap<String, Future<Map<String, String>>>();

        for (Computer var_378 : var_576()) {
            try {
                var_773.var_411(var_378.var_412(), var_179.var_774(var_378.var_775()));
            } catch(Exception var_452) {}
        }
		if (var_477() == null) {
			var_773.var_411("master", var_179.var_774(var_776.var_777));
		}

        
        
        long var_778 = var_439.var_440() + 5000;

        Map<String,Map<String,String>> var_551 = new HashMap<String, Map<String, String>>();
        for (Entry<String, Future<Map<String, String>>> var_452 : var_773.var_779()) {
            try {
                var_551.var_411(var_452.var_780(), var_452.var_781().var_423(var_778-var_439.var_440(), var_325.var_782));
            } catch (Exception var_783) {}
        }
        return var_551;
    }

    public synchronized TopLevelItem method_187( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        return var_408.var_784(var_414, var_738);
    }

    
    public TopLevelItem method_188(String param_10, InputStream param_3) throws IOException {
        return var_408.var_785(var_377, var_268);
    }


    @var_437({"unchecked"})
    public <T extends TopLevelItem> T method_189(T param_61, String param_10) throws IOException {
        return var_408.var_786(var_787, var_377);
    }

    
    
    public <T extends AbstractProject<?,?>> T method_189(T param_61, String param_10) throws IOException {
        return (T)var_786((TopLevelItem)var_787,var_377);
    }

    public synchronized void method_190( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException, FormException {
        var_640(var_56.var_687);
        var_565(var_56.var_369(var_414,var_738, this));
    }

    
    public static void method_191(String param_10) throws Failure {
        if(var_377==null || var_377.var_789()==0)
            throw new Failure(var_12.var_790());

        if("..".var_379(var_377.var_696())) 
            throw new Failure(var_12.var_791(".."));
        for( int var_420=0; var_420<var_377.var_789(); var_420++ ) {
            char var_792 = var_377.var_793(var_420);
            if(var_794.var_795(var_792)) {
                throw new Failure(var_12.var_796(var_797(var_377)));
            }
            if("?*/\\%!@#$^&|<>[]:;".var_798(var_792)!=-1)
                throw new Failure(var_12.var_799(var_792));
        }

        
    }

    
    private String method_193(String param_10) throws Failure {
        var_788(var_377);
        var_377 = var_377.var_696();
        var_348.var_801(var_377);
        if(var_622(var_377)!=null)
            throw new Failure(var_12.var_802(var_377));
        
        return var_377;
    }

    private static String method_192(String param_10) {
        StringBuilder var_803 = new StringBuilder();
        for( int var_420=0; var_420<var_377.var_789(); var_420++ ) {
            char var_792 = var_377.var_793(var_420);
            if(var_794.var_795(var_792))
                var_803.var_632("\\u").var_632((int)var_792).var_632(';');
            else
                var_803.var_632(var_792);
        }
        return var_803.var_804();
    }

    
    public void method_194( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        if(var_414.var_805()==null) {
            
            var_738.var_806(var_280.var_807);
            return;
        }

        
        String var_808 = var_414.var_425()+var_414.var_809();
        String var_554 = var_414.var_810();
        if(var_554!=null)
            var_808 += '?'+var_554;

        var_738.var_772(var_808);
    }

    
    public void method_195( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException {
        if(var_414.var_805()==null) {
            var_738.var_772("noPrincipal");
            return;
        }

        String var_811 = var_414.var_743("from");
        if(var_811!=null && var_811.var_630("/") && !var_811.var_379("/loginError")) {
            var_738.var_772(var_811);    
            return;
        }

        String var_625 = var_221.var_812(var_414);
        if(var_625!=null) {
            
            
            var_738.var_772(var_625);
            return;
        }

        var_738.var_772(".");
    }

    
    public void method_196( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_346.var_813(var_414, var_738);
    }

    
    public Slave.JnlpJar method_197(String param_62) {
        return new Slave.JnlpJar(var_814);
    }

    public Slave.JnlpJar method_198(StaplerRequest param_16) {
        return new Slave.JnlpJar(var_414.var_815().var_525(1));
    }

    
    @var_104(var_377="reload-configuration")
    public synchronized HttpResponse method_199() throws IOException {
        var_640(var_641);

        
        var_401.var_816("app", new HudsonIsLoading());

        new Thread() {
            @var_380
            public void method_25() {
                try {
                    var_127.var_441(var_127.var_442);
                    var_817();
                } catch (Exception var_452) {}
            }
        }.var_438();

        return var_249.var_818("/");
    }

    
    public void method_200() throws IOException, InterruptedException, ReactorException {
        var_468(null, var_470());
        var_55.var_817();
        var_401.var_816("app", this);
    }

    
    public void method_201( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        
        MultipartFormDataParser var_534 = new MultipartFormDataParser(var_414);
        if(var_642() && !var_751().var_819(var_414, var_534)) {
            var_738.var_820(var_280.var_821,"No crumb found");
        }
        try {
            var_738.var_772(var_414.var_425()+"/fingerprint/"+
                var_94.var_513(var_534.var_822("name").var_823())+'/');
        } finally {
            var_534.var_725();
        }
    }

    
    @var_432.var_433.var_434.var_435.var_436.var_437("DM_GC")
    public void method_202(StaplerResponse param_57) throws IOException {
        var_640(var_335.var_641);
        var_439.var_824();
        var_738.var_806(var_280.var_825);
        var_738.var_826("text/plain");
        var_738.var_827().var_828("GCed");
    }

    
    public void method_203() {
        throw new RuntimeException();
    }

    public ContextMenu method_204(StaplerRequest param_63, StaplerResponse param_64) throws IOException, JellyException {
        ContextMenu var_831 = new ContextMenu().var_811(this, var_829, var_830);
        for (MenuItem var_420 : var_831.var_358) {
            if (var_420.var_625.var_379(var_829.var_425() + "/manage")) {
                
                var_420.var_832 = new ContextMenu().var_811(this, var_829, var_830, "manage");
            }
        }
        return var_831;
    }

    
    public HeapDump method_205() throws IOException {
        return new HeapDump(this,var_776.var_777);
    }

    
    public void method_206() throws IOException {
        var_640(var_641);

        List<Object> var_833 = new ArrayList<Object>();
        while (true)
            var_833.var_409(new byte[1048576]);
    }

    private transient final Map<UUID,FullDuplexHttpChannel> var_834 = new HashMap<UUID, FullDuplexHttpChannel>();

    
    public void method_207(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, InterruptedException {
        if (!"POST".var_379(var_414.var_835())) {
            
            var_640(var_549);
            var_414.var_563(this,"_cli.jelly").var_836(var_414,var_738);
            return;
        }

        
        

        UUID var_837 = var_316.var_838(var_414.var_839("Session"));
        var_738.var_840("Hudson-Duplex",""); 

        FullDuplexHttpChannel var_841;
        if(var_414.var_839("Side").var_379("download")) {
            var_834.var_411(var_837,var_841=new FullDuplexHttpChannel(var_837, !var_548(var_641)) {
                protected void method_208(Channel param_65) throws IOException, InterruptedException {
                    
                    var_842.var_843(var_100.var_844,var_845());
                    var_842.var_843(CliEntryPoint.class.var_412(),new CliManagerImpl(var_842));
                }
            });
            try {
                var_841.var_846(var_414,var_738);
            } finally {
                var_834.var_603(var_837);
            }
        } else {
            var_834.var_423(var_837).var_847(var_414,var_738);
        }
    }

    
    public DirectoryBrowserSupport method_210() {
        return new DirectoryBrowserSupport(this,var_637().var_682("userContent"),"User content","folder.png",true);
    }

    
    @var_104(var_377="restart")
    public void method_211(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, RestartNotSupportedException {
        var_640(var_641);
        if (var_414 != null && var_414.var_835().var_379("GET")) {
            var_414.var_563(this,"_restart.jelly").var_836(var_414,var_738);
            return;
        }

        var_848();

        if (var_738 != null) 
            var_738.var_772(".");
    }

    
    @var_104(var_377="safe-restart")
    public HttpResponse method_213(StaplerRequest param_16) throws IOException, ServletException, RestartNotSupportedException {
        var_640(var_641);
        if (var_414 != null && var_414.var_835().var_379("GET"))
            return var_249.var_849(this,"_safeRestart.jelly");

        var_850();

        return var_249.var_851();
    }

    
    public void method_212() throws RestartNotSupportedException {
        final Lifecycle var_109 = var_110.var_423();
        var_109.var_852(); 
        var_401.var_816("app", new HudsonIsRestarting());

        new Thread() {
            final String var_853 = var_845().var_412();
            @var_380
            public void method_25() {
                try {
                    var_127.var_441(var_127.var_442);

                    
                    var_446.var_770(5000);
                    var_486.var_854(var_488.var_489("Restarting VM as requested by %s",var_853));
                    for (RestartListener var_542 : var_47.var_479())
                        var_542.var_855();
                    var_109.var_848();
                } catch (InterruptedException var_452) {} catch (IOException var_452) {}
            }
        }.var_438();
    }

    
    public void method_214() throws RestartNotSupportedException {
        final Lifecycle var_109 = var_110.var_423();
        var_109.var_852(); 
        
        var_361 = true;

        new Thread() {
            final String var_853 = var_845().var_412();
            @var_380
            public void method_25() {
                try {
                    var_127.var_441(var_127.var_442);

                    
                    var_766(true, 0);

                    
                    if (var_361) {
                        var_401.var_816("app",new HudsonIsRestarting());
                        
                        var_486.var_487("Restart in 10 seconds");
                        var_446.var_770(10000);
                        var_486.var_854(var_488.var_489("Restarting VM as requested by %s",var_853));
                        for (RestartListener var_542 : var_47.var_479())
                            var_542.var_855();
                        var_109.var_848();
                    } else {
                        var_486.var_487("Safe-restart mode cancelled");
                    }
                } catch (InterruptedException var_452) {} catch (IOException var_452) {}
            }
        }.var_438();
    }

    
    @var_104(var_377="shutdown")
    public void method_215( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException {
        var_640(var_641);
        var_486.var_854(var_488.var_489("Shutting down VM as requested by %s from %s",
                var_845().var_412(), var_414!=null?var_414.var_856():"???"));
        if (var_738!=null) {
            var_738.var_806(var_280.var_825);
            var_738.var_826("text/plain");
            PrintWriter var_536 = var_738.var_827();
            var_536.var_828("Shutting down");
            var_536.var_730();
        }

        var_439.var_473(0);
    }


    
    @var_104(var_377="safe-shutdown")
    public HttpResponse method_216(StaplerRequest param_16) throws IOException {
        var_640(var_641);
        var_361 = true;
        final String var_853 = var_845().var_412();
        final String var_857 = var_414!=null ? var_414.var_856() : "unknown";
        new Thread() {
            @var_380
            public void method_25() {
                try {
                    var_127.var_441(var_127.var_442);
                    var_486.var_854(var_488.var_489("Shutting down VM as requested by %s from %s",
                                                var_853, var_857));
                    
                    while (var_361
                           && (var_397.var_858() > var_397.var_859())) {
                        var_446.var_770(5000);
                    }
                    
                    if (var_361) {
                        var_725();
                        var_439.var_473(0);
                    }
                } catch (InterruptedException var_452) {}
            }
        }.var_438();

        return var_249.var_860("Shutting down as soon as all jobs are complete");
    }

    
    public static Authentication method_209() {
        Authentication var_651 = var_216.var_861().var_845();
        
        
        
        
        if(var_651==null)
            var_651 = var_862;
        return var_651;
    }

    
    public void method_217(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_863(var_414, var_738, var_414.var_563(this, "_script.jelly"));
    }

    
    public void method_218(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_863(var_414, var_738, var_414.var_563(this, "_scriptText.jelly"));
    }

    private void method_217(StaplerRequest param_16, StaplerResponse param_57, RequestDispatcher param_35) throws IOException, ServletException {
        
        var_640(var_864);

        String var_297 = var_414.var_743("script");
        if (var_297 != null) {
            try {
                var_414.var_816("output",
                        var_179.var_865(var_297, var_776.var_777));
            } catch (InterruptedException var_452) {}
        }

        var_568.var_836(var_414, var_738);
    }

    
    @var_265
    public void method_219(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        var_640(var_641);

        try {
            MetaClass var_866 = var_257.var_867().var_868(var_490());
            Script var_869 = var_866.var_870.var_871(JellyClassLoaderTearOff.class).var_872().var_873(new InputSource(var_414.var_874()));
            new JellyRequestDispatcher(this,var_869).var_836(var_414,var_738);
        } catch (JellyException var_452) {}
    }

    
    public void method_220( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        var_414.var_563(var_646(), "signup.jelly").var_836(var_414, var_738);
    }

    
    public void method_221( StaplerRequest param_16, StaplerResponse param_57 ) throws IOException, ServletException {
        String var_875 = var_414.var_810();
        if(var_875==null)
            throw new ServletException();
        Cookie var_876 = new Cookie("iconSize", var_81.var_877(var_875));
        var_876.var_878(9999999); 
        var_738.var_879(var_876);
        String var_880 = var_414.var_839("Referer");
        if(var_880==null)   var_880=".";
        var_738.var_772(var_880);
    }

    public void method_222(StaplerResponse param_57) throws IOException {
        var_29.var_881();
        var_738.var_806(var_280.var_825);
        var_738.var_826("text/plain");
        var_738.var_827().var_828("Invoked");
    }

    public void method_223(StaplerResponse param_57) throws IOException {
        var_67.var_881();
        var_738.var_806(var_280.var_825);
        var_738.var_826("text/plain");
        var_738.var_827().var_828("Invoked");
    }

    
    public FormValidation method_224(StaplerRequest param_63, @var_251 String param_44) {
        if(!var_613.var_379("(Default)"))
            
            
            return var_171.var_619();

        
        if(var_37.var_882(var_335.this))
            return var_171.var_619();
        else
            return var_171.var_883(var_12.var_884(var_829.var_425()));
    }

    
    public FormValidation method_225(@var_251 String param_44) {
        
        
        var_640(var_33.var_687);

        if(var_95(var_613)==null)
            return var_171.var_619();

        try {
            var_800(var_613);
            return var_171.var_619();
        } catch (Failure var_452) {}
    }

    
    public FormValidation method_226(@var_251 String param_44) {
        var_640(var_56.var_687);

        String var_568 = var_95(var_613);
        if(var_568==null) return var_171.var_619();

        if(var_563(var_568)==null)
            return var_171.var_619();
        else
            return var_171.var_618(var_12.var_885(var_568));
    }

    
    public void method_227(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
        String var_808 = var_414.var_815();
        
        
        
        var_808 = var_808.var_525(var_808.var_798('/',1)+1);

        int var_886 = var_808.var_526('.');
        String var_887 = var_808.var_525(var_886+1);
        if(var_888.var_599(var_887)) {
            URL var_625 = var_389.var_464.var_889(var_808);
            if(var_625!=null) {
                long var_890 = var_250.var_891 ? 0 : 365L * 24 * 60 * 60 * 1000; 
                var_738.var_892(var_414,var_625,var_890);
                return;
            }
        }
        var_738.var_820(var_280.var_283);
    }

    
    public static final Set<String> var_888 = new HashSet<String>(var_300.var_893(
        "js|css|jpeg|jpg|png|gif|html|htm".var_894("\\|")
    ));

    
    public FormValidation method_228(StaplerRequest param_63) throws IOException {
        
        final String var_895 = "\u57f7\u4e8b";
        final String var_613 = var_95(var_829.var_743("value"));
        if (!var_895.var_379(var_613))
            return var_171.var_896(var_12.var_897());
        return var_171.var_619();
    }

    
    public static boolean method_229() {
        return !"ISO-8859-1".var_898(var_439.var_899("file.encoding"));
    }

    
    public void method_172() {
        DependencyGraph var_900 = new DependencyGraph();
        var_900.var_901();
        
        
        var_364 = var_900;
    }

    public DependencyGraph method_230() {
        return var_364;
    }

    
    public List<ManagementLink> method_175() {
        return var_43.var_479();
    }

    
    public User method_231() {
        User var_902 = var_55.var_903();
        if (var_902 == null)
            throw new AccessDeniedException();
        return var_902;
    }

    
    public List<Widget> method_232() {
        return var_191;
    }

    public Object method_233() {
        try {
            var_640(var_549);
        } catch (AccessDeniedException var_452) {}
            }

            throw var_452;
        }
        return this;
    }

    
    public Collection<String> method_234() {
        Set<String> var_561 = new TreeSet<String>();
        var_561.var_409("jnlpJars"); 
        
        for (Action var_651 : var_545()) {
            if (var_651 instanceof UnprotectedRootAction) {
                var_561.var_409(var_651.var_541());
            }
        }
        return var_561;
    }

    
    public View method_235() {
        return var_573();
    }

    
    boolean method_236(String param_66, String param_67) {
        Collection<TopLevelItem> var_907 = var_358.var_510();
        
        
        
        for(TopLevelItem var_410 : var_907) {
            if(var_410.var_412().var_379(var_906)) {
                
                
                
                continue;
            }
            else if(var_905.var_379(var_410.var_498())) {
                return false;
            }
        }
        
        return true;
    }
    
    
    boolean method_237(String param_10, String param_67) {
        Item var_410 = var_622(var_377);
        
        if(null==var_410) {
            
            return true;
        }
        else if(var_410.var_412().var_379(var_906)) {
            
            
            return true;
        } 
        else {
            
            return false;
        }
    }
    
    
    public FormValidation method_238(@var_251 String param_66, 
            @var_251 String param_68) {
        var_905 = var_905.var_696();
        
        if(var_486.var_910(var_327.var_911)) {
            var_486.var_431(var_327.var_911, "Current job name is " + var_909);
        }
        
        if(!var_908(var_905, var_909)) {
            return var_171.var_912(var_12.var_913(var_905));
        }
        else if(!var_904(var_905, var_909)){
            return var_171.var_912(var_12.var_914(var_905));
        }
        else {
            return var_171.var_619();
        }
    }
    
    public static class class_3 extends Computer {
        protected var_776() {
            super(var_335.var_382());
        }

        
        @var_380
        public String method_11() {
            return "";
        }

        @var_380
        public boolean method_239() {
            return false;
        }

        @var_380
        public String method_23() {
            return var_12.var_915();
        }

        @var_380
        public String method_240() {
            return var_12.var_916();
        }

        @var_380
        public String method_14() {
            return "computer/(master)/";
        }

        public RetentionStrategy method_52() {
            return var_153.var_917;
        }

        
        @var_380
        public HttpResponse method_241() throws IOException {
            throw var_249.var_918(var_282);
        }

        @var_380
        public void method_176(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException, FormException {
            var_335.var_382().var_760(var_414, var_738);
        }

        @var_380
        public boolean method_74(Permission param_69) {
            
            
            if(var_919==var_20.var_920)
                return false;
            
            return super.var_548(var_919==var_20.var_921 ? var_335.var_641 : var_919);
        }

        @var_380
        public VirtualChannel method_186() {
            return var_777;
        }

        @var_380
        public Charset method_242() {
            return var_295.var_922();
        }

        public List<LogRecord> method_243() throws IOException, InterruptedException {
            return var_923;
        }

        public void method_244(StaplerRequest param_16, StaplerResponse param_57) throws IOException, ServletException {
            
            
            var_738.var_820(var_283);
        }

        protected Future<?> method_245(boolean param_70) {
            return var_172.var_924(null);
        }

        
        public static final LocalChannel var_777 = new LocalChannel(var_925);
    }

    
    public static <T> T method_1(Class<T> param_28) {
        return var_335.var_382().var_337.var_423(var_527);
    }

    
    public static List<LogRecord> var_923 = var_302.var_926(); 

    
    public static final XStream var_695 = new XStream2();

    
    public static final XStream2 var_927 = (XStream2)var_695;

    private static final int var_928 = var_929.var_930(4, var_931.var_932().var_933() * 2);

    
     transient final ExecutorService var_734 = new ThreadPoolExecutor(
        var_928, var_928,
        5L, var_325.var_735, new LinkedBlockingQueue<Runnable>(), new DaemonThreadFactory());


    private static void method_16(ServletContext param_1) {
        
        Properties var_934 = new Properties();
        try {
            InputStream var_445 = Jenkins.class.var_935("jenkins-version.properties");
            if(var_445!=null)
                var_934.var_462(var_445);
        } catch (IOException var_452) {}
        String var_936 = var_934.var_899("version");
        if(var_936==null)   var_936="?";
        var_747 = var_936;
        var_215.var_816("version",var_936);

        var_937 = var_94.var_513(var_936).var_525(0, 8);
        var_465 = var_94.var_513(var_936+var_439.var_440()).var_525(0, 8);

        if(var_936.var_379("?") || var_938.var_939("hudson.script.noCache"))
            var_940 = "";
        else
            var_940 = "/static/"+var_465;

        var_941 = "/resources/"+ var_465;
    }

    
    public static String var_747="?";

    
    public static VersionNumber method_246() {
        try {
            return new VersionNumber(var_747);
        } catch (NumberFormatException var_452) {} catch (NumberFormatException _) {}

            
            return null;
        } var_942 (IllegalArgumentException var_452) {}
    }

    
    public static String var_937;

    
    public static String var_465;

    
    public static String var_940 = "";

    
    public static String var_941 = "/resources/TBD";

    public static boolean var_943 = var_944.var_945("parallelLoad", true);
    public static boolean var_472 = var_944.var_945("killAfterLoad", false);
    
    public static boolean var_946 = var_944.var_945("flyweightSupport", true);

    
    @var_239(NoExternalUse.class)
    public static boolean var_947 = true;

    
    private static final String var_351 = var_944.var_948("workspaceDirName", "workspace");

    
    public static boolean var_531 = true;

    private static final Logger var_486 = var_330.var_949(Jenkins.class.var_412());

    public static final PermissionGroup var_950 = var_135.var_951;
    public static final Permission var_641 = var_135.var_952;
    public static final Permission var_549 = new Permission(var_950,"Read",var_12.var_953(),var_135.var_549,var_137.var_954);
    public static final Permission var_864 = new Permission(var_950, "RunScripts", var_12.var_955(),var_641,var_137.var_954);

    
    public static final Authentication var_862 = new AnonymousAuthenticationToken()});

    static {
        var_695.var_956("jenkins",Jenkins.class);
        var_695.var_956("slave", DumbSlave.class);
        var_695.var_956("jdk",JDK.class);
        
        var_695.var_956("view", ListView.class);
        var_695.var_956("listView", ListView.class);
        
        Mode.class.var_957();

        
        assert var_950!=null;
        assert var_641!=null;
    }

}
