

import var_0.var_1;
import var_0.var_2;
import var_0.var_3.var_4.var_5;
import var_0.var_6.var_7;
import var_0.var_8.var_9;
import var_0.var_8.var_10;
import var_0.var_11.var_12;
import var_13.var_14.var_15;

import var_13.var_14.var_16;
import var_13.var_11.var_17;
import var_13.var_11.var_18.var_19;
import var_20.var_3.var_21;

import var_22.var_23.var_24.var_25;
import var_26.var_27.var_28.var_29;
import var_26.var_27.var_28.var_30.var_31;

import var_26.var_27.var_32.var_33;
import var_26.var_27.var_32.var_34.var_35;
import var_26.var_27.var_32.var_34.var_36;


@var_36(var_37=3)
public abstract class class_0 implements Serializable {

    private static final Logger var_39 = var_19.var_40(ParameterValue.class.var_41());

    protected final String var_42;

    private String var_43;

    protected var_38(String param_0, String param_1) {
        this.var_42 = var_42;
        this.var_43 = var_43;
    }

    protected var_38(String param_0) {
        this(var_42, null);
    }

    public String method_1() {
        return var_43;
    }

    public void method_2(String param_1) {
        this.var_43 = var_43;
    }

    @var_29(DoNotUse.class) 
    public String method_3() {
        try {
            return var_21.var_44().var_45().var_46(var_43);
        } catch (IOException var_47) {}
    }

    
    @var_35
    public final String method_0() {
        return var_42;
    }

    
    @var_48
    public void method_4(AbstractBuild<?,?> param_2, Map<String,String> param_3) {
        if (var_51 instanceof EnvVars) {
            if (var_2.var_52(ParameterValue.class, var_53(), "buildEnvironment", Run.class, EnvVars.class)) {
                
                var_54(var_50, (EnvVars) var_51);
            } else if (var_2.var_52(ParameterValue.class, var_53(), "buildEnvVars", AbstractBuild.class, EnvVars.class)) {
                var_49(var_50, (EnvVars) var_51);
            }
        }
        
    }

    
    @var_48
    public void method_4(AbstractBuild<?,?> param_2, EnvVars param_3) {
        if (var_2.var_52(ParameterValue.class, var_53(), "buildEnvironment", Run.class, EnvVars.class)) {
            var_54(var_50, var_51);
        } else {
            
            var_49(var_50,(Map<String,String>)var_51);
        }
    }

    
    public void method_5(Run<?,?> param_2, EnvVars param_3) {
        if (var_50 instanceof AbstractBuild) {
            var_49((AbstractBuild) var_50, var_51);
        }
        
    }

    
    public BuildWrapper method_6(AbstractBuild<?,?> param_2) {
        return null;
    }

    
    public VariableResolver<String> method_7(AbstractBuild<?,?> param_2) {
        return var_12.var_55;
    }

    

    
    @var_48
    public ParameterDefinition method_8() {
        throw new UnsupportedOperationException();
    }

    @var_56
    public int method_9() {
        final int var_58 = 31;
        int var_59 = 1;
        var_59 = var_58 * var_59 + ((var_42 == null) ? 0 : var_42.var_57());
        return var_59;
    }

    @var_56
    public boolean method_10(Object param_4) {
        if (this == var_61)
            return true;
        if (var_61 == null)
            return false;
        if (var_53() != var_61.var_53())
            return false;
        ParameterValue var_62 = (ParameterValue) var_61;
        if (var_42 == null) {
            if (var_62.var_42 != null)
                return false;
        } else if (!var_42.var_60(var_62.var_42))
            return false;
        return true;
    }

    
    public String method_11() {
        return var_63();
    }

    
    public boolean method_12() {
        return false;
    }

    
    public Object method_13() {
        return null;
    }

    
    public Label method_14(SubTask param_5) {
        return null;
    }
}
