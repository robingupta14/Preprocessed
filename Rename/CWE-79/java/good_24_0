
import var_0.var_1.*;
import var_0.var_2.*;
import var_0.var_3.var_4;
import var_0.var_3.var_5;
import var_0.var_6.*;

import var_7.var_8.var_9;
import var_7.var_3.var_10.var_11;
import var_7.var_12.*;
import var_7.var_12.var_13.*;

import var_14.var_15.var_16.var_17;
import var_14.var_15.var_18.*;
import var_14.var_15.var_19.var_20;
import var_14.var_15.var_19.var_21;
import var_14.var_15.var_22.*;
import var_14.var_15.var_6.*;
import var_14.var_23.var_24.var_25;
import var_14.var_23.var_24.var_26;






public class class_0 extends HttpServlet {

    private static final long var_28 = 42L;

    
    private ServletRequestHandler var_29, var_30;

    
    private BackendManager var_31;

    
    private LogHandler var_32;

    
    private HttpRequestHandler var_33;

    
    private Restrictor var_22;

    
    private String var_34;

    
    private DiscoveryMulticastResponder var_35;

    
    private boolean var_36;

    
    private boolean var_37;

    
    public var_27() {
        this(null);
    }

    
    public var_27(Restrictor param_1) {
        var_22 = var_38;
    }

    
    protected LogHandler method_0() {
        return var_32;
    }

    
    @var_39
    public void method_1(ServletConfig param_2) throws ServletException {
        super.var_40(var_41);

        Configuration var_18 = var_42(var_41);

        
        String var_43 =  var_18.var_44(var_45.var_46);
        var_32 = var_43 != null ?
                (LogHandler) var_47.var_48(var_43) :
                var_49(var_41,var_50.var_51(var_18.var_44(var_45.var_52)));

        
        var_29 = var_53();
        var_30 = var_54();

        if (var_22 == null) {
            var_22 = var_55(var_18);
        } else {
            var_32.var_56("Using custom access restriction provided by " + var_22);
        }
        var_34 = var_18.var_44(var_45.var_57);
        var_31 = new BackendManager(var_18,var_32, var_22);
        var_33 = new HttpRequestHandler(var_18,var_31,var_32);
        var_36 = var_18.var_58(var_45.var_59);
        var_37 = var_18.var_58(var_45.var_60);

        var_61(var_18);
    }

    
    protected Restrictor method_6(Configuration param_0) {
        return var_62.var_55(var_18, var_32);
    }

    private void method_8(Configuration param_3) {
        String var_64 = var_65(var_63);
        if (var_64 != null || var_66(var_63)) {
            var_31.var_67().var_68(var_64);
            try {
                var_35 = new DiscoveryMulticastResponder(var_31,var_22,var_32);
                var_35.var_69();
            } catch (IOException var_70) {}
        }
    }

    
    private String method_9(Configuration param_3) {
        
        String var_64 = var_71.var_72("jolokia." + var_45.var_73.var_74());
        if (var_64 == null) {
            var_64 = var_71.var_75("JOLOKIA_DISCOVERY_AGENT_URL");
            if (var_64 == null) {
                var_64 = var_63.var_44(var_45.var_73);
            }
        }
        return var_76.var_77(var_64);
    }

    
    private boolean method_10(Configuration param_3) {
        
        boolean var_78 = var_71.var_72("jolokia." + var_45.var_79.var_74()) != null;
        boolean var_80     = var_71.var_75("JOLOKIA_DISCOVERY") != null;
        boolean var_18  = var_63.var_58(var_45.var_79);
        return var_78 || var_80 || var_18;
    }
    
    protected LogHandler method_3(ServletConfig param_2, final boolean param_4) {
        return new LogHandler() {
            
            public void method_11(String param_5) {
                if (var_81) {
                    var_83(var_82);
                }
            }

            
            public void method_7(String param_5) {
                var_83(var_82);
            }

            
            public void method_12(String param_5, Throwable param_6) {
                var_83(var_82,var_85);
            }
        };
    }

    
    @var_39
    public void method_13() {
        var_31.var_86();
        if (var_35 != null) {
            var_35.var_87();
            var_35 = null;
        }
        super.var_86();
    }

    
    @var_39
    protected void method_14(HttpServletRequest param_7, HttpServletResponse param_8)
            throws ServletException, IOException {
        var_90(var_29, var_88, var_89);
    }

    
    @var_39
    protected void method_16(HttpServletRequest param_7, HttpServletResponse param_8)
            throws ServletException, IOException {
        var_90(var_30, var_88, var_89);
    }

    
    @var_39
    protected void method_17(HttpServletRequest param_7, HttpServletResponse param_8) throws ServletException, IOException {
        Map<String,String> var_91 =
                var_33.var_92(
                        var_88.var_93("Origin"),
                        var_88.var_93("Access-Control-Request-Headers"));
        for (Map.Entry<String,String> var_94 : var_91.var_95()) {
            var_89.var_96(var_94.var_97(),var_94.var_98());
        }
    }

    @var_99({ "PMD.AvoidCatchingThrowable", "PMD.AvoidInstanceofChecksInCatchClause" })
    private void method_15(ServletRequestHandler param_9,HttpServletRequest param_10, HttpServletResponse param_11) throws IOException {
        JSONAware var_23 = null;

        try {
            
            var_33.var_103(var_36 ? var_101.var_104() : null,
                                       var_101.var_105(),
                                       var_106(var_101));

            
            var_107(var_101);

            
            var_108(var_101);

            
            var_23 = var_109(var_100, var_101, var_102);
        } catch (Throwable var_110) {} catch (Throwable var_111) {}
        } var_112 {
            var_113(var_101, var_102);

            if (var_23 == null) {
                var_23 = var_33.var_114(new Exception());
            }

            var_115(var_102, var_101, var_23);
        }
    }


    private JSONAware method_21(final ServletRequestHandler param_9, final HttpServletRequest param_10, final HttpServletResponse param_11) throws IOException, PrivilegedActionException {
        Subject var_116 = (Subject) var_101.var_117(var_45.var_118);
        if (var_116 != null) {
            return var_11.var_119(var_116, new PrivilegedExceptionAction<JSONAware>() {
                    public JSONAware method_24() throws IOException {
                        return var_100.var_120(var_101, var_102);
                    }
            });
        } else {
            return var_100.var_120(var_101, var_102);
        }
    }

    private String method_18(HttpServletRequest param_10) {
        String var_121 = var_101.var_93("Origin");
        if (var_121 == null) {
            var_121 = var_101.var_93("Referer");
        }
        return var_121 != null ? var_121.var_122("[\\n\\r]*","") : null;
    }


    
    private void method_20(HttpServletRequest param_10) {
        
        AgentDetails var_123 = var_31.var_67();
        if (var_123.var_124()) {
            synchronized (var_123) {
                if (var_123.var_124()) {
                    if (var_123.var_125()) {
                        String var_64 = var_126(var_76.var_127(var_101.var_128().var_129()),
                                var_130(var_101));
                        var_123.var_68(var_64);
                    }
                    if (var_123.var_131()) {
                        var_123.var_132(var_101.var_133() != null);
                    }
                    var_123.var_134();
                }
            }
        }
    }

    private String method_27(HttpServletRequest param_10) {
        return var_101.var_135().var_136(0,var_101.var_137().var_138());
    }

    
    private String method_26(String param_12, String param_13) {
        String var_141;
        try {
            URL var_64 = new URL(var_139);
            String var_142 = var_143(var_64.var_144());
            var_141 = new URL(var_64.var_145(),var_142,var_64.var_146(),var_140).var_147();
        } catch (MalformedURLException var_110) {}
        return var_141;
    }

    
    private String method_28(String param_14) {
        try {
            InetAddress var_149 = var_150.var_151(var_148);
            return var_149.var_152();
        } catch (UnknownHostException var_70) {}
    }

    
    private String method_29(String param_12, String param_13) {
        int var_153 = var_139.var_154(var_140);
        String var_64;
        if (var_153 != -1) {
            var_64 = var_139.var_136(0,var_153) + var_140;
        } else {
            var_64 = var_139;
        }
        return var_64;
    }

    
    private void method_22(HttpServletRequest param_10, HttpServletResponse param_11) {
        String var_121 = var_33.var_155(var_101.var_93("Origin"));
        if (var_121 != null) {
            var_102.var_96("Access-Control-Allow-Origin", var_121);
            var_102.var_96("Access-Control-Allow-Credentials","true");
        }
    }

    private boolean method_30(HttpServletRequest param_10) {
        String var_157 = var_101.var_158(var_45.var_60.var_74());
        if (var_157 != null) {
            return var_50.var_159(var_157);
        }
        return var_37;
    }

    private interface interface_0 {
        
        JSONAware method_25(HttpServletRequest param_10, HttpServletResponse param_11)
                throws IOException;
    }

    
    private ServletRequestHandler method_5() {
        return new ServletRequestHandler() {
            
             public JSONAware method_25(HttpServletRequest param_10, HttpServletResponse param_11)
                    throws IOException {
                 String var_160 = var_101.var_161();
                 InputStream var_162 = var_101.var_163();
                 return var_33.var_164(var_101.var_135(),var_162, var_160, var_165(var_101));
             }
        };
    }

    
    private ServletRequestHandler method_4() {
        return new ServletRequestHandler() {
            
            public JSONAware method_25(HttpServletRequest param_10, HttpServletResponse param_11) {
                return var_33.var_166(var_101.var_135(),var_101.var_167(), var_165(var_101));
            }
        };
    }

    

    
    
    private Map<String, String[]> method_32(HttpServletRequest param_10){
        try {
            
            return var_101.var_165();
        } catch (UnsupportedOperationException var_110) {}
            return var_168;
        }
    }

    
    
    Configuration method_2(ServletConfig param_3) {
        Configuration var_18 = new Configuration(
                var_45.var_169, var_76.var_170(var_171(),"servlet"));
        
        var_18.var_172(new ServletConfigFacade(var_63));
        
        var_18.var_172(new ServletContextFacade(var_173()));

        
        var_18.var_172(var_174.var_175(var_45.var_176.var_74(),"servlet"));
        return var_18;
    }

    private void method_23(HttpServletResponse param_11, HttpServletRequest param_10, JSONAware param_15) throws IOException {
        String var_178 = var_101.var_158(var_45.var_179.var_74());

        var_180(var_102,
                       var_181.var_182(
                           var_101.var_158(var_45.var_57.var_74()),
                           var_34, var_178
                                                       ));
        var_102.var_183(var_184.var_185);
        var_186(var_102);
        if (var_177 == null) {
            var_102.var_187(-1);
        } else {
            if (var_156(var_101)) {
                var_188(var_102, var_178, (JSONStreamAware) var_177);
            } else {
                
                
                var_189(var_102, var_178, var_177);
            }
        }
    }

    private void method_19(HttpServletRequest param_10) {
        String var_178 = var_101.var_158(var_45.var_179.var_74());
        if (var_178 != null && !var_181.var_190(var_178)) {
            throw new IllegalArgumentException();
        }
    }
    private void method_35(HttpServletResponse param_11, String param_17, JSONStreamAware param_15) throws IOException {
        Writer var_192 = new OutputStreamWriter(var_102.var_193(), "UTF-8");
        var_194.var_195(var_192, var_177, var_191);
    }

    private void method_36(HttpServletResponse param_11, String param_16, JSONAware param_15) throws IOException {
        OutputStream var_196 = null;
        try {
            String var_23 = var_177.var_197();
            String var_198 = var_178 == null ? var_23 : var_178 + "(" + var_23 + ");";
            byte[] var_199 = var_198.var_200("UTF8");
            var_102.var_187(var_199.var_138);
            var_196 = var_102.var_193();
            var_196.var_201(var_199);
        } finally {
            if (var_196 != null) {
                
                
                var_196.var_202();
            }
        }
    }

    private void method_34(HttpServletResponse param_11) {
        var_102.var_96("Cache-Control", "no-cache");
        var_102.var_96("Pragma","no-cache");
        
        
        
        
        
        
        
        

        long var_203 = var_71.var_204();
        var_102.var_205("Date",var_203);
        
        
        
        
        var_102.var_205("Expires",var_203 - 3600000);
    }

    private void method_33(HttpServletResponse param_11, String param_18) {
        boolean var_207 = false;
        try {
            var_102.var_208("utf-8");
            var_102.var_180(var_206);
            var_207 = true;
        }
        catch (NoSuchMethodError var_84) {}
        catch (UnsupportedOperationException var_84) {}
        if (!var_207) {
            
            var_102.var_180(var_206 + "; charset=utf-8");
        }
    }

    
    


    
    private static final class class_1 implements ConfigExtractor {
        private final ServletConfig var_18;

        private var_209(ServletConfig param_3) {
            var_18 = var_63;
        }

        
        public Enumeration method_37() {
            return var_18.var_210();
        }

        
        public String method_31(String param_19) {
            return var_18.var_212(var_211);
        }
    }

    
    private static final class class_2 implements ConfigExtractor {
        private final ServletContext var_214;

        private var_213(ServletContext param_20) {
            var_214 = var_215;
        }

        
        public Enumeration method_37() {
            return var_214.var_210();
        }

        
        public String method_31(String param_19) {
            return var_214.var_212(var_211);
        }
    }
}
