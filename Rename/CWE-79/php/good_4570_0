<?php

if (!defined('_PS_VERSION_')) {
    var_0;
}

$var_1 = var_2 . '/vendor/autoload.php';
if (file_exists($var_1)) {
}


class class_0 extends var_3 implements var_4
{
    
    const var_5 = 'blocklayered';

    
    const var_6 = 5000;

    
    const var_7 = 20000;

    
    const var_8 = [
        'US',
    ];

    
    const var_9 = 5;

    
    private $var_10;

    
    private $var_11;

    
    private $var_12;

    
    private $var_13;

    public function fn_0()
    {
        $var_14->var_15 = 'ps_facetedsearch';
        $var_14->var_16 = 'front_office_features';
        $var_14->var_17 = '3.4.1';
        $var_14->var_18 = 'PrestaShop';
        $var_14->var_19 = 0;
        $var_14->var_20 = true;
        $var_14->var_10 = (bool) Tools::getValue('ajax');

        parent::fn_0();

        $var_14->var_21 = $var_14->trans('Faceted search', [], 'Modules.Facetedsearch.Admin');
        $var_14->var_23 = $var_14->trans('Displays a block allowing multiple filters.', [], 'Modules.Facetedsearch.Admin');
        $var_14->var_11 = Configuration::get('PS_LAYERED_FULL_TREE');
        $var_14->var_24 = ['min' => '1.7.1.0', 'max' => var_25];

        $var_14->var_13 = new class_1($var_14);
    }

    
    public function fn_1()
    {
        return (bool) $var_14->var_10;
    }

    
    public function fn_2()
    {
        if ($var_14->var_12 === null) {
            $var_14->var_12 = Db::getInstance();
        }

        return $var_14->var_12;
    }

    
    public function fn_3()
    {
        return $var_14->var_28;
    }

    protected function fn_4()
    {
        return [
            'layered_selection_subcategories' => [
                'label' => 'Sub-categories filter',
            ],
            'layered_selection_stock' => [
                'label' => 'Product stock filter',
            ],
            'layered_selection_condition' => [
                'label' => 'Product condition filter',
            ],
            'layered_selection_manufacturer' => [
                'label' => 'Product brand filter',
            ],
            'layered_selection_weight_slider' => [
                'label' => 'Product weight filter (slider)',
                'slider' => true,
            ],
            'layered_selection_price_slider' => [
                'label' => 'Product price filter (slider)',
                'slider' => true,
            ],
        ];
    }

    public function fn_5()
    {
        $var_30 = parent::fn_5()
                   && $var_14->registerHook($var_14->fn_6()->getAvailableHooks());

        
        if (!$var_30) {
            $var_14->fn_7();

            return false;
        }

        if ($var_14->fn_8()) {
            $var_14->fn_9();
            $var_14->fn_10();

            $var_14->fn_11();

            $var_14->fn_2()->execute('TRUNCATE TABLE ' . var_40 . 'layered_filter CHANGE `filters` `filters` LONGTEXT NULL');
            $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'friendly_url');
        } else {
            Configuration::updateValue('PS_LAYERED_SHOW_QTIES', 1);
            Configuration::updateValue('PS_LAYERED_FULL_TREE', 1);
            Configuration::updateValue('PS_LAYERED_FILTER_PRICE_USETAX', 1);
            Configuration::updateValue('PS_LAYERED_FILTER_CATEGORY_DEPTH', 1);
            Configuration::updateValue('PS_ATTRIBUTE_ANCHOR_SEPARATOR', '-');
            Configuration::updateValue('PS_LAYERED_FILTER_PRICE_ROUNDING', 1);
            Configuration::updateValue('PS_LAYERED_FILTER_SHOW_OUT_OF_STOCK_LAST', 0);
            Configuration::updateValue('PS_LAYERED_FILTER_BY_DEFAULT_CATEGORY', 0);

            $var_14->var_11 = 1;

            $var_14->fn_9();
            $var_14->fn_10();

            $var_41 = $var_14->fn_2()->getValue('SELECT COUNT(*) FROM `' . var_40 . 'product`');

            if ($var_41 < static::var_7) {
                $var_14->fn_12();
            }

            $var_14->fn_11();
            $var_14->fn_13();
            $var_14->fn_14();

            if ($var_41 < static::var_6) {
                $var_14->fn_15();
                $var_14->fn_16();
            }
        }

        return true;
    }

    public function fn_7()
    {
        
        Configuration::deleteByName('PS_LAYERED_SHOW_QTIES');
        Configuration::deleteByName('PS_LAYERED_FULL_TREE');
        Configuration::deleteByName('PS_LAYERED_INDEXED');
        Configuration::deleteByName('PS_LAYERED_FILTER_PRICE_USETAX');
        Configuration::deleteByName('PS_LAYERED_FILTER_CATEGORY_DEPTH');
        Configuration::deleteByName('PS_LAYERED_FILTER_PRICE_ROUNDING');
        Configuration::deleteByName('PS_LAYERED_FILTER_SHOW_OUT_OF_STOCK_LAST');
        Configuration::deleteByName('PS_LAYERED_FILTER_BY_DEFAULT_CATEGORY');

        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_category');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_filter');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_filter_block');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_filter_shop');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_attribute_group');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_attribute_group_lang_value');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_attribute_lang_value');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_feature');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_feature_lang_value');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_indexable_feature_value_lang_value');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_price_index');
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_product_attribute');

        return parent::fn_7();
    }

    
    private function fn_8()
    {
        if (!Module::isInstalled(self::var_5)) {
            return false;
        }
        $var_48 = Module::getInstanceByName(self::var_5);
        if ($var_48) {
            
            
            $var_49 = function () {
                return parent::fn_7();
            };
            $var_49 = $var_49->bindTo($var_48, get_class($var_48));
            $var_49();
        }

        return true;
    }

    
    public function fn_6()
    {
        return $var_14->var_13;
    }

    
    public function fn_16($var_51 = null)
    {
        if (null === $var_51) {
            $var_14->fn_2()->execute('TRUNCATE ' . var_40 . 'layered_product_attribute');
        } else {
            $var_14->fn_2()->execute(
                'DELETE FROM ' . var_40 . 'layered_product_attribute
                WHERE id_product = ' . (int) $var_51
            );
        }

        return $var_14->fn_2()->execute(
            'INSERT INTO `' . var_40 . 'layered_product_attribute` (`id_attribute`, `id_product`, `id_attribute_group`, `id_shop`)
            SELECT pac.id_attribute, pa.id_product, ag.id_attribute_group, product_attribute_shop.`id_shop`
            FROM ' . var_40 . 'product_attribute pa' .
            class_2::addSqlAssociation('product_attribute', 'pa') . '
            INNER JOIN ' . var_40 . 'product_attribute_combination pac ON pac.id_product_attribute = pa.id_product_attribute
            INNER JOIN ' . var_40 . 'attribute a ON (a.id_attribute = pac.id_attribute)
            INNER JOIN ' . var_40 . 'attribute_group ag ON ag.id_attribute_group = a.id_attribute_group
            ' . ($var_51 === null ? '' : 'AND pa.id_product = ' . (int) $var_51) . '
            GROUP BY a.id_attribute, pa.id_product , product_attribute_shop.`id_shop`'
        );
    }

    
    public function fn_17()
    {
        return $var_14->fn_2()->execute(
            'INSERT INTO `' . var_40 . 'layered_indexable_feature` ' .
            'SELECT id_feature, 1 FROM `' . var_40 . 'feature` ' .
            'WHERE id_feature NOT IN (SELECT id_feature FROM ' .
            '`' . var_40 . 'layered_indexable_feature`)'
        );
    }

    
    public function fn_18()
    {
        return $var_14->fn_2()->execute(
            'INSERT INTO `' . var_40 . 'layered_indexable_attribute_group` ' .
            'SELECT id_attribute_group, 1 FROM `' . var_40 . 'attribute_group` ' .
            'WHERE id_attribute_group NOT IN (SELECT id_attribute_group FROM ' .
            '`' . var_40 . 'layered_indexable_attribute_group`)'
        );
    }

    
    public function fn_15($var_52 = 0, $var_10 = false, $var_53 = false)
    {
        if ($var_52 == 0 && !$var_53) {
            $var_14->fn_11();
        }

        return $var_14->fn_19($var_52, true, $var_10, $var_53);
    }

    
    public function fn_20($var_52 = 0, $var_10 = false)
    {
        return $var_14->fn_19($var_52, false, $var_10);
    }

    
    public function fn_21($var_51, $var_53 = true)
    {
        static $var_56 = null;

        if ($var_56 === null) {
            $var_56 = $var_14->fn_2()->executeS('SELECT id_group FROM `' . var_40 . 'group_reduction`');
            if (!$var_56) {
                $var_56 = [];
            }
        }

        $var_58 = class_2::getShops(false, null, true);

        foreach ($var_58 as $var_59) {
            $var_60 = Currency::getCurrencies(false, 1, new class_2($var_59));

            $var_62 = [];
            $var_63 = [];

            if ($var_53) {
                $var_14->fn_2()->execute('DELETE FROM `' . var_40 . 'layered_price_index` WHERE `id_product` = ' . (int) $var_51 . ' AND `id_shop` = ' . (int) $var_59);
            }

            $var_64 = $var_14->fn_2()->executeS(
                'SELECT t.rate rate, tr.id_country, c.iso_code ' .
                'FROM `' . var_40 . 'product_shop` p ' .
                'LEFT JOIN `' . var_40 . 'tax_rules_group` trg ON  ' .
                '(trg.id_tax_rules_group = p.id_tax_rules_group AND p.id_shop = ' . (int) $var_59 . ') ' .
                'LEFT JOIN `' . var_40 . 'tax_rule` tr ON (tr.id_tax_rules_group = trg.id_tax_rules_group) ' .
                'LEFT JOIN `' . var_40 . 'tax` t ON (t.id_tax = tr.id_tax AND t.active = 1) ' .
                'JOIN `' . var_40 . 'country` c ON (tr.id_country=c.id_country AND c.active = 1) ' .
                'WHERE id_product = ' . (int) $var_51 . ' ' .
                'GROUP BY id_product, tr.id_country'
            );

            if (empty($var_64) || !Configuration::get('PS_LAYERED_FILTER_PRICE_USETAX')) {
                $var_65 = (int) Configuration::get('PS_COUNTRY_DEFAULT', null, null, $var_59);
                $var_66 = Country::getIsoById($var_65);
                $var_64 = [['rate' => 0, 'id_country' => $var_65, 'iso_code' => $var_66]];
            }

            $var_67 = $var_14->fn_2()->executeS(
                'SELECT id_shop, id_currency, id_country, id_group, from_quantity
                FROM `' . var_40 . 'specific_price`
                WHERE id_product = ' . (int) $var_51 . ' AND id_shop IN (0,' . (int) $var_59 . ')'
            );

            $var_68 = Country::getCountries($var_14->fn_3()->var_69->var_70, true, false, false);
            foreach ($var_68 as $var_71) {
                $var_65 = $var_71['id_country'];

                
                foreach ($var_60 as $var_72) {
                    if (!empty($var_67)) {
                        $var_62[$var_65][$var_72['id_currency']] = null;
                        $var_63[$var_65][$var_72['id_currency']] = null;
                        continue;
                    }

                    $var_73 = Product::priceCalculation(
                        $var_59,
                        (int) $var_51,
                        null,
                        $var_65,
                        null,
                        null,
                        $var_72['id_currency'],
                        null,
                        null,
                        false,
                        6, 
                        false,
                        false,
                        true,
                        $var_74,
                        true
                    );

                    $var_62[$var_65][$var_72['id_currency']] = $var_73;
                    $var_63[$var_65][$var_72['id_currency']] = $var_73;
                }

                foreach ($var_67 as $var_75) {
                    foreach ($var_60 as $var_72) {
                        if ($var_75['id_currency'] &&
                            $var_75['id_currency'] != $var_72['id_currency']
                        ) {
                            continue;
                        }

                        $var_73 = Product::priceCalculation(
                            $var_59,
                            (int) $var_51,
                            null,
                            $var_65,
                            null,
                            null,
                            $var_72['id_currency'],
                            (($var_75['id_group'] == 0) ? null : $var_75['id_group']),
                            $var_75['from_quantity'],
                            false,
                            6,
                            false,
                            true,
                            true,
                            $var_74,
                            true
                        );

                        if ($var_73 > $var_63[$var_65][$var_72['id_currency']]) {
                            $var_63[$var_65][$var_72['id_currency']] = $var_73;
                        }

                        if ($var_73 == 0) {
                            continue;
                        }

                        if (null === $var_62[$var_65][$var_72['id_currency']] || $var_73 < $var_62[$var_65][$var_72['id_currency']]) {
                            $var_62[$var_65][$var_72['id_currency']] = $var_73;
                        }
                    }
                }

                foreach ($var_56 as $var_76) {
                    foreach ($var_60 as $var_72) {
                        $var_73 = Product::priceCalculation(
                            $var_59,
                            (int) $var_51,
                            (int) $var_65,
                            null,
                            null,
                            null,
                            (int) $var_72['id_currency'],
                            (int) $var_76['id_group'],
                            null,
                            false,
                            6,
                            false,
                            true,
                            true,
                            $var_74,
                            true
                        );

                        if (!isset($var_63[$var_65][$var_72['id_currency']])) {
                            $var_63[$var_65][$var_72['id_currency']] = 0;
                        }

                        if (!isset($var_62[$var_65][$var_72['id_currency']])) {
                            $var_62[$var_65][$var_72['id_currency']] = null;
                        }

                        if ($var_73 == 0) {
                            continue;
                        }

                        if (null === $var_62[$var_65][$var_72['id_currency']] || $var_73 < $var_62[$var_65][$var_72['id_currency']]) {
                            $var_62[$var_65][$var_72['id_currency']] = $var_73;
                        }

                        if ($var_73 > $var_63[$var_65][$var_72['id_currency']]) {
                            $var_63[$var_65][$var_72['id_currency']] = $var_73;
                        }
                    }
                }
            }

            $var_77 = [];
            foreach ($var_64 as $var_78) {
                $var_79 = $var_78['rate'];
                $var_65 = $var_78['id_country'];
                foreach ($var_60 as $var_72) {
                    $var_80 = array_key_exists($var_65, $var_62) ? $var_62[$var_65][$var_72['id_currency']] : 0;
                    $var_81 = array_key_exists($var_65, $var_63) ? $var_63[$var_65][$var_72['id_currency']] : 0;
                    if (!in_array($var_78['iso_code'], self::var_8)) {
                        $var_80 = Tools::ps_round($var_80 * (100 + $var_79) / 100, self::var_9);
                        $var_81 = Tools::ps_round($var_81 * (100 + $var_79) / 100, self::var_9);
                    }

                    $var_77[] = '(' . (int) $var_51 . ',
                        ' . (int) $var_72['id_currency'] . ',
                        ' . $var_59 . ',
                        ' . $var_80 . ',
                        ' . $var_81 . ',
                        ' . (int) $var_65 . ')';
                }
            }

            if (!empty($var_77)) {
                $var_14->fn_2()->execute(
                    'INSERT INTO `' . var_40 . 'layered_price_index` (id_product, id_currency, id_shop, price_min, price_max, id_country)
                     VALUES ' . implode(',', $var_77) . '
                     ON DUPLICATE KEY UPDATE id_product = id_product' 
                );
            }
        }
    }

    
    public function fn_22()
    {
        global $var_82;
        $var_83 = '';

        if (Tools::isSubmit('SubmitFilter')) {
            if (!Tools::getValue('layered_tpl_name')) {
                $var_83 = $var_14->displayError($var_14->trans('Filter template name required (cannot be empty)', [], 'Modules.Facetedsearch.Admin'));
            } elseif (!Tools::getValue('categoryBox')) {
                $var_83 = $var_14->displayError($var_14->trans('You must select at least one category.', [], 'Modules.Facetedsearch.Admin'));
            } else {
                
                $var_85 = (int) Tools::getValue('id_layered_filter');
                if (Tools::getValue('scope')) {
                    $var_14->fn_2()->execute('TRUNCATE TABLE ' . var_40 . 'layered_filter');
                    $var_86 = $var_14->fn_2()->executeS(
                        'SELECT id_category FROM ' . var_40 . 'category'
                    );

                    foreach ($var_86 as $var_87) {
                        $var_92['categoryBox'][] = (int) $var_87['id_category'];
                    }
                }

                
                if (isset($var_92['checkBoxShopAsso_layered_filter'])) {
                    $var_58 = [];
                    foreach ($var_92['checkBoxShopAsso_layered_filter'] as $var_59 => $var_88) {
                        $var_98[] = ['id_shop' => (int) $var_59];
                        $var_58[] = (int) $var_59;
                    }
                } else {
                    $var_58 = [(int) $var_14->fn_3()->var_89->var_70];
                }

                if (!empty($var_92['categoryBox']) && is_array($var_92['categoryBox'])) {
                    
                    $var_92['categoryBox'] = array_map('intval', $var_92['categoryBox']);
                    $var_90 = [
                        'shop_list' => $var_58,
                    ];

                    foreach ($var_92['categoryBox'] as $var_91) {
                        $var_90['categories'][] = $var_91;
                    }

                    foreach ($var_92 as $var_93 => $var_94) {
                        if (!preg_match('~^(?P<key>layered_selection_.*)(?<!_filter_)(?<!type)(?<!show_limit)$~', $var_93, $var_95)) {
                            continue;
                        }

                        $var_90[$var_95['key']] = [
                            'filter_type' => (int) Tools::getValue($var_95['key'] . '_filter_type', 0),
                            'filter_show_limit' => (int) Tools::getValue($var_95['key'] . '_filter_show_limit', 0),
                        ];
                    }

                    $var_77 = [
                        'name' => pSQL(Tools::getValue('layered_tpl_name')),
                        'filters' => pSQL(serialize($var_90)),
                        'n_categories' => (int) count($var_90['categories']),
                    ];

                    if (!$var_85) {
                        $var_77['date_add'] = date('Y-m-d H:i:s');
                        $var_96 = 'INSERT INTO ' . var_40 . 'layered_filter ' .
                             '(name, filters, n_categories, date_add, id_layered_filter) ' .
                             'VALUES (' .
                             '"' . pSQL($var_77['name']) . '", ' .
                             '"' . $var_77['filters'] . '", ' .
                             '' . (int) $var_77['n_categories'] . ', ' .
                             '"' . pSQL($var_77['date_add']) . '", ' .
                             '' . $var_85 . ')';
                        $var_14->fn_2()->execute($var_96);
                        $var_85 = (int) $var_14->fn_2()->Insert_ID();
                    } else {
                        $var_14->fn_2()->execute(
                            'DELETE FROM ' . var_40 . 'layered_filter_shop WHERE `id_layered_filter` = ' . (int) $var_85
                        );
                        $var_96 = 'UPDATE ' . var_40 . 'layered_filter ' .
                             'SET name = "' . pSQL($var_77['name']) . '", ' .
                             'filters = "' . $var_77['filters'] . '", ' .
                             'n_categories = ' . (int) $var_77['n_categories'] . ' ' .
                             'WHERE id_layered_filter = ' . $var_85;
                        $var_14->fn_2()->execute($var_96);
                    }

                    if (isset($var_98)) {
                        foreach ($var_98 as $var_99) {
                            $var_14->fn_2()->execute(
                                'INSERT INTO ' . var_40 . 'layered_filter_shop (`id_layered_filter`, `id_shop`)
    VALUES(' . $var_85 . ', ' . (int) $var_99['id_shop'] . ')'
                            );
                        }
                    }

                    $var_14->fn_10();
                    $var_83 = $var_14->displayConfirmation(
                        $var_14->trans('Your filter', [], 'Modules.Facetedsearch.Admin') . ' "' .
                        Tools::safeOutput(Tools::getValue('layered_tpl_name')) . '" ' .
                        (
                            !empty($var_92['id_layered_filter']) ?
                            $var_14->trans('was updated successfully.', [], 'Modules.Facetedsearch.Admin') :
                            $var_14->trans('was added successfully.', [], 'Modules.Facetedsearch.Admin')
                        )
                    );
                }
            }
        } elseif (Tools::isSubmit('submitLayeredSettings')) {
            Configuration::updateValue('PS_LAYERED_SHOW_QTIES', (int) Tools::getValue('ps_layered_show_qties'));
            Configuration::updateValue('PS_LAYERED_FULL_TREE', (int) Tools::getValue('ps_layered_full_tree'));
            Configuration::updateValue('PS_LAYERED_FILTER_PRICE_USETAX', (int) Tools::getValue('ps_layered_filter_price_usetax'));
            Configuration::updateValue('PS_LAYERED_FILTER_CATEGORY_DEPTH', (int) Tools::getValue('ps_layered_filter_category_depth'));
            Configuration::updateValue('PS_LAYERED_FILTER_PRICE_ROUNDING', (int) Tools::getValue('ps_layered_filter_price_rounding'));
            Configuration::updateValue('PS_LAYERED_FILTER_SHOW_OUT_OF_STOCK_LAST', (int) Tools::getValue('ps_layered_filter_show_out_of_stock_last'));
            Configuration::updateValue('PS_LAYERED_FILTER_BY_DEFAULT_CATEGORY', (int) Tools::getValue('ps_layered_filter_by_default_category'));

            $var_14->var_11 = (int) Tools::getValue('ps_layered_full_tree');

            $var_83 = '<div class="alert alert-success">' . $var_14->trans('Settings saved successfully', [], 'Modules.Facetedsearch.Admin') . '</div>';
            $var_14->fn_23();
        } elseif (Tools::getValue('deleteFilterTemplate')) {
            $var_102 = $var_14->fn_2()->getValue(
                'SELECT filters
                FROM ' . var_40 . 'layered_filter
                WHERE id_layered_filter = ' . (int) Tools::getValue('id_layered_filter')
            );

            if ($var_102) {
                $var_14->fn_2()->execute(
                    'DELETE FROM ' . var_40 . 'layered_filter
                    WHERE id_layered_filter = ' . (int) Tools::getValue('id_layered_filter') . ' LIMIT 1'
                );
                $var_14->fn_10();
                $var_83 = $var_14->displayConfirmation($var_14->trans('Filter template deleted, categories updated (reverted to default Filter template).', [], 'Modules.Facetedsearch.Admin'));
            } else {
                $var_83 = $var_14->displayError($var_14->trans('Filter template not found', [], 'Modules.Facetedsearch.Admin'));
            }
        }

        $var_103 = [];
        $var_104 = $var_14->fn_2()->executeS(
            'SELECT ag.id_attribute_group, ag.is_color_group, agl.name, COUNT(DISTINCT(a.id_attribute)) n
            FROM ' . var_40 . 'attribute_group ag
            LEFT JOIN ' . var_40 . 'attribute_group_lang agl ON (agl.id_attribute_group = ag.id_attribute_group)
            LEFT JOIN ' . var_40 . 'attribute a ON (a.id_attribute_group = ag.id_attribute_group)
            WHERE agl.id_lang = ' . (int) $var_82->var_105 . '
            GROUP BY ag.id_attribute_group'
        );

        $var_106 = $var_14->fn_2()->executeS(
            'SELECT fl.id_feature, fl.name, COUNT(DISTINCT(fv.id_feature_value)) n
            FROM ' . var_40 . 'feature_lang fl
            LEFT JOIN ' . var_40 . 'feature_value fv ON (fv.id_feature = fl.id_feature)
            WHERE (fv.custom IS NULL OR fv.custom = 0) AND fl.id_lang = ' . (int) $var_82->var_105 . '
            GROUP BY fl.id_feature'
        );

        if (class_2::isFeatureActive() && count(class_2::getShops(true, null, true)) > 1) {
            $var_107 = new class_3();
            $var_107->var_70 = Tools::getValue('id_layered_filter', null);
            $var_107->var_108 = 'layered_filter';
            $var_107->var_109 = 'id_layered_filter';
            $var_14->var_28->var_110->assign('asso_shops', $var_107->renderAssoShop());
        }

        $var_113 = new class_4('categories-treeview');
        $var_113->setRootCategory((class_2::fn_3() == var_61::var_115 ? Category::getRootCategory()->var_116 : 0))
                                                                     ->setUseCheckBox(true);

        $var_118 = Tools::getProtocol(Tools::usingSecureMode()) . $_SERVER['HTTP_HOST'] . $var_14->getPathUri();

        if (method_exists($var_14->var_28->var_120, 'addJquery')) {
            $var_14->var_28->var_120->addJS(var_122 . 'jquery/plugins/jquery.sortable.js');
        }

        $var_14->var_28->var_120->addJS($var_14->var_123 . 'views/dist/back.js');
        $var_14->var_28->var_120->addCSS($var_14->var_123 . 'views/dist/back.css');

        if (Tools::getValue('add_new_filters_template')) {
            $var_14->var_28->var_110->assign([
                'current_url' => $var_14->var_28->var_125->getAdminLink('AdminModules') . '&configure=ps_facetedsearch&tab_module=front_office_features&module_name=ps_facetedsearch',
                'uri' => $var_14->getPathUri(),
                'id_layered_filter' => 0,
                'template_name' => sprintf($var_14->trans('My template - %s', [], 'Modules.Facetedsearch.Admin'), date('Y-m-d')),
                'attribute_groups' => $var_104,
                'features' => $var_106,
                'total_filters' => 6 + count($var_104) + count($var_106),
            ]);

            $var_14->var_28->var_110->assign('categories_tree', $var_113->fn_24());

            return $var_14->display(var_129, 'views/templates/admin/add.tpl');
        }

        if (Tools::getValue('edit_filters_template')) {
            $var_85 = (int) Tools::getValue('id_layered_filter');
            $var_130 = $var_14->fn_2()->getRow(
                'SELECT *
                FROM `' . var_40 . 'layered_filter`
                WHERE id_layered_filter = ' . $var_85
            );

            if (!empty($var_130)) {
                $var_132 = Tools::unSerialize($var_130['filters']);
                $var_113->setSelectedCategories($var_132['categories']);
                $var_14->var_28->var_110->assign('categories_tree', $var_113->fn_24());

                $var_134 = $var_132['shop_list'];
                unset($var_132['categories']);
                unset($var_132['shop_list']);

                $var_14->var_28->var_110->assign([
                    'current_url' => $var_14->var_28->var_125->getAdminLink('AdminModules') . '&configure=ps_facetedsearch&tab_module=front_office_features&module_name=ps_facetedsearch',
                    'uri' => $var_14->getPathUri(),
                    'id_layered_filter' => $var_85,
                    'template_name' => $var_130['name'],
                    'attribute_groups' => $var_104,
                    'features' => $var_106,
                    'filters' => $var_132,
                    'total_filters' => 6 + count($var_104) + count($var_106),
                    'default_filters' => $var_14->fn_4(),
                ]);

                return $var_14->display(var_129, 'views/templates/admin/view.tpl');
            }
        }

        $var_14->var_28->var_110->assign([
            'message' => $var_83,
            'uri' => $var_14->getPathUri(),
            'PS_LAYERED_INDEXED' => (int) Configuration::getGlobalValue('PS_LAYERED_INDEXED'),
            'current_url' => Tools::safeOutput(preg_replace('/&deleteFilterTemplate=[0-9]*&id_layered_filter=[0-9]*/', '', $_SERVER['REQUEST_URI'])),
            'id_lang' => $var_14->fn_3()->var_82->var_105,
            'token' => substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10),
            'base_folder' => urlencode(var_135),
            'price_indexer_url' => $var_118 . 'ps_facetedsearch-price-indexer.php' . '?token=' . substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10),
            'full_price_indexer_url' => $var_118 . 'ps_facetedsearch-price-indexer.php' . '?token=' . substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10) . '&full=1',
            'attribute_indexer_url' => $var_118 . 'ps_facetedsearch-attribute-indexer.php' . '?token=' . substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10),
            'clear_cache_url' => $var_118 . 'ps_facetedsearch-clear-cache.php' . '?token=' . substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10),
            'filters_templates' => $var_14->fn_2()->executeS('SELECT * FROM ' . var_40 . 'layered_filter ORDER BY date_add DESC'),
            'show_quantities' => Configuration::get('PS_LAYERED_SHOW_QTIES'),
            'full_tree' => $var_14->var_11,
            'category_depth' => Configuration::get('PS_LAYERED_FILTER_CATEGORY_DEPTH'),
            'price_use_tax' => (bool) Configuration::get('PS_LAYERED_FILTER_PRICE_USETAX'),
            'limit_warning' => $var_14->fn_25(21 + count($var_104) * 3 + count($var_106) * 3),
            'price_use_rounding' => (bool) Configuration::get('PS_LAYERED_FILTER_PRICE_ROUNDING'),
            'show_out_of_stock_last' => (bool) Configuration::get('PS_LAYERED_FILTER_SHOW_OUT_OF_STOCK_LAST'),
            'filter_by_default_category' => (bool) Configuration::get('PS_LAYERED_FILTER_BY_DEFAULT_CATEGORY'),
        ]);

        return $var_14->display(var_129, 'views/templates/admin/manage.tpl');
    }

    public function fn_25($var_137)
    {
        $var_138 = [];
        if ((ini_get('suhosin.post.max_vars') && ini_get('suhosin.post.max_vars') < $var_137) || (ini_get('suhosin.request.max_vars') && ini_get('suhosin.request.max_vars') < $var_137)) {
            $var_138['error_type'] = 'suhosin';
            $var_138['post.max_vars'] = ini_get('suhosin.post.max_vars');
            $var_138['request.max_vars'] = ini_get('suhosin.request.max_vars');
            $var_138['needed_limit'] = $var_137 + 100;
        } elseif (ini_get('max_input_vars') && ini_get('max_input_vars') < $var_137) {
            $var_138['error_type'] = 'conf';
            $var_138['max_input_vars'] = ini_get('max_input_vars');
            $var_138['needed_limit'] = $var_137 + 100;
        }

        return $var_138;
    }

    private function fn_26($var_140)
    {
        return $var_14->fn_2()->fn_26($var_140);
    }

    
    public function fn_9()
    {
        @set_time_limit(0);

        
        $var_141 = Tools::getMemoryLimit();
        if ($var_141 != -1 && $var_141 < 134217728) {
            @ini_set('memory_limit', '128M');
        }

        
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS ' . var_40 . 'layered_category');

        $var_14->fn_2()->execute(
            'CREATE TABLE IF NOT EXISTS `' . var_40 . 'layered_category` (
            `id_layered_category` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            `id_shop` INT(11) UNSIGNED NOT NULL,
            `id_category` INT(10) UNSIGNED NOT NULL,
            `id_value` INT(10) UNSIGNED NULL DEFAULT \'0\',
            `type` ENUM(\'category\',\'id_feature\',\'id_attribute_group\',\'quantity\',\'condition\',\'manufacturer\',\'weight\',\'price\') NOT NULL,
            `position` INT(10) UNSIGNED NOT NULL,
            `filter_type` int(10) UNSIGNED NOT NULL DEFAULT 0,
            `filter_show_limit` int(10) UNSIGNED NOT NULL DEFAULT 0,
            KEY `id_category_shop` (`id_category`, `id_shop`, `type`, id_value, `position`),
            KEY `id_category` (`id_category`,`type`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        $var_14->fn_2()->execute(
            'CREATE TABLE IF NOT EXISTS `' . var_40 . 'layered_filter` (
            `id_layered_filter` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
            `name` VARCHAR(64) NOT NULL,
            `filters` LONGTEXT NULL,
            `n_categories` INT(10) UNSIGNED NOT NULL,
            `date_add` DATETIME NOT NULL
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        $var_14->fn_2()->execute(
            'CREATE TABLE IF NOT EXISTS `' . var_40 . 'layered_filter_block` (
            `hash` CHAR(32) NOT NULL DEFAULT "" PRIMARY KEY,
            `data` TEXT NULL
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        $var_14->fn_2()->execute(
            'CREATE TABLE IF NOT EXISTS `' . var_40 . 'layered_filter_shop` (
            `id_layered_filter` INT(10) UNSIGNED NOT NULL,
            `id_shop` INT(11) UNSIGNED NOT NULL,
            PRIMARY KEY (`id_layered_filter`, `id_shop`),
            KEY `id_shop` (`id_shop`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );
    }

    
    public function fn_12($var_143 = [], $var_144 = [], $var_145 = true)
    {
        @set_time_limit(0);

        $var_146 = ['categories' => []];

        
        $var_141 = Tools::getMemoryLimit();
        if ($var_141 != -1 && $var_141 < 134217728) {
            @ini_set('memory_limit', '128M');
        }

        $var_147 = $var_14->fn_2();
        $var_148 = [];
        $var_149 = [];

        $var_150 = 'product_shop';
        $var_151 = class_2::addSqlAssociation('product', 'p');
        $var_152 = class_2::addSqlAssociation('product_attribute', 'pa');

        $var_104 = $var_14->fn_26(
            'SELECT a.id_attribute, a.id_attribute_group
            FROM ' . var_40 . 'attribute a
            LEFT JOIN ' . var_40 . 'product_attribute_combination pac ON (pac.id_attribute = a.id_attribute)
            LEFT JOIN ' . var_40 . 'product_attribute pa ON (pa.id_product_attribute = pac.id_product_attribute)
            LEFT JOIN ' . var_40 . 'product p ON (p.id_product = pa.id_product)
            ' . $var_151 . $var_152 . '
            LEFT JOIN ' . var_40 . 'category_product cp ON (cp.id_product = p.id_product)
            LEFT JOIN ' . var_40 . 'category c ON (c.id_category = cp.id_category)
            WHERE c.active = 1' .
            (count($var_144) ? ' AND cp.id_category IN (' . implode(',', array_map('intval', $var_144)) . ')' : '') . '
            AND ' . $var_150 . '.active = 1 AND ' . $var_150 . '.`visibility` IN ("both", "catalog")
            ' . (count($var_143) ? 'AND p.id_product IN (' . implode(',', array_map('intval', $var_143)) . ')' : '')
        );

        $var_153 = [];
        while ($var_88 = $var_147->nextRow($var_104)) {
            $var_153[(int) $var_88['id_attribute']] = (int) $var_88['id_attribute_group'];
        }

        $var_106 = $var_14->fn_26(
            'SELECT fv.id_feature_value, fv.id_feature
            FROM ' . var_40 . 'feature_value fv
            LEFT JOIN ' . var_40 . 'feature_product fp ON (fp.id_feature_value = fv.id_feature_value)
            LEFT JOIN ' . var_40 . 'product p ON (p.id_product = fp.id_product)
            ' . $var_151 . '
            LEFT JOIN ' . var_40 . 'category_product cp ON (cp.id_product = p.id_product)
            LEFT JOIN ' . var_40 . 'category c ON (c.id_category = cp.id_category)
            WHERE (fv.custom IS NULL OR fv.custom = 0) AND c.active = 1' . (count($var_144) ? ' AND cp.id_category IN (' . implode(',', array_map('intval', $var_144)) . ')' : '') . '
            AND ' . $var_150 . '.active = 1 AND ' . $var_150 . '.`visibility` IN ("both", "catalog") ' .
            (count($var_143) ? 'AND p.id_product IN (' . implode(',', array_map('intval', $var_143)) . ')' : '')
        );

        $var_155 = [];
        while ($var_88 = $var_147->nextRow($var_106)) {
            $var_155[(int) $var_88['id_feature_value']] = (int) $var_88['id_feature'];
        }

        $var_156 = $var_14->fn_26(
            'SELECT p.id_product,
            GROUP_CONCAT(DISTINCT fv.id_feature_value) features,
            GROUP_CONCAT(DISTINCT cp.id_category) categories,
            GROUP_CONCAT(DISTINCT pac.id_attribute) attributes
            FROM ' . var_40 . 'product p
            LEFT JOIN ' . var_40 . 'category_product cp ON (cp.id_product = p.id_product)
            LEFT JOIN ' . var_40 . 'category c ON (c.id_category = cp.id_category)
            LEFT JOIN ' . var_40 . 'feature_product fp ON (fp.id_product = p.id_product)
            LEFT JOIN ' . var_40 . 'feature_value fv ON (fv.id_feature_value = fp.id_feature_value)
            LEFT JOIN ' . var_40 . 'product_attribute pa ON (pa.id_product = p.id_product)
            ' . $var_151 . $var_152 . '
            LEFT JOIN ' . var_40 . 'product_attribute_combination pac ON (pac.id_product_attribute = pa.id_product_attribute)
            WHERE c.active = 1' . (count($var_144) ? ' AND cp.id_category IN (' . implode(',', array_map('intval', $var_144)) . ')' : '') . '
            AND ' . $var_150 . '.active = 1 AND ' . $var_150 . '.`visibility` IN ("both", "catalog")
            ' . (count($var_143) ? 'AND p.id_product IN (' . implode(',', array_map('intval', $var_143)) . ')' : '') .
            ' AND (fv.custom IS NULL OR fv.custom = 0)
            GROUP BY p.id_product'
        );

        $var_58 = class_2::getShops(false, null, true);

        $var_157 = false;
        while ($var_158 = $var_147->nextRow($var_156)) {
            $var_159 = $var_160 = $var_161 = [];
            if (!empty($var_158['attributes'])) {
                $var_159 = array_flip(explode(',', $var_158['attributes']));
            }

            if (!empty($var_158['categories'])) {
                $var_160 = array_flip(explode(',', $var_158['categories']));
            }

            if (!empty($var_158['features'])) {
                $var_161 = array_flip(explode(',', $var_158['features']));
            }

            $var_146['shop_list'] = $var_58;

            foreach ($var_160 as $var_162 => $var_87) {
                if (!in_array($var_162, $var_146['categories'])) {
                    $var_146['categories'][] = $var_162;
                }

                if (!isset($var_148[(int) $var_162])) {
                    $var_148[(int) $var_162] = 1;
                }
                if (!isset($var_149[(int) $var_162]['cat'])) {
                    $var_146['layered_selection_subcategories'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['cat'] = true;
                    $var_157 = true;
                }
                if (is_array($var_153) && count($var_153) > 0) {
                    foreach ($var_159 as $var_168 => $var_169) {
                        if (!isset($var_149[(int) $var_162]['a' . (int) $var_153[(int) $var_168]])) {
                            $var_146['layered_selection_ag_' . (int) $var_153[(int) $var_168]] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                            $var_149[(int) $var_162]['a' . (int) $var_153[(int) $var_168]] = true;
                            $var_157 = true;
                        }
                    }
                }
                if (is_array($var_153) && count($var_153) > 0) {
                    foreach ($var_161 as $var_170 => $var_171) {
                        if (!isset($var_149[(int) $var_162]['f' . (int) $var_155[(int) $var_170]])) {
                            $var_146['layered_selection_feat_' . (int) $var_155[(int) $var_170]] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                            $var_149[(int) $var_162]['f' . (int) $var_155[(int) $var_170]] = true;
                            $var_157 = true;
                        }
                    }
                }

                if (!isset($var_149[(int) $var_162]['q'])) {
                    $var_146['layered_selection_stock'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['q'] = true;
                    $var_157 = true;
                }

                if (!isset($var_149[(int) $var_162]['m'])) {
                    $var_146['layered_selection_manufacturer'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['m'] = true;
                    $var_157 = true;
                }

                if (!isset($var_149[(int) $var_162]['c'])) {
                    $var_146['layered_selection_condition'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['c'] = true;
                    $var_157 = true;
                }

                if (!isset($var_149[(int) $var_162]['w'])) {
                    $var_146['layered_selection_weight_slider'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['w'] = true;
                    $var_157 = true;
                }

                if (!isset($var_149[(int) $var_162]['p'])) {
                    $var_146['layered_selection_price_slider'] = ['filter_type' => var_163\var_3\var_164\var_165\var_166::var_167, 'filter_show_limit' => 0];
                    $var_149[(int) $var_162]['p'] = true;
                    $var_157 = true;
                }
            }
        }

        if ($var_157) {
            $var_14->fn_2()->execute('INSERT INTO ' . var_40 . 'layered_filter(name, filters, n_categories, date_add)
VALUES (\'' . sprintf($var_14->trans('My template %s', [], 'Modules.Facetedsearch.Admin'), date('Y-m-d')) . '\', \'' . pSQL(serialize($var_146)) . '\', ' . count($var_146['categories']) . ', NOW())');

            $var_172 = $var_14->fn_2()->Insert_ID();
            $var_14->fn_2()->execute('DELETE FROM ' . var_40 . 'layered_filter_shop WHERE `id_layered_filter` = ' . $var_172);
            foreach ($var_58 as $var_59) {
                $var_14->fn_2()->execute('INSERT INTO ' . var_40 . 'layered_filter_shop (`id_layered_filter`, `id_shop`)
VALUES(' . $var_172 . ', ' . (int) $var_59 . ')');
            }

            if ($var_145) {
                $var_14->fn_10();
            }
        }
    }

    
    public function fn_10()
    {
        
        $var_173 = $var_14->fn_2()->executeS('SELECT * FROM ' . var_40 . 'layered_filter ORDER BY date_add DESC');
        $var_86 = [];
        
        $var_14->fn_23();
        
        $var_14->fn_2()->execute('TRUNCATE ' . var_40 . 'layered_category');

        if (!count($var_173)) { 
            return true;
        }

        $var_174 = 'INSERT INTO ' . var_40 . 'layered_category (id_category, id_shop, id_value, type, position, filter_show_limit, filter_type) VALUES ';
        $var_175 = '';
        $var_176 = 0;

        foreach ($var_173 as $var_177) {
            $var_178 = Tools::unSerialize($var_177['filters']);
            foreach ($var_178['shop_list'] as $var_59) {
                if (!isset($var_86[$var_59])) {
                    $var_86[$var_59] = [];
                }

                foreach ($var_178['categories'] as $var_162) {
                    $var_179 = 0;
                    if (in_array($var_162, $var_86[$var_59])) {
                        continue;
                    }
                    

                    $var_86[$var_59][] = $var_162;

                    foreach ($var_178 as $var_93 => $var_94) {
                        if (substr($var_93, 0, 17) == 'layered_selection') {
                            $var_180 = $var_94['filter_type'];
                            $var_181 = $var_94['filter_show_limit'];
                            ++$var_179;

                            if ($var_93 == 'layered_selection_stock') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'quantity\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif ($var_93 == 'layered_selection_subcategories') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'category\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif ($var_93 == 'layered_selection_condition') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'condition\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif ($var_93 == 'layered_selection_weight_slider') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'weight\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif ($var_93 == 'layered_selection_price_slider') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'price\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif ($var_93 == 'layered_selection_manufacturer') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', NULL,\'manufacturer\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif (substr($var_93, 0, 21) == 'layered_selection_ag_') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', ' . (int) str_replace('layered_selection_ag_', '', $var_93) . ',
\'id_attribute_group\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            } elseif (substr($var_93, 0, 23) == 'layered_selection_feat_') {
                                $var_175 .= '(' . (int) $var_162 . ', ' . (int) $var_59 . ', ' . (int) str_replace('layered_selection_feat_', '', $var_93) . ',
\'id_feature\',' . (int) $var_179 . ', ' . (int) $var_181 . ', ' . (int) $var_180 . '),';
                            }

                            ++$var_176;
                            if ($var_176 >= 100) {
                                $var_14->fn_2()->execute($var_174 . rtrim($var_175, ','));
                                $var_175 = '';
                                $var_176 = 0;
                            }
                        }
                    }
                }
            }
        }

        if ($var_176) {
            $var_14->fn_2()->execute($var_174 . rtrim($var_175, ','));
        }
    }

    
    public function fn_24($var_130, array $var_182 = [])
    {
        $var_14->var_28->var_110->assign($var_182);

        return $var_14->display(var_129, $var_130);
    }

    
    public function fn_27($var_182)
    {
        foreach (Language::getLanguages(false) as $var_69) {
            $var_183 = $var_69['id_lang'];
            $var_184 = Tools::getValue('url_name_' . $var_183);
            if ($var_184 && Tools::link_rewrite($var_184) != strtolower($var_184)) {
                $var_182['errors'][] = Tools::displayError(
                    $var_14->trans(
                        '"%s" is not a valid url',
                        [Tools::safeOutput($var_184, true)],
                        'Modules.Facetedsearch.Admin'
                    )
                );
            }
        }
    }

    
    public function fn_28($var_185, array $var_186)
    {
        return $var_14->fn_6()->dispatch(
            $var_185,
            !empty($var_186[0]) ? $var_186[0] : []
        );
    }

    
    public function fn_23()
    {
        return $var_14->fn_2()->execute('TRUNCATE TABLE ' . var_40 . 'layered_filter_block');
    }

    
    public function fn_11()
    {
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_price_index`');

        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_price_index` (
            `id_product` INT  NOT NULL,
            `id_currency` INT NOT NULL,
            `id_shop` INT NOT NULL,
            `price_min` DECIMAL(11, 5) NOT NULL,
            `price_max` DECIMAL(11, 5) NOT NULL,
            `id_country` INT NOT NULL,
            PRIMARY KEY (`id_product`, `id_currency`, `id_shop`, `id_country`),
            INDEX `id_currency` (`id_currency`),
            INDEX `price_min` (`price_min`),
            INDEX `price_max` (`price_max`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );
    }

    
    private function fn_14()
    {
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_product_attribute`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_product_attribute` (
            `id_attribute` int(10) unsigned NOT NULL,
            `id_product` int(10) unsigned NOT NULL,
            `id_attribute_group` int(10) unsigned NOT NULL DEFAULT "0",
            `id_shop` int(10) unsigned NOT NULL DEFAULT "1",
            PRIMARY KEY (`id_attribute`, `id_product`, `id_shop`),
            UNIQUE KEY `id_attribute_group` (`id_attribute_group`,`id_attribute`,`id_product`, `id_shop`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );
    }

    
    private function fn_13()
    {
        
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_attribute_group`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_attribute_group` (
            `id_attribute_group` INT NOT NULL,
            `indexable` BOOL NOT NULL DEFAULT 0,
            PRIMARY KEY (`id_attribute_group`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );
        $var_14->fn_2()->execute(
            'INSERT INTO `' . var_40 . 'layered_indexable_attribute_group`
            SELECT id_attribute_group, 1 FROM `' . var_40 . 'attribute_group`'
        );

        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_attribute_group_lang_value`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_attribute_group_lang_value` (
            `id_attribute_group` INT NOT NULL,
            `id_lang` INT NOT NULL,
            `url_name` VARCHAR(128),
            `meta_title` VARCHAR(128),
            PRIMARY KEY (`id_attribute_group`, `id_lang`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_attribute_lang_value`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_attribute_lang_value` (
            `id_attribute` INT NOT NULL,
            `id_lang` INT NOT NULL,
            `url_name` VARCHAR(128),
            `meta_title` VARCHAR(128),
            PRIMARY KEY (`id_attribute`, `id_lang`)
           )  ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_feature`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_feature` (
            `id_feature` INT NOT NULL,
            `indexable` BOOL NOT NULL DEFAULT 0,
            PRIMARY KEY (`id_feature`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        $var_14->fn_2()->execute(
            'INSERT INTO `' . var_40 . 'layered_indexable_feature`
            SELECT id_feature, 1 FROM `' . var_40 . 'feature`'
        );

        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_feature_lang_value`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_feature_lang_value` (
            `id_feature` INT NOT NULL,
            `id_lang` INT NOT NULL,
            `url_name` VARCHAR(128) NOT NULL,
            `meta_title` VARCHAR(128),
            PRIMARY KEY (`id_feature`, `id_lang`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );

        
        $var_14->fn_2()->execute('DROP TABLE IF EXISTS `' . var_40 . 'layered_indexable_feature_value_lang_value`');
        $var_14->fn_2()->execute(
            'CREATE TABLE `' . var_40 . 'layered_indexable_feature_value_lang_value` (
            `id_feature_value` INT NOT NULL,
            `id_lang` INT NOT NULL,
            `url_name` VARCHAR(128),
            `meta_title` VARCHAR(128),
            PRIMARY KEY (`id_feature_value`, `id_lang`)
            ) ENGINE=' . var_142 . ' DEFAULT CHARSET=utf8;'
        );
    }

    
    private function fn_19($var_52 = 0, $var_188 = false, $var_10 = false, $var_53 = false)
    {
        if ($var_188) {
            $var_189 = (int) $var_14->fn_2()->getValue(
                'SELECT count(DISTINCT p.`id_product`) ' .
                'FROM ' . var_40 . 'product p ' .
                'INNER JOIN `' . var_40 . 'product_shop` ps ' .
                'ON (ps.`id_product` = p.`id_product` AND ps.`active` = 1 AND ps.`visibility` IN ("both", "catalog"))'
            );
        } else {
            $var_189 = (int) $var_14->fn_2()->getValue(
                'SELECT COUNT(DISTINCT p.`id_product`) ' .
                'FROM `' . var_40 . 'product` p ' .
                'INNER JOIN `' . var_40 . 'product_shop` ps ON (ps.`id_product` = p.`id_product` AND ps.`active` = 1 AND ps.`visibility` IN ("both", "catalog")) ' .
                'LEFT JOIN  `' . var_40 . 'layered_price_index` psi ON (psi.id_product = p.id_product) ' .
                'WHERE psi.id_product IS NULL'
            );
        }

        $var_190 = @ini_get('max_execution_time');
        if ($var_190 > 5 || $var_190 <= 0) {
            $var_190 = 5;
        }

        $var_191 = microtime(true);

        $var_192 = 0;
        $var_193 = 100;
        do {
            $var_194 = $var_52;
            $var_52 = (int) $var_14->fn_29((int) $var_52, $var_188, $var_53, $var_193);
            if ($var_52 == 0) {
                $var_194 = $var_52;
                break;
            }
            $var_196 = microtime(true) - $var_191;
            $var_192 += $var_193;
        } while (
            $var_52 < $var_189
            && (Tools::getMemoryLimit() == -1 || Tools::getMemoryLimit() > memory_get_peak_usage())
            && $var_196 < $var_190
        );

        if (($var_189 > 0 && !$var_188 || $var_52 != $var_194 && $var_188) && !$var_10) {
            $var_197 = substr(Tools::encrypt('ps_facetedsearch/index'), 0, 10);
            $var_198 = Tools::usingSecureMode()
                    ? Tools::getShopDomainSsl(true)
                    : Tools::getShopDomain(true);

            $var_14->fn_19((int) $var_52, (int) $var_188);

            return $var_52;
        }

        if ($var_10 && $var_189 > 0 && $var_52 != $var_194 && $var_188) {
            return json_encode([
                'cursor' => $var_52,
                'count' => $var_192,
            ]);
        }

        if ($var_10 && $var_189 > 0 && !$var_188) {
            return json_encode([
                'cursor' => $var_52,
                'count' => $var_189,
            ]);
        }

        Configuration::updateGlobalValue('PS_LAYERED_INDEXED', 1);

        if ($var_10) {
            return json_encode([
                'result' => 'ok',
            ]);
        }

        return -1;
    }

    
    private function fn_29($var_52, $var_188 = false, $var_53 = false, $var_193 = 100)
    {
        if (null === $var_52) {
            $var_52 = 0;
        }

        if ($var_188) {
            $var_139 = 'SELECT p.`id_product` ' .
                'FROM `' . var_40 . 'product` p ' .
                'INNER JOIN `' . var_40 . 'product_shop` ps ' .
                'ON (ps.`id_product` = p.`id_product` AND ps.`active` = 1 AND ps.`visibility` IN ("both", "catalog")) ' .
                'WHERE p.id_product > ' . (int) $var_52 . ' ' .
                'GROUP BY p.`id_product` ' .
                'ORDER BY p.`id_product` LIMIT 0,' . (int) $var_193;
        } else {
            $var_139 = 'SELECT p.`id_product` ' .
                'FROM `' . var_40 . 'product` p ' .
                'INNER JOIN `' . var_40 . 'product_shop` ps ' .
                'ON (ps.`id_product` = p.`id_product` AND ps.`active` = 1 AND ps.`visibility` IN ("both", "catalog")) ' .
                'LEFT JOIN  `' . var_40 . 'layered_price_index` psi ON (psi.id_product = p.id_product) ' .
                'WHERE psi.id_product IS NULL ' .
                'GROUP BY p.`id_product` ' .
                'ORDER BY p.`id_product` LIMIT 0,' . (int) $var_193;
        }

        $var_199 = 0;
        foreach ($var_14->fn_2()->executeS($var_139) as $var_158) {
            $var_14->fn_21((int) $var_158['id_product'], ($var_53 && $var_188));
            $var_199 = $var_158['id_product'];
        }

        return (int) $var_199;
    }

    
    public function fn_30($var_200, array $var_201)
    {
        $var_14->var_110->assign($var_14->fn_31($var_200, $var_201));

        return $var_14->fetch(
            'module:ps_facetedsearch/ps_facetedsearch.tpl'
        );
    }

    
    public function fn_31($var_200, array $var_201)
    {
        return [];
    }
}
