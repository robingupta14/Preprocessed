<?php





if (isset($_POST['edit_save']) || isset($_POST['add_new_column'])) {
    $var_0 = $_POST['col_name'];
    if (isset($_POST['edit_save'])) {
        $var_1 = $_POST['orig_col_name'];
    }
    $var_2 = $_POST['col_default'];
    if ($var_2 == 'NONE' && $_POST['col_default_sel'] != 'USER_DEFINED') {
        $var_2 = "";
    }
    $var_3 = isset($_POST['col_extra']) ? $_POST['col_extra'] : '';
    $var_4 = isset($_POST['col_isNull'])?1:0;
    $var_5 = $_POST['col_length'];
    $var_6 = $_POST['col_attribute'];
    $var_7 = $_POST['col_type'];
    $var_8 = $_POST['collation'];
    if (isset($var_1) && $var_1) {
        
        var_9;
    } else {
        $var_10 = PMA_updateOneColumn(
            $var_11, "", $var_0, $var_7, $var_6,
            $var_5, $var_4, $var_8, $var_3, $var_2
        );
    }
}
if (isset($_POST['populateColumns'])) {
    $var_12 = $_POST['selectedTable'];
    
    var_9;
}
if (isset($_POST['getColumnList'])) {
    
    var_9;
}
if (isset($_POST['add_column'])) {
    $var_13 = array();
    $var_12 = $_POST['table-select'];
    $var_13[] = $_POST['column-select'];
    $var_10 = PMA_syncUniqueColumns($var_13, false, $var_12);
}
$var_14 = PMA_Response::getInstance();
$var_15 = $var_14->getHeader();
$var_17 = $var_15->getScripts();
$var_17->addFile('jquery/jquery.uitablefilter.js');
$var_17->addFile('jquery/jquery.tablesorter.js');
$var_17->addFile('db_central_columns.js');
$var_20 = PMA_centralColumnsGetParams();
$var_21 = $var_20['db'];
$var_22 = $var_20['table'];
$var_23 = $GLOBALS['cfg']['MaxRows'];

if (isset($_REQUEST['edit_central_columns_page'])) {
    $var_24 = $_REQUEST['selected_fld'];
    $var_25 = $_REQUEST['db'];
    $var_26 = PMA_getHTMLforEditingPage(
        $var_24, $var_25
    );
    $var_14->addHTML($var_26);
    var_9;
}
if (isset($_POST['multi_edit_central_column_save'])) {
    $var_28 = PMA_updateMultipleColumn();
    if (!is_bool($var_28)) {
        $var_14->isSuccess(false);
        $var_14->addJSON('message', $var_28);
    }
}
if (isset($_POST['delete_save'])) {
    $var_0 = array();
    parse_str($_POST['col_name'], $var_0);
    $var_10 = PMA_deleteColumnsFromList($var_0['selected_fld'], false);
}
if (isset($_REQUEST['total_rows']) && $_REQUEST['total_rows']) {
    $var_31 = $_REQUEST['total_rows'];
} else {
    $var_31 = PMA_getCentralColumnsCount($var_11);
}
if (isset($_REQUEST['pos'])) {
    $var_32 = $_REQUEST['pos'];
} else {
    $var_32 = 0;
}
$var_33 = PMA_getHTMLforAddNewColumn($var_11);
$var_14->addHTML($var_33);
if ($var_31 <= 0) {
    $var_14->addHTML(
        '<fieldset>' . __(
            'The central list of columns for the current database is empty.'
        ) . '</fieldset>'
    );
    $var_34 = PMA_getHTMLforAddCentralColumn($var_31, $var_32, $var_11);
    $var_14->addHTML($var_34);
    var_9;
}
$var_35 = PMA_getHTMLforTableNavigation($var_31, $var_32, $var_11);
$var_14->addHTML($var_35);
$var_34 = PMA_getHTMLforAddCentralColumn($var_31, $var_32, $var_11);
$var_14->addHTML($var_34);
$var_36 = '<form method="post" id="del_form" action="db_central_columns.php">'
        . PMA_URL_getHiddenInputs(
            $var_11
        )
        . '<input id="del_col_name" type="hidden" name="col_name" value="">'
        . '<input type="hidden" name="pos" value="' . $var_32 . '">'
        . '<input type="hidden" name="delete_save" value="delete"></form>';
$var_14->addHTML($var_36);
$var_37 = '<div id="tableslistcontainer">'
        . '<form name="tableslistcontainer">'
        . '<table id="table_columns" class="tablesorter" '
        . 'style="min-width:100%" class="data">';
$var_14->addHTML($var_37);
$var_38 = PMA_getCentralColumnsTableHeader(
    'column_heading', __('Click to sort.'), 2
);
$var_14->addHTML($var_38);
$var_39 = PMA_getColumnsList($var_11, $var_32, $var_23);
$var_40 = true;
$var_41 = 0;
foreach ($var_39 as $var_42) {
    $var_43 = PMA_getHTMLforCentralColumnsTableRow(
        $var_42, $var_40, $var_41, $var_11
    );
    $var_14->addHTML($var_43);
    $var_40 = !$var_40;
    $var_41++;
}
$var_14->addHTML('</table>');
$var_44 = PMA_getCentralColumnsTableFooter($var_45, $var_46);
$var_14->addHTML($var_44);
$var_14->addHTML('</form></div>');
$var_28 = PMA_Message::success(
    sprintf(__('Showing rows %1$s - %2$s.'), ($var_32 + 1), ($var_32 + count($var_39)))
);
if (isset($var_10) && $var_10 !== true) {
    $var_28 = $var_10;
}
