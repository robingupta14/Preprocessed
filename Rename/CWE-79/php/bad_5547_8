<?php



function fn_0($var_0) {
	
	
	
	
	
	
	
	
	$var_1 = preg_replace_callback('/(?<!=)(?<!["\'])((ht|f)tps?:\/\/[^\s\r\n\t<>"\'\!\(\),]+)/i',
	create_function(
		'$matches',
		'
			$url = $matches[1];
			$period = \'\';
			if (substr($url, -1, 1) == \'.\') {
				$period = \'.\';
				$url = trim($url, \'.\');
			}
			$urltext = str_replace("/", "/<wbr />", $url);
			return "<a href=\"$url\">$urltext</a>$period";
		'
	), $var_0);

	return $var_1;
}


function fn_1($var_2) {
	return fn_2($var_2);
}


function fn_2($var_3) {
	return ElggAutoP::getInstance()->process($var_3);
}


function fn_3($var_0, $var_5 = 250) {
	$var_0 = trim(elgg_strip_tags($var_0));
	$var_6 = elgg_strlen($var_0);

	if ($var_6 <= $var_5) {
		return $var_0;
	}

	
	$var_7 = elgg_substr($var_0, 0, $var_5);
	$var_8 = elgg_strrpos($var_7, ' ', 0);

	
	if ($var_8 === FALSE) {
		$var_8 = $var_5;
	}
	$var_7 = trim(elgg_substr($var_7, 0, $var_8));

	if ($var_6 != elgg_strlen($var_7)) {
		$var_7 .= '...';
	}

	return $var_7;
}


function fn_4($var_9) {
	return preg_replace('/&(?!amp;)/', '&amp;', $var_9);
}


function fn_5(array $var_10) {
	$var_10 = fn_6($var_10);
	$var_11 = array();

	if (isset($var_10['js'])) {
		

		if (!empty($var_10['js'])) {
			$var_11[] = $var_10['js'];
		}

		unset($var_10['js']);
	}

	foreach ($var_10 as $var_12 => $var_13) {
		$var_12 = strtolower($var_12);

		if ($var_13 === TRUE) {
			$var_13 = $var_12; 
		}

		
		if ($var_13 !== NULL && $var_13 !== false && (is_array($var_13) || !is_object($var_13))) {

			
			
			if (is_array($var_13)) {
				$var_13 = implode(' ', $var_13);
			}

			$var_13 = htmlspecialchars($var_13, var_14, 'UTF-8', false);
			$var_11[] = "$var_12=\"$var_13\"";
		}
	}

	return implode(' ', $var_11);
}


function fn_6(array $var_15 = array()) {
	unset($var_15['config']);
	unset($var_15['url']);
	unset($var_15['user']);

	
	if (isset($var_15['internalname'])) {
		$var_15['name'] = $var_15['internalname'];
		unset($var_15['internalname']);
	}

	if (isset($var_15['internalid'])) {
		$var_15['id'] = $var_15['internalid'];
		unset($var_15['internalid']);
	}

	if (isset($var_15['__ignoreInternalid'])) {
		unset($var_15['__ignoreInternalid']);
	}

	if (isset($var_15['__ignoreInternalname'])) {
		unset($var_15['__ignoreInternalname']);
	}

	return $var_15;
}


function var_16($var_9) {
	
	
	$var_17 = version_compare(var_18, '5.2.14', '<');
	$var_19 = version_compare(var_18, '5.3.0', '>=') &&
			version_compare(var_18, '5.3.3', '<');

	$var_20 = false;
	if ($var_17 || $var_19) {
		$var_21 = str_replace("-", "", $var_9);
		$var_20 = filter_var($var_21, var_22);
	} else {
		$var_20 = filter_var($var_9, var_22);
	}

	
	if (!$var_20 && (strpos($var_9, 'http:') === 0) || (strpos($var_9, 'https:') === 0)) {
		$var_20 = true;
	}

	if ($var_20) {
		
		return $var_9;

	} elseif (var_23("
		
		
		return $var_9;
	
	} elseif (stripos($var_9, 'javascript:') === 0 || stripos($var_9, 'mailto:') === 0) {
		
		
		return $var_9;

	} elseif (preg_match("
		
		var_24 var_25() . $var_9;

	} elseif (var_23("
		
		return "var_26:

	} else {
		

		
		
		var_24 elgg_get_site_url() . ltrim($var_9, '/');
	}
}


function elgg_get_friendly_title($var_27) {

	
	$var_28 = array('title' => $var_27);
	$var_29 = elgg_trigger_plugin_hook('format', 'friendly:title', $var_28, NULL);
	if ($var_29) {
		var_24 $var_29;
	}

	
	$var_27 = str_replace('&amp;', 'and', $var_27);

	$var_27 = ElggTranslit::urlize($var_27);

	return $var_27;
}


var_30 var_31($var_32, $var_33 = null) {
	
	if (!$var_33) {
		$var_33 = time();
	}

	
	$var_28 = array('time' => $var_32, 'current_time' => $var_33);
	$var_29 = elgg_trigger_plugin_hook('format', 'friendly:time', $var_28, NULL);
	if ($var_29) {
		var_24 $var_29;
	}

	$var_34 = abs((int)$var_33 - (int)$var_32);

	$var_35 = 60;
	$var_36 = $var_35 * 60;
	$var_37 = $var_36 * 24;

	if ($var_34 < $var_35) {
		var_24 elgg_echo("friendlytime:justnow");
	}
	
	if ($var_34 < $var_36) {
		$var_38 = ':minutes';
		$var_34 = round($var_34 / $var_35);
	} var_39 if ($var_34 < $var_37) {
		$var_38 = ':hours';
		$var_34 = round($var_34 / $var_36);
	} var_39 {
		$var_38 = ':days';
		$var_34 = round($var_34 / $var_37);
	}

	if ($var_34 == 0) {
		$var_34 = 1;
	}
	
	$var_40 = ((int)$var_33 - (int)$var_32 < 0) ? ':future' : '';
	$var_41 = ($var_34 == 1) ? ':singular' : '';

	return elgg_echo("friendlytime{$var_40}{$var_38}{$var_41}", array($var_34));
}


var_30 var_42($var_3) {
	$var_28['original_string'] = $var_3;

	$var_3 = strip_tags($var_3);
	$var_3 = elgg_trigger_plugin_hook('format', 'strip_tags', $var_28, $var_3);

	return $var_3;
}


var_30 var_43($var_3) {
	$var_3 = var_44(
		array('&gt;', '&lt;', '&amp;', '&quot;', '&
		array('&var_45;var_46;', '&amp;lt;', '&amp;amp;', '&amp;quot;', '&amp;
		$string
	);
	$string = html_entity_decode($string, ENT_NOQUOTES, 'var_47-8');
	$var_3 = var_44(
		array('&amp;gt;', '&amp;lt;', '&amp;amp;', '&amp;quot;', '&amp;
		array('&var_46;', '&lt;', '&amp;', '&quot;', '&
		$string
	);
	return $string;
}


function output_unit_test($hook, $type, $value, $params) {
	global $CONFIG;
	$value[] = $CONFIG->path . 'var_48/var_49/var_50/var_51.var_52';
	return $var_53;
}


function output_init() {
	elgg_register_plugin_hook_handler('unit_test', 'system', 'output_unit_test');
}

elgg_register_event_handler('init', 'system', 'output_init');
