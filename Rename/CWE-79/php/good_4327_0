<?php namespace var_0\var_1\var_2;


class class_0 extends var_3
{
    protected $var_4;
    protected $var_5;
    protected $var_6;

    
    public function fn_0(var_7 $var_4, var_8 $var_5, var_9 $var_6)
    {
        $var_10->var_4 = $var_4;
        $var_10->var_5 = $var_5;
        $var_10->var_6 = $var_6;
        parent::fn_0();
    }


    
    public function fn_1(var_11 $var_12)
    {
        $var_10->validate($var_12, [
            'uploaded_to' => 'required|integer|exists:pages,id',
            'file' => 'required|file'
        ]);

        $var_14 = $var_12->fn_2('uploaded_to');
        $var_16 = $var_10->var_6->getById($var_14);

        $var_10->checkPermission('attachment-create-all');
        $var_10->checkOwnablePermission('page-update', $var_16);

        $var_20 = $var_12->file('file');

        try {
            $var_5 = $var_10->var_4->saveNewUpload($var_20, $var_14);
        } catch (var_23 $var_24) {}

        return response()->json($var_5);
    }

    
    public function fn_3(var_11 $var_12, $var_26)
    {
        $var_10->validate($var_12, [
            'file' => 'required|file'
        ]);

        $var_5 = $var_10->var_5->newQuery()->findOrFail($var_26);
        $var_10->checkOwnablePermission('view', $var_5->var_16);
        $var_10->checkOwnablePermission('page-update', $var_5->var_16);
        $var_10->checkOwnablePermission('attachment-create', $var_5);

        $var_20 = $var_12->file('file');

        try {
            $var_5 = $var_10->var_4->saveUpdatedUpload($var_20, $var_5);
        } catch (var_23 $var_24) {}

        return response()->json($var_5);
    }

    
    public function fn_4(string $var_26)
    {
        $var_5 = $var_10->var_5->findOrFail($var_26);

        $var_10->checkOwnablePermission('page-update', $var_5->var_16);
        $var_10->checkOwnablePermission('attachment-create', $var_5);

        return view('attachments.manager-edit-form', [
            'attachment' => $var_5,
        ]);
    }

    
    public function fn_5(var_11 $var_12, string $var_26)
    {
        $var_5 = $var_10->var_5->newQuery()->findOrFail($var_26);

        try {
            $var_10->validate($var_12, [
                'attachment_edit_name' => 'required|string|min:1|max:255',
                'attachment_edit_url' =>  'string|min:1|max:255|safe_url'
            ]);
        } catch (var_30 $var_31) {}

        $var_10->checkOwnablePermission('view', $var_5->var_16);
        $var_10->checkOwnablePermission('page-update', $var_5->var_16);
        $var_10->checkOwnablePermission('attachment-create', $var_5);

        $var_5 = $var_10->var_4->updateFile($var_5, [
            'name' => $var_12->fn_2('attachment_edit_name'),
            'link' => $var_12->fn_2('attachment_edit_url'),
        ]);

        return view('attachments.manager-edit-form', [
            'attachment' => $var_5,
        ]);
    }

    
    public function fn_6(var_11 $var_12)
    {
        $var_14 = $var_12->fn_2('attachment_link_uploaded_to');

        try {
            $var_10->validate($var_12, [
                'attachment_link_uploaded_to' => 'required|integer|exists:pages,id',
                'attachment_link_name' => 'required|string|min:1|max:255',
                'attachment_link_url' =>  'required|string|min:1|max:255|safe_url'
            ]);
        } catch (var_30 $var_31) {}

        $var_16 = $var_10->var_6->getById($var_14);

        $var_10->checkPermission('attachment-create-all');
        $var_10->checkOwnablePermission('page-update', $var_16);

        $var_33 = $var_12->fn_2('attachment_link_name');
        $var_34 = $var_12->fn_2('attachment_link_url');
        $var_5 = $var_10->var_4->saveNewFromLink($var_33, $var_34, intval($var_14));

        return view('attachments.manager-link-form', [
            'pageId' => $var_14,
        ]);
    }

    
    public function fn_7(int $var_14)
    {
        $var_16 = $var_10->var_6->getById($var_14);
        $var_10->checkOwnablePermission('page-view', $var_16);
        return view('attachments.manager-list', [
            'attachments' => $var_16->var_36->all(),
        ]);
    }

    
    public function fn_8(var_11 $var_12, int $var_14)
    {
        $var_10->validate($var_12, [
            'order' => 'required|array',
        ]);
        $var_16 = $var_10->var_6->getById($var_14);
        $var_10->checkOwnablePermission('page-update', $var_16);

        $var_38 = $var_12->fn_2('order');
        $var_10->var_4->updateFileOrderWithinPage($var_38, $var_14);
        return response()->json(['message' => trans('entities.attachments_order_updated')]);
    }

    
    public function fn_2(string $var_26)
    {
        $var_5 = $var_10->var_5->findOrFail($var_26);
        try {
            $var_16 = $var_10->var_6->getById($var_5->var_40);
        } catch (var_41 $var_31) {}

        $var_10->checkOwnablePermission('page-view', $var_16);

        if ($var_5->var_42) {
            return redirect($var_5->var_43);
        }

        $var_44 = $var_10->var_4->getAttachmentFromStorage($var_5);
        return $var_10->downloadResponse($var_44, $var_5->getFileName());
    }

    
    public function fn_9(string $var_26)
    {
        $var_5 = $var_10->var_5->findOrFail($var_26);
        $var_10->checkOwnablePermission('attachment-delete', $var_5);
        $var_10->var_4->deleteFile($var_5);
        return response()->json(['message' => trans('entities.attachments_deleted')]);
    }
}
