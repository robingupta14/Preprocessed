<?php namespace var_0\var_1\var_2;



class class_0 extends var_3
{

    public $var_4 = 'rainlab_blog_posts';
    public $var_5 = ['@RainLab.Translate.Behaviors.TranslatableModel'];

    
    public $var_6 = [
        'title'   => 'required',
        'slug'    => ['required', 'regex:/^[a-z0-9\/\:_\-\*\[\]\+\?\|]*$/i', 'unique:rainlab_blog_posts'],
        'content' => 'required',
        'excerpt' => ''
    ];

    
    public $var_7 = [
        'title',
        'content',
        'content_html',
        'excerpt',
        'metadata',
        ['slug', 'index' => true]
    ];

    
    protected $var_8 = ['metadata'];

    
    protected $var_9 = ['published_at'];

    
    public static $var_10 = [
        'title asc'         => 'rainlab.blog::lang.sorting.title_asc',
        'title desc'        => 'rainlab.blog::lang.sorting.title_desc',
        'created_at asc'    => 'rainlab.blog::lang.sorting.created_asc',
        'created_at desc'   => 'rainlab.blog::lang.sorting.created_desc',
        'updated_at asc'    => 'rainlab.blog::lang.sorting.updated_asc',
        'updated_at desc'   => 'rainlab.blog::lang.sorting.updated_desc',
        'published_at asc'  => 'rainlab.blog::lang.sorting.published_asc',
        'published_at desc' => 'rainlab.blog::lang.sorting.published_desc',
        'random'            => 'rainlab.blog::lang.sorting.random'
    ];

    
    public $var_11 = [
        'user' => ['Backend\Models\User']
    ];

    public $var_12 = [
        'categories' => [
            'RainLab\Blog\Models\Category',
            'table' => 'rainlab_blog_posts_categories',
            'order' => 'name'
        ]
    ];

    public $var_13 = [
        'featured_images' => ['System\Models\File', 'order' => 'sort_order'],
        'content_images'  => ['System\Models\File']
    ];

    
    protected $var_14 = ['summary', 'has_summary'];

    public $var_15 = null;

    
    public function fn_0($var_16, $var_17 = null)
    {
        if (!isset($var_16->var_18, $var_16->var_19)) {
            return;
        }

        $var_20 = BackendAuth::getUser();

        if (!$var_20->hasAnyAccess(['rainlab.blog.access_publish'])) {
            $var_16->var_18->var_22 = true;
            $var_16->var_19->var_22 = true;
        }
        else {
            $var_16->var_18->var_22 = false;
            $var_16->var_19->var_22 = false;
        }
    }

    public function fn_1()
    {
        if ($var_23->var_18 && !$var_23->var_19) {
            throw new class_1([
               'published_at' => Lang::get('rainlab.blog::lang.post.published_validation')
            ]);
        }
    }

    public function fn_2()
    {
        if (empty($var_23->var_20)) {
            $var_20 = BackendAuth::getUser();
            if (!is_null($var_20)) {
                $var_23->var_20 = $var_20->var_24;
            }
        }
        $var_23->var_25 = self::fn_5($var_23->var_26);
    }

    
    public function fn_3($var_27, $var_28)
    {
        $var_29 = [
            'id'   => $var_23->var_24,
            'slug' => $var_23->var_30
        ];

        $var_29['category'] = $var_23->var_31->count() ? $var_23->var_31->first()->var_30 : null;

        
        if ($var_23->var_18) {
            $var_29['year']  = $var_23->var_19->format('Y');
            $var_29['month'] = $var_23->var_19->format('m');
            $var_29['day']   = $var_23->var_19->format('d');
        }

        return $var_23->var_35 = $var_28->pageUrl($var_27, $var_29);
    }

    
    public function fn_4(var_37 $var_20)
    {
        return ($var_23->var_38 == $var_20->var_24) || $var_20->hasAnyAccess(['rainlab.blog.access_other_posts']);
    }

    public static function fn_5($var_39, $var_15 = false)
    {
        $var_40 = Markdown::parse(trim($var_39));

        if ($var_15) {
            $var_40 = str_replace('<pre>', '<pre class="prettyprint">', $var_40);
        }

        $var_40 = var_0\var_1\var_41\var_42::instance()->processTags($var_40, $var_15);

        return $var_40;
    }

    
    
    

    public function fn_6($var_44)
    {
        return $var_44
            ->whereNotNull('published')
            ->where('published', true)
            ->whereNotNull('published_at')
            ->where('published_at', '<', var_47\var_47::now())
        ;
    }

    
    public function fn_7($var_44, $var_48)
    {
        
        extract(array_merge([
            'page'             => 1,
            'perPage'          => 30,
            'sort'             => 'created_at',
            'categories'       => null,
            'exceptCategories' => null,
            'category'         => null,
            'search'           => '',
            'published'        => true,
            'exceptPost'       => null
        ], $var_48));

        $var_49 = ['title', 'slug', 'excerpt', 'content'];

        if ($var_18) {
            $var_44->isPublished();
        }

        
        if ($var_51) {
            $var_52 = (is_array($var_51)) ? $var_51 : [$var_51];
            $var_53 = [];
            $var_54 = [];

            foreach ($var_52 as $var_51) {
                $var_51 = trim($var_51);

                if (is_numeric($var_51)) {
                    $var_53[] = $var_51;
                } else {
                    $var_54[] = $var_51;
                }
            }

            if (count($var_53)) {
                $var_44->whereNotIn('id', $var_53);
            }
            if (count($var_54)) {
                $var_44->whereNotIn('slug', $var_54);
            }
        }

        
        if (in_array($var_56, array_keys(static::$var_10))) {
            if ($var_56 == 'random') {
                $var_44->inRandomOrder();
            } else {
                @list($var_58, $var_59) = explode(' ', $var_56);

                if (is_null($var_59)) {
                    $var_59 = "desc";
                }

                $var_44->orderBy($var_58, $var_59);
            }
        }

        
        $var_61 = trim($var_61);
        if (strlen($var_61)) {
            $var_44->searchWhere($var_61, $var_49);
        }

        
        if ($var_31 !== null) {
            $var_31 = is_array($var_31) ? $var_31 : [$var_31];
            $var_44->whereHas('categories', function($var_64) use ($var_31) {
                $var_64->whereIn('id', $var_31);
            });
        }

        
        if (!empty($var_66)) {
            $var_66 = is_array($var_66) ? $var_66 : [$var_66];
            array_walk($var_66, 'trim');

            $var_44->whereDoesntHave('categories', function ($var_64) use ($var_66) {
                $var_64->whereIn('slug', $var_66);
            });
        }

        
        if ($var_68 !== null) {
            $var_68 = Category::find($var_68);

            $var_31 = $var_68->getAllChildrenAndSelf()->lists('id');
            $var_44->whereHas('categories', function($var_64) use ($var_31) {
                $var_64->whereIn('id', $var_31);
            });
        }

        return $var_44->paginate($var_72, $var_73);
    }

    
    public function fn_8($var_44, $var_31)
    {
        return $var_44->whereHas('categories', function($var_64) use ($var_31) {
            $var_64->whereIn('id', $var_31);
        });
    }

    
    
    

    
    public function fn_9()
    {
        $var_74 = '<!-- more -->';

        return (
            !!strlen(trim($var_23->var_75)) ||
            strpos($var_23->var_25, $var_74) !== false ||
            strlen(Html::strip($var_23->var_25)) > 600
        );
    }

    
    public function fn_10()
    {
        $var_75 = $var_23->var_75;
        if (strlen(trim($var_75))) {
            return $var_75;
        }

        $var_74 = '<!-- more -->';
        if (strpos($var_23->var_25, $var_74) !== false) {
            $var_76 = explode($var_74, $var_23->var_25);

            return array_get($var_76, 0);
        }

        return Html::limit($var_23->var_25, 600);
    }

    
    
    

    
    public function fn_11($var_44, $var_48 = [])
    {
        if (!is_array($var_48)) {
            $var_48 = ['direction' => $var_48];
        }

        extract(array_merge([
            'direction' => 'next',
            'attribute' => 'published_at'
        ], $var_48));

        $var_77 = in_array($var_78, ['previous', -1]);
        $var_79 = $var_77 ? 'asc' : 'desc';
        $var_80 = $var_77 ? '>' : '<';

        $var_44->where('id', '<>', $var_23->var_24);

        if (!is_null($var_23->$var_81)) {
            $var_44->where($var_81, $var_80, $var_23->$var_81);
        }

        return $var_44->orderBy($var_81, $var_79);
    }

    
    public function fn_12()
    {
        return self::isPublished()->applySibling()->first();
    }

    
    public function fn_13()
    {
        return self::isPublished()->applySibling(-1)->first();
    }

    
    
    

    
    public static function fn_14($var_83)
    {
        $var_40 = [];

        if ($var_83 == 'blog-post') {
            $var_84 = [];

            $var_85 = self::orderBy('title')->get();
            foreach ($var_85 as $var_87) {
                $var_84[$var_87->var_24] = $var_87->var_88;
            }

            $var_40 = [
                'references'   => $var_84,
                'nesting'      => false,
                'dynamicItems' => false
            ];
        }

        if ($var_83 == 'all-blog-posts') {
            $var_40 = [
                'dynamicItems' => true
            ];
        }

        if ($var_83 == 'category-blog-posts') {
            $var_84 = [];

            $var_31 = Category::orderBy('name')->get();
            foreach ($var_31 as $var_68) {
                $var_84[$var_68->var_24] = $var_68->var_89;
            }

            $var_40 = [
                'references'   => $var_84,
                'dynamicItems' => true
            ];
        }

        if ($var_40) {
            $var_90 = var_91\var_41\var_92::getActiveTheme();

            $var_93 = var_91\var_41\var_94::listInTheme($var_90, true);
            $var_95 = [];

            foreach ($var_93 as $var_73) {
                if (!$var_73->hasComponent('blogPost')) {
                    continue;
                }

                
                $var_97 = $var_73->getComponentProperties('blogPost');
                if (!isset($var_97['categoryPage']) || !preg_match('/{{\s*:/', $var_97['slug'])) {
                    continue;
                }

                $var_95[] = $var_73;
            }

            $var_40['cmsPages'] = $var_95;
        }

        return $var_40;
    }

    
    public static function fn_15($var_99, $var_35, $var_90)
    {
        $var_40 = null;

        if ($var_99->var_83 == 'blog-post') {
            if (!$var_99->var_100 || !$var_99->var_101) {
                return;
            }

            $var_68 = self::find($var_99->var_100);
            if (!$var_68) {
                return;
            }

            $var_36 = self::fn_16($var_99->var_101, $var_68, $var_90);
            if (!$var_36) {
                return;
            }

            $var_36 = Url::to($var_36);

            $var_40 = [];
            $var_40['url'] = $var_36;
            $var_40['isActive'] = $var_36 == $var_35;
            $var_40['mtime'] = $var_68->var_102;
        }
        elseif ($var_99->var_83 == 'all-blog-posts') {
            $var_40 = [
                'items' => []
            ];

            $var_85 = self::isPublished()
            ->orderBy('title')
            ->get();

            foreach ($var_85 as $var_87) {
                $var_103 = [
                    'title' => $var_87->var_88,
                    'url'   => self::fn_16($var_99->var_101, $var_87, $var_90),
                    'mtime' => $var_87->var_102
                ];

                $var_103['isActive'] = $var_103['url'] == $var_35;

                $var_40['items'][] = $var_103;
            }
        }
        elseif ($var_99->var_83 == 'category-blog-posts') {
            if (!$var_99->var_100 || !$var_99->var_101) {
                return;
            }

            $var_68 = Category::find($var_99->var_100);
            if (!$var_68) {
                return;
            }

            $var_40 = [
                'items' => []
            ];

            $var_44 = self::isPublished()
            ->orderBy('title');

            $var_31 = $var_68->getAllChildrenAndSelf()->lists('id');
            $var_44->whereHas('categories', function($var_64) use ($var_31) {
                $var_64->whereIn('id', $var_31);
            });

            $var_85 = $var_44->get();

            foreach ($var_85 as $var_87) {
                $var_103 = [
                    'title' => $var_87->var_88,
                    'url'   => self::fn_16($var_99->var_101, $var_87, $var_90),
                    'mtime' => $var_87->var_102
                ];

                $var_103['isActive'] = $var_103['url'] == $var_35;

                $var_40['items'][] = $var_103;
            }
        }

        return $var_40;
    }

    
    protected static function fn_16($var_104, $var_68, $var_90)
    {
        $var_73 = var_91\var_41\var_94::loadCached($var_90, $var_104);
        if (!$var_73) {
            return;
        }

        $var_97 = $var_73->getComponentProperties('blogPost');
        if (!isset($var_97['slug'])) {
            return;
        }

        
        if (!preg_match('/^\{\{([^\}]+)\}\}$/', $var_97['slug'], $var_105)) {
            return;
        }

        $var_106 = substr(trim($var_105[1]), 1);
        $var_29 = [
            $var_106 => $var_68->var_30,
            'year'  => $var_68->var_19->format('Y'),
            'month' => $var_68->var_19->format('m'),
            'day'   => $var_68->var_19->format('d')
        ];
        $var_35 = var_91\var_41\var_94::url($var_73->getBaseFileName(), $var_29);

        return $var_35;
    }
}
