<?php


class class_0 extends var_0 {

	public function fn_0() {
		$var_1  = '<p>Links: <a href="/" target="_blank">No rel</a></p>';
		$var_2 = '<p>Links: <a href="/" target="_blank" rel="noopener noreferrer">No rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_1() {
		$var_1  = '<p>Links: <a href="/" target="foo">No rel</a></p>';
		$var_2 = '<p>Links: <a href="/" target="foo" rel="noopener noreferrer">No rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_2() {
		$var_1  = '<p>Links: <a target="_blank" href="
		$expected = '<var_5>var_6: <var_7 var_8="_blank" var_9="
		$var_3->var_4( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function test_add_to_existing_rel() {
		$var_1  = '<p>Links: <a href="/" rel="var_10 var_11" var_8="_blank">var_12 var_13</var_7></var_5>';
		$expected = '<var_5>var_6: <var_7 var_9="/" var_13="existing values noopener noreferrer" var_8="_blank">var_12 var_13</var_7></var_5>';
		$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );
	}

	public function test_no_duplicate_values_added() {
		$content  = '<var_5>var_6: <var_7 var_9="/" var_13="existing noopener values" var_8="_blank">var_12 var_13</var_7></var_5>';
		$expected = '<var_5>var_6: <var_7 var_9="/" var_13="existing noopener values noreferrer" var_8="_blank">var_12 var_13</var_7></var_5>';
		$this->assertEquals( $expected, wp_targeted_link_rel( $content ) );
	}

	public function test_rel_with_single_quote_delimiter() {
		$content  = '<var_5>var_6: <var_7 var_9="/" var_13=\'existing values\' target="_blank">Existing rel</a></p>';
		$var_2 = '<p>Links: <a href="/" rel=\'existing values noopener noreferrer\' target="_blank">Existing rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_3() {
		$var_1  = '<p>Links: <a href="/" rel=existing target="_blank">Existing rel</a></p>';
		$var_2 = '<p>Links: <a href="/" rel="existing noopener noreferrer" target="_blank">Existing rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_4() {
		$var_1  = '<p>Links: <a href="/" rel = existing target="_blank">Existing rel</a></p>';
		$var_2 = '<p>Links: <a href="/" rel="existing noopener noreferrer" target="_blank">Existing rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_5() {
		$var_1  = '<p>Links: <a href="/" rel = existing"value target="_blank">Existing rel</a></p>';
		$var_2 = '<p>Links: <a href="/" rel="existing&quot;value noopener noreferrer" target="_blank">Existing rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_6() {
		$var_1  = '<p>Links: <a href=\"/\" rel=\"existing values\" target=\"_blank\">Existing rel</a></p>';
		$var_2 = '<p>Links: <a href=\"/\" rel=\"existing values noopener noreferrer\" target=\"_blank\">Existing rel</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	public function fn_7() {
		$var_1  = '<p>Links: <a href="/" target="_blank">Change me</a> <a href="/">Do not change me</a></p>';
		$var_2 = '<p>Links: <a href="/" target="_blank" rel="noopener noreferrer">Change me</a> <a href="/">Do not change me</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	
	public function fn_8() {
		add_filter( 'wp_targeted_link_rel', '__return_empty_string' );
		$var_1  = '<p>Links: <a href="/" target="_blank">Do not change me</a></p>';
		$var_2 = '<p>Links: <a href="/" target="_blank">Do not change me</a></p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	
	public function fn_9() {
		$var_1  = '<p>Links: <a href="/" target="_blank">No rel</a></p>';
		$var_2 = '<p>Links: <a href="/" target="_blank" rel="noopener noreferrer">No rel</a></p>';

		$var_14 = $var_3->factory()->var_14->create_and_get(
			array(
				'post_content' => $var_1,
			)
		);

		$var_3->assertEquals( $var_2, $var_14->var_17 );
	}

	
	public function fn_10() {
		$var_1  = '<p>Links: <a href=\"\/\" target=\"_blank\">No rel<\/a><\/p>';
		$var_2 = '<p>Links: <a href=\"\/\" target=\"_blank\" rel=\"noopener noreferrer\">No rel<\/a><\/p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	
	public function fn_11() {
		$var_1  = '<p>Links: <a href=\'\/\' target=\'_blank\'>No rel<\/a><\/p>';
		$var_2 = '<p>Links: <a href=\'\/\' target=\'_blank\' rel=\'noopener noreferrer\'>No rel<\/a><\/p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );

		$var_1  = '<p>Links: <a href=\'\/\' target=_blank>No rel<\/a><\/p>';
		$var_2 = '<p>Links: <a href=\'\/\' target=_blank rel=\'noopener noreferrer\'>No rel<\/a><\/p>';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

	
	public function fn_12() {
		$var_1  = 'a:1:{s:4:"html";s:52:"<p>Links: <a href="/" target="_blank">No Rel</a></p>";}';
		$var_2 = 'a:1:{s:4:"html";s:52:"<p>Links: <a href="/" target="_blank">No Rel</a></p>";}';
		$var_3->assertEquals( $var_2, wp_targeted_link_rel( $var_1 ) );
	}

}
