<?php

class class_0 extends var_1 {

	
	protected function fn_0() {
		parent::fn_0();

		$var_3->var_9['type'] = "site";
		$var_3->var_9['name'] = NULL;
		$var_3->var_9['description'] = NULL;
		$var_3->var_9['url'] = NULL;
		$var_3->var_9['tables_split'] = 2;
	}

	
	function fn_1($var_4 = null) {
		$var_3->fn_0();

		
		$var_3->initialise_attributes(false);

		if (!empty($var_4)) {
			
			if ($var_4 instanceof var_6) {
				
				if (!$var_3->fn_2($var_4)) {
					$var_8 = elgg_echo('IOException:FailedToLoadGUID', array(get_class(), $var_4->var_4));
					throw new class_1($var_8);
				}

			
			} else if ($var_4 instanceof var_0) {
				elgg_deprecated_notice('This type of usage of the ElggSite constructor was deprecated. Please use the clone method.', 1.7);

				foreach ($var_4->var_9 as $var_10 => $var_11) {
					$var_3->var_9[$var_10] = $var_11;
				}

			
			} else if ($var_4 instanceof var_1) {
				throw new class_2(elgg_echo('InvalidParameterException:NonElggSite'));

			
			} else if (strpos($var_4, "http") !== false) {
				$var_4 = get_site_by_url($var_4);
				foreach ($var_4->var_9 as $var_10 => $var_11) {
					$var_3->var_9[$var_10] = $var_11;
				}

			
			} else if (is_numeric($var_4)) {
				if (!$var_3->fn_2($var_4)) {
					throw new class_1(elgg_echo('IOException:FailedToLoadGUID', array(get_class(), $var_4)));
				}
			} else {
				throw new class_2(elgg_echo('InvalidParameterException:UnrecognisedValue'));
			}
		}
	}

	
	protected function fn_2($var_4) {
		$var_12 = new class_3(get_class(), 'site', $var_3->var_9);
		$var_12->var_13 = !($var_3 instanceof var_14);
		$var_12->var_15 = 'get_site_entity_as_row';

		$var_16 = $var_12->getRequiredAttributes($var_4);
		if (!$var_16) {
			return false;
		}

		$var_3->var_9 = $var_16;
		$var_3->var_9['tables_loaded'] = 2;
		cache_entity($var_3);

		return true;
	}

	
	protected function fn_3() {
		global $var_18;
		
		$var_4 = parent::fn_3();

		$var_19 = sanitize_string($var_3->var_9['name']);
		$var_20 = sanitize_string($var_3->var_9['description']);
		$var_21 = sanitize_string($var_3->var_9['url']);

		$var_22 = "INSERT into {$var_18->var_23}sites_entity
			(guid, name, description, url) values ($var_4, '$var_19', '$var_20', '$var_21')";

		$var_24 = $var_3->getDatabase()->insertData($var_22);
		if ($var_24 === false) {
			
			return false;
		}

		return $var_4;
	}

	
	protected function fn_4() {
		global $var_18;
		
		if (!parent::fn_4()) {
			return false;
		}
		
		$var_4 = (int)$var_3->var_4;
		$var_19 = sanitize_string($var_3->var_19);
		$var_20 = sanitize_string($var_3->var_20);
		$var_21 = sanitize_string($var_3->var_21);
		
		$var_22 = "UPDATE {$var_18->var_23}sites_entity
			set name='$var_19', description='$var_20', url='$var_21' where guid=$var_4";

		return $var_3->getDatabase()->updateData($var_22) !== false;
	}

	
	public function fn_5() {
		global $var_18;

		
		$var_24 = parent::fn_5();
		if (!$var_24) {
			return false;
		}

		
		if (!$var_3->get('site_guid')) {
			$var_4 = (int)$var_3->get('guid');
			$var_3->getDatabase()->updateData("UPDATE {$var_18->var_23}entities SET site_guid=$var_4 WHERE guid=$var_4");
		}
		
		return $var_24;
	}

	
	public function fn_6() {
		global $var_18;
		if ($var_18->var_29->getGUID() == $var_3->var_4) {
			throw new class_4('SecurityException:deletedisablecurrentsite');
		}

		return parent::fn_6();
	}

	
	public function fn_7($var_31 = "", $var_32 = true) {
		global $var_18;

		if ($var_18->var_29->getGUID() == $var_3->var_4) {
			throw new class_4('SecurityException:deletedisablecurrentsite');
		}

		return parent::fn_7($var_31, $var_32);
	}
	
	
	public function fn_8() {
		return $var_3->var_19;
	}

	
	public function fn_9($var_33) {
		$var_3->var_19 = $var_33;
	}

	
	public function fn_10($var_34 = array(), $var_35 = 0) {
		if (!is_array($var_34)) {
			elgg_deprecated_notice("ElggSite::getMembers uses different arguments!", 1.8);
			$var_34 = array(
				'limit' => $var_34,
				'offset' => $var_35,
			);
		}

		$var_36 = array(
			'site_guids' => var_37,
			'relationship' => 'member_of_site',
			'relationship_guid' => $var_3->getGUID(),
			'inverse_relationship' => TRUE,
			'type' => 'user',
		);

		$var_34 = array_merge($var_36, $var_34);

		return elgg_get_entities_from_relationship($var_34);
	}

	
	public function fn_11($var_34 = array()) {
		$var_36 = array(
			'site_guids' => var_37,
			'relationship' => 'member_of_site',
			'relationship_guid' => $var_3->getGUID(),
			'inverse_relationship' => TRUE,
			'type' => 'user',
		);

		$var_34 = array_merge($var_36, $var_34);

		return elgg_list_entities_from_relationship($var_34);
	}

	
	public function fn_12($var_38) {
		return add_site_user($var_3->getGUID(), $var_38);
	}

	
	public function fn_13($var_38) {
		return remove_site_user($var_3->getGUID(), $var_38);
	}

	
	public function fn_14($var_39 = "", $var_40 = 10, $var_35 = 0) {
		return get_site_objects($var_3->getGUID(), $var_39, $var_40, $var_35);
	}

	
	public function fn_15($var_41) {
		return add_site_object($var_3->getGUID(), $var_41);
	}

	
	public function fn_16($var_41) {
		return remove_site_object($var_3->getGUID(), $var_41);
	}

	
	public function fn_17($var_39 = "", $var_40 = 10, $var_35 = 0) {
		elgg_deprecated_notice("ElggSite::getCollections() is deprecated", 1.8);
		get_site_collections($var_3->getGUID(), $var_39, $var_40, $var_35);
	}

	

	
	public function fn_18() {
		return array_merge(parent::fn_18(), array(
			'name',
			'description',
			'url',
		));
	}

	
	public function fn_19() {
		global $var_18;

		
		if (var_42 === 'cli') {
			return;
		}

		if ($var_18->var_43) {
			if ($var_18->var_44 == var_45) {
				$var_18->var_44 = var_46;
			}
			elgg_register_plugin_hook_handler(
					'access:collections:write',
					'user',
					'_elgg_walled_garden_remove_public_access');

			if (!elgg_is_logged_in()) {
				
				elgg_register_plugin_hook_handler('index', 'system', 'elgg_walled_garden_index', 1);

				if (!$var_3->fn_20()) {
					$_SESSION['last_forward_from'] = current_page_url();
					register_error(elgg_echo('loggedinrequired'));
					forward();
				}
			}
		}
	}

	
	public function fn_20($var_21 = '') {
		global $var_18;

		if (empty($var_21)) {
			$var_21 = current_page_url();

			
			if ($var_48 = strpos($var_21, '?')) {
				$var_21 = substr($var_21, 0, $var_48);
			}
		}

		
		if ($var_21 == elgg_get_site_url($var_3->var_4)) {
			return TRUE;
		}

		
		$var_36 = array(
			'walled_garden/.*',
			'login',
			'action/login',
			'register',
			'action/register',
			'forgotpassword',
			'resetpassword',
			'action/user/requestnewpassword',
			'action/user/passwordreset',
			'action/security/refreshtoken',
			'ajax/view/js/languages',
			'upgrade\.php',
			'css/.*',
			'js/.*',
			'cache/css/.*',
			'cache/js/.*',
			'cron/.*',
			'services/.*',
		);

		
		$var_49 = elgg_trigger_plugin_hook('public_pages', 'walled_garden', NULL, array());

		

		
		foreach (array_merge($var_36, $var_49) as $var_50) {
			$var_51 = "`^{$var_18->var_21}$var_50/*$`i";
			if (preg_match($var_51, $var_21)) {
				return TRUE;
			}
		}

		
		return FALSE;
	}
}
