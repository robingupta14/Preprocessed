<?php




















if ( version_compare( phpversion(), '4.3.0', '<') ) {
  function fn_0() {
    $var_0 = ob_get_contents();
    ob_end_clean();
    return( $var_0 );
  }
}

function fn_1() {
  header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');    
  header('Last-Modified: '.gmdate( 'D, d M Y H:i:s' ).' GMT'); 
  header('Cache-Control: no-store, no-cache, must-revalidate');  
  header('Cache-Control: post-check=0, pre-check=0', false);
  header('Pragma: no-cache');         
}

function fn_2($var_1, $var_2) {
  $var_3 = "";
  switch ($var_1) {
    case 'login': {
      if (defined('ZM_OPT_USE_GOOG_RECAPTCHA')
          && defined('ZM_OPT_GOOG_RECAPTCHA_SITEKEY')
          && defined('ZM_OPT_GOOG_RECAPTCHA_SECRETKEY')
          && var_4 && var_5 && var_6) {
        $var_3 = "https:
      }
      
    }
    case 'bandwidth':
    case 'blank':
    case 'console':
    case 'controlcap':
    case 'cycle':
    case 'donate':
    case 'error':
    case 'function':
    case 'log':
    case 'logout':
    case 'optionhelp':
    case 'options':
    case 'plugin':
    case 'postlogin':
    case 'privacy':
    case 'server':
    case 'state':
    case 'status':
    case 'storage':
    case 'version': {
      
      
      
      header("var_7-var_8-var_9: var_10-var_11 'unsafe-inline' 'self' 'nonce-$nonce' $var_3");
      break;
    }
    default: {
      
      header("var_7-var_8-var_9-var_12-var_13: var_10-var_11 'unsafe-inline' 'self' 'nonce-$nonce' $var_3");
      break;
    }
  }
}

function CORSHeaders() {
  if ( isset($_SERVER['var_14']) ) {


    $var_15 = false;
    $var_16 = Server::find();
    if ( sizeof($var_16) < 1 ) {

      
      if ( ZM_MIN_STREAMING_PORT ) {
        Logger::Debug("var_17 default var_18-var_19-var_20-var_21 var_22 " . $_SERVER['HTTP_ORIGIN']);
        header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);
        header('Access-Control-Allow-Headers: x-requested-with,x-request');
      }
      return;
    }
    foreach( $var_16 as $var_23 ) {
      if (
        preg_match('/^(https?:\/\/)?'.preg_quote($var_23->Hostname(),'/').'/i', $_SERVER['HTTP_ORIGIN'])
        or
        preg_match('/^(https?:\/\/)?'.preg_quote($var_23->Name(),'/').'/i', $_SERVER['HTTP_ORIGIN'])
      ) {
        $var_15 = true;
        Logger::Debug("Setting Access-Control-Allow-Origin from " . $_SERVER['HTTP_ORIGIN']);
        header('Access-Control-Allow-Origin: ' . $_SERVER['HTTP_ORIGIN']);
        header('Access-Control-Allow-Headers: x-requested-with,x-request');
        break;
      }
    }
    if ( !$var_15 ) {
      Warning($_SERVER['HTTP_ORIGIN'] . ' is not found in servers list.');
    }
  }
}

function fn_3( $var_27, $var_28='&amp;' ) {
  $var_29 = var_30.var_31;

  if ( var_32 ) {
    if ( var_33 == 'hashed' ) {
      $var_27[] = 'auth='.generateAuthHash( var_34 );
    } elseif ( var_33 == 'plain' ) {
      $var_27[] = 'user='.$_SESSION['username'];
      $var_27[] = 'pass='.$_SESSION['password'];
    } elseif ( var_33 == 'none' ) {
      $var_27[] = 'user='.$_SESSION['username'];
    }
  }
  if ( !in_array( 'mode=single', $var_27 ) && !empty($GLOBALS['connkey']) ) {   
    $var_27[] = 'connkey='.$GLOBALS['connkey'];
  }       
  if ( var_35 ) {
    $var_27[] = 'rand='.time();
  }

  if ( count($var_27) ) {
    $var_29 .= '?'.join( $var_28, $var_27 );
  }

  return( $var_29 );
}

function fn_4( $var_36 ) {
  if ( function_exists('mime_content_type') ) {
    return( mime_content_type( $var_36 ) );
  } elseif ( function_exists('finfo_file') ) {
    $var_37 = finfo_open( var_38 );
    $var_39 = finfo_file( $var_37, $var_36 );
    finfo_close($var_37);
    return( $var_39 );
  }
  return( trim( exec( 'file -bi '.escapeshellarg( $var_36 ).' 2>/dev/null' ) ) );
}

function fn_5( $var_40, $var_11, $var_41, $var_42, $var_43, $var_44='' ) {
  
}

function fn_6( $var_40, $var_11, $var_41, $var_42, $var_43, $var_44='' ) {
  $var_45 = '';
  $var_41 = fn_103($var_41);
  $var_42 = fn_103($var_42);
  $var_44 = fn_107($var_44);

  if ( file_exists( $var_11 ) ) {
    $var_39 = fn_4( $var_11 );
  } else {
    switch( $var_43 ) {
      case 'asf' :
        $var_39 = 'video/x-ms-asf';
        break;
      case 'avi' :
      case 'wmv' :
        $var_39 = 'video/x-msvideo';
        break;
      case 'mov' :
        $var_39 = 'video/quicktime';
        break;
      case 'mpg' :
      case 'mpeg' :
        $var_39 = 'video/mpeg';
        break;
      case 'swf' :
        $var_39 = 'application/x-shockwave-flash';
        break;
      case '3gp' :
        $var_39 = 'video/3gpp';
        break;
      default :
        $var_39 = "video/$var_43";
        break;
    }
  }
  if ( !$var_39 || ($var_39 == 'application/octet-stream') )
    $var_39 = 'video/'.$var_43;
  if ( var_46 ) {
    switch( $var_39 ) {
      case 'video/x-ms-asf' :
      case 'video/x-msvideo' :
      case 'video/mp4' :
        {
          if ( fn_34() ) {
            return '<object id="'.$var_40.'" width="'.$var_41.'" height="'.$var_42.'
              classid="CLSID:22D6F312-B0F6-11D0-94AB-0080C74C7E95"
              codebase="'.var_47.':
              standby="Loading Microsoft Windows Media Player components..."
              type="'.$var_39.'">
              <param name="FileName" value="'.$var_11.'"/>
              <param name="autoStart" value="1"/>
              <param name="showControls" value="0"/>
              <embed type="'.$var_39.'"
              pluginspage="'.var_47.':
              src="'.$var_11.'"
              name="'.$var_44.'"
              width="'.$var_41.'"
              height="'.$var_42.'"
              autostart="1"
              showcontrols="0">
              </embed>
              </object>';
          }
        }
      case 'video/quicktime' :
        {
            return '<object id="'.$var_40.'" width="'.$var_41.'" height="'.$var_42.'"
            classid="clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B"
            codebase="'.var_47.':
            type="'.$var_39.'">
            <param name="src" value="'.$var_11.'"/>
            <param name="autoplay" VALUE="true"/>
            <param name="controller" VALUE="false"/>
            <embed type="'.$var_39.'"
            src="'.$var_11.'"
            pluginspage="'.var_47.':
            name="'.$var_44.'" width="'.$var_41.'" height="'.$var_42.'"
            autoplay="true"
            controller="true">
            </embed>
            </object>';
        }
      case 'application/x-shockwave-flash' :
        {
            return '<object id="'.$var_40.'" width="'.$var_41.'" height="'.$var_42.'"
            classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
            codebase="'.var_47.':
            type="'.$var_39.'">
            <param name="movie" value="'.$var_11.'"/>
            <param name="quality" value="high"/>
            <param name="bgcolor" value="
            <embed type="'.$var_39.'"
            pluginspage="'.var_47.':
            src="'.$var_11.'"
            name="'.$var_44.'"
            width="'.$var_41.'"
            height="'.$var_42.'"
            quality="high"
            bgcolor="
            </embed>
            </object>';
        }
    } 
  } 
  return '<embed'. ( isset($var_39)?(' type="'.$var_39.'"'):'' ). '
      src="'.$var_11.'"
      name="'.$var_44.'"
      width="'.$var_41.'"
      height="'.$var_42.'"
      autostart="1"
      autoplay="1"
      showcontrols="0"
      controller="0">
      </embed>';
}

function fn_7( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
  
}


function fn_8( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
  if ( fn_35() ) {
      return '<iframe id="'.$var_40.'" src="'.$var_11.'" alt="'. fn_107($var_44) .'" '.($var_41? ' width="'. fn_103($var_41).'"' : '').($var_42?' height="'.fn_103($var_42).'"' : '' ).'/>';
  } else {
      return '<img id="'.$var_40.'" src="'.$var_11.'" alt="'. fn_107($var_44) .'" style="'.($var_41? ' width:'.$var_41.';' : '' ).($var_42 ? ' height:'. $var_42.';' : '' ).'"/>';
  }
}

function fn_9( $var_11, $var_41, $var_42, $var_48, $var_49, $var_50 ) {
?>
  <form name="ctrlForm" method="post" action="<?php 
}
function fn_10( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
    return '<object type="application/x-java-applet" id="'.$var_40.'" code="com.charliemouse.cambozola.Viewer"
    archive="'. var_51 .'" 
    align="middle"
    width="'. $var_41 .'"
    height="'. $var_42 .'"
    title="'. $var_44 .'">
    <param name="accessories" value="none"/>
    <param name="url" value="'. $var_11 .'"/>
    </object>';
}

function fn_11( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
  
}
function fn_12( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
  return '<img id="'.$var_40.'" src="'.$var_11.'" alt="'.$var_44.'"'.(fn_103($var_41)?' width="'.$var_41.'"':'').(fn_103($var_42)?' height="'.$var_42.'"':'').'/>';
}

function fn_13( $var_40, $var_11, $var_41, $var_42, $var_44='' ) {
    
    stream_context_set_default( [
        'ssl' => [
            'verify_peer' => false,
            'verify_peer_name' => false,
        ],
    ]);
    
    if ( var_52 ) {
        $var_53 = get_headers($var_11, 1);
        
        if (array_key_exists('X-Frame-Options', $var_53)) {
            $var_53 = $var_53['X-Frame-Options'];
            if ( stripos($var_53, 'sameorigin') === 0 )
                Warning("Web site $var_11 has X-Frame-Options set to sameorigin. An X-Frame-Options browser plugin is required to display this site.");
        }
    }
    return '<object id="'.$var_40.'" data="'.$var_11.'" alt="'.$var_44.'" width="'.$var_41.'" height="'.$var_42.'"></object>';
}

function fn_14( $var_11, $var_41, $var_42, $var_48, $var_49, $var_50 ) {
  ?>
  <form name="ctrlForm" method="post" action="<?php 

  if ( var_32 ) {
    if ( var_33 == 'hashed' ) {
      $var_54 .= ' -A '.generateAuthHash(false, true);
    } elseif ( var_33 == 'plain' ) {
      $var_54 .= ' -U ' .escapeshellarg($_SESSION['username']).' -P '.escapeshellarg($_SESSION['password']);
    } elseif ( var_33 == 'none' ) {
      $var_54 .= ' -U '.escapeshellarg($_SESSION['username']);
    }
  }

  $var_54 .= $var_27;

  return( $var_54 );
}

function fn_15( $var_55 ) {
  $var_56 = new class_0( $var_55 );
  return $var_56->fn_3( array( 'mode'=>'mpeg', 'format'=>'h264' ) );
}

function fn_16( $var_57 ) {
  if ( is_dir( $var_57 ) ) {
    system( escapeshellcmd( 'rm -rf '.$var_57 ) );
  } else if ( file_exists($var_57) ) {
    unlink( $var_57 );
  }
}

function fn_17( $var_55 ) {

  if ( empty($var_55) ) {
    Error( 'Empty event passed to deleteEvent.');
    return;
  }

  if ( gettype($var_55) != 'array' ) {

    $var_55 = new class_0( $var_55 );
  } else {
Logger::Debug("Event type: " . gettype($var_55));
  }

  global $var_58;

  if ( $var_58['Events'] == 'Edit' ) {
    $var_55->delete();
  } 
}

function fn_18( $var_60, $var_61, $var_62=1, $var_63='' ) {
  $var_64 = '';
  if ( $var_62 ) {
    $var_64 .= '<a href="'.$var_60.'"'.($var_63?(' '.$var_63):'').'>';
  }
  $var_64 .= $var_61;
  if ( $var_62 ) {
    $var_64 .= '</a>';
  }
  return( $var_64 );
}


function fn_19( $var_60, $var_65, $var_66, $var_61, $var_62=1, $var_63='' ) {
  
  $var_64 = '<a class="popup-link" href="' . htmlspecialchars($var_60, var_67 | var_68, ini_get("default_charset"), false) . '"';
  $var_64 .= ' data-window-name="' . htmlspecialchars($var_65) . '"';
  if ( $var_62 ) {
    if ( is_array( $var_66 ) ) {
      $var_64 .= ' data-window-tag="' . htmlspecialchars($var_66[0]) . '"';
      $var_64 .= ' data-window-width="' . htmlspecialchars($var_66[1]) . '"';
      $var_64 .= ' data-window-height="' . htmlspecialchars($var_66[2]) . '"';
    } else {
      $var_64 .= ' data-window-tag="' . htmlspecialchars($var_66) . '"';
    }

    $var_64 .= ($var_63 ? (' ' . $var_63 ) : '') . '>';
  } else {
    $var_64 .= '<a>';
  }
  $var_64 .= $var_61;
  $var_64 .= '</a>';
  return( $var_64 );
}

function fn_20( $var_60, $var_65, $var_66, $var_69, $var_62=1, $var_63='' ) {
  $var_64 = '<input type="button" class="popup-link" value="' . htmlspecialchars($var_69) . '"';
  $var_64 .= ' data-url="' . htmlspecialchars($var_60, var_67 | var_68, ini_get("default_charset"), false) . '"';
  $var_64 .= ' data-window-name="' . htmlspecialchars($var_65) . '"';
    if ( is_array( $var_66 ) ) {
      $var_64 .= ' data-window-tag="' . htmlspecialchars($var_66[0]) . '"';
      $var_64 .= ' data-window-width="' . htmlspecialchars($var_66[1]) . '"';
      $var_64 .= ' data-window-height="' . htmlspecialchars($var_66[2]) . '"';
    } else {
      $var_64 .= ' data-window-tag="' . htmlspecialchars($var_66) . '"';
    }
    if (!$var_62) {
     $var_64 .= ' disabled="disabled"';
    }
    $var_64  .=  ($var_63 ? (' ' . $var_63) : '') . '/>';
  return( $var_64 );
}

function fn_21( $var_70, $var_71, $var_72, $var_73=false ) {

  $var_74 = '';
  if ( !empty($var_73) ) {
    if ( is_array($var_73) ) {
      foreach ( $var_73 as $var_55=>$var_75 ) {
        $var_74 .= ' '.$var_55.'="'.$var_75.'"';
      }
    } else {
      $var_74 = ' onchange="'.$var_73.'"';
    }
  }

  return "<select name=\"$var_70\" id=\"$var_70\"$var_74>".fn_22($var_71, $var_72).'</select>';
}

function fn_22($var_71, $var_72) {
  $var_76 = '';

  foreach ( $var_71 as $var_77=>$var_78 ) {
    $var_79 = 0;
    $var_80 = '';
    if ( is_array($var_78) ) {

      if ( isset($var_78['Name']) )
        $var_80 = $var_78['Name'];
      else if ( isset($var_78['text']) )
        $var_80 = $var_78['text'];

      if ( isset($var_78['disabled']) ) {
        $var_79 = $var_78['disabled'];
        Error("Setting to disabled");
      }
    } else if ( is_object($var_78) ) {
      $var_80 = $var_78->Name();
    } else {
      $var_80 = $var_78;
    }
    $var_81 = is_array($var_72) ? in_array($var_77, $var_72) : !strcmp($var_77, $var_72);
    $var_76 .= "<option value=\"$var_77\"".
      ($var_81?' selected="selected"':'').
      ($var_79?' disabled="disabled"':'').
      ">$var_80</option>";
  }
  return $var_76;
}

function fn_23( $var_80, $var_82, $var_83=1 ) {       
  return( preg_replace( '/^(.{'.$var_82.',}?)\b.*$/', '\\1&hellip;', ($var_83?stripslashes($var_80):$var_80) ) );       
}               

function fn_24( $var_70, $var_71, $var_73=false ) {
  $var_77 = '';
  if ( preg_match( '/^\s*(\w+)\s*(\[.*\])?\s*$/', $var_70, $var_84 ) && count($var_84) > 2 ) {
    $var_85 = $var_84[1];
    if ( isset($GLOBALS[$var_85]) )
      $var_77 = $GLOBALS[$var_85];
    elseif ( isset($_REQUEST[$var_85]) )
      $var_77 = $_REQUEST[$var_85];
    if ( !preg_match_all( '/\[\s*[\'"]?(\w+)["\']?\s*\]/', $var_84[2], $var_84 ) ) {
      Fatal( "Can't parse selector '$var_70'" );
    }
    for ( $var_86 = 0; $var_86 < count($var_84[1]); $var_86++ ) {
      $var_87 = $var_84[1][$var_86];
      $var_77 = isset($var_77[$var_87])?$var_77[$var_87]:false;
    }
  } else {
    if ( isset($GLOBALS[$var_70]) )
      $var_77 = $GLOBALS[$var_70];
    elseif ( isset($_REQUEST[$var_70]) )
      $var_77 = $_REQUEST[$var_70];
  }
  ob_start();
  $var_74 = '';
  if ( !empty($var_73) ) {
    if ( is_array($var_73) ) {
      foreach ( $var_73 as $var_55=>$var_75 ) {
        $var_74 .= ' '.$var_55.'="'.$var_75.'"';
      }
    } else {
      $var_74 = ' onchange="'.$var_73.'"';
    }
  }
  ?>
  <select name="<?php 
  ob_end_clean();

  return( $var_45 );
}

function fn_25( $var_72, $var_88, $var_89=false, $var_90=false ) {
  $var_91 = array();
  if ( !$var_89 )
    $var_89 = array();

  foreach( $var_88 as $var_92=>$var_77 ) {
    if ( $var_90 && !isset($var_90[$var_92]) )
      continue;

    if ( !isset($var_89[$var_92]) )
      $var_89[$var_92] = false;

    switch( $var_89[$var_92] ) {
      case 'set' :
        {
          if ( is_array($var_88[$var_92]) ) {
            if ( (!isset($var_72[$var_92])) or ( join(',',$var_88[$var_92]) != $var_72[$var_92] ) ) {
              $var_91[$var_92] = "`$var_92` = ".dbEscape(join(',',$var_88[$var_92]));
            }
          } else if ( (!isset($var_72[$var_92])) or $var_72[$var_92] ) {
            $var_91[$var_92] = "`$var_92` = ''";
          }
          break;
        }
      case 'image' :
        {
          if ( is_array( $var_88[$var_92] ) ) {
            $var_93 = getimagesize( $var_88[$var_92]['tmp_name'] );
            $var_91[$var_92.'Width'] = $var_92.'Width = '.$var_93[0];
            $var_91[$var_92.'Height'] = $var_92.'Height = '.$var_93[1];
            $var_91[$var_92.'Type'] = $var_92."Type = '".$var_88[$var_92]['type']."'";
            $var_91[$var_92.'Size'] = $var_92.'Size = '.$var_88[$var_92]['size'];
            ob_start();
            readfile( $var_88[$var_92]['tmp_name'] );
            $var_91[$var_92] = $var_92." = ".dbEscape( ob_get_contents() );
            ob_end_clean();
          } else {
            $var_91[$var_92] = "$var_92 = ".dbEscape($var_77);
          }
          break;
        }
      case 'document' :
        {
          if ( is_array( $var_88[$var_92] ) ) {
            $var_93 = getimagesize( $var_88[$var_92]['tmp_name'] );
            $var_91[$var_92.'Type'] = $var_92."Type = '".$var_88[$var_92]['type']."'";
            $var_91[$var_92.'Size'] = $var_92.'Size = '.$var_88[$var_92]['size'];
            ob_start();
            readfile( $var_88[$var_92]['tmp_name'] );
            $var_91[$var_92] = $var_92.' = '.dbEscape( ob_get_contents() );
            ob_end_clean();
          } else {
            $var_91[$var_92] = $var_92 . ' = '.dbEscape($var_77);
          }
          break;
        }
      case 'file' :
        {
          $var_91[$var_92.'Type'] = $var_92.'Type = '.dbEscape($var_88[$var_92]['type']);
          $var_91[$var_92.'Size'] = $var_92.'Size = '.dbEscape($var_88[$var_92]['size']);
          ob_start();
          readfile( $var_88[$var_92]['tmp_name'] );
          $var_91[$var_92] = $var_92." = '".dbEscape( ob_get_contents() )."'";
          ob_end_clean();
          break;
        }
      case 'raw' :
        {
          if ( (!isset($var_72[$var_92])) or ($var_72[$var_92] != $var_77) ) {
            $var_91[$var_92] = $var_92 . ' = '.dbEscape($var_77);
          }
          break;
        }
      case 'toggle' :
        if ( (!isset($var_72[$var_92])) or $var_72[$var_92] != $var_77 ) {
          if ( empty($var_77) ) {
            $var_91[$var_92] = "$var_92 = 0";
          } else {
            $var_91[$var_92] = "$var_92 = 1";
            
          }
        }
        break;
      case 'integer' :
        if ( (!isset($var_72[$var_92])) or $var_72[$var_92] != $var_77 ) {
          $var_91[$var_92] = $var_92 . ' = '.intval($var_77);
        }
        break;
      default :
        {
          if ( !isset($var_72[$var_92]) || ($var_72[$var_92] != $var_77) ) {
            if ( ! isset($var_77) || $var_77 == '' ) {
              $var_91[$var_92] = "`$var_92` = NULL";
            } else {
              $var_91[$var_92] = "`$var_92` = ".dbEscape(trim($var_77));
            }
          }
          break;
        }
    } 
  } 
  foreach( $var_72 as $var_92=>$var_77 ) {
    if ( !empty($var_90[$var_92]) ) {
      if ( !empty($var_89[$var_92]) ) {
        if ( $var_89[$var_92] == 'toggle' ) {
          if ( !isset($var_88[$var_92]) && !empty($var_77) ) {
            $var_91[$var_92] = "$var_92 = 0";
          }
        } else if ( $var_89[$var_92] == 'set' ) {
          $var_91[$var_92] = "$var_92 = ''";
        }
      }
    }
  }
  return( $var_91 );
}

function fn_26( &$var_94, &$var_95 ) {
  if ( isset($_SESSION['browser']) ) {
    $var_94 = $_SESSION['browser'];
    $var_95 = $_SESSION['version'];
  } else {
    if (( preg_match( '/MSIE (.*?);/', $_SERVER['HTTP_USER_AGENT'], $var_96)) || (preg_match( '/.*Trident.*rv:(.*?)(;|\))/', $_SERVER['HTTP_USER_AGENT'], $var_96))) {
      $var_95 = $var_96[1];
      $var_94 = 'ie';
    } elseif ( preg_match( '/Chrome\/([0-9.]+)/', $_SERVER['HTTP_USER_AGENT'], $var_96) ) {
      $var_95 = $var_96[1];
      
      if ( $var_95 < 7 ) {
        $var_94 = 'oldchrome';
      } else {
        $var_94 = 'chrome';
      }
    } elseif ( preg_match( '/Safari\/([0-9.]+)/', $_SERVER['HTTP_USER_AGENT'], $var_96) ) {
      $var_95 = $var_96[1];
      $var_94 = 'safari';
    } elseif ( preg_match( '/Opera[ \/]([0-9].[0-9]{1,2})/', $_SERVER['HTTP_USER_AGENT'], $var_96) ) {
      $var_95 = $var_96[1];
      $var_94 = 'opera';
    } elseif ( preg_match( '/Konqueror\/([0-9.]+)/', $_SERVER['HTTP_USER_AGENT'], $var_96) ) {
      $var_95 = $var_96[1];
      $var_94 = 'konqueror';
    } elseif ( preg_match( '/Mozilla\/([0-9].[0-9]{1,2})/', $_SERVER['HTTP_USER_AGENT'], $var_96) ) {
      $var_95 = $var_96[1];
      $var_94 = 'mozilla';
    } else {
      $var_95 = 0;
      $var_94 = 'unknown';
    }
    $_SESSION['browser'] = $var_94;
    $_SESSION['version'] = $var_95;
  }
}

function fn_27() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'mozilla' );
}

function fn_28() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'konqueror' );
}

function fn_29() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'ie' );
}

function fn_30() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'oldchrome' );
}

function fn_31() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'chrome' );
}

function fn_32() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'opera' );
}

function fn_33() {
  fn_26( $var_94, $var_95 );

  return( $var_94 == 'safari' );
}

function fn_34() {
  return ( preg_match( '/Win/', $_SERVER['HTTP_USER_AGENT'] ) );
}

function fn_35() {
  return( fn_28() );
}

function fn_36() {
  
  return( var_97 == 'yes' || ( var_97 == 'auto' && (!fn_29() && !fn_30()) ) );
}

function fn_37() {
  if ( (var_98 && !file_exists( var_99.'/'.var_51 )) ) {
    Warning ( 'ZM_OPT_CAMBOZOLA is enabled, but the system cannot find '.var_99.'/'.var_51 );
  }

  return( (var_98 && file_exists( var_99.'/'.var_51 )) );
}

function fn_38() {
  return( fn_36() | fn_37() );
}

function fn_39( $var_100 ) {
  $var_64 = var_101.'/zmpkg.pl '.escapeshellarg( $var_100 );
  $var_64 .= ' 2>/dev/null >&- <&- >/dev/null';
  exec( $var_64 );
}

function fn_40( $var_100, $var_102=false, $var_27=false ) {
  $var_64 = escapeshellcmd(var_101).'/zmdc.pl '.$var_100;
  if ( $var_102 ) {
    $var_64 .= ' ' . $var_102;
    if ( $var_27 ) {
      $var_64 .= ' ' . $var_27;
    }
  }
  $var_64 = escapeshellcmd( $var_64 );
  
Logger::Debug("daemonControl $var_64");
  exec( $var_64 );
}

function fn_41($var_48, $var_104=false) {
  $var_105 = new class_1( $var_48 );
  return $var_105->fn_41($var_104);
}

function fn_42($var_48, $var_104=false) {
  $var_105 = new class_1($var_48);
  return $var_105->fn_42($var_104);
}

function fn_43() {
  global $var_107;

  if ( !isset($var_107) ) {
    if ( fn_47() ) {
      $var_64 = var_101."/zmdc.pl status";
      $var_107 = shell_exec( $var_64 );
    } else {
      $var_107 = '';
    }
  }
}

function fn_44( $var_102, $var_27=false ) {
  global $var_107;

  fn_43();

  $var_64 = $var_102;
  if ( $var_27 )
    $var_64 .= ' ' . $var_27;
  return( strpos( $var_107, "'$var_64' running" ) !== false );
}

function fn_45( $var_48 ) {
  if ( $var_48['Type'] == 'Local' ) {
    $var_108 = '-d '.$var_48['Device'];
  } else {
    $var_108 = '-m '.$var_48['Id'];
  }
  return( fn_44( 'zmc', $var_108 ) );
}

function fn_46( $var_48 ) {
  if ( is_array( $var_48 ) ) {
    $var_48 = $var_48['Id'];
  }
  return( fn_44( 'zma', "-m $var_48" ) );
}

function fn_47( $var_102=false, $var_27=false ) {
  $var_64 = var_101.'/zmdc.pl check';
  if ( $var_102 ) {
    $var_64 .= ' ' . $var_102;
    if ( $var_27 )
      $var_64 .= ' '. $var_27;
  }
  $var_64 = escapeshellcmd( $var_64 );
  $var_109 = exec( $var_64 );
  return( preg_match( '/running/', $var_109 ) );
}

function fn_48( $var_48 ) {
  if ( $var_48['Type'] == 'Local' ) {
    $var_108 = '-d '.$var_48['Device'];
  } else {
    $var_108 = '-m '.$var_48['Id'];
  }
  return( fn_47( 'zmc', $var_108 ) );
}

function fn_49( $var_48 ) {
  if ( is_array( $var_48 ) ) {
    $var_48 = $var_48['Id'];
  }
  return( fn_47( 'zma', "-m $var_48" ) );
}

function fn_50( $var_55, $var_111, $var_49=var_112, $var_113=false, $var_114=false ) {
  $var_56 = new class_0( $var_55 );
  return $var_56->fn_50( $var_111, $var_49, $var_113, $var_114 );
}

function fn_51( $var_57, $var_28='&amp;' ) {
  return( '?view=image'.$var_28.'path='.$var_57 );
}

function fn_52( $var_55, $var_114=false ) {
  
  if ( !($var_111 = dbFetchOne( "SELECT * FROM Frames WHERE EventId=? AND Score=? ORDER BY FrameId LIMIT 1", NULL, array( $var_55['Id'], $var_55['MaxScore'] ) )) )
    return( false );

  $var_115 = $var_111['FrameId'];

  if ( var_116 ) {
    $var_117 = var_116;
    $var_49 = (var_112*var_116)/$var_55['Width'];
    $var_118 = fn_55( $var_55['Height'], $var_49 );
  } elseif ( var_119 ) {
    $var_118 = var_119;
    $var_49 = (var_112*var_119)/$var_55['Height'];
    $var_117 = fn_55( $var_55['Width'], $var_49 );
  } else {
    Fatal( "No thumbnail width or height specified, please check in Options->Web" );
  }

  $var_93 = fn_50( $var_55, $var_111, $var_49, false, $var_114 );
  if ( ! $var_93 ) {
    return ( false );
  }

  $var_120 = $var_111;
  $var_120['Path'] = $var_93['thumbPath'];
  $var_120['Width'] = (int)$var_117;
  $var_120['Height'] = (int)$var_118;

  return( $var_120 );
}

function fn_53( $var_55, $var_43, $var_121, $var_49, $var_114=false ) {
  $var_100 = var_101."/zmvideo.pl -e ".$var_55['Id']." -f ".$var_43." -r ".sprintf( "%.2F", ($var_121/var_122) );
  if ( preg_match( '/\d+x\d+/', $var_49 ) )
    $var_100 .= " -S ".$var_49;
  else
    if ( version_compare( phpversion(), "4.3.10", ">=") )
      $var_100 .= " -s ".sprintf( "%.2F", ($var_49/var_112) );
    else
      $var_100 .= " -s ".sprintf( "%.2f", ($var_49/var_112) );
  if ( $var_114 )
    $var_100 .= " -o";
  $var_100 = escapeshellcmd( $var_100 );
  $var_109 = exec( $var_100, $var_123, $var_124 );
Logger::Debug("generating Video $var_100: result($var_109 outptu:(".implode("\n", $var_123 )." status($var_124");
  return( $var_124?"":rtrim($var_109) );
}

function fn_54( $var_125 ) {
  $var_100 = var_101.'/zmfilter.pl --filter_id '.escapeshellarg($var_125);
  $var_109 = exec($var_100, $var_123, $var_124);
  dbQuery('DELETE FROM Filters WHERE Id=?', array($var_125));
  return $var_124;
}



function fn_55( $var_126, $var_127 ) {
  $var_128 = $var_126;
  for ( $var_86 = 1; $var_86 < func_num_args(); $var_86++ ) {
    $var_49 = func_get_arg( $var_86 );
    if ( !empty($var_49) && ($var_49 != 'auto') && ($var_49 != var_112) )
      $var_128 = (int)(($var_128*$var_49)/var_112);
  }
  return( $var_128 );
}

function fn_56( $var_126, $var_127 ) {
  $var_128 = $var_126;
  for ( $var_86 = 1; $var_86 < func_num_args(); $var_86++ ) {
    $var_49 = func_get_arg( $var_86 );
    if ( !empty($var_49) && $var_49 != var_112 )
      $var_128 = (int)(($var_128*var_112)/$var_49);
  }
  return( $var_128 );
}

function fn_57() {
  global $var_58;
  if ( !empty($var_58['MonitorIds']) )
    $var_129 = " and MonitorId in (".join( ",", preg_split( '/["\'\s]*,["\'\s]*/', $var_58['MonitorIds'] ) ).")";
  else
    $var_129 = '';
  return( $var_129 );
}


function fn_58( $var_130=false, $var_28='&amp;' ) {
  global $var_131, $var_132, $var_133, $var_134; 
  if (isset($_REQUEST['filter']['Query']['sort_field'])) { 
    $_REQUEST['sort_field'] = $_REQUEST['filter']['Query']['sort_field'];
  }
  if (isset($_REQUEST['filter']['Query']['sort_asc'])) {
    $_REQUEST['sort_asc'] = $_REQUEST['filter']['Query']['sort_asc'];
  }
  if (isset($_REQUEST['filter']['Query']['limit'])) {
    $_REQUEST['limit'] = $_REQUEST['filter']['Query']['limit'];
  }
  if ( empty($_REQUEST['sort_field']) ) {
    $_REQUEST['sort_field'] = var_135;
    $_REQUEST['sort_asc'] = (var_136 == 'asc');
  }
  switch( $_REQUEST['sort_field'] ) {
    case 'Id' :
      $var_132 = 'E.Id';
      break;
    case 'MonitorName' :
      $var_132 = 'M.Name';
      break;
    case 'Name' :
      $var_132 = 'E.Name';
      break;
    case 'Cause' :
      $var_132 = 'E.Cause';
      break;
    case 'DateTime' :
      $var_132 = 'E.StartTime';
      $_REQUEST['sort_field'] = 'StartTime';
      break;
    case 'DiskSpace' :
      $var_132 = 'E.DiskSpace';
      break;
    case 'StartTime' :
      $var_132 = 'E.StartTime';
      break;
    case 'EndTime' :
      $var_132 = 'E.EndTime';
      break;
    case 'Length' :
      $var_132 = 'E.Length';
      break;
    case 'Frames' :
      $var_132 = 'E.Frames';
      break;
    case 'AlarmFrames' :
      $var_132 = 'E.AlarmFrames';
      break;
    case 'TotScore' :
      $var_132 = 'E.TotScore';
      break;
    case 'AvgScore' :
      $var_132 = 'E.AvgScore';
      break;
    case 'MaxScore' :
      $var_132 = 'E.MaxScore';
      break;
    default:
      $var_132 = 'E.StartTime';
      break;
  }
  $var_133 = $_REQUEST['sort_asc']?'asc':'desc';
  if ( !$_REQUEST['sort_asc'] )
    $_REQUEST['sort_asc'] = 0;
  $var_131 = $var_28.'sort_field='.fn_107($_REQUEST['sort_field']).$var_28.'sort_asc='.fn_107($_REQUEST['sort_asc']);
  if ( !isset($_REQUEST['limit']) )
    $_REQUEST['limit'] = '';
  if ( $var_130 ) {
    $_SESSION['sort_field'] = fn_107($_REQUEST['sort_field']);
    $_SESSION['sort_asc'] = fn_107($_REQUEST['sort_asc']);
  }
  if ($_REQUEST['limit'] != '') {
    $var_134 = "&limit=".$_REQUEST['limit'];
  }
}

function fn_59() {
  return array(
               'and' => translate('ConjAnd'),
               'or'  => translate('ConjOr')
               );
}

function fn_60(&$var_137, $var_130=false, $var_28='&amp;') {
  $var_137['query'] = '';
  $var_137['sql'] = '';
  $var_137['fields'] = '';

  $var_138 = fn_59();
  $var_139 = NULL;

  $var_140 = isset($var_137['Query']) ? $var_137['Query']['terms'] : NULL;
  if ( isset($var_140) && count($var_140) ) {
    for ( $var_86 = 0; $var_86 < count($var_140); $var_86++ ) {
      if ( isset($var_140[$var_86]['cnj']) && array_key_exists($var_140[$var_86]['cnj'], $var_138) ) {
        $var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][cnj]").'='.urlencode($var_140[$var_86]['cnj']);
        $var_137['sql'] .= ' '.$var_140[$var_86]['cnj'].' ';
        $var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][cnj]\" value=\"".htmlspecialchars($var_140[$var_86]['cnj'])."\"/>\n";
      }
      if ( isset($var_140[$var_86]['obr']) && (string)(int)$var_140[$var_86]['obr'] == $var_140[$var_86]['obr'] ) {
        $var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][obr]").'='.urlencode($var_140[$var_86]['obr']);
        $var_137['sql'] .= ' '.str_repeat('(', $var_140[$var_86]['obr']).' ';
        $var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][obr]\" value=\"".htmlspecialchars($var_140[$var_86]['obr'])."\"/>\n";
      }
      if ( isset($var_140[$var_86]['attr']) ) {
        $var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][attr]").'='.urlencode($var_140[$var_86]['attr']);
        $var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][attr]\" value=\"".htmlspecialchars($var_140[$var_86]['attr'])."\"/>\n";
        switch ( $var_140[$var_86]['attr'] ) {
          case 'MonitorName':
            $var_137['sql'] .= 'M.Name';
            break;
          case 'ServerId':
          case 'MonitorServerId':
            $var_137['sql'] .= 'M.ServerId';
            break;
          case 'StorageServerId':
            $var_137['sql'] .= 'S.ServerId';
            break;
          case 'FilterServerId':
            $var_137['sql'] .= var_141;
            break;

          case 'DateTime':
            $var_137['sql'] .= 'E.StartTime';
            break;
          case 'Date':
            $var_137['sql'] .= 'to_days( E.StartTime )';
            break;
          case 'Time':
            $var_137['sql'] .= 'extract( hour_second from E.StartTime )';
            break;
          case 'Weekday':
            $var_137['sql'] .= 'weekday( E.StartTime )';
            break;

          case 'StartDateTime':
            $var_137['sql'] .= 'E.StartTime';
            break;
          case 'StartDate':
            $var_137['sql'] .= 'to_days( E.StartTime )';
            break;
          case 'StartTime':
            $var_137['sql'] .= 'extract( hour_second from E.StartTime )';
            break;
          case 'StartWeekday':
            $var_137['sql'] .= 'weekday( E.StartTime )';
            break;

          case 'EndDateTime':
            $var_137['sql'] .= 'E.EndTime';
            break;
          case 'EndDate':
            $var_137['sql'] .= 'to_days( E.EndTime )';
            break;
          case 'EndTime':
            $var_137['sql'] .= 'extract( hour_second from E.EndTime )';
            break;
          case 'EndWeekday':
            $var_137['sql'] .= 'weekday( E.EndTime )';
            break;
          case 'Id':
          case 'Name':
          case 'DiskSpace':
          case 'MonitorId':
          case 'StorageId':
          case 'Length':
          case 'Frames':
          case 'AlarmFrames':
          case 'TotScore':
          case 'AvgScore':
          case 'MaxScore':
          case 'Cause':
          case 'Notes':
          case 'StateId':
          case 'Archived':
            $var_137['sql'] .= 'E.'.$var_140[$var_86]['attr'];
            break;
          case 'DiskPercent':
            
            if ( ! $var_139 ) {
              for ( $var_142 = 0; $var_142 < count($var_140); $var_142++ ) {
                if ( isset($var_140[$var_142]['attr']) and $var_140[$var_142]['attr'] == 'StorageId' and isset($var_140[$var_142]['val']) ) {
                  $var_139 = new class_2($var_140[$var_142]['val']);
                  break;
                }
              } 
              if ( ! $var_139 ) $var_139 = new class_2();
            } 

            $var_137['sql'] .= fn_67( $var_139->Path() );
            break;
          case 'DiskBlocks':
            
            if ( ! $var_139 ) {
              for ( $var_142 = $var_86; $var_142 < count($var_140); $var_142++ ) {
                if ( isset($var_140[$var_86]['attr']) and $var_140[$var_86]['attr'] == 'StorageId' and isset($var_140[$var_142]['val']) ) {
                  $var_139 = new class_2($var_140[$var_86]['val']);
                }
              } 
            } 
            $var_137['sql'] .= fn_68( $var_139 );
            break;
          case 'SystemLoad':
            $var_137['sql'] .= fn_66();
            break;
        }
        $var_144 = array();
        foreach ( preg_split( '/["\'\s]*?,["\'\s]*?/', preg_replace( '/^["\']+?(.+)["\']+?$/', '$1', $var_140[$var_86]['val'] ) ) as $var_77 ) {
          switch ( $var_140[$var_86]['attr'] ) {
            case 'MonitorName':
            case 'Name':
            case 'Cause':
            case 'Notes':
              $var_77 = dbEscape($var_77);
              break;
            case 'MonitorServerId':
            case 'FilterServerId':
            case 'StorageServerId':
            case 'ServerId':
              if ( $var_77 == 'ZM_SERVER_ID' ) {
                $var_77 = var_141;
              } else if ( $var_77 == 'NULL' ) {

              } else {
                $var_77 = dbEscape($var_77);
              }
              break;
            case 'StorageId':
              $var_139 = new class_2( $var_77 );
              if ( $var_77 != 'NULL' )
                $var_77 = dbEscape($var_77);
              break;
            case 'DateTime':
            case 'StartDateTime':
            case 'EndDateTime':
              if ( $var_77 != 'NULL' )
                $var_77 = "'".strftime( var_145, strtotime( $var_77 ) )."'";
              break;
            case 'Date':
            case 'StartDate':
            case 'EndDate':
              if ( $var_77 != 'NULL' )
                $var_77 = "to_days( '".strftime( var_145, strtotime( $var_77 ) )."' )";
              break;
            case 'Time':
            case 'StartTime':
            case 'EndTime':
              if ( $var_77 != 'NULL' )
              $var_77 = "extract( hour_second from '".strftime( var_145, strtotime( $var_77 ) )."' )";
              break;
            default :
              if ( $var_77 != 'NULL' )
                $var_77 = dbEscape($var_77);
              break;
          }
          $var_144[] = $var_77;
        }

        switch ( $var_140[$var_86]['op'] ) {
          case '=' :
          case '!=' :
          case '>=' :
          case '>' :
          case '<' :
          case '<=' :
            $var_137['sql'] .= ' '.$var_140[$var_86]['op'].' '. $var_77;
            break;
          case '=~' :
            $var_137['sql'] .= ' regexp '.$var_77;
            break;
          case '!~' :
            $var_137['sql'] .= ' not regexp '.$var_77;
            break;
          case '=[]' :
          case 'IN' :
            $var_137['sql'] .= ' in ('.join( ',', $var_144 ).')';
            break;
          case '![]' :
            $var_137['sql'] .= ' not in ('.join( ',', $var_144 ).')';
            break;
          case 'IS' :
            if ( $var_77 == 'Odd' )  {
              $var_137['sql'] .= ' % 2 = 1';
            } else if ( $var_77 == 'Even' )  {
              $var_137['sql'] .= ' % 2 = 0';
            } else {
              $var_137['sql'] .= " IS $var_77";
            }
            break;
          case 'IS NOT' :
            $var_137['sql'] .= " IS NOT $var_77";
            break;
          default:
            Warning("Invalid operator in filter: " . $var_140[$var_86]['op'] );
        }

        $var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][op]").'='.urlencode($var_140[$var_86]['op']);
        $var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][op]\" value=\"".htmlspecialchars($var_140[$var_86]['op'])."\"/>\n";
	if ( isset($var_140[$var_86]['val']) ) {
		$var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][val]").'='.urlencode($var_140[$var_86]['val']);
		$var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][val]\" value=\"".htmlspecialchars($var_140[$var_86]['val'])."\"/>\n";
	}
      } 
      if ( isset($var_140[$var_86]['cbr']) && (string)(int)$var_140[$var_86]['cbr'] == $var_140[$var_86]['cbr'] ) {
        $var_137['query'] .= $var_28.urlencode("filter[Query][terms][$var_86][cbr]").'='.urlencode($var_140[$var_86]['cbr']);
        $var_137['sql'] .= ' '.str_repeat( ')', $var_140[$var_86]['cbr'] ).' ';
        $var_137['fields'] .= "<input type=\"hidden\" name=\"filter[Query][terms][$var_86][cbr]\" value=\"".htmlspecialchars($var_140[$var_86]['cbr'])."\"/>\n";
      }
    }
    if ( $var_137['sql'] )
      $var_137['sql'] = ' and ( '.$var_137['sql'].' )';
    if ( $var_130 ) {
      $_SESSION['filter'] = $var_137;
    }
  }
}



function fn_61( $var_137, $var_146, $var_147=false ) {
  if ( $var_146 < 0 )
    $var_146 = 0;
  
  if ( ! isset( $var_137['Query']['terms'] ) )
    $var_137['Query']['terms'] = array();
  elseif( $var_146 > count($var_137['Query']['terms']) )
    $var_146 = count($var_137['Query']['terms']);
  if ( $var_147 && $var_146 == 0 )
    unset( $var_147['cnj'] );
  array_splice( $var_137['Query']['terms'], $var_146, 0, array( $var_147?$var_147:array() ) );

  return( $var_137 );
}

function fn_62( $var_137, $var_146 ) {
  if ( $var_146 < 0 )
    $var_146 = 0;
  elseif( $var_146 >= count($var_137['Query']['terms']) )
    $var_146 = count($var_137['Query']['terms']);
  array_splice( $var_137['Query']['terms'], $var_146, 1 );

  return( $var_137 );
}

function fn_63( $var_148, $var_149, $var_150, $var_151, $var_28='&amp;' ) {
  global $var_1;

  $var_152 = '';
  if ( $var_148 > 1 ) {
    if ( $var_149 ) {
      if ( $var_149 < 0 )
        $var_149 = 1;
      if ( $var_149 > $var_148 )
        $var_149 = $var_148;

      if ( $var_149 > 1 ) {
        if ( false && $var_149 > 2 ) {
          $var_152 .= '<a href="?view='.$var_1.$var_28.'page=1'.$var_151.'">&lt;&lt;</a>';
        }
        $var_152 .= '<a href="?view='.$var_1.$var_28.'page='.($var_149-1).$var_151.'">&lt;</a>';

        $var_153 = array();
        $var_154 = array();
        $var_155 = max(2,log($var_149-1)/log($var_150));
        for ( $var_86 = 0; $var_86 < $var_150; $var_86++ ) {
          $var_156 = round($var_149-pow($var_155,$var_86));
          if ( isset($var_154[$var_156]) )
            continue;
          if ( $var_156 <= 1 )
            break;
          $var_154[$var_156] = true;
          array_unshift( $var_153, $var_156 );
        }
        if ( !isset($var_154[1]) )
          array_unshift( $var_153, 1 );

        foreach ( $var_153 as $var_156 ) {
          $var_152 .= '<a href="?view='.$var_1.$var_28.'page='.$var_156.$var_151.'">'.$var_156.'</a>&nbsp;';
        }

      }
      $var_152 .= '-&nbsp;'.$var_149.'&nbsp;-';
      if ( $var_149 < $var_148 ) {
        $var_153 = array();
        $var_154 = array();
        $var_157 = max(2,log($var_148-$var_149)/log($var_150));
        for ( $var_86 = 0; $var_86 < $var_150; $var_86++ ) {
          $var_156 = round($var_149+pow($var_157,$var_86));
          if ( isset($var_154[$var_156]) )
            continue;
          if ( $var_156 > $var_148 )
            break;
          $var_154[$var_156] = true;
          array_push( $var_153, $var_156 );
        }
        if ( !isset($var_154[$var_148]) )
          array_push( $var_153, $var_148 );

        foreach ( $var_153 as $var_156 ) {
          $var_152 .= '&nbsp;<a href="?view='.$var_1.$var_28.'page='.$var_156.$var_151.'">'.$var_156.'</a>';
        }
        $var_152 .= '<a href="?view='.$var_1.$var_28.'page='.($var_149+1).$var_151.'">&gt;</a>';
        if ( false && $var_149 < ($var_148-1) ) {
          $var_152 .= '<a href="?view='.$var_1.$var_28.'page='.$var_148.$var_151.'">&gt;&gt;</a>';
        }
      }
    }
  }
  return( $var_152 );
}

function fn_64( $var_158, $var_28='&amp;' ) {
  global $var_1;
  return( '?view='.$var_1.$var_28.'page=1'.$_REQUEST['filter']['query'].$var_28.'sort_field='.$var_158.$var_28.'sort_asc='.($_REQUEST['sort_field'] == $var_158?!$_REQUEST['sort_asc']:0).$var_28.'limit='.$_REQUEST['limit'] );
}

function fn_65( $var_158 ) {
  if ( $_REQUEST['sort_field'] == $var_158 )
    if ( $_REQUEST['sort_asc'] )
      return( '(^)' );
    else
      return( '(v)' );
  return( false );
}

function fn_66() {
  $var_159 = sys_getloadavg();
  return( $var_159[0] );
}

function fn_67($var_57 = var_160) {
  $var_161 = disk_total_space($var_57);
  if ( $var_161 === false ) {
    Error('disk_total_space returned false. Verify the web account user has access to ' . $var_57 );
    return 0;
  } elseif ( $var_161 == 0 ) {
    Error('disk_total_space indicates the following path has a filesystem size of zero bytes ' . $var_57 );
    return 100;
  }
  $var_162 = disk_free_space($var_57);
  if ( $var_162 === false ) {
    Error('disk_free_space returned false. Verify the web account user has access to ' . $var_57 );
  }
  $var_163 = round((($var_161 - $var_162) / $var_161) * 100);
  return( $var_163 );
}

function fn_68() {
  if ( ! $var_139 ) $var_139 = new class_2();
  $var_164 = shell_exec( 'df '.escapeshellarg($var_139->Path() ));
  $var_163 = -1;
  if ( preg_match( '/\s(\d+)\s+\d+\s+\d+%/ms', $var_164, $var_84 ) )
    $var_163 = $var_84[1];
  return( $var_163 );
}

function fn_69() {

    $var_159 = fn_66();
    $var_165 = fn_67();
    $var_166 = fn_67(var_167);
    $var_168 = fn_70();

    $var_169 = $var_159 / $var_168;

    
    if ( $var_169 <= 0.75 ) {
        $var_170=$var_159;
    } elseif ( $var_169 <= 0.9 ) {
        $var_170="<span class=\"warning\">$var_159</span>";
    } elseif ( $var_169 <= 1.1 ) {
        $var_170="<span class=\"error\">$var_159</span>";
    } else {
        $var_170="<span class=\"critical\">$var_159</span>";
    }

    
    if ( $var_165 < 98 ) {
        $var_171="$var_165%";
    } elseif ( $var_165 <= 99 ) {
        $var_171="<span class=\"warning\">$var_165%</span>";
    } else {
        $var_171="<span class=\"error\">$var_165%</span>";
    }

    
    if ( $var_166 < 90 ) {
        if ( disk_free_space(var_167) > 209715200 ) { 
            $var_172="$var_166%";
        } else {
            $var_172="<span class=\"warning\">$var_166%</span>";
        }
    } elseif ( $var_166 < 100 ) {
        $var_172="<span class=\"warning\">$var_166%</span>";
    } else {
        $var_172="<span class=\"critical\">$var_166%</span>";
    }

    $var_173 = translate('Load').": $var_170 - ".translate('Disk').": $var_171 - ".var_167.": $var_172";

    return( $var_173 );
}

function fn_70() {

    if (is_readable("/proc/cpuinfo") ) { 
        preg_match_all('/^processor/m', file_get_contents('/proc/cpuinfo'), $var_84); 
        $var_174 = count($var_84[0]);
    } else { 
        $var_84 = explode(":", shell_exec("sysctl hw.ncpu"));
        $var_174 = trim($var_84[1]);
    }

    return( $var_174 );
}




function fn_71() {
  if ( var_175 ) {
    list( $var_176, $var_177 ) = explode( "=", var_175 );
?>
    <input type="hidden" name="<?php 
  $var_178 = 3;
  $var_179 = explode( '.', $var_95 );
  array_splice( $var_179, $var_178 );
  while ( count($var_179) < $var_178 ) {
    $var_179[] = 0;
  }
  foreach ( $var_179 as $var_180 ) {
    $var_180 = sprintf( '%02d', $var_180 );
    while ( strlen($var_180) < 2 ) {
      $var_180 = '0'.$var_180;
    }
    $var_181 .= $var_180;
  }
  return( $var_181 );
}

function fn_72() {
  $var_182 = 1;
  $var_183 = 'select * from Monitors order by Sequence asc, Id asc';
  foreach( dbFetchAll( $var_183 ) as $var_48 ) {
    if ( $var_48['Sequence'] != $var_182 ) {
      dbQuery( 'update Monitors set Sequence = ? WHERE Id=?', array( $var_182, $var_48['Id'] ) );
    }
    $var_182++;
  }
}

function fn_73() {
  foreach ( func_get_args() as $var_184 ) {
    if ( !empty( $var_184 ) )
      return( $var_184 );
  }
}

function fn_74( $var_185, $var_186 ) {
  global $var_187;

  $var_188 = min( $var_185[0]['x'], $var_185[1]['x'] );
  $var_189 = max( $var_185[0]['x'], $var_185[1]['x'] );
  $var_190 = min( $var_186[0]['x'], $var_186[1]['x'] );
  $var_191 = max( $var_186[0]['x'], $var_186[1]['x'] );
  $var_192 = min( $var_185[0]['y'], $var_185[1]['y'] );
  $var_193 = max( $var_185[0]['y'], $var_185[1]['y'] );
  $var_194 = min( $var_186[0]['y'], $var_186[1]['y'] );
  $var_195 = max( $var_186[0]['y'], $var_186[1]['y'] );

  
  if ( $var_189 < $var_190 || $var_191 < $var_188 ||$var_193 < $var_194 || $var_195 < $var_192 ) {
    if ( $var_187 ) 
    return( false );
  }

  $var_196 = $var_185[1]['x'] - $var_185[0]['x'];
  $var_197 = $var_185[1]['y'] - $var_185[0]['y'];
  $var_198 = $var_186[1]['x'] - $var_186[0]['x'];
  $var_199 = $var_186[1]['y'] - $var_186[0]['y'];

  if ( $var_196 ) {
    $var_200 = $var_197/$var_196;
    $var_201 = $var_185[0]['y'] - ($var_200 * $var_185[0]['x']);
  } else {
    $var_201 = $var_185[0]['y'];
  }
  if ( $var_198 ) {
    $var_202 = $var_199/$var_198;
    $var_203 = $var_186[0]['y'] - ($var_202 * $var_186[0]['x']);
  } else {
    $var_203 = $var_186[0]['y'];
  }

  if ( $var_196 && $var_198 ) { 
    if ( $var_200 != $var_202 ) { 
      $var_204 = ( $var_203 - $var_201 ) / ( $var_200 - $var_202 );

      if ( $var_204 >= $var_188 && $var_204 <= $var_189 && $var_204 >= $var_190 && $var_204 <= $var_191 ) {
        if ( $var_187 ) 
        return( true );
      } else {
        if ( $var_187 ) 
        return( false );
      }
    } elseif ( $var_201 == $var_203 ) {
      
      if ( $var_187 ) 
      return( true );
    } else {
      
      if ( $var_187 ) 
      return( false );
    }
  } elseif ( !$var_196 ) { 
    $var_205 = ( $var_202 * $var_185[0]['x'] ) * $var_203;
    if ( $var_205 >= $var_192 && $var_205 <= $var_193 ) {
      if ( $var_187 ) 
      return( true );
    } else {
      if ( $var_187 ) 
      return( false );
    }
  } elseif ( !$var_198 ) { 
    $var_205 = ( $var_200 * $var_186[0]['x'] ) * $var_201;
    if ( $var_205 >= $var_194 && $var_205 <= $var_195 ) {
      if ( $var_187 ) 
      return( true );
    } else {
      if ( $var_187 ) 
      return( false );
    }
  } else { 
    if ( $var_185[0]['x'] == $var_186[0]['x'] ) {
      
      if ( $var_187 ) 
      return( true );
    } else {
      
      if ( $var_187 ) 
      return( false );
    }
  }
  if ( $var_187 ) 
  return( false );
}

function fn_75( $var_206 ) {
  global $var_187;

  $var_207 = count($var_206);
  $var_208 = array();
  for ( $var_142 = 0, $var_86 = $var_207-1; $var_142 < $var_207; $var_86 = $var_142++ ) {
    $var_208[] = array( $var_206[$var_86], $var_206[$var_142] );
  }

  for ( $var_86 = 0; $var_86 <= ($var_207-2); $var_86++ ) {
    for ( $var_142 = $var_86+2; $var_142 < $var_207+min(0,$var_86-1); $var_142++ ) {
      if ( $var_187 ) 
      if ( fn_74( $var_208[$var_86], $var_208[$var_142] ) ) {
        if ( $var_187 ) 
        return( true );
      }
    }
  }
  return( false );
}

function fn_76( $var_206, $var_209=0 ) {
  $var_210 = 0.0;
  $var_211 = 0.0;
  if ( !$var_209 )
    $var_209 = fn_79( $var_206 );
  for ( $var_86 = 0, $var_142 = count($var_206)-1; $var_86 < count($var_206); $var_142 = $var_86++ ) {
    $var_212 = ($var_206[$var_86]['x'] * $var_206[$var_142]['y']) - ($var_206[$var_142]['x'] * $var_206[$var_86]['y']);
    $var_210 += ($var_206[$var_86]['x'] + $var_206[$var_142]['x']) * var_212;
    $var_211 += ($var_206[$var_86]['y'] + $var_206[$var_142]['y']) * var_212;
  }
  $var_210 = intval(round(abs($var_210/(6.0*$var_209))));
  $var_211 = intval(round(abs($var_211/(6.0*$var_209))));
  printf( "X:%cx, Y:$var_211<br>" );
  return( array( 'x'=>$var_210, 'y'=>$var_211 ) );
}

function fn_77( $var_213, $var_214 ) {
  if ( $var_213['min_y'] == $var_214['min_y'] )
    return( intval($var_213['min_x'] - $var_214['min_x']) );
  else
    return( intval($var_213['min_y'] - $var_214['min_y']) );
}

function fn_78( $var_213, $var_214 ) {
  return( intval($var_213['min_x'] - $var_214['min_x']) );
}

function fn_79( $var_206 ) {
  global $var_187;

  $var_207 = count($var_206);
  $var_215 = array();
  for ( $var_142 = 0, $var_86 = $var_207-1; $var_142 < $var_207; $var_86 = $var_142++ ) {
    $var_216 = $var_206[$var_86]['x'];
    $var_217 = $var_206[$var_142]['x'];
    $var_218 = $var_206[$var_86]['y'];
    $var_219 = $var_206[$var_142]['y'];

    
    if ( $var_218 == $var_219 )
      continue;

    $var_220 = $var_217 - $var_216;
    $var_221 = $var_219 - $var_218;

    $var_215[] = array(
        'min_y' => $var_218<$var_219?$var_218:$var_219,
        'max_y' => ($var_218<$var_219?$var_219:$var_218)+1,
        'min_x' => $var_218<$var_219?$var_216:$var_217,
        '_1_m' => $var_220/$var_221,
        );
  }

  usort( $var_215, '_CompareXY' );

  if ( $var_187 ) {
    for ( $var_86 = 0; $var_86 < count($var_215); $var_86++ ) {
      printf( '%d: min_y: %d, max_y:%d, min_x:%.2f, 1/m:%.2f<br>', $var_86, $var_215[$var_86]['min_y'], $var_215[$var_86]['max_y'], $var_215[$var_86]['min_x'], $var_215[$var_86]['_1_m'] );
    }
  }

  $var_209 = 0.0;
  $var_222 = array();
  $var_205 = $var_215[0]['min_y'];
  do {
    for ( $var_86 = 0; $var_86 < count($var_215); $var_86++ ) {
      if ( $var_215[$var_86]['min_y'] == $var_205 ) {
        if ( $var_187 ) printf( 'Moving global edge<br>' );
        $var_222[] = $var_215[$var_86];
        array_splice( $var_215, $var_86, 1 );
        $var_86--;
      } else {
        break;
      }
    }
    usort( $var_222, '_CompareX' );
    if ( $var_187 ) {
      for ( $var_86 = 0; $var_86 < count($var_222); $var_86++ ) {
        printf( '%d - %d: min_y: %d, max_y:%d, min_x:%.2f, 1/m:%.2f<br>', $var_205, $var_86, $var_222[$var_86]['min_y'], $var_222[$var_86]['max_y'], $var_222[$var_86]['min_x'], $var_222[$var_86]['_1_m'] );
      }
    }
    $var_223 = 0;
    $var_224 = 0;
    $var_225 = false;
    for ( $var_86 = 0; $var_86 < count($var_222); $var_86++ ) {
      $var_204 = intval(round($var_222[$var_86]['min_x']));
      if ( $var_225 ) {
        $var_224 += ($var_204 - $var_223)+1;
        $var_209 += $var_224;
      }
      if ( $var_222[$var_86]['max_y'] != $var_205 )
        $var_225 = !$var_225;
      $var_223 = $var_204;
    }
    if ( $var_187 ) printf( '%d: Area:%d<br>', $var_205, $var_224 );
    $var_205++;
    for ( $var_86 = 0; $var_86 < count($var_222); $var_86++ ) {
      if ( $var_205 >= $var_222[$var_86]['max_y'] ) { 
        if ( $var_187 ) printf( 'Deleting active_edge<br>' );
        array_splice( $var_222, $var_86, 1 );
        $var_86--;
      } else {
        $var_222[$var_86]['min_x'] += $var_222[$var_86]['_1_m'];
      }
    }
  } while ( count($var_215) || count($var_222) );
  if ( $var_187 ) printf( 'Area:%d<br>', $var_209 );
  return( $var_209 );
}

function fn_80( $var_206 ) {
  $var_209 = 0.0;
  $var_226 = 0.0;
  for ( $var_86 = 0, $var_142 = count($var_206)-1; $var_86 < count($var_206); $var_142 = $var_86++ ) {
    $var_227 = ($var_206[$var_86]['x'] - $var_206[$var_142]['x']);
    $var_228 = ($var_206[$var_86]['y'] - $var_206[$var_142]['y']);
    $var_229 = ($var_206[$var_86]['y'] + $var_206[$var_142]['y']);
    $var_230 = sqrt(pow(abs($var_227)+1,2) + pow(abs($var_228)+1,2) );
    $var_226 += $var_230;
    $var_231 = ($var_227 * $var_229 );
    $var_209 += $var_231;
    printf( "%d->%d, %d-%d=%.2f, %d+%d=%.2f(%.2f), %.2f, %.2f<br>", var_86, var_142, $var_206[$var_86]['x'], $var_206[$var_142]['x'], $var_227, $var_206[$var_86]['y'], $var_206[$var_142]['y'], $var_229, $var_228, $var_231, $var_230 );
  }
  $var_226 = intval(round(abs($var_226)));
  $var_209 = intval(round((abs($var_209)+$var_226)/2));
  
  
  return( $var_209 );
}

function fn_81( $var_213 ) {
  return( $var_213['x'].",".$var_213['y'] );
}

function fn_82( $var_206 ) {
  return( join( ' ', array_map( 'mapCoords', $var_206 ) ) );
}

function fn_83( $var_232 ) {
  $var_206 = array();
  if ( preg_match_all( '/(\d+,\d+)+/', $var_232, $var_84 ) ) {
    for ( $var_86 = 0; $var_86 < count($var_84[1]); $var_86++ ) {
      if ( preg_match( '/(\d+),(\d+)/', $var_84[1][$var_86], $var_233 ) ) {
        $var_206[] = array( 'x'=>$var_233[1], 'y'=>$var_233[2] );
      } else {
        echo( "Bogus coordinates '".$var_84[$var_86]."'" );
        return( false );
      }
    }
  } else {
    echo( "Bogus coordinate string '$var_232'" );
    return( false );
  }
  return( $var_206 );
}

function fn_84( &$var_206, $var_234, $var_235, $var_236, $var_237 ) {
  foreach ( $var_206 as &$var_238 ) {
    if ( $var_238['x'] < $var_234 ) {
      Logger::Debug('Limiting point x'.$var_238['x'].' to min_x ' . $var_234 );
      $var_238['x'] = $var_234;
    } else if ( $var_238['x'] > $var_236 ) {
      Logger::Debug('Limiting point x'.$var_238['x'].' to max_x ' . $var_236 );
      $var_238['x'] = $var_236;
    }
    if ( $var_238['y'] < $var_235 ) {
      Logger::Debug('Limiting point y'.$var_238['y'].' to min_y ' . $var_235 );
      $var_238['y'] = $var_235;
    } else if ( $var_238['y'] > $var_237 ) {
      Logger::Debug('Limiting point y'.$var_238['y'].' to max_y ' . $var_237 );
      $var_238['y'] = $var_237;
    }
  } 
} 

function fn_85( &$var_206, $var_49 ) {
  foreach ( $var_206 as &$var_238 ) {
    $var_238['x'] = fn_55( $var_238['x'], $var_49 );
    $var_238['y'] = fn_55( $var_238['y'], $var_49 );
  }
}

function fn_86() {
  $var_239 = array();
  foreach ( glob('lang', $var_240 );
  }
  foreach ( $var_240 as $var_40 ) {
    if ( visibleMonitor( $var_40 ) ) {
      if ( isset($mITN_monitors[$var_40]) ) {
        $var_242[] = $mITN_monitors[$var_40]['Name'];
      }
    }
  }
  $var_241 = join( ', ', $var_242 );
  return( $var_241 );
}

function fn_87() {
  global $var_243;

  if ( !isset($var_243) ) {
    $var_244 = socket_create( var_245, var_246, 0 );
    if ( $var_244 < 0 ) {
      Fatal( 'socket_create() failed: '.socket_strerror($var_244) );
    }
    $var_247 = var_248.'/zmx10.sock';
    if ( @socket_connect( $var_244, $var_247 ) ) {
      $var_100 = 'status';
      if ( !socket_write( $var_244, $var_100 ) ) {
        Fatal( "Can't write to control socket: ".socket_strerror(socket_last_error($var_244)) );
      }
      socket_shutdown( $var_244, 1 );
      $var_249 = '';
      while ( $var_250 = socket_read( $var_244, 256 ) ) {
        $var_249 .= $var_250;
      }
      socket_close( $var_244 );
    } else {
      
      $var_100 = var_101."/zmx10.pl --command status";
      

      $var_249 = exec( escapeshellcmd( $var_100 ) );
    }
    foreach ( explode( "\n", $var_249 ) as $var_250 ) {
      if ( preg_match( "/^(\d+)\s+(.+)$/", $var_250, $var_84 ) ) {
        $var_243[$var_84[1]] = $var_84[2];
      }
    }
  }
}

function fn_88( $var_92 ) {
  global $var_243;

  fn_87();

  if ( empty($var_243[$var_92]) || !($var_124 = $var_243[$var_92]) )
    $var_124 = 'unknown';
  return( $var_124 );
}

function fn_89( $var_92, $var_124 ) {
  $var_244 = socket_create( var_245, var_246, 0 );
  if ( $var_244 < 0 ) {
    Fatal( 'socket_create() failed: '.socket_strerror($var_244) );
  }
  $var_247 = var_248.'/zmx10.sock';
  if ( @socket_connect( $var_244, $var_247 ) ) {
    $var_100 = "$var_124;$var_92";
    if ( !socket_write( $var_244, $var_100 ) ) {
      Fatal( "Can't write to control socket: ".socket_strerror(socket_last_error($var_244)) );
    }
    socket_shutdown( $var_244, 1 );
    $var_250 = socket_read( $var_244, 256 );
    socket_close( $var_244 );
  } else {
    
    $var_100 = var_101.'/zmx10.pl --command '.escapeshellarg( $var_124 );
    $var_100 .= ' --unit-code '.escapeshellarg( $var_92 );
    
    $var_250 = exec( $var_100 );
  }
  if ( preg_match( '/^'.$var_92.'\s+(.*)/', $var_250, $var_84 ) )
    $var_124 = $var_84[1];
  else
    $var_124 = 'unknown';
  return( $var_124 );
}

function fn_90() {
  $var_251 = 'ok';

  $var_252 = array(
      var_253::var_254 => array( var_255, var_256 ),
      var_253::var_257 => array( var_258, var_259 ),
      var_253::var_260 => array( var_261, var_262 ),
      );

  
  $var_183 = 'SELECT Level, COUNT(Level) AS LevelCount FROM Logs WHERE Level < '.var_253::var_263.' AND TimeKey > unix_timestamp(now() - interval '.var_264.' second) GROUP BY Level ORDER BY Level ASC';
  $var_265 = dbFetchAll($var_183);
  if ( $var_265 ) {
    foreach ( $var_265 as $var_266 ) {
      if ( $var_266['Level'] <= var_253::var_267 )
        $var_266['Level'] = var_253::var_254;
      if ( !($var_268 = $var_252[$var_266['Level']]) ) {
        Error('Unexpected Log level '.$var_266['Level']);
        var_269;
      }
      if ( $var_268[1] && $var_266['LevelCount'] >= $var_268[1] ) {
        $var_251 = 'alarm';
        break;
      } elseif ( $var_268[0] && $var_266['LevelCount'] >= $var_268[0] ) {
        $var_251 = 'alert';
      }
    }
  }
  return $var_251;
}

function fn_91 ( &$var_270 ) {
  $var_271 = 0;
  foreach ( array_keys($var_270) as $var_92 ) {
    if ( !is_int( $var_92 ) )
      return( false );
    if ( $var_92 != $var_271++ )
      return( false );
  }
  return( true );
}

function fn_92($var_77) {
  if ( function_exists('json_last_error') ) {
    $var_77 = var_export($var_77,true);
    switch( json_last_error() ) {
      case var_272 :
        Fatal( "Unable to decode JSON string '$var_77', maximum stack depth exceeded" );
      case var_273 :
        Fatal( "Unable to decode JSON string '$var_77', unexpected control character found" );
      case var_274 :
        Fatal( "Unable to decode JSON string '$var_77', invalid or malformed JSON" );
      case var_275 :
        Fatal( "Unable to decode JSON string '$var_77', syntax error" );
      default :
        Fatal( "Unable to decode JSON string '$var_77', unexpected error ".json_last_error() );
      case var_276:
        break;
    }
  }
}

function fn_93( &$var_77 ) {
  if ( function_exists('json_encode') ) {
    $var_64 = json_encode( $var_77 );
    fn_92($var_77);
    return( $var_64 );
  }

  switch ( gettype($var_77) ) {
    case 'double':
    case 'integer':
      return( $var_77 );
    case 'boolean':
      return( $var_77?'true':'false' );
    case 'string':
      return( '"'.preg_replace( "/\r?\n/", '\\n', addcslashes($var_77,'"\\/') ).'"' );
    case 'NULL':
      return( 'null' );
    case 'object':
      return( '"Object '.addcslashes(get_class($var_77),'"\\/').'"' );
    case 'array':
      if ( fn_91( $var_77 ) )
        return( '['.join( ',', array_map( 'jsonEncode', $var_77) ).']' );
      else {
        $var_109 = '{';
        foreach ($var_77 as $var_277 => $var_278 ) {
          if ( $var_109 != '{' )
            $var_109 .= ',';
          $var_109 .= '"'.$var_277.'":'.fn_93( $var_278 );
        }
        return( $var_109.'}' );
      }
    default:
      return( '"'.addcslashes(gettype($var_77),'"\\/').'"' );
  }
}

function fn_94( $var_77 ) {
  if ( function_exists('json_decode') ) {
    $var_279 = json_decode( $var_77, true );
    fn_92($var_77);
    return( $var_279 );
  }

  $var_280 = false;
  $var_281 = false;
  $var_282 = '$result=';
  for ( $var_86 = 0; $var_86 < strlen($var_77); $var_86++ ) {
    if ( !$var_280 ) {
      if ( ($var_77[$var_86] == '{') || ($var_77[$var_86] == '[') ) {
        $var_282 .= ' array(';
      } else if ( ($var_77[$var_86] == '}') || ($var_77[$var_86] == ']') ) {
        $var_282 .= ')';
      } else if ( $var_77[$var_86] == ':' ) {
        $var_282 .= '=>';
      } else {
        $var_282 .= $var_77[$var_86];         
      }
    } else if ( !$var_281 ) {
      if ( $var_77[$var_86] == '\\' )
        $var_281 = true;
      else
        $var_282 .= $var_77[$var_86];
    } else {
      if ( $var_77[$var_86] != '/' )
        $var_282 .= '\\';
      $var_282 .= $var_77[$var_86];
      $var_281 = false;
    }
    if ( $var_77[$var_86] == '"' ) {
      $var_280 = !$var_280;
    }
  }
  eval( $var_282.';' );
  return( $var_109 );
}

define( 'HTTP_STATUS_OK', 200 );
define( 'HTTP_STATUS_BAD_REQUEST', 400 );
define( 'HTTP_STATUS_FORBIDDEN', 403 );

function fn_95( $var_283, $var_284=var_285 ) {
  Error( $var_283 );
  if ( function_exists( 'ajaxCleanup' ) )
    ajaxCleanup();
  if ( $var_284 == var_285 ) {
    $var_286 = array( 'result'=>'Error', 'message'=>$var_283 );
    header( 'Content-type: text/plain' );
    exit( fn_93( $var_286 ) );
  }
  header( "HTTP/1.0 $var_284 $var_283" );
  exit();
}

function fn_96( $var_109=false ) {
  if ( function_exists( 'ajaxCleanup' ) )
    ajaxCleanup();
  $var_286 = array( 'result'=>'Ok' );
  if ( is_array( $var_109 ) ) {
    $var_286 = array_merge( $var_286, $var_109 );
  } elseif ( !empty($var_109) ) {
    $var_286['message'] = $var_109;
  }
  header( 'Content-type: text/plain' );
  exit( fn_93( $var_286 ) );
}

function fn_97() {
  return( rand( 1, 999999 ) );
}

function fn_98( $var_57 ) {
  
  $var_57 = preg_replace( '/\.(?:\.+[\\/][\\/]*)+/', '', $var_57 );
  $var_57 = preg_replace( '/^[\\/]+/', '', $var_57 );
  return( $var_57 );
}

function fn_99( $var_36 ) {
  
  
  $var_287 = pathinfo($var_36);
  global $var_288;
  $var_289 = preg_replace( '/\
  $cacheFile = $dirname.'var_290'.$var_287['filename'].'-'.$var_288.'-'.filemtime($var_36).'.'.$var_287['extension'];
  if ( file_exists(var_291.'/'.$var_292) or symlink(var_99.'/'.$var_36, var_291.'/'.$var_292) ) {
    return 'cache/'.$var_292;
  } else {
    Warning("Failed linking $var_36 to $var_292");
  }
  return $var_36;
}

function fn_100( $var_36 ) {
  global $var_293;
  $var_294 = false;
  foreach ( $var_293 as $var_295 ) {
    $var_296 = fn_98( 'skins'.'/'.$var_295.'/'.$var_36 );
    if ( file_exists( $var_296 ) )
      $var_294 = $var_296;
  }
  return  $var_294;
}

function fn_101( $var_36, $var_297=false, $var_298=false ) {
  global $var_293;
  $var_294 = false;
  foreach ( $var_293 as $var_295 ) {
    $var_296 = fn_98( 'skins'.'/'.$var_295.'/'.$var_36 );
    if ( file_exists( $var_296 ) )
      $var_294 = $var_296;
  }
  $var_299 = array();
  if ( $var_298 ) {
    if ( $var_294 )
      $var_299[] = $var_294;
    else if ( $var_297 )
      $var_299[] = $var_36;
  } else {
    if ( $var_297 )
      $var_299[] = $var_36;
    if ( $var_294 )
      $var_299[] = $var_294;
  }
  return( $var_299 );
}

function fn_102( $var_70, $var_300='' ) {
  return( isset($_REQUEST[$var_70])?fn_107($_REQUEST[$var_70]):$var_300 );
}


function fn_103( $var_301 ) {
  return( preg_replace( '/\D/', '', $var_301 ) );
}

function fn_104( $var_301 ) {
  return( preg_replace( '/[^\d.-]/', '', $var_301 ) );
}


function fn_105( $var_301 ) {
  return( strip_tags( $var_301 ) );
}


function fn_106( $var_301 ) {
  return( strip_tags( addslashes( $var_301 ) ) );
}


function fn_107( $var_301 ) {
  return( htmlspecialchars( $var_301, var_302 ) );
}

function fn_108( $var_48, $var_63 = array() ) {

  if ( isset($var_63['scale']) and $var_63['scale'] and ( $var_63['scale'] != 100 ) ) {
    
    $var_63['width'] = fn_55( $var_48->Width(), $var_63['scale'] ) . 'px';
    $var_63['height'] = fn_55( $var_48->Height(), $var_63['scale'] ) . 'px';
  } else {
    
    
    if ( ! ( isset($var_63['width']) and $var_63['width'] ) ) {
      $var_63['width'] = $var_48->Width() . 'px';
      if ( ! ( isset($var_63['height']) and $var_63['height'] ) ) {
        $var_63['height'] = $var_48->Height() . 'px';
      }
    } else if ( ! isset($var_63['height']) ) {
      $var_63['height'] = '';
    }
  }
  if ( ! isset($var_63['mode'] ) ) {
    $var_63['mode'] = 'stream';
  }
  $var_63['maxfps'] = var_305;
  if ( $var_48->StreamReplayBuffer() )
    $var_63['buffer'] = $var_48->StreamReplayBuffer();
  

  if ( $var_48->Type() == 'WebSite' ) {
    return fn_13(
      'liveStream'.$var_48->Id(), $var_48->Path(),
      ( isset($var_63['width']) ? $var_63['width'] : NULL ),
      ( isset($var_63['height']) ? $var_63['height'] : NULL ),
      $var_48->Name()
    );
  
  } else if ( var_309 == 'mpeg' && var_310 ) {
    $var_29 = $var_48->fn_3( array(
      'mode'=>'mpeg',
      'scale'=>(isset($var_63['scale'])?$var_63['scale']:100),
      'bitrate'=>var_311,
      'maxfps'=>var_305,
      'format' => var_310
    ) );
    return fn_6( 'liveStream'.$var_48->Id(), $var_29, $var_63['width'], $var_63['height'], var_310, $var_48->Name() );
  } else if ( $var_63['mode'] == 'stream' and fn_38() ) {
    $var_63['mode'] = 'jpeg';
    $var_29 = $var_48->fn_3($var_63);

    if ( fn_36() )
      return fn_8( 'liveStream'.$var_48->Id(), $var_29, $var_63['width'], $var_63['height'], $var_48->Name());
    elseif ( fn_37() )
      
      return fn_10( 'liveStream'.$var_48->Id(), $var_29, 
          $var_63['width'] ? $var_63['width'] : $var_48->Width(), 
          $var_63['height'] ? $var_63['height'] : $var_48->Height(),
          $var_48->Name());
  } else {
    if ( $var_63['mode'] == 'stream' ) {
      Info( 'The system has fallen back to single jpeg mode for streaming. Consider enabling Cambozola or upgrading the client browser.' );
    }
    $var_63['mode'] = 'single';
    $var_29 = $var_48->fn_3( $var_63 );
    return fn_12( 'liveStream'.$var_48->Id(), $var_29, $var_63['width'], $var_63['height'], $var_48->Name());
  }
} 

function fn_109( ) {
  $var_312 = '';
  if ( var_309 == 'mpeg' && var_310 ) {
    $var_312 = 'mpeg';
  } elseif ( fn_38() ) {
    $var_312 = 'jpeg';
  } else {
    $var_312 = 'single';
    Info( 'The system has fallen back to single jpeg mode for streaming. Consider enabling Cambozola or upgrading the client browser.' );
  }
  return $var_312;
} 

function fn_110($var_313) {
    $var_314 = 0;
    foreach (glob(rtrim($var_313, '/').'/*', var_315) as $var_316) {
        $var_314 += is_file($var_316) ? filesize($var_316) : fn_110($var_316);
    }
    return $var_314;
} 

function fn_111($var_314, $var_317 = 2) {
    $var_318 = array('B','kB','MB','GB','TB','PB','EB','ZB','YB');
    $var_319 = 1024;
    $var_86 = 0;
    while (($var_314 / $var_319) > 0.9) {
        $var_314 = $var_314 / $var_319;
        $var_86++;
    }
    return round($var_314, $var_317).$var_318[$var_86];
}

function fn_112() {
    csrf_conf('rewrite-js', 'includes/csrf/csrf-magic.js');
}

function fn_113() {
  $var_320 = new class_3();

  $var_321 = trim(shell_exec('date "+%z"'));
  $var_322 = trim($var_320->format('O'));
  $var_323 = trim(dbFetchOne("SELECT TIME_FORMAT(TIMEDIFF(NOW(), UTC_TIMESTAMP),'%H%i');",'TIME_FORMAT(TIMEDIFF(NOW(), UTC_TIMESTAMP),\'%H%i\')'));

  
                 
                 
               

  if ( $var_321 != $var_322 )
    Fatal("ZoneMinder is not installed properly: php's date.timezone does not match the system timezone!");

  if ( $var_321 != $var_323 )
    Error("ZoneMinder is not installed properly: mysql's timezone does not match the system timezone! Event lists will display incorrect times.");

  if (!ini_get('date.timezone') || !date_default_timezone_set(ini_get('date.timezone')))
    Fatal( "ZoneMinder is not installed properly: php's date.timezone is not set to a valid timezone" );

}

function var_324($var_325, $var_326 = array() ) { 
  $var_327 = array('scheme','host','port','user','pass','path','query','fragment');

  foreach ( $var_327 as $var_158 ) {
    if ( isset( $var_326[$var_158] ) ) {
      $var_325[$var_158] = $var_326[$var_158];
    }
  }
  $var_328   = isset($var_325['scheme']) ? $var_325['scheme'] . ':
  $host     = isset($parsed_url['var_329']) ? $var_325['host'] : ''; 
  $var_330     = isset($var_325['port']) ? ':' . $var_325['port'] : ''; 
  $var_58     = isset($var_325['user']) ? $var_325['user'] : ''; 
  $var_331     = isset($var_325['pass']) ? ':' . $var_325['pass']  : ''; 
  $var_331     = ($var_58 || $var_331) ? "$var_331@" : ''; 
  $var_57     = isset($var_325['path']) ? $var_325['path'] : ''; 
  $var_151    = isset($var_325['query']) ? '?' . $var_325['query'] : ''; 
  $var_332 = isset($var_325['fragment']) ? '
  return "$scheme$user$pass$host$port$path$query$fragment"; 
}





function do_request($method, $url, $data=array(), $optional_headers = null) {
  global $php_errormsg;

  $params = array('var_333' => array(
        'method' => $var_334,
        'content' => $var_335
        ));
  if ( $var_336 !== null ) {
    $var_338['http']['header'] = $var_336;
  }
  $var_337 = stream_context_create($var_338);
  $var_339 = @fopen($var_60, 'rb', false, $var_337);
  if ( !$var_339 ) {
    throw new class_4();
  }
  $var_286 = @stream_get_contents($var_339);
  if ( $var_286 === false ) {
    throw new class_4();
  }
  var_340 $var_286;
}

function do_post_request($var_60, $var_335, $var_336 = null) {
  $var_338 = array('http' => array(
        'method' => 'POST',
        'content' => $var_335
        ));
  if ( $var_336 !== null ) {
    $var_338['http']['header'] = $var_336;
  }
  $var_337 = stream_context_create($var_338);
  $var_339 = @fopen($var_60, 'rb', false, $var_337);
  if ( !$var_339 ) {
    throw new class_4();
  }
  $var_286 = @stream_get_contents($var_339);
  if ( $var_286 === false ) {
    throw new class_4();
  }
  var_340 $var_286;
}


var_341 (!function_exists('sem_get')) {
  function var_342($var_92) {
    return fopen(var_343 . '.sem.' . $var_92, 'w+');
  }
  function fn_114($var_344) {
    return flock($var_344, var_345);
  }
  function fn_115($var_344) {
    return flock($var_344, var_346);
  }
}

if( !function_exists('ftok') ) {
  function fn_116($var_347 = "", $var_348 = "") {
    if ( empty($var_347) || !file_exists($var_347) ) {
      return -1;
    } else {
      $var_347 = $var_347 . (string) $var_348;
      for($var_92 = array(); sizeof($var_92) < strlen($var_347); $var_92[] = ord(substr($var_347, sizeof($var_92), 1)));
      return dechex(array_sum($var_92));
    }
  }
}

function fn_117( $var_70 ) {
  $var_242 = $var_70.'s';
  $var_240 = array();
	if ( isset($_REQUEST[$var_242]) ) {
		if ( is_array($_REQUEST[$var_242]) ) {
			$var_240 = $_REQUEST[$var_242];
		} else {
			$var_240 = array($_REQUEST[$var_242]);
		}
	} else if ( isset($_REQUEST[$var_70]) ) {
		if ( is_array($_REQUEST[$var_70]) ) {
			$var_240 = $_REQUEST[$var_70];
		} else {
			$var_240 = array($_REQUEST[$var_70]);
		}
	}
	return $var_240;
}

function fn_118($var_349, $var_350=':') {
  return sprintf('%02d%s%02d%s%02d', floor($var_349/3600), $var_350, ($var_349/60)%60, $var_350, $var_349%60);
}

?>
