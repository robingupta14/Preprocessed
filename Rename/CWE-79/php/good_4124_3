<?php


class class_0 extends var_0
{
    public $var_1 = 'order-detail';
    public $var_2 = true;
    public $var_3 = 'history';
    public $var_4 = true;

    protected $var_5;

    
    public function fn_0()
    {
        if (Tools::isSubmit('submitMessage')) {
            $var_6 = (int) Tools::getValue('id_order');
            $var_7 = Tools::getValue('msgText');

            if (!$var_6 || !Validate::isUnsignedId($var_6)) {
                $var_8->var_10[] = $var_8->trans('The order is no longer valid.', array(), 'Shop.Notifications.Error');
            } elseif (empty($var_7)) {
                $var_8->var_10[] = $var_8->trans('The message cannot be blank.', array(), 'Shop.Notifications.Error');
            } elseif (!Validate::isMessage($var_7)) {
                $var_8->var_10[] = $var_8->trans('This message is invalid (HTML is not allowed).', array(), 'Shop.Notifications.Error');
            }
            if (!count($var_8->var_10)) {
                $var_11 = new class_1($var_6);
                if (Validate::isLoadedObject($var_11) && $var_11->var_12 == $var_8->var_13->var_14->var_15) {
                    
                    $var_16 = class_3::getIdCustomerThreadByEmailAndIdOrder($var_8->var_13->var_14->var_17, $var_11->var_15);
                    $var_18 = (int) Tools::getValue('id_product');
                    $var_19 = new class_2();
                    if (!$var_16) {
                        $var_20 = new class_3();
                        $var_20->var_21 = 0;
                        $var_20->var_12 = (int) $var_11->var_12;
                        $var_20->var_22 = (int) $var_8->var_13->var_23->var_15;
                        if ($var_18 && $var_11->orderContainProduct($var_18)) {
                            $var_20->var_18 = $var_18;
                        }
                        $var_20->var_25 = (int) $var_11->var_15;
                        $var_20->var_26 = (int) $var_8->var_13->var_27->var_15;
                        $var_20->var_17 = $var_8->var_13->var_14->var_17;
                        $var_20->var_28 = 'open';
                        $var_20->var_29 = Tools::passwdGen(12);
                        $var_20->add();
                    } else {
                        $var_20 = new class_3((int) $var_16);
                        $var_20->var_28 = 'open';
                        $var_20->update();
                    }

                    $var_19->var_16 = $var_20->var_15;
                    $var_19->var_32 = $var_7;
                    $var_33 = Tools::getRemoteAddr();
                    $var_19->var_34 = (int) ip2long($var_33);
                    $var_19->add();

                    if (!Configuration::get('PS_MAIL_EMAIL_MESSAGE')) {
                        $var_35 = (string) Configuration::get('PS_SHOP_EMAIL');
                    } else {
                        $var_35 = new class_4((int) Configuration::get('PS_MAIL_EMAIL_MESSAGE'));
                        $var_35 = (string) $var_35->var_17;
                    }
                    $var_36 = (string) Configuration::get('PS_SHOP_NAME');
                    $var_14 = $var_8->var_13->var_14;

                    $var_37 = new class_5($var_18);
                    $var_38 = '';
                    if (Validate::isLoadedObject($var_37) && isset($var_37->name[(int) $var_8->var_13->var_27->var_15])) {
                        $var_38 = $var_37->name[(int) $var_8->var_13->var_27->var_15];
                    }

                    if (Validate::isLoadedObject($var_14)) {
                        Mail::Send(
                            $var_8->var_13->var_27->var_15,
                            'order_customer_comment',
                            $var_8->trans(
                                'Message from a customer',
                                array(),
                                'Emails.Subject'
                            ),
                            array(
                                '{lastname}' => $var_14->var_39,
                                '{firstname}' => $var_14->var_40,
                                '{email}' => $var_14->var_17,
                                '{id_order}' => (int) $var_11->var_15,
                                '{order_name}' => $var_11->getUniqReference(),
                                '{message}' => Tools::nl2br(Tools::htmlentitiesUTF8($var_7)),
                                '{product_name}' => $var_38,
                            ),
                            $var_35,
                            $var_36,
                            (string) Configuration::get('PS_SHOP_EMAIL'),
                            $var_14->var_40 . ' ' . $var_14->var_39,
                            null,
                            null,
                            var_42,
                            false,
                            null,
                            null,
                            $var_14->var_17
                        );
                    }

                    Tools::redirect('index.php?controller=order-detail&id_order=' . $var_6 . '&messagesent');
                } else {
                    $var_8->var_43 = '404';
                    $var_8->redirect();
                }
            }
        }
    }

    
    public function fn_1()
    {
        if (Configuration::isCatalogMode()) {
            Tools::redirect('index.php');
        }

        $var_25 = (int) Tools::getValue('id_order');
        $var_25 = $var_25 && Validate::isUnsignedId($var_25) ? $var_25 : false;

        if (!$var_25) {
            $var_45 = Tools::getValue('reference');
            $var_45 = $var_45 && Validate::isReference($var_45) ? $var_45 : false;
            $var_11 = $var_45 ? class_1::getByReference($var_45)->getFirst() : false;
            $var_25 = $var_11 ? $var_11->var_15 : false;
        }

        if (!$var_25) {
            $var_8->var_43 = '404';
            $var_8->redirect();
        } else {
            if (Tools::getIsset('errorQuantity')) {
                $var_8->var_10[] = $var_8->trans('You do not have enough products to request an additional merchandise return.', array(), 'Shop.Notifications.Error');
            } elseif (Tools::getIsset('errorMsg')) {
                $var_8->var_10[] = $var_8->trans('Please provide an explanation for your RMA.', array(), 'Shop.Notifications.Error');
            } elseif (Tools::getIsset('errorDetail1')) {
                $var_8->var_10[] = $var_8->trans('Please check at least one product you would like to return.', array(), 'Shop.Notifications.Error');
            } elseif (Tools::getIsset('errorDetail2')) {
                $var_8->var_10[] = $var_8->trans('For each product you wish to add, please specify the desired quantity.', array(), 'Shop.Notifications.Error');
            } elseif (Tools::getIsset('errorNotReturnable')) {
                $var_8->var_10[] = $var_8->trans('This order cannot be returned', array(), 'Shop.Notifications.Error');
            } elseif (Tools::getIsset('messagesent')) {
                $var_8->success[] = $var_8->trans('Message successfully sent', array(), 'Shop.Notifications.Success');
            }

            $var_11 = new class_1($var_25);
            if (Validate::isLoadedObject($var_11) && $var_11->var_12 == $var_8->var_13->var_14->var_15) {
                $var_8->var_5 = (new class_6())->present($var_11);

                $var_8->var_13->var_48->assign([
                    'order' => $var_8->var_5,
                    'HOOK_DISPLAYORDERDETAIL' => Hook::exec('displayOrderDetail', ['order' => $var_11]),
                ]);
            } else {
                $var_8->var_43 = '404';
                $var_8->redirect();
            }
            unset($var_11);
        }

        parent::fn_1();
        $var_8->setTemplate('customer/order-detail');
    }

    public function fn_2()
    {
        $var_51 = parent::fn_2();

        $var_51['links'][] = $var_8->addMyAccountToBreadcrumb();
        $var_51['links'][] = array(
            'title' => $var_8->trans('Order history', array(), 'Shop.Theme.Customeraccount'),
            'url' => $var_8->var_13->var_53->getPageLink('history'),
        );

        return $var_51;
    }
}
