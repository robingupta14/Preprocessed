<?php












$var_0 = ucfirst(strtolower( !isset($var_3['overlay_events_provider']) ? "Json" : $var_3['overlay_events_provider'] ));
if (file_exists( dirname(var_1) . "/lib/Events/Driver_${var_0}.php")) {
}





function fn_0 ($var_2)
{
   global $var_3;

   $var_4 = "./templates/${var_3['template_name']}/$var_2";
   $var_5 = "./templates/default/$var_2";

   if (file_exists($var_4)) {
      return $var_4;
   }
   else {
      return $var_5;
   }
}



function fn_1 ($var_2, $var_6)
{

   $var_7 = "";
   if ($var_6) {
      
      $var_7 = "<input type=\"hidden\" name=\"$var_2\" value=\"$var_6\">\n";
   }
   return $var_7;
}




function fn_2($var_8)
{
   $var_9=intval($var_8/86400);
   $var_8=$var_9 ? $var_8 % ($var_9*86400) : $var_8;
   $var_10=intval($var_8/3600);
   $var_8=$var_10 ? $var_8 % ($var_10*3600) : $var_8;
   $var_11=intval($var_8/60);
   $var_8=$var_11 ? $var_8 % ($var_11*60) : $var_8;

   $var_12 = ($var_9!=1) ? "s" : "";
   return sprintf("$var_9 day$var_12, %d:%02d:%02d",$var_10,$var_11,$var_8);
}







function fn_3($var_13)
{
   $var_14=$var_15=$var_16=-1;

   $var_17=$var_13['LOCATION'];
   if ($var_17) {
      sscanf($var_17, "%d,%d,%d", $var_14, $var_15, $var_16);
      
   }
   if ($var_14<0 or $var_15<0) {
      
      
      $var_18=sscanf($var_13['NAME'], "compute-%d-%d", $var_14, $var_15);
      $var_16=0;
   }
   return array($var_14,$var_15,$var_16);
}



function fn_4($var_2, $var_19)
{
   $var_20 = 0;

   foreach ($var_19 as $var_21 => $var_22)
      {
         if(isset($var_22[$var_2]['VAL'])) $var_20 += $var_22[$var_2]['VAL'];
      }

   return $var_20;
}


function fn_5($var_2, $var_19)
{
   $var_23 = "";

   foreach ($var_19 as $var_21 => $var_22)
      {
         $var_24 = $var_22[$var_2]['VAL'];
         if (!is_numeric($var_23) or $var_23 < $var_24)
            {
               $var_23 = $var_24;
               $var_25 = $var_21;
            }
      }
   return array($var_23, $var_25);
}





function fn_6 ($var_26, $var_27)
{
   global $var_3;

   $var_28 = $var_27 / $var_3['load_scale'];
   if ($var_28>1.0) {
      $var_29 = fn_0("images/${var_26}_overloaded.jpg");
   }
   else if ($var_28>=0.75) {
      $var_29 = fn_0("images/${var_26}_75-100.jpg");
   }
   else if ($var_28 >= 0.5) {
      $var_29 = fn_0("images/${var_26}_50-74.jpg");
   }
   else if ($var_28>=0.25) {
      $var_29 = fn_0("images/${var_26}_25-49.jpg");
   }
   else {
      $var_29 = fn_0("images/${var_26}_0-24.jpg");
   }

   return $var_29;
}




function fn_7 ($var_27)
{
   global $var_3;

   $var_28 = $var_27 / $var_3['load_scale'];
   if ($var_28>1.0) {
      $var_30 = $var_3['load_colors']["100+"];
   }
   else if ($var_28>=0.75) {
      $var_30 = $var_3['load_colors']["75-100"];
   }
   else if ($var_28 >= 0.5) {
      $var_30 = $var_3['load_colors']["50-75"];
   }
   else if ($var_28>=0.25) {
      $var_30 = $var_3['load_colors']["25-50"];
   }
   else if ($var_28 < 0.0)
      $var_30 = $var_3['load_colors']["down"];
   else {
      $var_30 = $var_3['load_colors']["0-25"];
   }

   return $var_30;
}





function fn_8 ($var_19)
{
   global $var_31;

   
   if ( isset($var_19['cpu_num']['VAL']) and $var_19['cpu_num']['VAL'] != 0 ) {
		$var_32 = $var_19['cpu_num']['VAL'];
   } else {
		$var_32 = 1;
   }

   if ( isset($var_19['load_one']['VAL']) ) {
		$var_33 = $var_19['load_one']['VAL'];
   } else {
		$var_33 = 0;
   }

   $var_27 = $var_33 / $var_32;

   
   
   if (isset($var_31) and $var_31)
         $var_29 = fn_0("images/node_dead.jpg");
   else
         $var_29 = fn_6("node", $var_27);

   return $var_29;
}






function fn_9($var_34, $var_35)
{
   global $var_3, $var_19, $var_36, $var_37, $var_38, $var_39, $var_40;

   if (!count($var_19))
      return array(0, 0);

   $var_41 = key($var_19);
   
   if (array_key_exists($var_35,$var_19[$var_41])) {
     if ($var_19[$var_41][$var_35]['TYPE'] == "string"
        or $var_19[$var_41][$var_35]['SLOPE'] == "zero")
           return array(0,0);
   }
   else {
     return array(0,0);
   }

   $var_42=0;
   $var_23=0;
   if ($var_3['graph_engine'] == "graphite") {
     $var_43 = $var_3['graphite_prefix'] . $var_36 . ".[a-zA-Z0-9]*." . $var_35 . ".sum";
     $var_44 = file_get_contents($var_3['graphite_url_base'] . "?target=highestMax(" . $var_43 . ",1)&from=" . $var_38 . "&until=" . $var_39 . "&format=json");
     $var_45 = json_decode($var_44, TRUE);
     $var_46 = $var_45[0]['datapoints'];
     $var_47 = array();
     foreach ( $var_46 as $var_48 ) {
       array_push($var_47, $var_48[0]);
     }
     $var_42 = max($var_47);
   }
   else {
     foreach ( $var_34 as $var_21 => $var_27 ) {
       $var_49 = array();

       $var_37 = "${var_3['rrds']}/$var_36/$var_21";
       $var_50 = "$var_37/$var_35.rrd";
       if (file_exists($var_50)) {
          if ( extension_loaded( 'rrd' ) ) {
            $var_51 = rrd_fetch($var_50,
              array(
                "--start", $var_38,
                "--end", $var_39,
                "AVERAGE"
              )
            );

            $var_51 = (array_filter(array_values($var_51['data']['sum']), 'is_finite'));
            $var_52 = max($var_51);
            $var_53 = min($var_51);
          } else {
            $var_54 = $var_3['rrdtool'] . " graph /dev/null $var_40 ".
               "--start $var_38 --end $var_39 ".
               "DEF:limits='$var_37/$var_35.rrd':'sum':AVERAGE ".
               "PRINT:limits:MAX:%.2lf ".
               "PRINT:limits:MIN:%.2lf";
            exec($var_54, $var_49);
            if(isset($var_49[1])) {
               $var_52 = $var_49[1];
            } else {
               $var_52 = NULL;
            }
            if (!is_numeric($var_52)) continue;
            $var_53=$var_49[2];
            if (!is_numeric($var_53)) continue;
          }

          if ($var_42 < $var_52) $var_42 = $var_52;

          if ($var_23 > $var_53) $var_23 = $var_53;
          
       }
     }
   }
   return array($var_23, $var_42);
}





function fn_10($var_36, $var_55, $var_35)
{
    global $var_3, $var_38, $var_39, $var_40;
    $var_56 = 0;

    if ($var_55)
        $var_57 = "${var_3['rrds']}/$var_36/$var_55";
    else
        $var_57 = "${var_3['rrds']}/$var_36/__SummaryInfo__";

    $var_54 = $var_3['rrdtool'] . " graph /dev/null $var_40 ".
        "--start $var_38 --end $var_39 ".
        "DEF:avg='$var_57/$var_35.rrd':'sum':AVERAGE ".
        "PRINT:avg:AVERAGE:%.2lf ";
    exec($var_54, $var_49);
    if ( isset($var_49[1]) ) 
      $var_56 = $var_49[1];
    else
      $var_56 = 0;
    
    return $var_56;
}



function fn_11()
{
   static $var_58;

   if ($var_58 == "even") { $var_58 = "odd"; }
   else { $var_58 = "even"; }

   return $var_58;
}





function fn_12( $var_59 )
{
  return htmlentities( $var_59 );
}

function fn_13 ( $var_59 ) {
  return  escapeshellcmd( fn_12( rawurldecode( $var_59 ) ) ) ;
}



function fn_14( $var_27 )
{
  return is_numeric( $var_27 ) ? $var_27 : null;
}



function fn_15( $var_59 )
{
  $var_60 = false;
  if( strlen( $var_59 ) == 6 || strlen( $var_59 ) == 3 ) {
    if( preg_match( '/^[0-9a-fA-F]+$/', $var_59 ) ) {
      $var_60 = true;
    }
  }
  return $var_60;
    
}





function fn_16( $var_55 ) {
    $var_61 = strpos($var_55, '.');
    $var_2 = substr( $var_55 , 0, $var_61 );
    if ( FALSE === $var_61 || is_numeric($var_2) ) {
        return $var_55;
    } else {
        return $var_2;
    }
}



function fn_17($var_62, $var_63)
{
  
  $var_64 = file($var_62, var_65);
  
  foreach ($var_64 as $var_66) 
  {
    list($var_67, $var_24) = explode($var_63, rtrim($var_66));
    $var_68[$var_67] = $var_24;
  }

  return $var_68;
}




function fn_18($var_62, $var_63)
{
 
  $var_64 = file($var_62);
 
  foreach ($var_64 as $var_66)
  {
    list($var_67, $var_24) = explode($var_63, rtrim($var_66));
    $var_68[$var_67][] = $var_24;
  }

  return $var_68;
}



function fn_19($var_69)
{
  $var_51 = array();
  $var_70 = array();
  foreach($var_69 as $var_67 => $var_24)
  {
    if($var_70[$var_24] != "x")
    {
      $var_70[$var_24] = "x";
      $var_51[] = $var_24;
    } 
  }
  return $var_51;
}

$var_71 = array();



function fn_20()
{
  global $var_3, $var_71;

  
  if(!isset($var_3['filter_dir']))
    return;

  if(!is_dir($var_3['filter_dir']))
  {
    error_log("discover_filters(): not a directory: ${var_3['filter_dir']}");
    return;
  }

  if($var_72 = opendir($var_3['filter_dir']))
  {
    while(($var_73 = readdir($var_72)) !== false) {
      if(!is_dir($var_73))
      {
        
        $var_74 = "${var_3['filter_dir']}/$var_73";
        $var_75 = fn_17($var_74, '=');
        $var_76 = $var_75["shortname"];
        $var_77 = $var_75["type"];
        if($var_77 = "url")
        {
          $var_78 = $var_75['url'];
          $var_71[$var_76] = $var_75;
          $var_71[$var_76]["data"] = fn_17($var_78, ',');
          $var_71[$var_76]["choices"] = fn_19($var_71[$var_76]["data"]);
        }
      }
    }
    closedir($var_72);
  }
}

$var_79 = NULL;



function fn_21()
{
   global $var_3, $var_79, $var_71, $var_80;

   if(!is_null($var_79))
   {
      return;
   }

   if(!isset($var_3['filter_dir']))
   {
      $var_79 = FALSE;
      return;
   }

   $var_79 = array();
   $var_81 = 0;

   foreach($var_80 as $var_76 => $var_82)
   {
      if($var_82 == "")
         continue; 

      $var_75 = $var_71[$var_76];
      if($var_81 == 0)
      {
         foreach($var_75["data"] as $var_83 => $var_27)
         {
            if($var_27 == $var_82)
               $var_79[$var_83] = $var_83;
         }
      }
      else
      {
         foreach($var_79 as $var_83 => $var_27)
         {
            $var_84 = TRUE;
            if(isset($var_75["data"][$var_83]))
            {
               if($var_75["data"][$var_83] == $var_82)
               {
                  $var_84 = FALSE;
               } 
            }
            if($var_84)
            {
               unset($var_79[$var_83]);
            }
         }
      }
      $var_81++;
   }

   if($var_81 == 0)
      $var_79 = FALSE;

}



function fn_22($var_85)
{
   global $var_79;

   fn_21();
   
   
   if(!is_array($var_79))
      return true;

   return isset($var_79[$var_85]);
}





function fn_23() {
  global $var_3;
  
  
  $var_86 = array();

  if ($var_87 = opendir($var_3['views_dir'])) {

      while (false !== ($var_88 = readdir($var_87))) {

	if ( preg_match("/^view_(.*)\.json$/", $var_88, $var_49) ) {
	  $var_89 = $var_3['views_dir'] . "/" . $var_88;
	  if ( ! is_file ($var_89) ) {
	    echo("Can't read view config file " . $var_89 . ". Please check permissions");
	  }

	  $var_90 = json_decode(file_get_contents($var_89), TRUE);
	  
          
	  $var_91 = 
            isset($var_90['view_type']) ? $var_90['view_type'] : "standard";
          $var_92 = isset($var_90['default_size']) ? 
	    $var_90['default_size'] : $var_3['default_view_graph_size'];
	  $var_86[] = array ("file_name" => $var_89, 
                                      "view_name" => $var_90['view_name'],
                                      "default_size" => $var_92, 
                                      "items" => $var_90['items'], 
                                      "view_type" => $var_91);

	  unset($var_90);

	}
      }

      closedir($var_87);
  }

  foreach ($var_86 as $var_83 => $var_93) {
    $var_2[$var_83]  = strtolower($var_93['view_name']);
  }

  @array_multisort($var_2,var_94, $var_86);

  return $var_86;

}







function fn_24($var_90) {

  global $var_3, $var_95;

  fn_31();

  $var_96 = array();

  
  if ( isset($var_3['default_view_graph_size']) ) {
    $var_92 = $var_3['default_view_graph_size'];
  }
  if ( isset($var_90['default_size']) ) {
    $var_92 = $var_90['default_size'];
  }


  switch ( $var_90['view_type'] ) {

    case "standard":
    
    if ( sizeof($var_90['items']) == 0 ) {
      continue;
      
    } else {


      
      foreach ( $var_90['items'] as $var_97 => $var_98 ) {

	
	if ( isset($var_98['aggregate_graph']) ) {

	  foreach ( $var_98['host_regex'] as $var_99 => $var_100 ) {
	    $var_101[] = "hreg[]=" . urlencode($var_100["regex"]);
	  }

	  if ( isset($var_98['metric_regex']) ) {
	    foreach ( $var_98['metric_regex'] as $var_99 => $var_100 ) {
	      $var_101[] = "mreg[]=" . urlencode($var_100["regex"]);
              $var_147[] = $var_100["regex"];
	    }
	  }

          if ( isset($var_98['size']) ) {
            $var_101[] = "z=" . $var_98['size'];
          } else {
            $var_101[] = "z=" . $var_92;
          }


	  
	  if ( isset($var_98['graph_type']) && in_array($var_98['graph_type'], array('line', 'stack') ) )
	    $var_101[] = "gtype=" . $var_98['graph_type'];
	  else
	    $var_101[] = "gtype=line";

	  if (isset($var_98['upper_limit']))
	    $var_101[] = "x=" .$var_98['upper_limit'];

	  if (isset($var_98['lower_limit']))
	    $var_101[] = "n=" .$var_98['lower_limit'];

	  if (isset($var_98['vertical_label']))
	    $var_101[] = "vl=" . urlencode($var_98['vertical_label']);

	  if (isset($var_98['title']))
	    $var_101[] = "title=" . urlencode($var_98['title']);

	  if ( isset($var_98['metric']) ) {
	    $var_101[] = "m=" . $var_98['metric'];
	  }

          if ( isset($var_98['glegend']) )
            $var_101[] = "glegend=" . $var_98["glegend"];

	  if ( isset($var_98['cluster']) ) {
	    $var_101[] = "c=" . urlencode($var_98['cluster']);
	  }

	  if ( isset($var_98['exclude_host_from_legend_label']) ) {
	    $var_101[] = "lgnd_xh=" . $var_98['exclude_host_from_legend_label'];
	  }
	  
	  $var_101[] = "aggregate=1";
	  $var_96[] = array ( "graph_args" => join("&", $var_101), 
	      "aggregate_graph" => 1,
	      "name" => isset($var_98['title']) && $var_98['title'] != "" ? $var_98['title'] : $var_147[0] . " Aggregate graph"
	  );

	  unset($var_101);
          
        
	} else if ( $var_98['item_id'] ) {
          
	  $var_101[] = "vn=" . $var_90['view_name'];
          $var_101[] = "item_id=" . $var_98['item_id'];
	  $var_96[] = array ( "graph_args" => join("&", $var_101)
	  );
          unset($var_101);
          
	
        } else {
	  
	  if ( isset($var_98['metric']) ) {
	    $var_101[] = "m=" . $var_98['metric'];
	    $var_2 = $var_98['metric'];
	  } else {
	    $var_101[] = "g=" . urlencode($var_98['graph']);
	    $var_2 = $var_98['graph'];
	  }
          if ( isset($var_98['size']) ) {
            $var_101[] = "z=" . $var_98['size'];
          } else {
            $var_101[] = "z=" . $var_92;
          }

	  if (isset($var_98['hostname'])) {
            $var_55 = $var_98['hostname'];
            $var_102 = array_key_exists($var_55, $var_95['cluster']) ?
	      $var_95['cluster'][$var_55][0] : NULL;
          } else if (isset($var_98['cluster'])) {
	    $var_55 = "";
            $var_102 = $var_98['cluster'];
	  } else {
            $var_55 = "";
            $var_102 = "";
	  }

	  $var_101[] = "h=" . urlencode($var_55);
	  $var_101[] = "c=" . urlencode($var_102);

	  if (isset($var_98['vertical_label']))
	    $var_101[] = "vl=" . urlencode($var_98['vertical_label']);

	  if (isset($var_98['title']))
	    $var_101[] = "title=" . urlencode($var_98['title']);

          if (isset($var_98['warning'])) {
            $var_103['warning'] = $var_98['warning'];
            $var_101[] = "warn=" . $var_98['warning'];
          }
          if (isset($var_98['critical'])) {
            $var_103['critical'] = $var_98['critical'];
            $var_101[] = "crit=" . $var_98['critical'];
          }


          $var_103["graph_args"] = join("&", $var_101);
          $var_103['hostname'] = $var_55;
          $var_103['cluster'] = $var_102;
          $var_103['name'] = $var_2;
                  
	  $var_96[] = $var_103;

          unset($var_103);
	  unset($var_101);

	}

      } 
    } 
    break;
    ;;

    
    
    
    case "regex":
      foreach ( $var_90['items'] as $var_97 => $var_98 ) {
	
	if ( isset($var_98['metric']) ) {
	  $var_104 = "m=" . $var_98['metric'];
	  $var_2 = $var_98['metric'];
	} else {
	  $var_104 = "g=" . $var_98['graph'];
	  $var_2 = $var_98['graph'];
	}

	
	$var_105 = $var_98['hostname'];
	foreach ( $var_95['hosts'] as $var_83 => $var_106 ) {
	  if ( preg_match("/$var_105/", $var_106 ) ) {
	    $var_107 = $var_95['cluster'][$var_106];
	    foreach ($var_107 AS $var_102) {
	    $var_101[] = "h=" . urlencode($var_106);
	    $var_101[] = "c=" . urlencode($var_102);

	    $var_96[] = array ( "graph_args" => $var_104 . "&" . join("&", $var_101), 
	      "hostname" => $var_106,
	      "cluster" => $var_102,
	      "name" => $var_2);

	    unset($var_101);
            }

	  }
	}
	
      } 
    break;;
  
  } 


  return ($var_96);

}

function fn_25($var_108, $var_109) {
  $var_110 = "";
  if (in_array("now", $var_109))
    $var_110 .= "VDEF:{$var_108}_last={$var_108},LAST ";

  if (in_array("min", $var_109))
    $var_110 .= "VDEF:{$var_108}_min={$var_108},MINIMUM ";

  if (in_array("avg", $var_109))
    $var_110 .= "VDEF:{$var_108}_avg={$var_108},AVERAGE ";

  if (in_array("max", $var_109))
    $var_110 .= "VDEF:{$var_108}_max={$var_108},MAXIMUM ";

  $var_111 = FALSE;
  if (in_array("now", $var_109)) {
    $var_110 .= "GPRINT:'{$var_108}_last':'Now\:%5.1lf%s";
    $var_111 = TRUE;
  }

  if (in_array("min", $var_109)) {
    if ($var_111)
      $var_110 .= "' ";
    $var_110 .= "GPRINT:'{$var_108}_min':'Min\:%5.1lf%s";
    $var_111 = TRUE;
  }

  if (in_array("avg", $var_109)) {
    if ($var_111)
      $var_110 .= "' ";
    $var_110 .= "GPRINT:'{$var_108}_avg':'Avg\:%5.1lf%s";
    $var_111 = TRUE;
  }

  if (in_array("max", $var_109)) {
    if ($var_111)
      $var_110 .= "' ";
    $var_110 .= "GPRINT:'{$var_108}_max':'Max\:%5.1lf%s";
    $var_111 = TRUE;
  }
  
  if ($var_111)
    $var_110 .= "\\l' ";

  return $var_110;
}


function fn_26($var_112, $var_113, $var_3) {
  
  if(!is_array($var_3)) {
    trigger_error('checkAccess: $conf is not an array.', var_114);
  }
  if(!isSet($var_3['auth_system'])) {
    trigger_error("checkAccess: \$conf['auth_system'] is not defined.", var_114);
  }
  
  switch( $var_3['auth_system'] ) {
    case 'readonly':
      $var_49 = ($var_113 == var_115::var_116);
      break;
      
    case 'enabled':
      
      
      $var_117 = GangliaAcl::getInstance();
      $var_118 = GangliaAuth::getInstance();
      
      if(!$var_118->isAuthenticated()) {
        $var_120 = var_115::var_121;
      } else {
        $var_120 = $var_118->getUser();
      }
      
      if(!$var_117->has($var_112)) {
        $var_112 = var_115::var_124;
      }
      
      $var_49 = false;
      if($var_117->hasRole($var_120)) {
        $var_49 = (bool) $var_117->isAllowed($var_120, $var_112, $var_113);
      }
      
      break;
    
    case 'disabled':
      $var_49 = true;
      break;
    
    default:
      trigger_error( "Invalid value '".$var_3['auth_system']."' for \$conf['auth_system'].", var_114 );
      return false;
  }
  
  return $var_49;
}

function fn_27($var_127) {
  $var_128 = 'v_' . preg_replace('/[^a-zA-Z0-9_]/', '_', $var_127);
  return $var_128;
}






function fn_28($var_129) 
{ 
    $var_130 = "  "; 
    $var_131 = ""; 
    $var_132 = 0; 
    $var_133 = false; 

    $var_134 = strlen($var_129); 

    for($var_135 = 0; $var_135 < $var_134; $var_135++) 
    { 
        $var_136 = $var_129[$var_135]; 
        switch($var_136) 
        { 
            case '{': 
            case '[': 
                if(!$var_133) 
                { 
                    $var_131 .= $var_136 . "\n" . str_repeat($var_130, $var_132+1); 
                    $var_132++; 
                } 
                else 
                { 
                    $var_131 .= $var_136; 
                } 
                break; 
            case '}': 
            case ']': 
                if(!$var_133) 
                { 
                    $var_132--; 
                    $var_131 .= "\n" . str_repeat($var_130, $var_132) . $var_136; 
                } 
                else 
                { 
                    $var_131 .= $var_136; 
                } 
                break; 
            case ',': 
                if(!$var_133) 
                { 
                    $var_131 .= ",\n" . str_repeat($var_130, $var_132); 
                } 
                else 
                { 
                    $var_131 .= $var_136; 
                } 
                break; 
            case ':': 
                if(!$var_133) 
                { 
                    $var_131 .= ": "; 
                } 
                else 
                { 
                    $var_131 .= $var_136; 
                } 
                break; 
            case '"': 
                if($var_135 > 0 && $var_129[$var_135-1] != '\\') 
                { 
                    $var_133 = !$var_133; 
                } 
            default: 
                $var_131 .= $var_136; 
                break;                    
        } 
    } 

    return $var_131; 
} 

function fn_29() {
    global $var_3, $var_95, $var_137, $var_138, $var_107, $var_139, $var_19;

    if (!isset($var_139)) { $var_139 = 0; }

    if($var_3['cachedata'] == 1 && file_exists($var_3['cachefile'])) {
        
        
        $var_140 = time() - filemtime($var_3['cachefile']);
        $var_141 = $var_3['cachetime'] - $var_140;
        if( $var_140 < $var_3['cachetime']){
                if ( $var_139 == 1 ) {
                  echo("DEBUG: Fetching data from cache. Expires in " . $var_141 . " seconds.\n");
                }
                $var_95 = unserialize(file_get_contents($var_3['cachefile']));
        }
    }

    if ( ! isset($var_95) ) {

        if ( $var_139 == 1 ) {
            echo("DEBUG: Querying GMond for new data\n");
        }
        
        $var_142 = "index_array";

        foreach ( $var_95['cluster'] as $var_55 => $var_143 ) {
            $var_137[] = $var_55;
        }

        asort($var_137);
        $var_95['hosts'] = $var_137;

        file_put_contents($var_3['cachefile'], serialize($var_95));

    }

} 





function fn_30 ($var_144, 
                                       $var_145, 
                                       $var_146,
                                       $var_147,
                                       $var_148,
                                       $var_149) {

  global $var_3, $var_95, $var_137, $var_138, $var_107, $var_139, $var_19;
  
  fn_31();
  
  $var_150 = sizeof($var_3['graph_colors']);

  $var_164["report_name"]=isset($var_147)  ?  fn_13(implode($var_147))   : NULL;
  $var_164["title"]=isset($var_147)  ?  fn_13(implode($var_147))   : NULL;
  $var_164["glegend"]=isset($var_148) ? fn_13($var_148) : "show";

  $var_151 = 0;

  
  
  foreach ( $var_146 as $var_83 => $var_105 ) {
    foreach ( $var_95['hosts'] as $var_83 => $var_106 ) {
      if ( preg_match("/$var_105/i", $var_106 ) ) {
        
        foreach ($var_95['cluster'][$var_106] AS $var_102) {
            $var_158[] = $var_106 . "|" . $var_102;
        }
      }
    }
  } 

  if( isset($var_147)) {
    
    foreach ( $var_147 as $var_83 => $var_105 ) {
      foreach ( $var_95['metrics'] as $var_83 => $var_152 ) {
        if ( preg_match("/$var_105/i", $var_83, $var_153 ) ) {
          if (isset($var_153) && count($var_153) > 1) {
            $var_110 = array();
            for ($var_154 = 1; $var_154 < count($var_153); $var_154++) {
              $var_110[] = $var_153[$var_154];
            }
	    $var_155[$var_83] = implode(' ', $var_110);
          } else {
            $var_155[$var_83] = $var_83;
          }
        }
      }
    }
    ksort($var_155);
  }
  
  if( isset($var_155)){
    $var_156 = array_unique($var_155);
  }
  else{
    $var_156 = array($var_157 => $var_157);
  }

  if ( isset($var_158)) {

    $var_159 = array_unique($var_158);

    
    foreach ( $var_159 as $var_83 => $var_160 ) {

      $var_49 = explode("|", $var_160);

      $var_106 = $var_49[0];
      $var_161 = $var_49[1];

      foreach ( $var_156 as $var_152 => $var_110 ) {

        
        $var_162 = $var_151 % $var_150;

        
        if( !in_array($var_106, $var_95['metrics'][$var_152]))
          continue;

        $var_163 = '';
        if ($var_149) {
	  $var_163 = $var_110;
        } else {
          if ($var_3['strip_domainname'] == True )
            $var_163 = fn_16($var_106);
          else
            $var_163 = $var_106;

 	  if (isset($var_155) and sizeof($var_156) > 1)
            $var_163 .= " $var_110";
	}

        $var_164['series'][] = array ( "hostname" => $var_106 , "clustername" => $var_161,
          "metric" => $var_152,  "color" => $var_3['graph_colors'][$var_162], "label" => $var_163, "line_width" => $var_145, "type" => $var_144);

        $var_151++;

      }
      }
   }

   return $var_164;

} 





function fn_31 () {

   global $var_3, $var_95, $var_137, $var_138, $var_107, $var_139, $var_19, $var_142;

   if($var_3['cachedata'] == 1 && file_exists($var_3['cachefile'])) {
      
      
      $var_140 = time() - filemtime($var_3['cachefile']);
      $var_141 = $var_3['cachetime'] - $var_140;
      if( $var_140 < $var_3['cachetime']){
          if ( $var_139 == 1 ) {
            echo("DEBUG: Fetching data from cache. Expires in " . $var_141 . " seconds.\n");
          }
          $var_95 = unserialize(file_get_contents($var_3['cachefile']));
      }
   }

   if ( ! isset($var_95) || sizeof($var_95) == 0 ) {

      if ( $var_139 == 1 ) {
         echo("DEBUG: Querying GMond for new data\n");
      }
      
      $var_142 = "index_array";
      Gmetad($var_3['ganglia_ip'], $var_3['ganglia_port']);

      foreach ( $var_95['cluster'] as $var_55 => $var_143 ) {
         $var_137[] = $var_55;
      }
      asort($var_137);
      $var_95['hosts'] = $var_137;

      file_put_contents($var_3['cachefile'], serialize($var_95));

   }

} 

function fn_32($var_55, 
                             $var_19, 
                             $var_102,
                             $var_165, 
                             $var_31, 
                             $var_166, 
                             $var_167, 
                             $var_168) {
  $var_168->assign("extra", fn_0("host_extra.tpl"));

  $var_168->assign("host", $var_55);
  $var_168->assign("node_image", fn_8($var_19));

  if ($var_165)
    $var_168->assign("node_msg", "This host is up and running."); 
  else
    $var_168->assign("node_msg", "This host is down."); 

  
  if ($var_31)
    return;

  foreach ($var_19 as $var_2 => $var_24) {
    if ($var_24['TYPE'] == "string" or $var_24['TYPE']=="timestamp" or
        (isset($var_166[$var_2]) and $var_166[$var_2])) {
      $var_171[$var_2] = $var_24;
    } elseif ($var_24['SLOPE'] == "zero" or
              (isset($var_167[$var_2]) and $var_167[$var_2])) {
      $var_174[$var_2] = $var_24;
    }
  }

  
  $var_170 = null;
  if (isset($var_19['boottime']['VAL']))
    $var_170 = $var_19['boottime']['VAL'];
  else
    $var_170 = $var_102['LOCALTIME'];

  
  
  $var_171['uptime']['TYPE'] = "string";
  $var_171['uptime']['VAL'] = fn_2($var_102['LOCALTIME'] - $var_170);
  $var_171['uptime']['TITLE'] = "Uptime";

  
  
  $var_171['gmond_started']['TYPE'] = "timestamp";
  $var_171['gmond_started']['VAL'] = $var_165['GMOND_STARTED'];
  $var_171['gmond_started']['TITLE'] = "Gmond Started";
  $var_171['last_reported']['TYPE'] = "string";
  $var_171['last_reported']['VAL'] = fn_2($var_102['LOCALTIME'] - $var_165['REPORTED']);
  $var_171['last_reported']['TITLE'] = "Last Reported";

  $var_171['ip_address']['TITLE'] = "IP Address";
  $var_171['ip_address']['VAL'] = $var_165['IP'];
  $var_171['ip_address']['TYPE'] = "string";
  $var_171['location']['TITLE'] = "Location";
  $var_171['location']['VAL'] = $var_165['LOCATION'];
  $var_171['location']['TYPE'] = "string";

  
  if (is_array($var_171)) {
    $var_172 = array();
    ksort($var_171);
    foreach ($var_171 as $var_2 => $var_24) {
      
      ! array_key_exists('UNITS', $var_24) and $var_24['UNITS'] = "";
      if (isset($var_24['TITLE'])) {
        $var_172[$var_2]["name"] = $var_24['TITLE'];
      } else {
        $var_172[$var_2]["name"] = $var_2;
      }
      if ($var_24['TYPE']=="timestamp" or 
          (isset($var_166[$var_2]) and $var_166[$var_2])) {
        $var_172[$var_2]["value"] = date("r", $var_24['VAL']);
      } else {
        $var_172[$var_2]["value"] = $var_24['VAL'] . " " . $var_24['UNITS'];
      }
    }
  }
  $var_168->assign("s_metrics_data", $var_172);

  
  $var_173 = null;
  if (isset($var_174) and is_array($var_174)) {
    $var_173 = array();
    ksort($var_174);
    foreach ($var_174 as $var_2 => $var_24) {
      if (isset($var_24['TITLE']))  {
        $var_173[$var_2]["name"] =  $var_24['TITLE'];
      } else {
        $var_173[$var_2]["name"] = $var_2;
      }
      $var_173[$var_2]["value"] = "$var_24[var_175] $var_24[var_176]";
    }
  }
  $var_168->assign("c_metrics_data", $var_173);
}

function fn_33($var_19,
			 $var_166,
			 $var_167,
			 $var_177) {
  $var_178 = NULL;
  $var_179 = NULL;
  foreach ($var_19 as $var_2 => $var_180) {
    if ($var_180['TYPE'] == "string" or 
	$var_180['TYPE'] == "timestamp" or
	(isset($var_166[$var_2]) and $var_166[$var_2])) {
    } elseif ($var_180['SLOPE'] == "zero" or
	      (isset($var_167[$var_2]) and $var_167[$var_2])) {
    } else {
      $var_181 = $var_177 . "&amp;v=$var_180[var_175]&amp;m=$var_2";
      
      if ($var_180['UNITS']) {
	$var_182 = rawurlencode($var_180['UNITS']);
	$var_181 .= "&amp;vl=$var_182";
      }
      if (isset($var_180['TITLE'])) {
	$var_183 = $var_180['TITLE'];
	$var_184 = rawurlencode($var_183);
	$var_181 .= "&amp;ti=$var_184";
      }
      

      $var_178[$var_2]['graph'] = $var_181;
      $var_178[$var_2]['description'] = 
	isset($var_180['DESC']) ? $var_180['DESC'] : '';
      $var_178[$var_2]['title'] = 
	isset($var_180['TITLE']) ? $var_180['TITLE'] : '';

      
      if ( isset($var_19[$var_2]['GROUP']) ) {
	$var_185 = $var_19[$var_2]['GROUP'];
      } else {
	$var_185 = array("");
      }

      foreach ($var_185 as $var_186) {
	if (isset($var_179[$var_186])) {
	  $var_179[$var_186] = 
	    array_merge($var_179[$var_186], (array)$var_2);
	} else {
	  $var_179[$var_186] = array($var_2);
	}
      }
    } 
  } 
  return array($var_178, $var_179);
}
?>
