<?php defined('SYSPATH') or die('No direct script access.');


class class_0 extends var_0 {

	
	public $var_1 = FALSE;

	
	public $var_2 = '';

	
	protected $var_3;

	
	private static $var_4 = array();


	public function fn_0()
	{
		parent::fn_0();
		
		
		if (isset($var_5->var_6))
		{
			$var_5->var_6->disable();
		}

		
		$var_5->var_3 = Kohana::config('database.default.table_prefix');

		
		$var_5->var_8 = TRUE;
	}


	
	public function fn_1()
	{
		$var_5->fn_2('markers');
	}

	
	public function fn_3()
	{
		$var_5->fn_2('clusters');
	}
	
	
	protected function fn_2($var_11)
	{
		$var_12 = Kohana::config('settings.default_map_all');
		$var_13 = "";
		$var_14 = FALSE;
		
		if (Kohana::config('settings.default_map_all_icon_id'))
		{
			$var_15 = ORM::factory('media')->find(Kohana::config('settings.default_map_all_icon_id'));
			$var_13 = url::convert_uploaded_to_abs($var_15->var_17);
		}
		
		
		$var_18 = (isset($var_78['c']) AND intval($var_78['c']) > 0) ? intval($var_78['c']) : 0;
		
		if (Category_Model::is_valid_category($var_18))
		{
			
			$var_19 = ORM::factory('category', $var_18);
			$var_12 = $var_19->var_20;
			$var_13 = "";
			if ($var_19->var_21)
			{
				$var_13 = url::convert_uploaded_to_abs($var_19->var_21);
			}
		}
		
		$var_22 = array('color' => $var_12, 'icon' => $var_13);
		Event::run('ushahidi_filter.json_alter_params', $var_22);
		$var_12 = $var_22['color'];
		$var_13 = $var_22['icon'];

		
		
		
		Event::run('ushahidi_filter.json_replace_markers', $var_14);

		
		if (! $var_14)
		{
			$var_14 = (isset($var_78['page']) AND intval($var_78['page']) > 0)
			    ? reports::fetch_incidents(TRUE)
			    : reports::fetch_incidents();
		}
		
		
		
		
		Event::run('ushahidi_filter.json_alter_markers', $var_14);
		
		
		$var_23 = "{$var_11}_geojson";
		$var_24 = $var_5->$var_23($var_14, $var_18, $var_12, $var_13);
		
		$var_5->fn_4($var_24);
	}

	
	protected function fn_4($var_24)
	{
		
		
		Event::run('ushahidi_filter.json_features', $var_24);
		
		$var_26 = json_encode(array(
			"type" => "FeatureCollection",
			"features" => $var_24
		));
		
		header('Content-type: application/json; charset=utf-8');
		
	}

	
	protected function fn_5($var_28, $var_18, $var_12, $var_13, $var_29 = TRUE)
	{
		$var_24 = array();
		
		
		
		$var_30 = (isset($var_78['i']) AND intval($var_78['i']) > 0)? intval($var_78['i']) : 0;
		
		$var_31 = (isset($var_78['m']) AND intval($var_78['m']) > 0)? intval($var_78['m']) : 0;
		
		foreach ($var_28 as $var_32)
		{
			
			$var_32->var_33 = isset($var_32->var_34) ? $var_32->var_34 : $var_32->var_33;
			if (isset($var_32->var_35) AND isset($var_32->var_36))
			{
				$var_35 = $var_32->var_35;
				$var_36 = $var_32->var_36;
			}
			elseif (isset($var_32->var_37) AND isset($var_32->var_37->var_35) AND isset($var_32->var_37->var_36))
			{
				$var_35 = $var_32->var_37->var_35;
				$var_36 = $var_32->var_37->var_36;
			}
			else
			{
				
				continue;
			}
			
			
			$var_38 = "";
			$var_39 = ORM::factory('incident', $var_32->var_33)->var_39;
			if ($var_39->count())
			{
				foreach ($var_39 as $var_41)
				{
					if ($var_41->var_42)
					{
						
						$var_38 = url::convert_uploaded_to_abs($var_41->var_42);
						break;
					}
				}
			}

			
			if (method_exists($var_32, 'url'))
			{
				$var_43 = $var_32->url();
			}
			elseif (isset($var_32->var_44))
			{
				$var_43 = $var_32->var_44;
			}
			else
			{
				$var_43 = Incident_Model::get_url($var_32);
			}
			$var_45 = $var_5->fn_6($var_32->var_47, $var_43);

			$var_48 = array();
			$var_48['type'] = 'Feature';
			$var_48['properties'] = array(
				'id' => $var_32->var_33,
				'name' => $var_45,
				'link' => $var_43,
				'category' => array($var_18),
				'color' => $var_12,
				'icon' => $var_13,
				'thumb' => $var_38,
				'timestamp' => strtotime($var_32->var_49),
				'count' => 1,
				'class' => get_class($var_32)
			);
			$var_48['geometry'] = array(
				'type' => 'Point',
				'coordinates' => array($var_36, $var_35)
			);

			if ($var_32->var_33 == $var_30)
			{
				array_unshift($var_24, $var_48);
			}
			else
			{
				array_push($var_24, $var_48);
			}
			
			
			if ($var_29)
			{
				$var_50 = $var_5->fn_7($var_32->var_33, $var_32->var_47, $var_32->var_49, $var_43);
				if (count($var_50))
				{
					foreach ($var_50 as $var_52)
					{
						array_push($var_24, $var_52);
					}
				}
			}
		}
		
		Event::run('ushahidi_filter.json_index_features', $var_24);
		
		return $var_24;
	}

	
	protected function fn_8($var_28, $var_18, $var_12, $var_13)
	{
		$var_24 = array();
		
		
		
		$var_53 = (isset($var_78['s']) AND intval($var_78['s']) > 0) ? intval($var_78['s']) : NULL;
		
		
		$var_54 = (isset($var_78['e']) AND intval($var_78['e']) > 0) ? intval($var_78['e']) : NULL;
		
		
		$var_55 = (isset($var_78['z']) AND !empty($var_78['z'])) ? (int) $var_78['z'] : 8;
		$var_56 = (10000000 >> $var_55) / 100000;
		
		
		if ($var_28 instanceof var_57)
		{
			$var_14 = $var_28->as_array();
		}
		elseif ($var_28 instanceof var_59)
		{
			$var_14 = $var_28->result_array();
		}
		else
		{
			$var_14 = $var_28;
		}

		$var_61 = array();	
		$var_62 = array();	

		
		while (count($var_14))
		{
			$var_32	 = array_pop($var_14);
			$var_10 = array();
			
			
			$var_32->var_33 = isset($var_32->var_34) ? $var_32->var_34 : $var_32->var_33;
			if (isset($var_32->var_35) AND isset($var_32->var_36))
			{
				$var_63 = $var_32->var_35;
				$var_64 = $var_32->var_36;
			}
			elseif (isset($var_32->var_37) AND isset($var_32->var_37->var_35) AND isset($var_32->var_37->var_36))
			{
				$var_63 = $var_32->var_37->var_35;
				$var_64 = $var_32->var_37->var_36;
			}
			else
			{
				
				continue;
			}

			
			foreach ($var_14 as $var_65 => $var_66)
			{
				
				if (isset($var_66->var_35) AND isset($var_66->var_36))
				{
					$var_67 = $var_66->var_35;
					$var_68 = $var_66->var_36;
				}
				elseif (isset($var_66->var_37) AND isset($var_66->var_37->var_35) AND isset($var_66->var_37->var_36))
				{
					$var_67 = $var_66->var_37->var_35;
					$var_68 = $var_66->var_37->var_36;
				}
				else
				{
					
					continue;
				}
				
				
				
				

				$var_69 = abs($var_64 - $var_68) +
					abs($var_63 - $var_67);
					
				
				if ($var_69 < $var_56)
				{
					unset($var_14[$var_65]);
					$var_10[] = $var_66;
				}
			}

			
			if (count($var_10) > 0)
			{
				$var_10[] = $var_32;
				$var_61[] = $var_10;
			}
			else
			{
				$var_62[] = $var_32;
			}
		}

		
		foreach ($var_61 as $var_10)
		{
			
			$var_70 = $var_5->fn_9($var_10);
			$var_72 = array_values($var_70['center']);
			$var_73 = $var_70['sw']['longitude'].','.$var_70['sw']['latitude'];
			$var_74 = $var_70['ne']['longitude'].','.$var_70['ne']['latitude'];

			
			$var_75 = count($var_10);
			
			
			$var_76 = ( ! empty($var_53) AND ! empty($var_54))
				? "&s=".$var_53."&e=".$var_54
				: "";
			
			
			
			$var_77 = http_build_query(array_merge(
				array(
					'sw' => $var_73,
					'ne' => $var_74
				),
				$var_78
			));
			
			
			$var_43 = url::site("reports/index/?$var_77");
			$var_45 = $var_5->fn_6(Kohana::lang('ui_main.reports_count', $var_75), $var_43);
			
			$var_48 = array();
			$var_48['type'] = 'Feature';
			$var_48['properties'] = array(
				'name' => $var_45,
				'link' => $var_43,
				'category' => array($var_18),
				'color' => $var_12,
				'icon' => $var_13,
				'thumb' => '',
				'timestamp' => 0,
				'count' => $var_75,
			);
			$var_48['geometry'] = array(
				'type' => 'Point',
				'coordinates' => $var_72
			);

			array_push($var_24, $var_48);
		}

		
		$var_24 = array_merge($var_24, $var_5->fn_5($var_62, $var_18, $var_12, $var_13, FALSE));
		
		
		
		
		
		
		
		Event::run('ushahidi_filter.json_cluster_features', $var_24);
		
		return $var_24;
	}

	
	public function fn_10($var_34 = 0)
	{
		$var_24 = array();

		$var_34 = intval($var_34);

		
		if ( ! Incident_Model::is_valid_incident($var_34, TRUE) )
		{
			throw new class_1();
		}

		
		
		$var_32 = ORM::factory('incident')->where('incident.incident_active', 1)->with('location')->find($var_34);
		if ( ! $var_32->var_81 )
		{
			throw new class_1();
		}
		
		
		$var_24 = $var_5->fn_5(array($var_32), 0, null, null, TRUE);

		
		$var_82 = Incident_Model::get_neighbouring_incidents($var_34, FALSE, 20, 100);
		if ($var_82)
		{
			$var_24 = array_merge($var_24, $var_5->fn_5($var_82, 0, null, null, FALSE));
		}

		Event::run('ushahidi_filter.json_single_features', $var_24);

		$var_5->fn_4($var_24);
	}

	
	public function fn_11($var_18 = 0)
	{
		$var_18 = (int) $var_18;

		$var_5->var_1 = FALSE;
		$var_83 = new class_2();

		$var_84 = (isset($var_78["i"]) AND ! empty($var_78["i"]))
		    ? $var_78["i"]
		    : "month";

		
		$var_85 = "All Categories";
		$var_20 = "
		if ($var_18 > 0)
		{
			$var_86 = ORM::factory("var_86", $var_18);
			if ($var_86->var_81)
			{
				$var_85 = $var_86->var_85;
				$var_20 = "
			}
		}

		
		
		
		$var_87 = "var_88(var_49, '%Y-%m-01')";
		$var_89 = "DATE_FORMAT(incident_date, '%Y%m')";
		if ($var_84 == 'day')
		{
			$var_87 = "DATE_FORMAT(incident_date, '%Y-%m-%d')";
			$var_89 = "DATE_FORMAT(incident_date, '%Y%m%d')";
		}
		elseif ($var_84 == 'hour')
		{
			$var_87 = "DATE_FORMAT(incident_date, '%Y-%m-%d %H:%M')";
			$var_89 = "DATE_FORMAT(incident_date, '%Y%m%d%H')";
		}
		elseif ($var_84 == 'week')
		{
			$var_87 = "STR_TO_DATE(CONCAT(CAST(YEARWEEK(incident_date) AS CHAR), ' Sunday'), '%X%V %W')";
			$var_89 = "YEARWEEK(incident_date)";
		}

		$var_90 = array();
		$var_90[0] = array();
		$var_90[0]['label'] = $var_85;
		$var_90[0]['color'] = $var_20;
		$var_90[0]['data'] = array();

		
		$var_91 = '';
		$var_22 = array();
		if ($var_18 != 0)
		{
			$var_77 = 'SELECT ic.incident_id AS id '
			    . 'FROM '.$var_5->var_3.'incident_category ic '
			    . 'INNER JOIN '.$var_5->var_3.'category c ON (ic.category_id = c.id) '
			    . 'WHERE (c.id = :cid OR c.parent_id = :cid)';
			
			$var_22[':cid'] = $var_18;
			$var_91 .= " AND incident.id IN ( $var_77 ) ";
		}
		
		
		if (isset($var_78['s']) AND isset($var_78['e']))
		{
			$var_77 = 'SELECT id FROM '.$var_5->var_3.'incident '
			    . 'WHERE incident_date >= :datestart '
			    . 'AND incident_date <= :dateend ';

			
			$var_22[':datestart'] = date("Y-m-d H:i:s", (int)$var_78['s']);
			$var_22[':dateend'] = date('Y-m-d H:i:s', (int)$var_78['e']);
			$var_91 .= " AND incident.id IN ( $var_77 ) ";
		}

		
		if (isset($var_78['m']) AND intval($var_78['m']) > 0)
		{
			$var_77 = "SELECT incident_id AS id FROM ".$var_5->var_3."media "
			    . "WHERE media_type = :mtype ";

			$var_22[':mtype'] = $var_78['m'];
			$var_91 .= " AND incident.id IN ( $var_77 ) ";
		}

		
		$var_77 = 'SELECT UNIX_TIMESTAMP('.$var_87.') AS time, COUNT(id) AS number '
		    . 'FROM '.$var_5->var_3.'incident '
		    . 'WHERE incident_active = 1 '.$var_91.' '
		    . 'GROUP BY '.$var_89;
		
		foreach ($var_83->query($var_77, $var_22) as $var_92)
		{
			array_push($var_90[0]['data'], array($var_92->var_93 * 1000, $var_92->var_94));
		}
		
		
		
		if (count($var_90[0]['data']) == 0)
		{
			array_push($var_90[0]['data'], array((int)$var_78['s'] * 1000, 0));
			array_push($var_90[0]['data'], array((int)$var_78['e'] * 1000, 0));
		}

		
		

		header('Content-type: application/json; charset=utf-8');
		
	}
	

	
	public function fn_12($var_96 = 0)
	{
		$var_5->var_2 = "";
		$var_5->var_1 = FALSE;

		$var_95 = ORM::factory('layer')
			->where('layer_visible', 1)
			->find($var_96);

		if ($var_95->var_81)
		{
			$var_97 = $var_95->var_97;
			$var_98 = $var_95->var_98;

			if ($var_97 != '')
			{
				
				$var_99 = $var_97;
			}
			else
			{
				
				$var_99 = Kohana::config('upload.directory').'/'.$var_98;
			}

			$var_100 = file_get_contents($var_99);

			if ($var_100 !== false)
			{
				
			}
		}
		else
		{
			throw new class_1();
		}
	}

	
	protected function fn_7($var_34, $var_47, $var_49, $var_101)
	{
		$var_50 = array();
		if ($var_34)
		{
			$var_102 = $var_5->fn_13($var_34);
			$var_104 = new class_3();

			foreach ( $var_102 as $var_105 )
			{
				$var_106 = $var_104->read($var_105->var_50);
				$var_108 = $var_106->getGeoInterface();

				$var_110 = ($var_105->var_111) ? $var_105->var_111 : $var_47;
				$var_45 = $var_5->fn_6($var_110, $var_101);
					
				$var_112 = ($var_105->var_113) ? $var_105->var_113 : "ffcc66";
					
				$var_114 = ($var_105->var_113) ? $var_105->var_113 : "CC0000";
					
				$var_115 = ($var_105->var_116) ? $var_105->var_116 : "3";

				$var_48 = array();
				$var_48['type'] = 'Feature';
				$var_48['properties'] = array(
					'id' => $var_34,
					'feature_id' => $var_105->var_33,
					'name' => $var_45,
					'description' => $var_105->var_117,
					'color' => $var_112,
					'icon' => '',
					'strokecolor' => $var_114,
					'strokewidth' => $var_115,
					'link' => $var_101,
					'category' => array(0),
					'timestamp' => strtotime($var_49),
				);
				$var_48['geometry'] = $var_108;

				$var_50[] = $var_48;
			}
		}

		return $var_50;
	}


	
	public function fn_13($var_34) {
		if (self::$var_4) {
			return isset(self::$var_4[$var_34]) ? self::$var_4[$var_34] : array();
		}

		$var_83 = new class_2();
		
		$var_118 = "SELECT id, incident_id, AsText(geometry) as geometry, geometry_label, 
			geometry_comment, geometry_color, geometry_strokewidth FROM ".$var_5->var_3."geometry";
		$var_77 = $var_83->query($var_118);

		foreach ( $var_77 as $var_105 )
		{
			self::$var_4[$var_105->var_34][] = $var_105;
		}

		return isset(self::$var_4[$var_34]) ? self::$var_4[$var_34] : array();
	}


	
	private function fn_14($var_120)
	{
		return round(var_121 + var_122 * $var_120 * pi() / 180);
	}

	
	private function fn_15($var_124)
	{
		return round(var_121 - var_122 *
					log((1 + sin($var_124 * pi() / 180)) /
					(1 - sin($var_124 * pi() / 180))) / 2);
	}

	
	private function fn_16($var_125, $var_126, $var_127, $var_128, $var_129)
	{
		$var_130 = $var_5->fn_14($var_126);
		$var_131 = $var_5->fn_15($var_125);

		$var_132 = $var_5->fn_14($var_128);
		$var_133 = $var_5->fn_15($var_127);

		return sqrt(pow(($var_130-$var_132),2) + pow(($var_131-$var_133),2)) >> (21 - $var_129);
	}

	
	protected function fn_9($var_10)
	{
		
		$var_134 = 90;
		$var_135 = 180;
		$var_136 = -90;
		$var_137 = -180;

		$var_138 = $var_139 = 0;
		foreach ($var_10 as $var_32)
		{
			
			$var_35 = isset($var_32->var_35) ? $var_32->var_35 : $var_32->var_37->var_35;
			$var_36 = isset($var_32->var_36) ? $var_32->var_36 : $var_32->var_37->var_36;
			
			if ($var_35 < $var_134)
			{
				$var_134 = $var_35;
			}

			if ($var_36 < $var_135)
			{
				$var_135 = $var_36;
			}

			if ($var_35 > $var_136)
			{
				$var_136 = $var_35;
			}

			if ($var_36 > $var_137)
			{
				$var_137 = $var_36;
			}

			$var_138 += $var_35;
			$var_139 += $var_36;
		}
		$var_140 = $var_138 / count($var_10);
		$var_141 = $var_139 / count($var_10);

		$var_142 = array('longitude' => $var_141, 'latitude' => $var_140);
		$var_143 = array('longitude' => $var_135,'latitude' => $var_134);
		$var_144 = array('longitude' => $var_137,'latitude' => $var_136);

		return array(
			"center"=>$var_142,
			"sw"=>$var_143,
			"ne"=>$var_144
		);
	}
	
	
	protected function fn_6($var_110, $var_44)
	{
		$var_145 = utf8tohtml::convert($var_110, TRUE);
		$var_145 = str_ireplace('"','&
		$item_name = "<a href='$var_44'>".$encoded_title."</a>";
		$item_name = str_replace(array(chr(10),chr(13)), ' ', $var_45);
		return $var_45;
	}
}
