<?php




class class_0
{
    const var_0 = 'larry';

    private $var_1       = '';
    private $var_2     = array();
    private $var_3      = array();
    private $var_4    = array();
    private $var_5 = array();


    
    private $var_6 = array(
        
        'mail_pagesize'        => 'pagesize',
        'addressbook_pagesize' => 'pagesize',
        'reply_mode'           => 'top_posting',
        'refresh_interval'     => 'keep_alive',
        'min_refresh_interval' => 'min_keep_alive',
        'messages_cache_ttl'   => 'message_cache_lifetime',
        'mail_read_time'       => 'preview_pane_mark_read',
        'redundant_attachments_cache_ttl' => 'redundant_attachments_memcache_ttl',
    );

    
    public function fn_0($var_1 = '')
    {
        $var_7->var_1 = $var_1;

        if ($var_2 = getenv('RCUBE_CONFIG_PATH')) {
            $var_7->var_2 = explode(var_8, $var_2);
            
            foreach ($var_7->var_2 as $var_9 => $var_10) {
                if (!rcube_utils::is_absolute_path($var_10)) {
                    if ($var_11 = realpath(var_12 . $var_10)) {
                        $var_7->var_2[$var_9] = unslashify($var_11) . '/';
                    }
                    else {
                        unset($var_7->var_2[$var_9]);
                    }
                }
                else {
                    $var_7->var_2[$var_9] = unslashify($var_10) . '/';
                }
            }
        }

        if (defined('RCUBE_CONFIG_DIR') && !in_array(var_13, $var_7->var_2)) {
            $var_7->var_2[] = var_13;
        }

        if (empty($var_7->var_2)) {
            $var_7->var_2[] = var_12 . 'config/';
        }

        $var_7->fn_1();

        
        
        if (empty($var_7->var_3['contactlist_fields'])) {
            $var_7->fn_2('contactlist_fields', array('name', 'firstname', 'surname', 'email'));
        }
    }

    
    private function fn_3($var_17)
    {
        $var_18 = 'string';

        

        if (preg_match('/^[-+]?(\d+(\.\d*)?|\.\d+)([eE][-+]?\d+)?$/', $var_17)) {
            $var_18 = 'double';
        }
        else if (preg_match('/^\d+$/', $var_17)) {
            $var_18 = 'integer';
        }
        else if (preg_match('/^(t(rue)?)|(f(alse)?)$/i', $var_17)) {
            $var_18 = 'boolean';
        }

        return $var_18;
    }

    
    private function fn_4($var_20, $var_18)
    {
        $var_21 = $var_20;

        switch ($var_18) {
        case 'boolean':
            $var_21 = (boolean) $var_21;
            break;
        case 'integer':
            $var_21 = (integer) $var_21;
            break;
        case 'double':
            $var_21 = (double) $var_21;
            break;
        case 'string':
            break;
        case 'array':
            $var_21 = json_decode($var_21, true);
            break;
        case 'object':
            $var_21 = json_decode($var_21, false);
            break;
        case 'resource':
        case 'NULL':
        default:
            $var_21 = $var_7->fn_4($var_21, $var_7->fn_3($var_21));
        }

        return $var_21;
    }

    
    private function fn_5($var_23, $var_24, $var_18 = null)
    {
        $var_17 = getenv($var_23);

        if ($var_17 === false) {
            $var_17 = $var_24;
        }
        else {
            $var_17 = $var_7->fn_4($var_17, $var_18 ?: gettype($var_24));
        }

        return $var_17;
    }

    
    private function fn_1()
    {
        
        if (!$var_7->fn_6('defaults.inc.php')) {
            $var_7->var_4[] = 'defaults.inc.php was not found.';
        }

        
        if (!$var_7->fn_6('config.inc.php')) {
            
            if (!$var_7->fn_6('main.inc.php') || !$var_7->fn_6('db.inc.php')) {
                $var_7->var_4[] = 'config.inc.php was not found.';
            }
            else if (rand(1,100) == 10) {  
                trigger_error("config.inc.php was not found. Please migrate your config by running bin/update.sh", var_26);
            }
        }

        
        $var_7->fn_7();

        
        if (empty($var_7->var_3['skin'])) {
            if (!empty($var_7->var_3['skin_path'])) {
                $var_7->var_3['skin'] = str_replace('skins/', '', unslashify($var_7->var_3['skin_path']));
            }
            else {
                $var_7->var_3['skin'] = self::var_0;
            }
        }

        
        if ($var_7->var_3['skin'] == 'default') {
            $var_7->var_3['skin'] = self::var_0;
        }

        
        foreach (array('log_dir' => 'logs', 'temp_dir' => 'temp') as $var_28 => $var_29) {
            foreach (array($var_7->var_3[$var_28], '../' . $var_7->var_3[$var_28], var_12 . $var_29) as $var_10) {
                if ($var_10 && ($var_11 = realpath(unslashify($var_10)))) {
                    $var_7->var_3[$var_28] = $var_11;
                    break;
                }
            }
        }

        
        foreach (array('drafts_mbox', 'junk_mbox', 'sent_mbox', 'trash_mbox') as $var_30) {
            $var_7->var_3[$var_30] = rcube_charset::convert($var_7->var_3[$var_30], var_31, 'UTF7-IMAP');
        }

        
        if ($var_7->var_3['debug_level'] & 1) {
            ini_set('log_errors', 1);

            if ($var_7->var_3['log_driver'] == 'syslog') {
                ini_set('error_log', 'syslog');
            }
            else {
                ini_set('error_log', $var_7->var_3['log_dir'].'/errors');
            }
        }

        
        ini_set('display_errors', intval(empty($_REQUEST['_remote']) && ($var_7->var_3['debug_level'] & 4)));

        
        unset($var_7->var_3['dst_active']);

        
        $GLOBALS['CONFIG'] = &$var_7->var_3;
    }

    
    private function fn_7()
    {
        if (empty($var_7->var_3['include_host_config'])) {
            return;
        }

        foreach (array('HTTP_HOST', 'SERVER_NAME', 'SERVER_ADDR') as $var_28) {
            $var_32 = null;
            $var_33  = $_SERVER[$var_28];

            if (!$var_33) {
                continue;
            }

            if (is_array($var_7->var_3['include_host_config'])) {
                $var_32 = $var_7->var_3['include_host_config'][$var_33];
            }
            else {
                $var_32 = preg_replace('/[^a-z0-9\.\-_]/i', '', $var_33) . '.inc.php';
            }

            if ($var_32 && $var_7->fn_6($var_32)) {
                return;
            }
        }
    }

    
    public function fn_6($var_34)
    {
        $var_35 = false;

        foreach ($var_7->fn_8($var_34) as $var_37) {
            if ($var_37 && is_file($var_37) && is_readable($var_37)) {
                
                ob_start();
                ob_end_clean();

                if (is_array($var_38)) {
                    $var_7->fn_9($var_38);
                    $var_35 = true;
                }
                
                if (is_array($var_40)) {
                    $var_7->fn_9($var_40);
                    $var_35 = true;
                }
            }
        }

        return $var_35;
    }

    
    public function fn_8($var_34, $var_41 = true)
    {
        $var_42    = array();
        $var_43 = rcube_utils::is_absolute_path($var_34);

        foreach ($var_7->var_2 as $var_44) {
            $var_11 = $var_43 ? $var_34 : realpath($var_44 . '/' . $var_34);

            
            if ($var_11 && $var_41 && !empty($var_7->var_1)) {
                $var_45 = preg_replace('/\.(inc.php)$/', '-' . $var_7->var_1 . '.\\1', $var_11);
                if (is_file($var_45)) {
                    $var_11 = $var_45;
                }
            }

            if ($var_11) {
                $var_42[] = $var_11;

                
                if ($var_43) {
                    break;
                }
            }
        }

        return $var_42;
    }

    
    public function fn_10($var_33, $var_47 = null)
    {
        if (isset($var_7->var_3[$var_33])) {
            $var_48 = $var_7->var_3[$var_33];
        }
        else {
            $var_48 = $var_47;
        }

        $var_48 = $var_7->fn_5('ROUNDCUBE_' . strtoupper($var_33), $var_48);
        $var_49  = rcube::get_instance();

        if ($var_33 == 'timezone') {
            if (empty($var_48) || $var_48 == 'auto') {
                $var_48 = $var_7->fn_11();
            }
        }
        else if ($var_33 == 'client_mimetypes') {
            if (!$var_48 && !$var_47) {
                $var_48 = 'text/plain,text/html'
                    . ',image/jpeg,image/gif,image/png,image/bmp,image/tiff,image/webp'
                    . ',application/x-javascript,application/pdf,application/x-shockwave-flash';
            }
            if ($var_48 && is_string($var_48)) {
                $var_48 = explode(',', $var_48);
            }
        }

        $var_51 = $var_49->var_52->exec_hook('config_get', array(
            'name' => $var_33, 'default' => $var_47, 'result' => $var_48));

        return $var_51['result'];
    }

    
    public function fn_2($var_33, $var_17)
    {
        $var_7->var_3[$var_33] = $var_17;
    }

    
    public function fn_9($var_54)
    {
        $var_54 = $var_7->fn_12($var_54);
        $var_7->var_3 = array_merge($var_7->var_3, $var_54, $var_7->var_5);
    }

    
    public function fn_13($var_54)
    {
        $var_54 = $var_7->fn_12($var_54);

        
        $var_56 = $var_7->fn_10('dont_override');
        if (is_array($var_56) && !empty($var_56)) {
            foreach ($var_56 as $var_28) {
                unset($var_54[$var_28]);
            }
        }

        
        if ($var_54['skin'] == 'default') {
            $var_54['skin'] = self::var_0;
        }

        $var_7->var_5 = $var_54;
        $var_7->var_3      = array_merge($var_7->var_3, $var_54);
    }

    
    public function fn_14()
    {
        $var_57 = $var_7->var_3;

        foreach ($var_57 as $var_58 => $var_59) {
            $var_57[$var_58] = $var_7->fn_5('ROUNDCUBE_' . strtoupper($var_58), $var_59);
        }

        $var_49  = rcube::get_instance();
        $var_51 = $var_49->var_52->exec_hook('config_get', array(
            'name' => '*', 'result' => $var_57));

        return $var_51['result'];
    }

    
    public function fn_15()
    {
        if ($var_60 = $var_7->fn_10('timezone')) {
            try {
                $var_60 = new class_1($var_60);
                return $var_60->getOffset(new class_2('now')) / 3600;
            }
            catch (var_62 $var_63) {}
        }

        return 0;
    }

    
    public function fn_16($var_28)
    {
        
        if (!array_key_exists($var_28, $var_7->var_3) || empty($var_7->var_3[$var_28])) {
            rcube::raise_error(array(
                'code' => 500, 'type' => 'php',
                'file' => var_64, 'line' => var_65,
                'message' => "Request for unconfigured crypto key \"$var_28\""
            ), true, true);
        }

        return $var_7->var_3[$var_28];
    }

    
    public function fn_17()
    {
        return $var_7->fn_10('cipher_method') ?: 'DES-EDE3-CBC';
    }

    
    public function fn_18()
    {
        
        if (!empty($var_7->var_3['mail_header_delimiter'])) {
            $var_66 = $var_7->var_3['mail_header_delimiter'];
            if ($var_66 == "\n" || $var_66 == "\r\n") {
                return $var_66;
            }
            else {
                rcube::raise_error(array(
                    'code' => 500, 'type' => 'php',
                    'file' => var_64, 'line' => var_65,
                    'message' => "Invalid mail_header_delimiter setting"
                ), true, false);
            }
        }

        $var_67 = strtolower(substr(var_68, 0, 3));

        if ($var_67 == 'win')
            return "\r\n";

        if ($var_67 == 'mac')
            return "\r\n";

        return "\n";
    }

    
    public function fn_19($var_69, $var_70=true)
    {
        $var_71 = $var_69;

        if (is_array($var_7->var_3['mail_domain'])) {
            if (isset($var_7->var_3['mail_domain'][$var_69])) {
                $var_71 = $var_7->var_3['mail_domain'][$var_69];
            }
        }
        else if (!empty($var_7->var_3['mail_domain'])) {
            $var_71 = rcube_utils::parse_host($var_7->var_3['mail_domain']);
        }

        if ($var_70) {
            $var_71 = rcube_utils::idn_to_ascii($var_71);
        }

        return $var_71;
    }

    
    public function fn_20()
    {
        return empty($var_7->var_4) ? false : join("\n", $var_7->var_4);
    }

    
    private function fn_11()
    {
        
        $var_57 = $var_7->fn_12(array('timezone' => $_SESSION['timezone']));

        if (!empty($var_57['timezone'])) {
            try {
                $var_60 = new class_1($var_57['timezone']);
                return $var_60->getName();
            }
            catch (var_62 $var_63) {}
        }

        
        return date_default_timezone_get();
    }

    
    private function fn_12($var_57)
    {
        foreach ($var_7->var_6 as $var_73 => $var_74) {
            if (isset($var_57[$var_74])) {
                if (!isset($var_57[$var_73])) {
                    $var_57[$var_73] = $var_57[$var_74];
                }
                unset($var_57[$var_74]);
            }
        }

        
        if (isset($var_57['timezone']) && is_numeric($var_57['timezone'])) {
            if ($var_60 = self::fn_21($var_57['timezone'])) {
                $var_57['timezone'] = $var_60;
            }
            else {
                unset($var_57['timezone']);
            }
        }

        
        if (isset($var_57['preview_pane']) && !isset($var_57['layout'])) {
            $var_57['layout'] = $var_57['preview_pane'] ? 'desktop' : 'list';
            unset($var_57['preview_pane']);
        }

        return $var_57;
    }

    
    static public function fn_21($var_75)
    {
        
        if ($var_60 = fn_21('', $var_75 * 3600, 0)) {
            return $var_60;
        }

        
        $var_76 = array(
            '-660' => "Pacific/Apia",
            '-600' => "Pacific/Honolulu",
            '-570' => "Pacific/Marquesas",
            '-540' => "America/Anchorage",
            '-480' => "America/Los_Angeles",
            '-420' => "America/Denver",
            '-360' => "America/Chicago",
            '-300' => "America/New_York",
            '-270' => "America/Caracas",
            '-240' => "America/Halifax",
            '-210' => "Canada/Newfoundland",
            '-180' => "America/Sao_Paulo",
             '-60' => "Atlantic/Azores",
               '0' => "Europe/London",
              '60' => "Europe/Paris",
             '120' => "Europe/Helsinki",
             '180' => "Europe/Moscow",
             '210' => "Asia/Tehran",
             '240' => "Asia/Dubai",
             '270' => "Asia/Kabul",
             '300' => "Asia/Karachi",
             '330' => "Asia/Kolkata",
             '345' => "Asia/Katmandu",
             '360' => "Asia/Yekaterinburg",
             '390' => "Asia/Rangoon",
             '420' => "Asia/Krasnoyarsk",
             '480' => "Asia/Shanghai",
             '525' => "Australia/Eucla",
             '540' => "Asia/Tokyo",
             '570' => "Australia/Adelaide",
             '600' => "Australia/Melbourne",
             '630' => "Australia/Lord_Howe",
             '660' => "Asia/Vladivostok",
             '690' => "Pacific/Norfolk",
             '720' => "Pacific/Auckland",
             '765' => "Pacific/Chatham",
             '780' => "Pacific/Enderbury",
             '840' => "Pacific/Kiritimati",
        );

        return $var_76[(string) intval($var_75 * 60)];
    }
}
