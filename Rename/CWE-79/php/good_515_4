<?php



$var_0 = array(
	var_1 => __('Duplicate'),
	var_2    => __('Enable'),
	var_3   => __('Disable'),
	var_4    => __('Delete'),
);


set_default_action();

switch (get_request_var('action')) {
	case 'save':
		fn_0();

		break;
	case 'actions':
		fn_1();

		break;
	case 'change_leaf':
		fn_2();

		header('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id'));
		break;
	case 'item_movedown':
		fn_3();

		header('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));
		break;
	case 'item_moveup':
		fn_4();

		header('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));
		break;
	case 'item_remove':
		fn_5();

		header('Location: automation_tree_rules.php?action=edit&id=' . get_request_var('id'));
		break;
	case 'item_edit':
		top_header();
		fn_6();
		bottom_footer();
		break;
	case 'remove':
		fn_7();

		header ('Location: automation_tree_rules.php');
		break;
	case 'edit':
		top_header();
		fn_8();
		bottom_footer();
		break;
	default:
		top_header();
		fn_9();
		bottom_footer();
		break;
}



function fn_0() {

	if (isset_request_var('save_component_automation_tree_rule')) {

		
		get_filter_request_var('id');
		

		$var_6['id']                 = get_request_var('id');
		$var_6['name']               = form_input_validate(get_nfilter_request_var('name'), 'name', '', true, 3);
		$var_6['tree_id']            = form_input_validate(get_nfilter_request_var('tree_id'), 'tree_id', '^[0-9]+$', false, 3);
		$var_6['tree_item_id']       = isset_request_var('tree_item_id') ? form_input_validate(get_nfilter_request_var('tree_item_id'), 'tree_item_id', '^[0-9]+$', false, 3) : 0;
		$var_6['leaf_type']          = (isset_request_var('leaf_type')) ? form_input_validate(get_nfilter_request_var('leaf_type'), 'leaf_type', '^[0-9]+$', false, 3) : 0;
		$var_6['host_grouping_type'] = isset_request_var('host_grouping_type') ? form_input_validate(get_nfilter_request_var('host_grouping_type'), 'host_grouping_type', '^[0-9]+$', false, 3) : 0;
		$var_6['enabled']            = (isset_request_var('enabled') ? 'on' : '');
		if (!is_error_message()) {
			$var_5 = sql_save($var_6, 'automation_tree_rules');

			if ($var_5) {
				raise_message(1);
			} else {
				raise_message(2);
			}
		}

		header('Location: automation_tree_rules.php?header=false&action=edit&id=' . (empty($var_5) ? get_request_var('id') : $var_5));

	} elseif (isset_request_var('save_component_automation_match_item')) {
		
		get_filter_request_var('id');
		get_filter_request_var('item_id');
		

		$var_6 = array();
		$var_6['id']        = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);
		$var_6['rule_id']   = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);
		$var_6['rule_type'] = var_7;
		$var_6['sequence']  = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);
		$var_6['operation'] = form_input_validate(get_nfilter_request_var('operation'), 'operation', '^[-0-9]+$', true, 3);
		$var_6['field']     = form_input_validate(((isset_request_var('field') && get_nfilter_request_var('field') != '0') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);
		$var_6['operator']  = form_input_validate((isset_request_var('operator') ? get_nfilter_request_var('operator') : ''), 'operator', '^[0-9]+$', true, 3);
		$var_6['pattern']   = form_input_validate((isset_request_var('pattern') ? get_nfilter_request_var('pattern') : ''), 'pattern', '', true, 3);

		if (!is_error_message()) {
			$var_8 = sql_save($var_6, 'automation_match_rule_items');

			if ($var_8) {
				raise_message(1);
			} else {
				raise_message(2);
			}
		}

		if (is_error_message()) {
			header('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($var_8) ? get_request_var('item_id') : $var_8) . '&rule_type=' . var_7);
		} else {
			header('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . var_7);
		}
	} elseif (isset_request_var('save_component_automation_tree_rule_item')) {

		
		get_filter_request_var('id');
		get_filter_request_var('item_id');
		

		unset($var_6);
		$var_6['id']                = form_input_validate(get_request_var('item_id'), 'item_id', '^[0-9]+$', false, 3);
		$var_6['rule_id']           = form_input_validate(get_request_var('id'), 'id', '^[0-9]+$', false, 3);
		$var_6['sequence']          = form_input_validate(get_nfilter_request_var('sequence'), 'sequence', '^[0-9]+$', false, 3);
		$var_6['field']             = form_input_validate((isset_request_var('field') ? get_nfilter_request_var('field') : ''), 'field', '', true, 3);
		$var_6['sort_type']         = form_input_validate(get_nfilter_request_var('sort_type'), 'sort_type', '^[0-9]+$', false, 3);
		$var_6['propagate_changes'] = (isset_request_var('propagate_changes') ? 'on' : '');
		$var_6['search_pattern']    = isset_request_var('search_pattern') ? form_input_validate(get_nfilter_request_var('search_pattern'), 'search_pattern', '', false, 3) : '';
		$var_6['replace_pattern']   = isset_request_var('replace_pattern') ? form_input_validate(get_nfilter_request_var('replace_pattern'), 'replace_pattern', '', true, 3) : '';

		if (!is_error_message()) {
			$var_9 = sql_save($var_6, 'automation_tree_rule_items');

			if ($var_9) {
				raise_message(1);
			} else {
				raise_message(2);
			}
		}

		if (is_error_message()) {
			header('Location: automation_tree_rules.php?header=false&action=item_edit&id=' . get_request_var('id') . '&item_id=' . (empty($var_9) ? get_request_var('item_id') : $var_9) . '&rule_type=' . var_10);
		} else {
			header('Location: automation_tree_rules.php?header=false&action=edit&id=' . get_request_var('id') . '&rule_type=' . var_10);
		}
	} else {
		raise_message(2);
		header('Location: automation_tree_rules.php?header=false');
	}
}



function fn_1() {
	global $var_0;
	global $var_11;

	
	if (isset_request_var('selected_items')) {
		$var_12 = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));

		if ($var_12 != false) {
			if (get_nfilter_request_var('drp_action') == var_4) { 
				cacti_log('form_actions DELETE: ' . serialize($var_12), true, 'AUTOM8 TRACE', var_13);

				db_execute('DELETE FROM automation_tree_rules WHERE ' . array_to_sql_or($var_12, 'id'));
				db_execute('DELETE FROM automation_tree_rule_items WHERE ' . array_to_sql_or($var_12, 'rule_id'));
				db_execute('DELETE FROM automation_match_rule_items WHERE ' . array_to_sql_or($var_12, 'rule_id'));
			} elseif (get_nfilter_request_var('drp_action') == var_1) { 
				for ($var_14=0;($var_14<cacti_count($var_12));$var_14++) {
					cacti_log('form_actions duplicate: ' . $var_12[$var_14], true, 'AUTOM8 TRACE', var_13);

					duplicate_automation_tree_rules($var_12[$var_14], get_nfilter_request_var('name_format'));
				}
			} elseif (get_nfilter_request_var('drp_action') == var_2) { 
				for ($var_14=0;($var_14<cacti_count($var_12));$var_14++) {
					cacti_log('form_actions enable: ' . $var_12[$var_14], true, 'AUTOM8 TRACE', var_13);

					db_execute_prepared("UPDATE automation_tree_rules SET enabled='on' WHERE id = ?", array($var_12[$var_14]));
				}
			} elseif (get_nfilter_request_var('drp_action') == var_3) { 
				for ($var_14=0;($var_14<cacti_count($var_12));$var_14++) {
					cacti_log('form_actions disable: ' . $var_12[$var_14], true, 'AUTOM8 TRACE', var_13);

					db_execute_prepared("UPDATE automation_tree_rules SET enabled='' WHERE id = ?", array($var_12[$var_14]));
				}
			}
		}

		header('Location: automation_tree_rules.php?header=false');

		var_15;
	}

	
	$var_16 = ''; $var_14 = 0;

	
	foreach ($var_17 as $var_18 => $var_19) {
		if (preg_match('/^chk_([0-9]+)$/', $var_18, $var_20)) {
			
			input_validate_input_number($var_20[1]);
			

			$var_16 .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array($var_20[1]))) . '</li>';
			$var_21[] = $var_20[1];
		}
	}

	top_header();

	form_start('automation_tree_rules.php', 'automation_tree_rules_action');

	html_start_box($var_0[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');

	if (get_nfilter_request_var('drp_action') == var_4) { 
		
	} elseif (get_nfilter_request_var('drp_action') == var_1) { 
		 form_text_box('name_format', '<' . __('rule_name') . '> (1)', '', '255', '30', 'text'); 
	} elseif (get_nfilter_request_var('drp_action') == var_2) { 
		
	} elseif (get_nfilter_request_var('drp_action') == var_3) { 
		
	}

	if (!isset($var_21)) {
		raise_message(40);
		header('Location: automation_tree_rules.php?header=false');
		var_15;
	}else {
		$var_22 = "<input type='button' class='ui-button ui-corner-all ui-widget' value='" . __esc('Cancel') . "' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='" . __esc('Continue') . "' title='" . __esc('Apply requested action') . "'>";
	}

	

	html_end_box();

	form_end();

	bottom_footer();
}

function fn_2() {
	
	get_filter_request_var('id');
	get_filter_request_var('leaf_type');
	

	automation_change_tree_rule_leaf_type(get_request_var('leaf_type'), get_request_var('id'));
}



function fn_3() {
	
	get_filter_request_var('id');
	get_filter_request_var('item_id');
	get_filter_request_var('rule_type');
	

	if (get_request_var('rule_type') == var_7) {
		move_item_down('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));
	} elseif (get_request_var('rule_type') == var_10) {
		move_item_down('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));
	}
}

function fn_4() {
	
	get_filter_request_var('id');
	get_filter_request_var('item_id');
	get_filter_request_var('rule_type');
	

	if (get_request_var('rule_type') == var_7) {
		move_item_up('automation_match_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id') . ' AND rule_type=' . get_request_var('rule_type'));
	} elseif (get_request_var('rule_type') == var_10) {
		move_item_up('automation_tree_rule_items', get_request_var('item_id'), 'rule_id=' . get_request_var('id'));
	}
}

function fn_5() {
	
	get_filter_request_var('item_id');
	get_filter_request_var('rule_type');
	

	if (get_request_var('rule_type') == var_7) {
		db_execute_prepared('DELETE FROM automation_match_rule_items WHERE id = ?', array(get_request_var('item_id')));
	} elseif (get_request_var('rule_type') == var_10) {
		db_execute_prepared('DELETE FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));
	}


}


function fn_6() {
	global $var_11;

	
	get_filter_request_var('id');
	get_filter_request_var('item_id');
	get_filter_request_var('rule_type');
	get_filter_request_var('show_trees');
	

	
	if (isset_request_var('show_trees')) {
		if (get_request_var('show_trees') == '0') {
			kill_session_var('automation_tree_rules_show_trees');
		} elseif (get_request_var('show_trees') == '1') {
			$_SESSION['automation_tree_rules_show_trees'] = true;
		}
	}

	if (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {
		if (get_request_var('rule_type') == var_10) {
		$var_23 = db_fetch_row_prepared('SELECT * FROM automation_tree_rule_items WHERE id = ?', array(get_request_var('item_id')));
			if ($var_23['field'] != var_24) {
				?>
<table style='width:100%;text-align:center;'>
	<tr>
		<td class='textInfo' style='text-align:right;vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php ?>'><?php ?> <?php ?></a><br>
		</td>
	</tr>
</table>
<br>
				<?php
			}
		}
	}

	global_item_edit(get_request_var('id'), get_request_var('item_id'), get_request_var('rule_type'));

	form_hidden_box('rule_type', get_request_var('rule_type'), get_request_var('rule_type'));
	form_hidden_box('id', (isset_request_var('id') ? get_request_var('id') : '0'), '');
	form_hidden_box('item_id', (isset_request_var('item_id') ? get_request_var('item_id') : '0'), '');
	if(get_request_var('rule_type') == var_7) {
		form_hidden_box('save_component_automation_match_item', '1', '');
	} else {
		form_hidden_box('save_component_automation_tree_rule_item', '1', '');
	}
	form_save_button('automation_tree_rules.php?action=edit&id=' . get_request_var('id') . '&rule_type=' . get_request_var('rule_type'));
	

	
	if (!isempty_request_var('rule_type') && !isempty_request_var('item_id')) {
		if (get_request_var('rule_type') == var_10) {
			if (isset($_SESSION['automation_tree_rules_show_trees']) && ($var_23['field'] != var_24)) {
				if ($_SESSION['automation_tree_rules_show_trees']) {
					display_matching_trees(get_request_var('id'), var_10, $var_23, 'automation_tree_rules.php?action=item_edit&id=' . get_request_var('id') . '&item_id=' . get_request_var('item_id') . '&rule_type=' . get_request_var('rule_type'));
				}
			}
		}
	}

	
?>
<script type='text/javascript'>

applyHeaderChange();
toggle_operation();
toggle_operator();

function applyHeaderChange() {
	if ($('
		if ($('
			$('
			$('
		} else {
			$('
		}
	}
}

function toggle_operation() {
	
	if ($('operation').value == '<?php ?>') {
		
		$('
		$('
		$('
		$('
		$('
		$('
	} else {
		$('
		$('
		$('
	}
}

function toggle_operator() {
	
	if ($('
		
	} else {
	}
}
</script>
<?php
}



function fn_7() {
	
	get_filter_request_var('id');
	

	if ((read_config_option('deletion_verification') == 'on') && (!isset_request_var('confirm'))) {
		top_header();
		form_confirm(__('Are You Sure?'), __("Are you sure you want to DELETE the Rule '%s'?", db_fetch_cell_prepared('SELECT name FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')))), 'automation_tree_rules.php', 'automation_tree_rules.php?action=remove&id=' . get_request_var('id'));
		bottom_footer();
		var_15;
	}

	if ((read_config_option('deletion_verification') == '') || (isset_request_var('confirm'))) {
		db_execute_prepared('DELETE FROM automation_match_rule_items
			WHERE rule_id = ?
			AND rule_type = ?',
			array(get_request_var('id'), var_7));

		db_execute_prepared('DELETE FROM automation_tree_rule_items
			WHERE rule_id = ?',
			array(get_request_var('id')));

		db_execute_prepared('DELETE FROM automation_tree_rules
			WHERE id = ?',
			array(get_request_var('id')));
	}
}

function fn_8() {
	global $var_11;
	global $var_25, $var_26, $var_27;


	
	get_filter_request_var('id');
	get_filter_request_var('rows');
	get_filter_request_var('tree_id');
	get_filter_request_var('leaf_type');
	get_filter_request_var('host_grouping_type');
	get_filter_request_var('tree_item_id');
	get_filter_request_var('show_hosts');
	

	
	if (isset_request_var('name')) {
		set_request_var('name', sanitize_search_string(get_request_var('name')));
	}

	
	load_current_session_value('rows', 'sess_default_rows', read_config_option('num_rows_table'));

	
	if (isset_request_var('show_hosts')) {
		if (get_request_var('show_hosts') == '0') {
			kill_session_var('automation_tree_rules_show_objects');
		} elseif (get_request_var('show_hosts') == '1') {
			$_SESSION['automation_tree_rules_show_objects'] = true;
		}
	}

	if (!isempty_request_var('id')) {
		?>
<table style='width:100%;text-align:center;'>
	<tr>
		<td class='textInfo right' style='vertical-align:top;'><span class='linkMarker'>*</span><a class='linkEditMain' href='<?php ?>'><?php ?> <?php ?></a><br>
		</td>
	</tr>
</table>
		<?php
	}

	
	$var_28 = array();
	if (!isempty_request_var('id')) {
		$var_28 = db_fetch_row_prepared('SELECT * FROM automation_tree_rules WHERE id = ?', array(get_request_var('id')));
		$var_29 = __('Tree Rule Selection [edit: %s]', html_escape($var_28['name']));
	} else {
		$var_29 = __('Tree Rules Selection [new]');
	}
	
	if (isset_request_var('name')) {
		$var_28['name'] = get_request_var('name');
	}

	if (isset_request_var('tree_id')) {
		$var_28['tree_id'] = get_request_var('tree_id');
	}

	if (isset_request_var('leaf_type')) {
		$var_28['leaf_type'] = get_request_var('leaf_type');
	}

	if (isset_request_var('host_grouping_type')) {
		$var_28['host_grouping_type'] = get_request_var('host_grouping_type');
	}

	if (isset_request_var('tree_item_id')) {
		$var_28['tree_item_id'] = get_request_var('tree_item_id');
	}

	form_start('automation_tree_rules.php', 'form_automation_tree_rule_edit');

	html_start_box($var_29, '100%', true, '3', 'center', '');

	if (!isempty_request_var('id')) {
		
		$var_30 = $var_25 + $var_26 + $var_27;
	} else {
		
		$var_30 = $var_25;
	}

	draw_edit_form(array(
		'config' => array('no_form_tag' => true),
		'fields' => inject_form_variables($var_30, (isset($var_28) ? $var_28 : array()))
	));

	form_hidden_box('id', (isset($var_28['id']) ? $var_28['id'] : '0'), '');
	form_hidden_box('item_id', (isset($var_28['item_id']) ? $var_28['item_id'] : '0'), '');
	form_hidden_box('save_component_automation_tree_rule', '1', '');

	html_end_box(true, true);

	
	if (!empty($var_28['id'])) {
		
		display_match_rule_items(__('Object Selection Criteria'),
			$var_28['id'],
			var_7,
			'automation_tree_rules.php');

		
		display_tree_rule_items(__('Tree Creation Criteria'),
			$var_28['id'],
			$var_28['leaf_type'],
			var_10,
			'automation_tree_rules.php');
	}

	form_save_button('automation_tree_rules.php', 'return');

	

	if (!empty($var_28['id'])) {
		
		if (isset($_SESSION['automation_tree_rules_show_objects'])) {
			if ($_SESSION['automation_tree_rules_show_objects']) {
				if ($var_28['leaf_type'] == var_31) {
					display_matching_hosts($var_28, var_7, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));
				} elseif ($var_28['leaf_type'] == var_32) {
					display_matching_graphs($var_28, var_7, 'automation_tree_rules.php?action=edit&id=' . get_request_var('id'));
				}
			}
		}
	}

	?>
	<script type='text/javascript'>
	var automationLeafTypeOriginal = $('

	<?php
	if (!empty($var_28['id'])) {
		';
	} else {
		';
	}
	?>

	$(function() {
		applyItemTypeChange();
	});

	function applyTreeChange(action,force) {
		if (force == undefined) {
			force = false;
		}

		if (action == undefined) {
			action = 'edit';
		}

		strURL  = 'automation_tree_rules.php?header=false&action=' + action;
		strURL += '&id=' + $('
		strURL += '&name=' + $('
		strURL += '&tree_id=' + $('
		strURL += '&tree_item_id=' + $('
		strURL += '&leaf_type=' + $('
		strURL += '&enabled=' + $('

		loadPageNoHeader(strURL,undefined,force);
	}

	function applyItemTypeChange() {
		var automationLeafTypeNew = $('
		if (automationLeafTypeOriginal != automationLeafTypeNew && !isNew) {
			if (automationLeafTypeNew == 3) {
				var automationLeafTypeButtons = {
					'Yes': {
						text: '<?php  ?>',
						id: 'btnAutomationLeafTypeYes',
						click: function() {
							applyTreeChange('change_leaf',true);
						}
					},
					'No': {
						text: '<?php  ?>',
						id: 'btnAutomationLeafTypeNo',
						click: function() {
							$(this).dialog('close');
							var leaf = $('
							if (leaf != null) {
								leaf.val(automationLeafTypeOriginal);
								leaf.selectmenu("refresh");
								leaf.change();
							}
						}
					}
				};

				var automationLeafTypeTitle = '<?php  ?>';
				var automationLeafTypeContainer = '<div id="automationLeafTypeContainer" style="display:none">' +
					'<p style="display:table-cell;overflow:auto"> ' +
					'<b><?php  ?></b>' +
					'<?php ?>' +
					'<?php ?> <br/><br/>' +
					'<?php ?>' +
					'</p>' +
					'</div>';

				$('
				$('body').append(automationLeafTypeContainer);

				var automationLeafTypeWidth = $(window).width();
				if (automationLeafTypeWidth > 600) {
					automationLeafTypeWidth = 600;
				} else {
					automationLeafTypeWidth -= 50;
				}

				$('
					draggable: true,
					resizable: false,
					height: 'auto',
					minWidth: automationLeafTypeWidth,
					maxWidth: 800,
					maxHeight: 600,
					title: automationLeafTypeTitle,
					buttons: automationLeafTypeButtons
				});
			} else {
				applyTreeChange('change_leaf',true);
			}
		} else {
			if ($('
				$('
			} else if ($('
				$('
			}
			$('
		}
	}
	</script>
	<?php
}

function fn_9() {
	global $var_0, $var_11, $var_34;
	global $var_35, $var_36;

	if ((!empty($_SESSION['sess_autom_tr_status'])) && (!isempty_request_var('status'))) {
		if ($_SESSION['sess_autom_tr_status'] != get_nfilter_request_var('status')) {
			set_request_var('page', 1);
		}
	}

	
	$var_37 = array(
		'rows' => array(
			'filter' => var_38,
			'pageset' => true,
			'default' => '-1'
			),
		'page' => array(
			'filter' => var_38,
			'default' => '1'
			),
		'filter' => array(
			'filter' => var_39,
			'pageset' => true,
			'default' => '',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_column' => array(
			'filter' => var_39,
			'default' => 'name',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_direction' => array(
			'filter' => var_39,
			'default' => 'ASC',
			'options' => array('options' => 'sanitize_search_string')
			),
		'status' => array(
			'filter' => var_38,
			'pageset' => true,
			'default' => ''
			)
	);

	validate_store_request_vars($var_37, 'sess_autom_tr');
	

	if (get_request_var('rows') == -1) {
		$var_40 = read_config_option('num_rows_table');
	} else {
		$var_40 = get_request_var('rows');
	}

	html_start_box(__('Tree Rules'), '100%', '', '3', 'center', 'automation_tree_rules.php?action=edit');

	?>
	<tr class='even'>
		<td>
			<form id='form_automation' action='automation_tree_rules.php'>
				<table class='filterTable'>
					<tr>
						<td>
							<?php ?>
						</td>
						<td>
							<input type='text' class='ui-state-default ui-corner-all' id='filter' size='25' value='<?php ?>'>
						</td>
						<td>
							<?php ?>
						</td>
						<td>
							<select id='status'>
								<option value='-1' <?php ?>><?php ?></option>
								<option value='-2' <?php ?>><?php ?></option>
								<option value='-3' <?php ?>><?php ?></option>
							</select>
						</td>
						<td>
							<?php ?>
						</td>
						<td>
							<select id='rows'>
								<option value='-1'<?php ?></option>
								<?php
								if (cacti_sizeof($var_34) > 0) {
								foreach ($var_34 as $var_41 => $var_42) {
									
								}
								}
								?>
							</select>
						</td>
						<td>
							<span>
								<input type='button' class='ui-button ui-corner-all ui-widget' id='refresh' value='<?php ?>'>
								<input type='button' class='ui-button ui-corner-all ui-widget' id='clear' value='<?php ?>'>
							</span>
						</td>
					</tr>
				</table>
			</form>
			<script type='text/javascript'>
			function applyFilter() {
				strURL = 'automation_tree_rules.php' +
					'?status='+$('
					'&filter='+$('
					'&rows='+$('
					'&header=false';

				loadPageNoHeader(strURL);
			}

			function clearFilter() {
				strURL = 'automation_tree_rules.php?clear=1&header=false';
				loadPageNoHeader(strURL);
			}

			$(function() {
				$('
					applyFilter();
				});

				$('
					applyFilter();
				});

				$('
					clearFilter();
				});

				$('
					event.preventDefault();
					applyFilter();
				});
			});
			</script>
		</td>
	</tr>
	<?php

	html_end_box();

	
	if (get_request_var('filter') != '') {
		$var_43 = "WHERE (atr.name LIKE '%%" . get_request_var('filter') . "%%')";
	} else {
		$var_43 = '';
	}

	if (get_request_var('status') == '-1') {
		
	} elseif (get_request_var('status') == '-2') {
		$var_43 .= ($var_43 != '' ? " AND atr.enabled='on'" : "WHERE atr.enabled='on'");
	} elseif (get_request_var('status') == '-3') {
		$var_43 .= ($var_43 != '' ? " AND atr.enabled=''" : "WHERE atr.enabled=''");
	}

	$var_44 = db_fetch_cell("SELECT COUNT(atr.id)
		FROM automation_tree_rules AS atr
		LEFT JOIN graph_tree AS gt
		ON atr.id=gt.id
		$var_43");

	$var_45 = get_order_string();
	$var_46 = ' LIMIT ' . ($var_40*(get_request_var('page')-1)) . ',' . $var_40;

	$var_33 = db_fetch_assoc("SELECT atr.id, atr.name, atr.tree_id, atr.tree_item_id,
		atr.leaf_type, atr.host_grouping_type, atr.enabled,
		gt.name AS tree_name, gti.title AS subtree_name
		FROM automation_tree_rules AS atr
		LEFT JOIN graph_tree AS gt
		ON atr.tree_id=gt.id
		LEFT JOIN graph_tree_items AS gti
		ON atr.tree_item_id = gti.id
		$var_43
		$var_45
		$var_46");

	$var_47 = html_nav_bar('automation_tree_rules.php?filter=' . get_request_var('filter'), var_48, get_request_var('page'), $var_40, $var_44, 11, __('Tree Rules'), 'page', 'main');

	form_start('automation_tree_rules.php', 'chk');

	

	html_start_box('', '100%', '', '3', 'center', '');

	$var_49 = array(
		'name'               => array('display' => __('Rule Name'),      'align' => 'left',  'sort' => 'ASC'),
		'id'                 => array('display' => __('ID'),             'align' => 'right', 'sort' => 'ASC'),
		'tree_name'          => array('display' => __('Hook into Tree'), 'align' => 'left',  'sort' => 'ASC'),
		'subtree_name'       => array('display' => __('At Subtree'),     'align' => 'left',  'sort' => 'ASC'),
		'leaf_type'          => array('display' => __('This Type'),      'align' => 'left',  'sort' => 'ASC'),
		'host_grouping_type' => array('display' => __('Using Grouping'), 'align' => 'left',  'sort' => 'ASC'),
		'enabled'            => array('display' => __('Enabled'),        'align' => 'right', 'sort' => 'ASC')
	);

	html_header_sort_checkbox($var_49, get_request_var('sort_column'), get_request_var('sort_direction'), false);

	if (cacti_sizeof($var_33)) {
		foreach ($var_33 as 	$var_50) {
			$var_51 = ((empty($var_50['leaf_type'])) ? '<em>' . __('None') . '</em>' : $var_35[$var_50['leaf_type']]);
			$var_52 = ((empty($var_50['subtree_name'])) ? '<em>' . __('ROOT') . '</em>' : html_escape($var_50['subtree_name']));
			$var_53 = ((empty($var_36[$var_50['host_grouping_type']])) ? '' : $var_36[$var_50['host_grouping_type']]);
			form_alternate_row('line' .  $var_50['id'], true);

			form_selectable_cell(filter_value($var_50['name'], get_request_var('filter'), 'automation_tree_rules.php?action=edit&id=' . $var_50['id'] . '&page=1'), $var_50['id']);
			form_selectable_cell($var_50['id'], $var_50['id'], '', 'text-align:right');
			form_selectable_ecell($var_50['tree_name'], $var_50['id']);
			form_selectable_cell($var_52, $var_50['id']);
			form_selectable_cell($var_51, $var_50['id']);
			form_selectable_cell($var_53, $var_50['id']);
			form_selectable_cell($var_50['enabled'] ? __('Enabled'):__('Disabled'), $var_50['id'], '', 'text-align:right');
			form_checkbox_cell($var_50['name'], $var_50['id']);

			form_end_row();
		}
	} else {
		
	}

	html_end_box(false);

	if (cacti_sizeof($var_33)) {
		
	}

	
	draw_actions_dropdown($var_0);

	form_end();
}
