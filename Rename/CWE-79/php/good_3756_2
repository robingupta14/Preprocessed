<?php





class class_0
{
    
    const var_0  = 'sync';
    const var_1 = 'async';

    
    const var_2    = 'verified';
    const var_3 = 'not_verified';
    const var_4    = 'to_delete';

    
    protected static $var_5;

    
    protected static $var_6 = null;

    
    public static function fn_0($var_7)
    {
        if (is_string($var_7)) {
            $var_8 = var_9\var_10\var_11\var_9::import($var_7);
        } elseif ($var_7 instanceof var_9\var_11\var_12) {
            $var_8 = $var_7;
        } else {
            throw new var_13\var_14('The source parameter was'
            . ' invalid, i.e. not a URL string or an instance of type'
            . ' Zend\Feed\Reader\Feed\AbstractFeed');
        }
        return $var_8->getHubs();
    }

    
    public static function fn_1(var_16\var_17 $var_6)
    {
        self::$var_6 = $var_6;
    }

    
    public static function fn_2()
    {
        if (!isset(self::$var_6)) {
            self::$var_6 = new var_16\var_17;
        } else {
            self::$var_6->resetParameters();
        }
        return self::$var_6;
    }

    
    public static function fn_3()
    {
        self::$var_6 = null;
    }

    
    public static function fn_4(var_19 $var_5 = null)
    {
        static::$var_5 = $var_5;
    }

    
    public static function fn_5()
    {
        if (null === static::$var_5) {
            static::fn_4(new class_1());
        }
        return static::$var_5;
    }

    
    public static function fn_6($var_20)
    {
        $var_5    = static::fn_5();
        $var_21 = $var_5->escapeUrl($var_20);
        $var_23 = str_replace('%7E', '~', $var_21);
        return $var_23;
    }
}
