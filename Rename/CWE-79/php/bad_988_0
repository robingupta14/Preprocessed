<?php


declare(strict_types=1);





class class_0 extends var_0
{
    
    private $var_1;

    
    public function fn_0()
    {
        parent::fn_0();

        $var_2->middleware(
            function ($var_4, $var_5) {
                app('view')->share('title', (string)trans('firefly.rules'));
                app('view')->share('mainTitleIcon', 'fa-random');

                $var_2->var_1 = app(var_7\var_8\var_9\var_10::var_11);

                return $var_5($var_4);
            }
        );
    }

    
    public function fn_1(var_12 $var_4, var_13 $var_14 = null)
    {
        $var_2->createDefaultRuleGroup();
        $var_2->createDefaultRule();
        $var_17   = [
            'strict' => true,
        ];
        $var_18 = [];
        $var_19  = [];

        
        if ($var_4->old()) {
            $var_18 = $var_2->getPreviousTriggers($var_4);
            $var_19  = $var_2->getPreviousActions($var_4);
        }

        $var_23 = \var_24($var_18);
        $var_25  = \var_24($var_19);
        $var_26 = 'fa-clone';

        
        $var_27 = (string)trans('firefly.make_new_rule_no_group');
        if (null !== $var_14) {
            $var_27 = (string)trans('firefly.make_new_rule', ['title' => $var_14->var_28]);
        }

        
        $var_4->session()->flash('preFilled', $var_17);

        
        if (true !== session('rules.create.fromStore')) {
            $var_2->rememberPreviousUri('rules.create.uri');
        }
        session()->forget('rules.create.fromStore');

        return view(
            'rules.rule.create', compact('subTitleIcon', 'oldTriggers', 'preFilled', 'oldActions', 'triggerCount', 'actionCount', 'ruleGroup', 'subTitle')
        );
    }

    
    public function fn_2(var_12 $var_4, var_33 $var_34)
    {
        $var_4->session()->flash('info', (string)trans('firefly.instructions_rule_from_bill', ['name' => $var_34->var_35]));

        $var_2->createDefaultRuleGroup();
        $var_2->createDefaultRule();
        $var_17 = [
            'strict'      => true,
            'title'       => (string)trans('firefly.new_rule_for_bill_title', ['name' => $var_34->var_35]),
            'description' => (string)trans('firefly.new_rule_for_bill_description', ['name' => $var_34->var_35]),
        ];

        

        
        $var_18 = $var_2->getTriggersForBill($var_34);
        $var_19  = $var_2->getActionsForBill($var_34);

        $var_23 = \var_24($var_18);
        $var_25  = \var_24($var_19);
        $var_26 = 'fa-clone';

        
        $var_27 = (string)trans('firefly.make_new_rule_no_group');

        
        $var_4->session()->flash('preFilled', $var_17);

        
        if (true !== session('rules.create.fromStore')) {
            $var_2->rememberPreviousUri('rules.create.uri');
        }
        session()->forget('rules.create.fromStore');

        return view(
            'rules.rule.create', compact('subTitleIcon', 'oldTriggers', 'preFilled', 'oldActions', 'triggerCount', 'actionCount', 'subTitle')
        );
    }

    
    public function fn_3(var_39 $var_4)
    {
        $var_40 = $var_4->getRuleData();
        $var_42 = $var_2->var_1->fn_3($var_40);
        session()->flash('success', (string)trans('firefly.stored_new_rule', ['title' => $var_42->var_28]));
        app('preferences')->mark();

        
        if ('true' === $var_4->get('return_to_bill') && (int)$var_4->get('bill_id') > 0) {
            return redirect(route('bills.show', [(int)$var_4->get('bill_id')])); 
        }

        
        if ((int)$var_4->get('bill_id') > 0) {
            return redirect($var_2->getPreviousUri('bills.create.uri')); 
        }

        $var_46 = redirect($var_2->getPreviousUri('rules.create.uri'));

        if (1 === (int)$var_4->get('create_another')) {
            
            session()->put('rules.create.fromStore', true);
            $var_46 = redirect(route('rules.create', [$var_40['rule_group_id']]))->withInput();
            
        }

        return $var_46;
    }

}
