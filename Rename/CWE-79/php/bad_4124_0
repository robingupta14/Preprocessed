<?php



class class_0 extends var_0
{
    public $var_1;

    
    public $var_2;

    
    public $var_3;

    
    public $var_4;

    
    public $var_5;

    
    public $var_6;

    
    public static $var_7 = [
        'table' => 'mail',
        'primary' => 'id_mail',
        'fields' => [
            'recipient' => [
                'type' => self::var_8,
                'validate' => 'isEmail',
                'copy_post' => false,
                'required' => true,
                'size' => 255,
            ],
            'template' => [
                'type' => self::var_8,
                'validate' => 'isTplName',
                'copy_post' => false,
                'required' => true,
                'size' => 62,
            ],
            'subject' => [
                'type' => self::var_8,
                'validate' => 'isMailSubject',
                'copy_post' => false,
                'required' => true,
                'size' => 255,
            ],
            'id_lang' => [
                'type' => self::var_9,
                'validate' => 'isUnsignedId',
                'copy_post' => false,
                'required' => true,
            ],
            'date_add' => [
                'type' => self::var_10,
                'validate' => 'isDate',
                'copy_post' => false,
                'required' => true,
            ],
        ],
    ];

    
    const var_11 = 1;
    const var_12 = 2;
    const var_13 = 3;

    
    const var_14 = 2;

    
    const var_15 = 3;

    
    public static function fn_0(
        $var_17,
        $var_3,
        $var_4,
        $var_18,
        $var_19,
        $var_20 = null,
        $var_21 = null,
        $var_22 = null,
        $var_23 = null,
        $var_24 = null,
        $var_25 = var_26,
        $var_27 = false,
        $var_28 = null,
        $var_29 = null,
        $var_30 = null,
        $var_31 = null
    ) {
        if (!$var_28) {
            $var_28 = Context::getContext()->var_32->var_1;
        }

        $var_33 = Hook::exec(
            'actionEmailSendBefore',
            [
                'idLang' => &$var_17,
                'template' => &$var_3,
                'subject' => &$var_4,
                'templateVars' => &$var_18,
                'to' => &$var_19,
                'toName' => &$var_20,
                'from' => &$var_21,
                'fromName' => &$var_22,
                'fileAttachment' => &$var_23,
                'mode_smtp' => &$var_24,
                'templatePath' => &$var_25,
                'die' => &$var_27,
                'idShop' => &$var_28,
                'bcc' => &$var_29,
                'replyTo' => &$var_30,
            ],
            null,
            true
        );

        if ($var_33 === null) {
            $var_34 = false;
        } else {
            $var_34 = array_reduce(
                $var_33,
                function ($var_35, $var_36) {
                    return ($var_36 === false) ? false : $var_35;
                },
                true
            );
        }

        if (!$var_34) {
            return true;
        }

        if (is_numeric($var_28) && $var_28) {
            $var_32 = new class_1((int) $var_28);
        }

        $var_37 = Configuration::getMultiple(
            [
                'PS_SHOP_EMAIL',
                'PS_MAIL_METHOD',
                'PS_MAIL_SERVER',
                'PS_MAIL_USER',
                'PS_MAIL_PASSWD',
                'PS_SHOP_NAME',
                'PS_MAIL_SMTP_ENCRYPTION',
                'PS_MAIL_SMTP_PORT',
                'PS_MAIL_TYPE',
            ],
            null,
            null,
            $var_28
        );

        
        if ($var_37['PS_MAIL_METHOD'] == self::var_15) {
            return true;
        }

        
        Hook::exec(
            'sendMailAlterTemplateVars',
            [
                'template' => $var_3,
                'template_vars' => &$var_18,
            ]
        );

        if (!isset($var_37['PS_MAIL_SMTP_ENCRYPTION']) ||
            Tools::strtolower($var_37['PS_MAIL_SMTP_ENCRYPTION']) === 'off'
        ) {
            $var_37['PS_MAIL_SMTP_ENCRYPTION'] = false;
        }

        if (!isset($var_37['PS_MAIL_SMTP_PORT'])) {
            $var_37['PS_MAIL_SMTP_PORT'] = 'default';
        }

        
        if (!isset($var_21) || !Validate::isEmail($var_21)) {
            $var_21 = $var_37['PS_SHOP_EMAIL'];
        }

        if (!Validate::isEmail($var_21)) {
            $var_21 = null;
        }

        
        if (!isset($var_22) || !Validate::isMailName($var_22)) {
            $var_22 = $var_37['PS_SHOP_NAME'];
        }

        if (!Validate::isMailName($var_22)) {
            $var_22 = null;
        }

        
        if (!is_array($var_19) && !Validate::isEmail($var_19)) {
            self::fn_10($var_27, 'Error: parameter "to" is corrupted');

            return false;
        }

        
        if (null !== $var_29 && !is_array($var_29) && !Validate::isEmail($var_29)) {
            self::fn_10($var_27, 'Error: parameter "bcc" is corrupted');
            $var_29 = null;
        }

        if (!is_array($var_18)) {
            $var_18 = [];
        }

        
        if (is_string($var_20) && !empty($var_20) && !Validate::isMailName($var_20)) {
            $var_20 = null;
        }

        if (!Validate::isTplName($var_3)) {
            self::fn_10($var_27, 'Error: invalid e-mail template');

            return false;
        }

        if (!Validate::isMailSubject($var_4)) {
            self::fn_10($var_27, 'Error: invalid e-mail subject');

            return false;
        }

        
        $var_38 = \var_39::newInstance();
        if (is_array($var_19) && isset($var_19)) {
            foreach ($var_19 as $var_40 => $var_41) {
                $var_41 = trim($var_41);
                if (!Validate::isEmail($var_41)) {
                    self::fn_10($var_27, 'Error: invalid e-mail address');

                    return false;
                }

                if (is_array($var_20) && isset($var_20[$var_40])) {
                    $var_42 = $var_20[$var_40];
                } else {
                    $var_42 = $var_20;
                }

                $var_42 = ($var_42 == null || $var_42 == $var_41 || !Validate::isGenericName($var_42)) ?
                          '' :
                          self::fn_8($var_42);
                $var_38->addTo(self::fn_9($var_41), $var_42);
            }
            $var_44 = $var_19[0];
        } else {
            
            $var_44 = $var_19;
            $var_20 = (($var_20 == null || $var_20 == $var_19) ? '' : self::fn_8($var_20));
            $var_38->addTo(self::fn_9($var_19), $var_20);
        }

        if (isset($var_29) && is_array($var_29)) {
            foreach ($var_29 as $var_41) {
                $var_41 = trim($var_41);
                if (!Validate::isEmail($var_41)) {
                    self::fn_10($var_27, 'Error: invalid e-mail address');

                    return false;
                }

                $var_38->addBcc(self::fn_9($var_41));
            }
        } elseif (isset($var_29)) {
            $var_38->addBcc(self::fn_9($var_29));
        }

        try {
            
            if ($var_37['PS_MAIL_METHOD'] == self::var_14) {
                if (empty($var_37['PS_MAIL_SERVER']) || empty($var_37['PS_MAIL_SMTP_PORT'])) {
                    self::fn_10($var_27, 'Error: invalid SMTP server or SMTP port');

                    return false;
                }

                $var_46 = \var_47::newInstance(
                    $var_37['PS_MAIL_SERVER'],
                    $var_37['PS_MAIL_SMTP_PORT'],
                    $var_37['PS_MAIL_SMTP_ENCRYPTION']
                )
                    ->setUsername($var_37['PS_MAIL_USER'])
                    ->setPassword($var_37['PS_MAIL_PASSWD']);
            } else {
                $var_46 = \var_50::newInstance();
            }

            if (!$var_46) {
                return false;
            }

            $var_51 = \var_52::newInstance($var_46);
            
            $var_53 = Language::getIsoById((int) $var_17);
            $var_54 = Language::getIsoById((int) Configuration::get('PS_LANG_DEFAULT'));
            $var_55 = [];
            if ($var_53) {
                $var_55[] = $var_53;
            }

            if ($var_54 && $var_53 !== $var_54) {
                $var_55[] = $var_54;
            }

            if (!in_array('en', $var_55)) {
                $var_55[] = 'en';
            }

            $var_56 = false;

            
            if (preg_match('
                preg_match('
            ) {
                $var_56 = $res[1];
            }

            foreach ($var_55 as $var_57) {
                $var_58 = $var_57 . '/' . $var_3;
                $var_25 = self::fn_1($var_58, $var_56, $var_32->var_59);

                if (!file_exists($var_25 . $var_58 . '.txt') &&
                    (
                        $var_37['PS_MAIL_TYPE'] == var_60::var_13 ||
                        $var_37['PS_MAIL_TYPE'] == var_60::var_12
                    )
                ) {
                    PrestaShopLogger::addLog(
                        Context::getContext()->getTranslator()->trans(
                            'Error - The following e-mail template is missing: %s',
                            [$var_25 . $var_58 . '.txt'],
                            'Admin.Advparameters.Notification'
                        )
                    );
                } elseif (!file_exists($var_25 . $var_58 . '.html') &&
                          (
                              $var_37['PS_MAIL_TYPE'] == var_60::var_13 ||
                              $var_37['PS_MAIL_TYPE'] == var_60::var_11
                          )
                ) {
                    PrestaShopLogger::addLog(
                        Context::getContext()->getTranslator()->trans(
                            'Error - The following e-mail template is missing: %s',
                            [$var_25 . $var_58 . '.html'],
                            'Admin.Advparameters.Notification'
                        )
                    );
                } else {
                    $var_63 = true;

                    break;
                }
            }

            if (empty($var_63)) {
                self::fn_10($var_27, 'Error - The following e-mail template is missing: %s', [$var_3]);

                return false;
            }

            $var_64 = '';
            $var_65 = '';
            Hook::exec(
                'actionEmailAddBeforeContent',
                [
                    'template' => $var_3,
                    'template_html' => &$var_64,
                    'template_txt' => &$var_65,
                    'id_lang' => (int) $var_17,
                ],
                null,
                true
            );
            $var_64 .= Tools::file_get_contents($var_25 . $var_58 . '.html');
            $var_65 .= strip_tags(
                html_entity_decode(
                    Tools::file_get_contents($var_25 . $var_58 . '.txt'),
                    null,
                    'utf-8'
                )
            );
            Hook::exec(
                'actionEmailAddAfterContent',
                [
                    'template' => $var_3,
                    'template_html' => &$var_64,
                    'template_txt' => &$var_65,
                    'id_lang' => (int) $var_17,
                ],
                null,
                true
            );

            
            $var_4 = '[' . strip_tags($var_37['PS_SHOP_NAME']) . '] ' . $var_4;
            $var_38->setSubject($var_4);

            $var_38->setCharset('utf-8');

            
            $var_38->setId(class_2::fn_6());

            if (!($var_30 && Validate::isEmail($var_30))) {
                $var_30 = $var_21;
            }

            if (isset($var_30) && $var_30) {
                $var_38->setReplyTo($var_30, ($var_31 !== '' ? $var_31 : null));
            }

            $var_18 = array_map(['Tools', 'htmlentitiesDecodeUTF8'], $var_18);
            $var_18 = array_map(['Tools', 'stripslashes'], $var_18);

            if (false !== Configuration::get('PS_LOGO_MAIL') &&
                file_exists(var_70 . Configuration::get('PS_LOGO_MAIL', null, null, $var_28))
            ) {
                $var_71 = var_70 . Configuration::get('PS_LOGO_MAIL', null, null, $var_28);
            } else {
                if (file_exists(var_70 . Configuration::get('PS_LOGO', null, null, $var_28))) {
                    $var_71 = var_70 . Configuration::get('PS_LOGO', null, null, $var_28);
                } else {
                    $var_18['{shop_logo}'] = '';
                }
            }
            ShopUrl::cacheMainDomainForShop((int) $var_28);
            
            if (isset($var_71)) {
                $var_18['{shop_logo}'] = $var_38->embed(\var_73::fromPath($var_71));
            }

            if ((Context::getContext()->var_74 instanceof var_75) === false) {
                Context::getContext()->var_74 = new class_3();
            }

            $var_18['{shop_name}'] = Tools::safeOutput($var_37['PS_SHOP_NAME']);
            $var_18['{shop_url}'] = Context::getContext()->var_74->getPageLink(
                'index',
                true,
                $var_17,
                null,
                false,
                $var_28
            );
            $var_18['{my_account_url}'] = Context::getContext()->var_74->getPageLink(
                'my-account',
                true,
                $var_17,
                null,
                false,
                $var_28
            );
            $var_18['{guest_tracking_url}'] = Context::getContext()->var_74->getPageLink(
                'guest-tracking',
                true,
                $var_17,
                null,
                false,
                $var_28
            );
            $var_18['{history_url}'] = Context::getContext()->var_74->getPageLink(
                'history',
                true,
                $var_17,
                null,
                false,
                $var_28
            );
            $var_18['{color}'] = Tools::safeOutput(Configuration::get('PS_MAIL_COLOR', null, null, $var_28));
            
            $var_77 = [];
            Hook::exec(
                'actionGetExtraMailTemplateVars',
                [
                    'template' => $var_3,
                    'template_vars' => $var_18,
                    'extra_template_vars' => &$var_77,
                    'id_lang' => (int) $var_17,
                ],
                null,
                true
            );
            $var_18 = array_merge($var_18, $var_77);
            $var_51->registerPlugin(new \var_79(array($var_44 => $var_18)));
            if ($var_37['PS_MAIL_TYPE'] == var_60::var_13 ||
                $var_37['PS_MAIL_TYPE'] == var_60::var_12
            ) {
                $var_38->addPart($var_65, 'text/plain', 'utf-8');
            }
            if ($var_37['PS_MAIL_TYPE'] == var_60::var_13 ||
                $var_37['PS_MAIL_TYPE'] == var_60::var_11
            ) {
                $var_38->addPart($var_64, 'text/html', 'utf-8');
            }

            if ($var_23 && !empty($var_23)) {
                
                if (!is_array(current($var_23))) {
                    $var_23 = array($var_23);
                }

                foreach ($var_23 as $var_81) {
                    if (isset($var_81['content'], $var_81['name'], $var_81['mime'])) {
                        $var_38->attach(
                            \var_83::newInstance()->setFilename(
                                $var_81['name']
                            )->setContentType($var_81['mime'])
                            ->setBody($var_81['content'])
                        );
                    }
                }
            }
            
            $var_38->setFrom(array($var_21 => $var_22));

            
            Hook::exec('actionMailAlterMessageBeforeSend', [
                'message' => &$var_38,
            ]);

            $var_16 = $var_51->fn_0($var_38);

            ShopUrl::resetMainDomainCache();

            if ($var_16 && Configuration::get('PS_LOG_EMAILS')) {
                $var_88 = new class_2();
                $var_88->var_3 = Tools::substr($var_3, 0, 62);
                $var_88->var_4 = Tools::substr($var_4, 0, 255);
                $var_88->var_5 = (int) $var_17;
                $var_89 = $var_38->getTo();
                $var_91 = $var_38->getCc();
                $var_93 = $var_38->getBcc();
                if (!is_array($var_89)) {
                    $var_89 = [];
                }
                if (!is_array($var_91)) {
                    $var_91 = [];
                }
                if (!is_array($var_93)) {
                    $var_93 = [];
                }
                foreach (array_merge($var_89, $var_91, $var_93) as $var_95 => $var_96) {
                    
                    $var_88->var_1 = null;
                    $var_88->var_2 = Tools::substr($var_95, 0, 255);
                    $var_88->add();
                }
            }

            return $var_16;
        } catch (\var_98 $var_99) {
            PrestaShopLogger::addLog(
                'Swift Error: ' . $var_99->getMessage(),
                3,
                null,
                'Swift_Message'
            );

            return false;
        }
    }

    protected static function fn_1($var_58, $var_56, $var_59)
    {
        $var_101 = [
            var_102 . '/themes/' . $var_59->getName() . '/',
            var_102 . '/themes/' . $var_59->get('parent') . '/',
            var_102,
        ];

        if ($var_56 !== false) {
            $var_105 = '/modules/' . $var_56 . '/mails/';
        } else {
            $var_105 = '/mails/';
        }

        foreach ($var_101 as $var_106) {
            $var_25 = $var_106 . $var_105;
            if (file_exists($var_25 . $var_58 . '.txt') || file_exists($var_25 . $var_58 . '.html')) {
                return $var_25;
            }
        }

        return '';
    }

    
    public static function fn_2($var_107)
    {
        return Db::getInstance()->delete('mail', 'id_mail = ' . (int) $var_107);
    }

    
    public static function fn_3()
    {
        return Db::getInstance()->execute('TRUNCATE TABLE ' . var_110 . 'mail');
    }

    
    public static function fn_4(
        $var_111,
        $var_112,
        $var_113,
        $var_4,
        $var_114,
        $var_19,
        $var_21,
        $var_115,
        $var_116,
        $var_117,
        $var_118
    ) {
        $var_119 = false;

        try {
            if ($var_111) {
                if (Tools::strtolower($var_118) === 'off') {
                    $var_118 = false;
                }
                $var_120 = \var_47::newInstance($var_112, $var_117, $var_118)
                    ->setUsername($var_115)
                    ->setPassword($var_116);
                $var_51 = \var_52::newInstance($var_120);
            } else {
                $var_51 = \var_52::newInstance(\var_50::newInstance());
            }

            $var_38 = \var_39::newInstance();

            $var_38
                ->setFrom($var_21)
                ->setTo($var_19)
                ->setSubject($var_4)
                ->setBody($var_113);

            if ($var_51->fn_0($var_38)) {
                $var_119 = true;
            }
        } catch (\var_98 $var_99) {
            $var_119 = $var_99->getMessage();
        }

        return $var_119;
    }

    
    public static function fn_5($var_122, $var_17 = null, var_123 $var_124 = null)
    {
        global $var_125;

        if (!$var_124) {
            $var_124 = Context::getContext();
        }

        if ($var_17 === null) {
            $var_17 = (!isset($var_124->var_126) || !is_object($var_124->var_126)) ?
                    (int) Configuration::get('PS_LANG_DEFAULT') :
                    (int) $var_124->var_126->var_1;
        }

        $var_57 = Language::getIsoById((int) $var_17);

        $var_127 = var_102 . '/mails/' . $var_57 . '/lang.php';
        if (Tools::file_exists_cache($var_127) && empty($var_125)) {
        }

        $var_128 = var_129 . 'mails/' . $var_57 . '/lang.php';
        if (Tools::file_exists_cache($var_128)) {
        }

        if (!is_array($var_125)) {
            return str_replace('"', '&quot;', $var_122);
        }

        $var_40 = str_replace('\'', '\\\'', $var_122);

        return str_replace(
            '"',
            '&quot;',
            Tools::stripslashes(
                (array_key_exists($var_40, $var_125) && !empty($var_125[$var_40])) ? $var_125[$var_40] : $var_122
            )
        );
    }

    
    protected static function fn_6($var_130 = null)
    {
        $var_131 = [
            'utctime' => gmstrftime('%Y%m%d%H%M%S'),
            'randint' => mt_rand(),
            'customstr' => (preg_match('/^(?<!\\.)[a-z0-9\\.]+(?!\\.)$/iD', $var_130) ? $var_130 : 'swift'),
            'hostname' => !empty($_SERVER['SERVER_NAME']) ? $_SERVER['SERVER_NAME'] : php_uname('n'),
        ];

        return vsprintf('%s.%d.%s@%s', $var_131);
    }

    
    public static function fn_7($var_132)
    {
        $var_133 = Tools::strlen($var_132);
        for ($var_134 = 0; $var_134 < $var_133; ++$var_134) {
            if (ord(($var_132[$var_134])) > 128) {
                return true;
            }
        }

        return false;
    }

    
    public static function fn_8($var_122, $var_135 = 'UTF-8', $var_136 = "\r\n")
    {
        if (!self::fn_7($var_122) && Tools::strlen($var_122) < 75) {
            return $var_122;
        }

        $var_135 = Tools::strtoupper($var_135);
        $var_137 = '=?' . $var_135 . '?B?';
        $var_138 = '?=';
        $var_139 = $var_138 . $var_136 . ' ' . $var_137;
        $var_133 = 75 - Tools::strlen($var_137) - Tools::strlen($var_138);
        $var_133 = $var_133 - ($var_133 % 4);

        if ($var_135 === 'UTF-8') {
            $var_140 = [];
            $var_141 = floor(($var_133 * 3) / 4);
            $var_142 = Tools::strlen($var_122);

            while ($var_142 > $var_141) {
                $var_134 = (int) $var_141;
                $var_119 = ord($var_122[$var_134]);

                while ($var_119 >= 128 && $var_119 <= 191) {
                    $var_119 = ord($var_122[--$var_134]);
                }

                $var_140[] = base64_encode(Tools::substr($var_122, 0, $var_134));
                $var_122 = Tools::substr($var_122, $var_134);
                $var_142 = Tools::strlen($var_122);
            }

            $var_140[] = base64_encode($var_122);
            $var_122 = implode($var_139, $var_140);
        } else {
            $var_122 = chunk_split(base64_encode($var_122), $var_133, $var_139);
            $var_122 = preg_replace('/' . preg_quote($var_139) . '$/', '', $var_122);
        }

        return $var_137 . $var_122 . $var_138;
    }

    
    public static function fn_9($var_19)
    {
        $var_143 = explode('@', $var_19);
        if (empty($var_143[0]) || empty($var_143[1])) {
            return $var_19;
        }

        if (defined('INTL_IDNA_VARIANT_UTS46')) {
            return $var_143[0] . '@' . idn_to_ascii($var_143[1], 0, var_144);
        }

        
        if (defined('INTL_IDNA_VARIANT_2003')) {
            return $var_143[0] . '@' . idn_to_ascii($var_143[1], 0, var_145);
        }

        return $var_143[0] . '@' . idn_to_ascii($var_143[1]);
    }

    
    protected static function fn_10(
        $var_27,
        $var_38,
        $var_146 = [],
        $var_147 = 'Admin.Advparameters.Notification'
    ) {
        Tools::fn_10(
            Context::getContext()->getTranslator()->trans(
                $var_38,
                $var_146,
                $var_147
            ),
            $var_27
        );
    }
}
