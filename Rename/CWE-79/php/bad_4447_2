<?php



class class_0 extends var_0
{

    public $var_1 = var_2.'shop_order';
    protected $var_3 = [];
    protected $var_4 = var_5;

    protected  $var_6 = 0; 
    public $var_7 = 1;
    
    public function fn_0()
    {
        return $var_9->hasMany(var_11\var_12\var_13\var_14\var_15::var_16, 'order_id', 'id');
    }
    public function fn_1()
    {
        return $var_9->hasMany(var_11\var_12\var_13\var_14\var_18::var_16, 'order_id', 'id');
    }

    public function fn_2()
    {
        return $var_9->belongsTo('SCart\Core\Front\Models\ShopCustomer', 'customer_id', 'id');
    }
    public function fn_3()
    {
        return $var_9->hasOne(var_22::var_16, 'id', 'status');
    }
    public function fn_4()
    {
        return $var_9->hasOne(var_23::var_16, 'id', 'payment_status');
    }
    public function fn_5()
    {
        return $var_9->hasMany(var_11\var_12\var_13\var_14\var_25::var_16, 'order_id', 'id');
    }
    protected static function fn_6()
    {
        parent::fn_6();
        
        static::deleting(function ($var_26) {
            foreach ($var_26->var_8 as $var_27 => $var_28) {
                $var_29 = var_11\var_12\var_13\var_14\var_30::find($var_28->var_31);
                
                var_11\var_12\var_13\var_14\var_30::updateStock($var_28->var_31, -$var_28->var_32);

            }
            $var_26->fn_0()->delete(); 
            $var_26->fn_1()->delete(); 
            $var_26->fn_5()->delete(); 

        });
    }


    public function fn_7($var_34, $var_35 = 0, $var_36 = '')
    {
        $var_19 = auth()->user();
        $var_38 = $var_19->var_39 ?? 0;
        $var_26 = $var_9->find($var_34);
        if ($var_26) {
            
            $var_26->update(['status' => (int) $var_35]);

            
            $var_42 = [
                'order_id' => $var_34,
                'content' => $var_36,
                'customer_id' => $var_38,
                'order_status_id' => $var_35,
            ];
            $var_9->fn_8($var_42);
        }
    }


    public function fn_9($var_44, $var_45 = null, $var_46 = 'desc')
    {
        $var_45 = $var_45 ?? 'sort';
        return $var_44->orderBy($var_45, $var_46);
    }

    
    public function fn_10($var_48, $var_49, $var_50)
    {
        try {
            DB::connection(var_5)->beginTransaction();
            $var_48 = sc_clean($var_48);
            $var_48['domain'] = url('/');
            $var_38 = $var_48['customer_id'];
            $var_52 = $var_48['currency'];
            $var_53 = $var_48['exchange_rate'];

            
            $var_26 = class_0::create($var_48);
            $var_54 = $var_26->var_39;
            

            
            foreach ($var_49 as $var_27 => $var_55) {
                array_walk($var_55, function (&$var_56, $var_57) {
                    return $var_56 = sc_clean($var_56);
                    }
                );
                $var_55['order_id'] = $var_54;
                $var_55['created_at'] = date('Y-m-d H:i:s');
                $var_49[$var_27] = $var_55;
            }
            var_11\var_12\var_13\var_14\var_18::insert($var_49);
            

            
            foreach ($var_50 as $var_58) {
                $var_59 = $var_58['product_id'];
                $var_60 = var_11\var_12\var_13\var_14\var_30::find($var_59);
                
                if (!sc_config('product_buy_out_of_stock') && $var_60->var_61 < $var_58['qty']) {
                    return $var_62 = ['error' => 1, 'msg' => trans('cart.over', ['item' => $var_60->var_63])];
                }
                
                $var_64 = (sc_tax_price($var_58['price'], $var_60->getTaxValue()) - $var_58['price']) *  $var_58['qty'];

                $var_58['order_id'] = $var_54;
                $var_58['currency'] = $var_52;
                $var_58['exchange_rate'] = $var_53;
                $var_58['sku'] = $var_60->var_63;
                $var_58['tax'] = $var_64;
                $var_58['store_id'] = $var_58['store_id'];
                $var_9->fn_11($var_58);

                
                var_11\var_12\var_13\var_14\var_30::updateStock($var_59, $var_58['qty']);
            }
            

            
            if (function_exists('sc_store_create_order')) {
                sc_store_create_order($var_54);
            }

            
            $var_42 = [
                'order_id' => $var_54,
                'content' => 'New order',
                'customer_id' => $var_38,
                'order_status_id' => $var_26->var_35,
            ];
            $var_9->fn_8($var_42);

            
            $var_67 = session('Discount') ?? '';
            if ($var_67) {
                if (!empty(sc_config('Discount'))) {
                    $var_68 = sc_get_class_plugin_controller($var_69 = 'Total', $var_27 = 'Discount');
                    $var_70 = (new $var_68)->apply($var_67, $var_38, $var_36 = 'Order 
                    $arrReturnModuleDiscount = json_decode($returnModuleDiscount, true);
                    if ($arrReturnModuleDiscount['var_71'] == 1) {
                        if ($arrReturnModuleDiscount['msg'] == 'error_code_not_exist') {
                            $var_36 = trans('promotion.process.invalid');
                        } var_72 ($arrReturnModuleDiscount['msg'] == 'error_code_cant_use') {
                            $var_36 = trans('promotion.process.over');
                        } var_72 ($arrReturnModuleDiscount['msg'] == 'error_code_expired_disabled') {
                            $var_36 = trans('promotion.process.expire');
                        } var_72 ($arrReturnModuleDiscount['msg'] == 'error_user_used') {
                            $var_36 = trans('promotion.process.used');
                        } var_72 ($arrReturnModuleDiscount['msg'] == 'error_uID_input') {
                            $var_36 = trans('promotion.process.customer_id_invalid');
                        } var_72 ($arrReturnModuleDiscount['msg'] == 'error_login') {
                            $var_36 = trans('promotion.process.must_login');
                        } else {
                            $var_36 = trans('promotion.process.undefined');
                        }
                        var_62 var_73()->route('cart')->with(['error_discount' => $var_36]);
                    }
                }
            }
            

            DB::connection(var_5)->commit();
            $var_62 = ['error' => 0, 'orderID' => $var_54, 'msg' => ""];
        } catch (\var_76 $var_77) {
            DB::connection(var_5)->rollBack();
            $var_62 = ['error' => 1, 'msg' => $var_77->getMessage()];
        }
        return $var_62;
    }


    public function fn_8($var_42)
    {
        $var_42['admin_id'] = (\var_80::user())?\var_80::user()->var_39:0;
        return var_11\var_12\var_13\var_14\var_25::create($var_42);
    }


    public function fn_11($var_81)
    {
        return var_11\var_12\var_13\var_14\var_15::create($var_81);
    }


    
    public function fn_12() {
        if($var_9->var_6) {
            $var_82 = (new class_0);
            $var_82->var_6 = 1;
            return $var_82;
        } else {
            return new class_0;
        }
    }

    
    public function fn_13($var_54)
    {
        if(empty($var_54)) {
            return null;
        }
        $var_19 = auth()->user();
        if ($var_19) {
            return $var_9->where('id', $var_54)
                ->where('customer_id', $var_19->var_39)
                ->first();
        } else {
            return null;
        }

    }

    
    public function fn_14() {
        $var_9->var_6 = 1;
        $var_9->var_7 = 'all' ;
        return $var_9;
    }

    public function fn_15() {
        $var_9->fn_14();
        return $var_9;
    }

    
    public function fn_16() {
        $var_9->var_7 = 1;
        return $var_9;
    }

    
    public function fn_17() {
        $var_9->var_7 = 2;
        return $var_9;
    }

    
    public function fn_18() {
        $var_9->var_7 = 3;
        return $var_9;
    }

    
    public function fn_19() {
        $var_9->var_7 = 4;
        return $var_9;
    }

    
    public function fn_20() {
        $var_9->var_7 = 5;
        return $var_9;
    }

    
    public function fn_21() {
        $var_9->var_7 = 6;
        return $var_9;
    }

    
    public function fn_22() {
        $var_19 = auth()->user();
        if ($var_9->var_6 == 1) {
            if(!$var_19) {
                return null;
            }
            $var_38 = $var_19->var_39;
            $var_44 = $var_9->with('orderTotal')->where('customer_id', $var_38);
        } else {
            $var_44 = $var_9->with('orderTotal')->with('details');
        }

        if ($var_9->var_7 !== 'all') {
            $var_44 = $var_44->where('status', $var_9->var_7);
        }

        if (count($var_9->var_87)) {
            foreach ($var_9->var_87 as $var_27 => $var_83) {
                if(count($var_83)) {
                    $var_44 = $var_44->where($var_83[0], $var_83[1], $var_83[2]);
                }
            }
        }

        if ($var_9->var_88) {
            $var_44 = $var_44->inRandomOrder();
        } else {
            if (is_array($var_9->var_90) && count($var_9->var_90)) {
                foreach ($var_9->var_90 as  $var_91) {
                    if(is_array($var_91) && count($var_91) == 2) {
                        $var_44 = $var_44->sort($var_91[0], $var_91[1]);
                    }
                }
            }
        }

        return $var_44;
    }

    
    public function fn_23() {
        $var_93 = $var_9->var_93;
        $var_9->var_94 = 0;
        $var_9->var_95 = -$var_93;
        $var_9->save();
        (new class_1)
            ->where('order_id', $var_9->var_39)
            ->where('code', 'received')
            ->update(['value' =>  -$var_93]);
    }
}
