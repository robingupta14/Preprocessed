<?php


?>
<?php

class class_0 {

    
    private $var_0;

    
    private $var_1;

    
    private $var_2;

    
    private $var_3;

    
    private $var_4;

    
    private $var_5;

    
    public function fn_0($var_0, $var_1, $var_5) {
        global $var_6;
        $var_7->var_0 = $var_0;
        $var_7->var_1 = $var_1;
        $var_7->var_3 = $var_6 . var_8;
        $var_7->var_2 = 'last_insert_id_key';
        $var_7->var_5 = $var_5;
        $var_7->var_4 = $var_7->var_5 . "user_timezone";
    }

    
    private function fn_1() {

        $var_10 = $_SERVER['REMOTE_ADDR'];

        if (!empty($_SERVER['HTTP_CLIENT_IP'])) {
            $var_10 = $_SERVER['HTTP_CLIENT_IP'];
        } elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {
            $var_10 = $_SERVER['HTTP_X_FORWARDED_FOR'];
        }


        return $var_10;
    }

    
    private function fn_2() {

        $var_12 = $_SERVER['HTTP_USER_AGENT'];
        $var_13 = array(
            'Opera' => 'Opera',
            'Firefox' => '(Firebird)|(Firefox)',
            'Galeon' => 'Galeon',
            'Edge' => 'Edge',
            'Chrome' => 'Chrome',
            'Safari' => 'Safari',
            'MyIE' => 'MyIE',
            'Lynx' => 'Lynx',
            'Netscape' => '(Mozilla/4\.75)|(Netscape6)|(Mozilla/4\.08)|(Mozilla/4\.5)|(Mozilla/4\.6)|(Mozilla/4\.79)',
            'Konqueror' => 'Konqueror',
            'SearchBot' => '(nuhk)|(Googlebot)|(Yammybot)|(Openbot)|(Slurp/cat)|(msnbot)|(ia_archiver)',
            'Internet Explorer 8' => '(MSIE 8\.[0-9]+)',
            'Internet Explorer 9' => '(MSIE 9\.[0-9]+)',
            'Internet Explorer 7' => '(MSIE 7\.[0-9]+)',
            'Internet Explorer 6' => '(MSIE 6\.[0-9]+)',
            'Internet Explorer 5' => '(MSIE 5\.[0-9]+)',
            'Internet Explorer 4' => '(MSIE 4\.[0-9]+)',
        );

        foreach ($var_13 as $var_14 => $var_15) {

            if (preg_match("@$var_15@i", $var_12)) {
                return $var_14;
            }
        }
        return 'Unknown';
    }

    
    private function fn_3() {

        $var_12 = $_SERVER['HTTP_USER_AGENT'];

        $var_17 = "Unknown";

        $var_18 = array(
            '/windows nt 10/i' => 'Windows 10',
            '/windows nt 6.3/i' => 'Windows 8.1',
            '/windows nt 6.2/i' => 'Windows 8',
            '/windows nt 6.1/i' => 'Windows 7',
            '/windows nt 6.0/i' => 'Windows Vista',
            '/windows nt 5.2/i' => 'Windows Server 2003/XP x64',
            '/windows nt 5.1/i' => 'Windows XP',
            '/windows xp/i' => 'Windows XP',
            '/windows nt 5.0/i' => 'Windows 2000',
            '/windows me/i' => 'Windows ME',
            '/win98/i' => 'Windows 98',
            '/win95/i' => 'Windows 95',
            '/win16/i' => 'Windows 3.11',
            '/macintosh|mac os x/i' => 'Mac OS X',
            '/mac_powerpc/i' => 'Mac OS 9',
            '/linux/i' => 'Linux',
            '/ubuntu/i' => 'Ubuntu',
            '/iphone/i' => 'iPhone',
            '/ipod/i' => 'iPod',
            '/ipad/i' => 'iPad',
            '/android/i' => 'Android',
            '/blackberry/i' => 'BlackBerry',
            '/webos/i' => 'Mobile'
        );

        foreach ($var_18 as $var_19 => $var_20) {

            if (preg_match($var_19, $var_12)) {
                $var_17 = $var_20;
            }
        }

        return $var_17;
    }

    
    private function fn_4() {
        $var_22 = @$_SERVER['HTTP_CLIENT_IP'];
        $var_23 = @$_SERVER['HTTP_X_FORWARDED_FOR'];
        $var_24 = $_SERVER['REMOTE_ADDR'];

        if (filter_var($var_22, var_25)) {
            $var_26 = $var_22;
        } elseif (filter_var($var_23, var_25)) {
            $var_26 = $var_23;
        } else {
            $var_26 = $var_24;
        }


        $var_27 = "http:
        $var_28 = curl_init();
        curl_setopt($var_28, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($var_28, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($var_28, CURLOPT_URL, $var_27);
        $var_29 = curl_exec($var_28);
        curl_close($var_28);
        return json_decode($var_29);
    }

    
    private function get_nearest_timezone($var_30, $var_31, $var_32 = '') {
        $var_33 = ($var_32) ? DateTimeZone::listIdentifiers(DateTimeZone::PER_COUNTRY, $var_32) : DateTimeZone::listIdentifiers();

        if ($var_33 && is_array($var_33) && isset($var_33[0])) {

            $var_34 = '';
            $var_35 = 0;

            
            if (count($var_33) == 1) {
                $var_34 = $var_33[0];
            } else {

                foreach ($var_33 as $var_36) {
                    $var_37 = new DateTimeZone($var_36);
                    $var_38 = $var_37->var_39();
                    $var_40 = $var_38['var_41'];
                    $var_42 = $var_38['var_43'];

                    $var_44 = $var_31 - $var_42;
                    $var_45 = (sin(deg2rad($var_30)) * sin(deg2rad($var_40))) + (cos(deg2rad($var_30)) * cos(deg2rad($var_40)) * cos(deg2rad($var_44)));
                    $var_45 = acos($var_45);
                    $var_45 = abs(rad2deg($var_45));

                    if (!$var_34 || $var_35 > $var_45) {
                        $var_34 = $var_36;
                        $var_35 = $var_45;
                    }
                }
            }
            return $var_34;
        }
        return FALSE;
    }

    
    private function set_last_insert_id($var_46 = NULL) {
        $_SESSION[$var_7->var_0][$var_7->var_2] = $var_46 ? $var_46 : FALSE;
    }

    
    public function do_session_start() {
        if ("" == session_id()) {
            session_start();
        }
    }

    
    private function fn_5() {
        return isset($_SESSION[$var_7->var_0][$var_7->var_2]) ? $_SESSION[$var_7->var_0][$var_7->var_2] : FALSE;
    }

    
    private function fn_6() {
        $var_49 = new class_1();
        return $var_49->fn_6();
    }

    
    public function fn_7($var_50, $var_51) {
        global $var_52;

        $var_53 = $var_51->var_54;

        if (!$var_53) {
            return;
        }
        $var_49 = new class_1();
        $var_55 = implode(",", $var_51->var_56);
        $var_3 = $var_7->var_3;
        $var_10 = $var_7->fn_1();
        $var_57 = "Unknown";
        $var_58 = FALSE;

        $var_59 = $var_7->fn_6();
        $var_60 = $var_59;
        $var_61 = $var_59;
        $var_14 = $var_7->fn_2();
        $var_62 = $var_7->fn_3();

        $var_63 = $var_7->fn_4();
        $var_64 = $var_63->var_65 ? $var_63->var_65 : $var_57;
        $var_32 = $var_63->var_66 ? $var_63->var_66 : $var_57;
        $var_67 = $var_63->var_68 ? $var_63->var_68 : 0;
        $var_69 = $var_63->var_70 ? $var_63->var_70 : 0;

        if ($var_67 != 0 && $var_69 != 0 && $var_32 != $var_57) {
            $var_58 = $var_7->get_nearest_timezone($var_67, $var_69, $var_32);
        }

        if (FALSE === $var_58) {
            $var_58 = $var_49->get_default_timezone();
        }

        
        $var_73 = array(
            'user_id' => $var_53,
            'username' => $var_50,
            'time_login' => $var_60,
            'ip_address' => $var_10,
            'time_last_seen' => $var_61,
            'browser' => $var_14,
            'operating_system' => $var_62,
            'country_name' => $var_64,
            'country_code' => $var_32,
            'old_role' => $var_55,
            'timezone' => $var_58,
        );

        $var_73 = apply_filters('user_login_history_save_user_login', $var_73, $var_67, $var_69);

        $var_52->insert($var_3, $var_73);
        if ("" != $var_52->var_75) {
            ini_set('error_log', var_76 . '/debug-user-login-history.log');
            error_log("last error:" . $var_52->var_75);
            error_log("last query:" . $var_52->var_77);
        }

        
        if ($var_52->var_78) {
            $var_7->set_last_insert_id($var_52->var_78);
            $var_7->fn_8($var_58);
        }
    }

    
    public function fn_9() {
        global $var_52, $var_81;
        $var_82 = $var_7->fn_6();
        $var_53 = $var_81->var_54;
        $var_3 = $var_7->var_3;
        $var_83 = $var_7->fn_5();

        if (!$var_53 || !$var_83) {
            return;
        }
        $var_84 = " update $var_3  set time_logout='$var_82', time_last_seen='$var_82' where id=$var_83 ";
        $var_52->query($var_84);
        
         if ("" != $var_52->var_75) {
            ini_set('error_log', var_76 . '/debug-user-login-history.log');
            error_log("last error:" . $var_52->var_75);
            error_log("last query:" . $var_52->var_77);
        }
        
        
        unset($_SESSION[$var_7->var_0]);
    }

    
    public function fn_8($var_58 = '') {
        global $var_81;
        $var_53 = $var_81->var_54;
        return add_user_meta($var_53, $var_7->var_4, $var_58, TRUE);
    }

    
    public function fn_10() {
        global $var_81;
        $var_53 = $var_81->var_54;
        return get_user_meta($var_53, $var_7->var_4, TRUE);
    }

    
    public function fn_11() {
        global $var_52;
        $var_81 = wp_get_current_user();
        $var_3 = $var_7->var_3;
        $var_59 = $var_7->fn_6();
        $var_53 = $var_81->var_54;
        $var_83 = $var_7->fn_5();
        if (!$var_53 || !$var_83) {
            return;
        }
        $var_84 = " update $var_3 set time_last_seen='$var_59' where id=$var_83 ";
        $var_52->query($var_84);
           if ("" != $var_52->var_75) {
            ini_set('error_log', var_76 . '/debug-user-login-history.log');
            error_log("last error:" . $var_52->var_75);
            error_log("last query:" . $var_52->var_77);
        }
    }

    
    public function fn_12() {
        User_Login_History_Table_Page::get_instance();
    }

}
