<?php

if( !defined('EVO_MAIN_INIT') ) die( 'Please, do not access this page directly.' );

load_funcs('_core/_param.funcs.php');



function fn_0( $var_1 )
{
	global $var_2, $var_3, $var_4, $var_5;

	global $var_6;

	

	if( $var_1 < 8060 )
	{
		$var_7 = 'UPDATE T_settings SET db_version = '.$var_1;
	}
	else
	{
		$var_7 = "UPDATE T_settings
								SET set_value = '$var_1'
								WHERE set_name = 'db_version'";
	}
	$var_2->query( $var_7 );


	$var_8 = time() - $var_3;

	

	
	update_install_progress_bar();

	evo_flush();

	$var_9 = ini_get( 'max_execution_time' );
	if( $var_9 && ( $var_8 > ( $var_9 - 20 ) ) )
	{ 
		$var_10 = ( ( $var_5 == 'svn_upgrade' ) || ( $var_5 == 'auto_upgrade' ) ) ? $var_5 : 'evoupgrade';
		$var_11 = $var_6 ? '&amp;recreate_excerpts=1' : '';
		var_5='.$var_10.$var_11.'">continue</a>...' );
		
		exit(0);
	}
}



function fn_1( $var_1, $var_12 = '' )
{
	global $var_13, $var_14;

	if( $var_13 < $var_1 )
	{	

		
		$var_14 = $var_1;

		if( ! empty( $var_12 ) )
		{	
			task_begin( $var_12 );
		}

		return true;
	}
	else
	{
		return false;
	}
}



function fn_2( $var_16 = true )
{
	global $var_14;

	if( ! empty( $var_14 ) )
	{	

		if( $var_16 )
		{	
			task_end();
		}

		
		fn_0( $var_14 );

		
		unset( $var_14 );
	}
}



function fn_3( $var_18, $var_19, $var_20 = 'ENGINE = innodb' )
{
	global $var_2, $var_21;

	if( isset( $var_21, $var_21['aliases'], $var_21['aliases'][ $var_18 ] ) )
	{	
		$var_18 = $var_21['aliases'][ $var_18 ];
	}

	
	$var_22 = $var_18;
	$var_23 = 1;
	while( $var_2->get_var( 'SHOW TABLES LIKE '.$var_2->quote( $var_22 ) ) )
	{	
		$var_22 = $var_18.'_'.$var_23;
		$var_23++;
	}
	if( $var_22 != $var_18 )
	{	
		$var_2->query( 'RENAME TABLE '.$var_18.' TO '.$var_22 );
	}

	
	$var_2->query( 'CREATE TABLE '.$var_18.' ( '.$var_19.' ) '.$var_20 );
}



function fn_4( $var_18, $var_26 )
{
	global $var_2;

	$var_26 = strtolower($var_26);

	$var_2->query('SHOW INDEX FROM '.$var_18);
	while( $var_27 = $var_2->get_row() )
	{
		if( strtolower($var_27->var_29) == $var_26 )
		{
			return true;
		}
	}

	return false;
}



function fn_5( $var_18, $var_30 )
{
	global $var_2;

	foreach( $var_30 as $var_31 => $var_32 )
		$var_30[$var_31] = strtolower($var_32);

	foreach( $var_2->get_results('SHOW COLUMNS FROM '.$var_18) as $var_27 )
		if( ($var_34 = array_search(strtolower($var_27->var_35), $var_30)) !== false )
			unset( $var_30[$var_34] );

	return count($var_30) == 0;
}


function fn_6( $var_18, $var_37 )
{
	global $var_2;

	if( ! db_col_exists($var_18, $var_37) )
		return false;

	$var_2->query( 'ALTER TABLE '.$var_18.' DROP COLUMN '.$var_37 );
}


function fn_7( $var_18, $var_37, $var_39 )
{
	global $var_2;

	if( db_col_exists($var_18, $var_37) )
	{ 
		$var_2->query( 'ALTER TABLE '.$var_18.' MODIFY COLUMN '.$var_37.' '.$var_39 );
		return false;
	}

	$var_2->query( 'ALTER TABLE '.$var_18.' ADD COLUMN '.$var_37.' '.$var_39 );
}



function fn_8( $var_18, $var_40, $var_41, $var_42 = 'INDEX' )
{
	global $var_2;
	if( fn_4($var_18, $var_40) )
	{
		$var_2->query( 'ALTER TABLE '.$var_18.' DROP INDEX '.$var_40 );
	}
	$var_2->query( 'ALTER TABLE '.$var_18.' ADD '.$var_42.' '.$var_40.' ('.$var_41.')' );
}



function fn_9( $var_18, $var_43, $var_44 )
{
	global $var_2;
	return $var_2->get_var( '
		SELECT COUNT('.$var_43.')
		FROM '.$var_18.'
		WHERE '.$var_43.' = '.$var_44 );
}


function fn_10( $var_18, $var_43, $var_45, $var_46, $var_47 )
{
	global $var_2;
	$var_18 = preg_replace( $var_2->var_48, $var_2->var_49, $var_18 );
	$var_45 = preg_replace( $var_2->var_48, $var_2->var_49, $var_45 );
	$var_50 = array( array(
			'fk_fields' => $var_43,
			'reference_table' => $var_45,
			'reference_columns' => $var_46,
			'fk_definition' => $var_47,
			'create' => true, 
		) );
	db_delta_foreign_keys( $var_50, $var_18, true, 'add' );
}


function fn_11( $var_18, $var_43, $var_45, $var_46 )
{
	global $var_2;
	$var_18 = preg_replace( $var_2->var_48, $var_2->var_49, $var_18 );
	$var_45 = preg_replace( $var_2->var_48, $var_2->var_49, $var_45 );
	$var_50 = array( array(
			'fk_fields' => $var_43,
			'reference_table' => $var_45,
			'reference_columns' => $var_46,
			'fk_definition' => '',
			'create' => false, 
		) );
	db_delta_foreign_keys( $var_50, $var_18, true, 'drop' );
}


function fn_12( $var_18, $var_51, $var_52 )
{
	global $var_2, $var_53, $var_54;

	if( !preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $var_54) )
	{ 
		$var_54 = 'en-EU';
	}

	

	
	$var_7 = "SELECT $var_52, $var_51 FROM $var_18";
	$var_55 = array();
	foreach( $var_2->get_results( $var_7, var_56 ) as $var_27 )
	{
		
		$var_55[ $var_27[ $var_51 ] ][] = $var_27[ $var_52 ];
	}

	foreach( $var_55 as $var_57 => $var_58)
	{ 
		$var_59 = false;
		 var_60 var_61 \''. $var_57. '\' ' ); 

		if( preg_match('/[a-z]{2}-[A-Z]{2}(-.{1,14})?/', $var_57) )
		{ 
			
			continue;
		}

		if( (strlen($var_57) == 2) && ( substr( $var_54, 0, 2 ) != $var_57 ) )
		{ 
			
			foreach( $var_53 as $var_62 => $var_32 )
			{  
				if( substr($var_62, 0, 2) == strtolower($var_57) ) 
				{  
					$var_59 = $var_2->query( "
						UPDATE $var_18
						   SET $var_51 = '$var_62'
						 WHERE $var_51 = '$var_57'" );
					
					break;
				}
			}
		}

		if( !$var_59 )
		{ 
			$var_2->query( "UPDATE $var_18
											SET $var_51 = '$var_54'
										WHERE $var_51 = '$var_57'" );
			
		}
	}
	
}  



function var_63( $var_10 = 'evoupgrade' )
{
	global $var_21, $var_64;
	global $var_65, $var_13, $var_66;
	global $var_67, $var_68, $var_69, $var_70;
	global $var_53, $var_4;
	global $var_2;
	global $var_71;
	global $var_72, $var_73;

	
	global $var_74, $var_75, $var_76, $var_77;

	
	global $var_78, $var_79;

	
	global $var_3;

	
	global $var_6;
	$var_6 = param( 'recreate_excerpts', 'boolean', 0 );

	
	load_db_schema();

	
	update_install_progress_bar();

	load_funcs('_core/model/db/_upgrade.funcs.php');

	
	$var_2->query( 'SET sql_mode = ""', 'REMOVE MySQL "strict" mode in order not to worry about missing defaults until the end of the upgrade.' );

	
	$var_13 = get_db_version();

	if( empty($var_13) )
	{
		
		return false;
	}

	

	if( $var_13 < 8000 ) debug_die( T_('This version is too old!') );
	if( $var_13 > $var_66 ) debug_die( T_('This version is too recent! We cannot downgrade to the version you are trying to install...') );
	

	if( $var_13 < 8010 )
	{
		
		$var_7 = "ALTER TABLE T_users
							MODIFY COLUMN user_pass CHAR(32) NOT NULL";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_blogs
							MODIFY COLUMN blog_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',
							MODIFY COLUMN blog_longdesc TEXT NULL DEFAULT NULL";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_categories
							ADD COLUMN cat_description VARCHAR(250) NULL DEFAULT NULL,
							ADD COLUMN cat_longdesc TEXT NULL DEFAULT NULL,
							ADD COLUMN cat_icon VARCHAR(30) NULL DEFAULT NULL";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE {$var_64}posts
							MODIFY COLUMN post_lang VARCHAR(20) NOT NULL DEFAULT 'en_US',
							ADD COLUMN post_urltitle VARCHAR(50) NULL DEFAULT NULL AFTER post_title,
							ADD COLUMN post_url VARCHAR(250) NULL DEFAULT NULL AFTER post_urltitle,
							ADD COLUMN post_comments ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open' AFTER post_wordcount";
		$var_2->query( $var_7 );
		

		
		load_funcs('items/model/_item.funcs.php');
		$var_7 = "SELECT ID, post_content FROM {$var_64}posts WHERE post_wordcount IS NULL";
		$var_80 = 0;
		foreach( $var_2->get_results( $var_7, var_56 ) as $var_27 )
		{
			$var_81 = "UPDATE {$var_64}posts
																SET post_wordcount = " . bpost_count_words($var_27['post_content']) . "
																WHERE ID = " . $var_27['ID'];
			$var_2->query($var_81);
			$var_80++;
		}
		

		fn_0( '8010' );
	}


	if( $var_13 < 8020 )
	{
		
		$var_7 = "UPDATE T_users
							SET user_pass = MD5(user_pass)";
		$var_2->query( $var_7 );
		

		fn_0( '8020' );
	}


	if( $var_13 < 8030 )
	{
		
		$var_7 = "DELETE FROM T_hitlog
							WHERE hit_ignore = 'badchar'";
		$var_2->query( $var_7 );
		

		
		$var_7 = "SELECT blog_ID, blog_siteurl FROM T_blogs";
		$var_80 = 0;
		foreach( $var_2->get_results( $var_7, var_56 ) as $var_27 )
		{
			$var_82 = $var_27['blog_ID'];
			$var_83 = $var_27['blog_siteurl'];
			
			if( strpos( $var_83.'/', $var_65 ) !== 0 )
			{ 
				
			}
			
			$var_83 = utf8_substr( $var_83.'/', utf8_strlen($var_65) );
			

			$var_84 = "UPDATE T_blogs SET blog_siteurl = '$var_83' WHERE blog_ID = $var_82";
			
			$var_2->query( $var_84 );
			$var_80++;
		}
		

		fn_0( '8030' );
	}


	if( $var_13 < 8040 )
	{ 
		
		$var_7 = "CREATE TABLE {$var_64}antispam (
			aspm_ID bigint(11) NOT NULL auto_increment,
			aspm_string varchar(80) NOT NULL,
			aspm_source enum( 'local','reported','central' ) NOT NULL default 'reported',
			PRIMARY KEY aspm_ID (aspm_ID),
			UNIQUE aspm_string (aspm_string)
		)";
		$var_2->query( $var_7 );
		

		
		
		
		
		$var_7 = get_antispam_query();
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_settings
							ADD COLUMN last_antispam_update datetime NOT NULL default '2000-01-01 00:00:00'";
		$var_2->query( $var_7 );
		

		fn_0( '8040' );
	}


	if( $var_13 < 8050 )
	{ 
		
		$var_7 = "ALTER TABLE T_blogs
							ADD COLUMN blog_allowtrackbacks tinyint(1) NOT NULL default 1,
							ADD COLUMN blog_allowpingbacks tinyint(1) NOT NULL default 0,
							ADD COLUMN blog_pingb2evonet tinyint(1) NOT NULL default 0,
							ADD COLUMN blog_pingtechnorati tinyint(1) NOT NULL default 0,
							ADD COLUMN blog_pingweblogs tinyint(1) NOT NULL default 0,
							ADD COLUMN blog_pingblodotgs tinyint(1) NOT NULL default 0,
							ADD COLUMN blog_disp_bloglist tinyint NOT NULL DEFAULT 1";
		$var_2->query( $var_7 );
		

		
		global $var_67, $var_68, $var_69, $var_70;
		
		$var_7 = "CREATE TABLE T_groups (
			grp_ID int(11) NOT NULL auto_increment,
			grp_name varchar(50) NOT NULL default '',
			grp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible',
			grp_perm_blogs enum('user','viewall','editall') NOT NULL default 'user',
			grp_perm_stats enum('none','view','edit') NOT NULL default 'none',
			grp_perm_spamblacklist enum('none','view','edit') NOT NULL default 'none',
			grp_perm_options enum('none','view','edit') NOT NULL default 'none',
			grp_perm_users enum('none','view','edit') NOT NULL default 'none',
			grp_perm_templates TINYINT NOT NULL DEFAULT 0,
			grp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none',
			PRIMARY KEY grp_ID (grp_ID)
		)";
		$var_2->query( $var_7 );
		

		
		task_begin( 'Creating table for Group Settings... ' );
		$var_2->query( "CREATE TABLE T_groups__groupsettings (
			gset_grp_ID INT(11) UNSIGNED NOT NULL,
			gset_name VARCHAR(30) NOT NULL,
			gset_value VARCHAR(255) NULL,
			PRIMARY KEY (gset_grp_ID, gset_name)
		) ENGINE = innodb" );
		task_end();

		
		$var_67 = new class_1(); 
		$var_67->set( 'name', 'Administrators' );
		$var_67->set( 'perm_admin', 'visible' );
		$var_67->set( 'perm_blogs', 'editall' );
		$var_67->set( 'perm_stats', 'edit' );
		$var_67->set( 'perm_spamblacklist', 'edit' );
		$var_67->set( 'perm_files', 'all' );
		$var_67->set( 'perm_options', 'edit' );
		$var_67->set( 'perm_templates', 1 );
		$var_67->set( 'perm_users', 'edit' );
		$var_67->dbinsert();

		$var_68 = new class_1(); 
		$var_68->set( 'name', 'Privileged Bloggers' );
		$var_68->set( 'perm_admin', 'visible' );
		$var_68->set( 'perm_blogs', 'viewall' );
		$var_68->set( 'perm_stats', 'view' );
		$var_68->set( 'perm_spamblacklist', 'edit' );
		$var_68->set( 'perm_files', 'add' );
		$var_68->set( 'perm_options', 'view' );
		$var_68->set( 'perm_templates', 0 );
		$var_68->set( 'perm_users', 'view' );
		$var_68->dbinsert();

		$var_69 = new class_1(); 
		$var_69->set( 'name', 'Bloggers' );
		$var_69->set( 'perm_admin', 'visible' );
		$var_69->set( 'perm_blogs', 'user' );
		$var_69->set( 'perm_stats', 'none' );
		$var_69->set( 'perm_spamblacklist', 'view' );
		$var_69->set( 'perm_files', 'view' );
		$var_69->set( 'perm_options', 'none' );
		$var_69->set( 'perm_templates', 0 );
		$var_69->set( 'perm_users', 'none' );
		$var_69->dbinsert();

		$var_70 = new class_1(); 
		$var_70->set( 'name', 'Basic Users' );
		$var_70->set( 'perm_admin', 'none' );
		$var_70->set( 'perm_blogs', 'user' );
		$var_70->set( 'perm_stats', 'none' );
		$var_70->set( 'perm_spamblacklist', 'none' );
		$var_70->set( 'perm_files', 'none' );
		$var_70->set( 'perm_options', 'none' );
		$var_70->set( 'perm_templates', 0 );
		$var_70->set( 'perm_users', 'none' );
		$var_70->dbinsert();
		


		
		$var_7 = "CREATE TABLE T_coll_user_perms (
			bloguser_blog_ID int(11) unsigned NOT NULL default 0,
			bloguser_user_ID int(11) unsigned NOT NULL default 0,
			bloguser_ismember tinyint NOT NULL default 0,
			bloguser_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',
			bloguser_perm_delpost tinyint NOT NULL default 0,
			bloguser_perm_comments tinyint NOT NULL default 0,
			bloguser_perm_cats tinyint NOT NULL default 0,
			bloguser_perm_properties tinyint NOT NULL default 0,
			bloguser_perm_media_upload tinyint NOT NULL default 0,
			bloguser_perm_media_browse tinyint NOT NULL default 0,
			bloguser_perm_media_change tinyint NOT NULL default 0,
			PRIMARY KEY bloguser_pk (bloguser_blog_ID,bloguser_user_ID)
		)";
		$var_2->query( $var_7 );
		
		$var_87 = true;
		$var_88 = true;

		
		
		$var_7 = "INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,
								bloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,
								bloguser_perm_cats, bloguser_perm_properties)
							SELECT blog_ID, ID, 1, 'published,deprecated,protected,private,draft', 1, 1, 1, 1
							FROM T_users, T_blogs
							WHERE user_level = 10";
		$var_2->query( $var_7 );

		
		$var_7 = "INSERT INTO T_coll_user_perms( bloguser_blog_ID, bloguser_user_ID, bloguser_ismember,
								bloguser_perm_poststatuses, bloguser_perm_delpost, bloguser_perm_comments,
								bloguser_perm_cats, bloguser_perm_properties)
							SELECT blog_ID, ID, 1, 'published,protected,private,draft', 0, 1, 0, 0
							FROM T_users, T_blogs
							WHERE user_level > 0 AND user_level < 10";
		$var_2->query( $var_7 );
		

		
		$var_2->query( 'UPDATE T_users
									  SET dateYMDhour = \'2000-01-01 00:00:00\'
									WHERE ( dateYMDhour = \'0000-00-00 00:00:00\' OR dateYMDhour = \'2000-00-00 00:00:01\' )' );
		$var_2->query( 'ALTER TABLE T_users
							MODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_7 = "ALTER TABLE T_users
							ADD COLUMN user_notify tinyint(1) NOT NULL default 1,
							ADD COLUMN user_grp_ID int(4) NOT NULL default 1,
							MODIFY COLUMN user_idmode varchar(20) NOT NULL DEFAULT 'login'";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE T_users
							ADD KEY user_grp_ID (user_grp_ID)";
		$var_2->query( $var_7 );
		

		

		

		
		$var_7 = "UPDATE T_users
							SET user_grp_ID = $var_70->var_89
							WHERE user_level = 0";
		$var_2->query( $var_7 );

		
		$var_7 = "UPDATE T_users
							SET user_grp_ID = $var_69->var_89
							WHERE user_level > 0 AND user_level < 10";
		$var_2->query( $var_7 );

		

		
		$var_7 = "ALTER TABLE T_settings
							DROP COLUMN time_format,
							DROP COLUMN date_format,
							ADD COLUMN pref_newusers_grp_ID int unsigned DEFAULT 4 NOT NULL,
							ADD COLUMN pref_newusers_level tinyint unsigned DEFAULT 1 NOT NULL,
							ADD COLUMN pref_newusers_canregister tinyint unsigned DEFAULT 0 NOT NULL";
		$var_2->query( $var_7 );
		

		fn_0( '8050' );
	}


	if( $var_13 < 8060 )
	{ 
		
		$var_90 = $var_2->get_col( "
			SELECT blog_stub
			  FROM T_blogs
			 GROUP BY blog_stub
			HAVING COUNT(*) > 1" );
		if( !empty($var_90) )
		{
			
			printf( T_("It appears that the following blog stub names are used more than once: ['%s']" ), implode( "','", $var_90 ) );
			
			printf( T_("I can't upgrade until you make them unique. DB field: [%s]" ), $var_21['aliases']['T_blogs'].'.blog_stub' );
			
			return false;
		}

		
		
		$var_7 = "CREATE TABLE T_locales (
				loc_locale varchar(20) NOT NULL default '',
				loc_charset varchar(15) NOT NULL default 'iso-8859-1',
				loc_datefmt varchar(10) NOT NULL default 'y-m-d',
				loc_timefmt varchar(10) NOT NULL default 'H:i:s',
				loc_name varchar(40) NOT NULL default '',
				loc_messages varchar(20) NOT NULL default '',
				loc_priority tinyint(4) UNSIGNED NOT NULL default '0',
				loc_enabled tinyint(4) NOT NULL default '1',
				PRIMARY KEY loc_locale( loc_locale )
			) COMMENT='saves available locales'";
		$var_2->query( $var_7 );
		

		
		$var_7 = "UPDATE {$var_64}posts
							SET post_urltitle = NULL";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE {$var_64}posts
							CHANGE COLUMN post_date post_issue_date datetime NOT NULL default '1000-01-01 00:00:00',
							ADD COLUMN post_mod_date datetime NOT NULL default '1000-01-01 00:00:00'
										AFTER post_issue_date,
							CHANGE COLUMN post_lang post_locale varchar(20) NOT NULL default 'en-EU',
							DROP COLUMN post_url,
							CHANGE COLUMN post_trackbacks post_url varchar(250) NULL default NULL,
							ADD COLUMN post_renderers VARCHAR(179) NOT NULL default 'default'";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE {$var_64}posts
							ADD INDEX post_issue_date( post_issue_date ),
							ADD UNIQUE post_urltitle( post_urltitle )";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE {$var_64}posts
					DROP INDEX post_date";
		$var_2->query( $var_7 );

		$var_7 = "UPDATE {$var_64}posts
							SET post_mod_date = post_issue_date";
		$var_2->query( $var_7 );
		

		
		fn_12( "{$var_64}posts", 'post_locale', 'ID' );

		
		$var_7 = "ALTER TABLE T_blogs
							CHANGE blog_lang blog_locale varchar(20) NOT NULL default 'en-EU',
							CHANGE blog_roll blog_notes TEXT NULL,
							MODIFY COLUMN blog_default_skin VARCHAR(30) NOT NULL DEFAULT 'custom',
							DROP COLUMN blog_filename,
							ADD COLUMN blog_access_type VARCHAR(10) NOT NULL DEFAULT 'index.php' AFTER blog_locale,
							ADD COLUMN blog_force_skin tinyint(1) NOT NULL default 0 AFTER blog_default_skin,
							ADD COLUMN blog_in_bloglist tinyint(1) NOT NULL DEFAULT 1 AFTER blog_disp_bloglist,
							ADD COLUMN blog_links_blog_ID INT(4) NOT NULL DEFAULT 0,
							ADD UNIQUE KEY blog_stub (blog_stub)";
		$var_2->query( $var_7 );

		$var_7 = "UPDATE T_blogs
							SET blog_access_type = 'stub',
									blog_default_skin = 'custom'";
		$var_2->query( $var_7 );

		

		
		fn_12( 'T_blogs', 'blog_locale', 'blog_ID' );


		

		
		$var_7 = 'SELECT * FROM T_settings';
		$var_27 = $var_2->get_row( $var_7, var_56 );

		
		$var_92 = array(
			'posts_per_page' => array(5),      
			'what_to_show' => array('posts'),  
			'archive_mode' => array('monthly'),
			'time_difference' => array(0),
			'AutoBR' => array(0),
			'last_antispam_update' => array('2000-01-01 00:00:00', 'antispam_last_update'),
			'pref_newusers_grp_ID' => array($var_70->var_89, 'newusers_grp_ID'),
			'pref_newusers_level'  => array(1, 'newusers_level'),
			'pref_newusers_canregister' => array(0, 'newusers_canregister'),
		);

		$var_93 = array();
		foreach( $var_92 as $var_94 => $var_95 )
		{
			$var_96 = ( isset($var_95[1]) ? $var_95[1] : $var_94 );
			if( !isset( $var_27[$var_94] ) )
			{
				&var_97;var_98 '.$var_94.' not found, using defaults.<br />';
				$var_93[ $var_96 ] = $var_95[0];
			}
			else
			{
				$var_93[ $var_96 ] = $var_27[$var_94];
			}
		}

		
		$var_2->query( 'DROP TABLE IF EXISTS T_settings' );

		
		$var_2->query(
			'CREATE TABLE T_settings (
				set_name VARCHAR( 30 ) NOT NULL ,
				set_value VARCHAR( 255 ) NULL ,
				PRIMARY KEY ( set_name )
			)');

		
		create_default_settings( $var_93 );

		if( !isset( $var_88 ) )
		{
			
			$var_7 = "ALTER TABLE T_coll_user_perms
								ADD COLUMN bloguser_ismember tinyint NOT NULL default 0 AFTER bloguser_user_ID";
			$var_2->query( $var_7 );

			
			
			$var_2->query( "UPDATE T_coll_user_perms
											SET bloguser_ismember = 1" );
			
		}

		
		$var_2->query( 'UPDATE T_comments
									  SET comment_date = \'2000-01-01 00:00:00\'
									WHERE comment_date = \'0000-00-00 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_comments
							MODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_7 = "ALTER TABLE T_comments
							ADD COLUMN comment_author_ID int unsigned NULL default NULL AFTER comment_status,
							MODIFY COLUMN comment_author varchar(100) NULL,
							MODIFY COLUMN comment_author_email varchar(100) NULL,
							MODIFY COLUMN comment_author_url varchar(100) NULL,
							MODIFY COLUMN comment_author_IP varchar(23) NOT NULL default ''";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_users ADD user_locale VARCHAR( 20 ) DEFAULT 'en-EU' NOT NULL AFTER user_yim";
		$var_2->query( $var_7 );
		

		fn_0( '8060' );
	}


	if( $var_13 < 8062 )
	{ 
		
		$var_7 = "SELECT ID, post_title, post_content
								FROM {$var_64}posts
							 WHERE post_title LIKE '%\\\\\\\\\'%'
									OR post_title LIKE '%\\\\\\\\\"%'
									OR post_content LIKE '%\\\\\\\\\'%'
									OR post_content LIKE '%\\\\\\\\\"%' ";
		
		
		$var_99 = $var_2->get_results( $var_7, var_56 );
		if( $var_2->var_100 )
		{
			
			foreach( $var_99 as $var_27 )
			{
				
				$var_7 = "UPDATE {$var_64}posts
									SET post_title = ".$var_2->quote( stripslashes( $var_27['post_title'] ) ).",
											post_content = ".$var_2->quote( stripslashes( $var_27['post_content'] ) )."
									WHERE ID = ".$var_27['ID'];
				
				$var_2->query( $var_7 );
			}
		}
		

		fn_0( '8062' );
	}


	if( $var_13 < 8064 )
	{ 
		cleanup_comment_quotes();

		fn_0( '8064' );
	}


	if( $var_13 < 8066 )
	{	
		
		$var_2->query( 'ALTER TABLE T_postcats ADD UNIQUE catpost ( postcat_cat_ID, postcat_post_ID )' );
		

		fn_0( '8066' );
	}


	if( $var_13 < 8800 )
	{ 

		
		$var_2->query( 'DROP TABLE IF EXISTS T_hitlog' );
		

		
			
			$var_2->query( "CREATE TABLE T_sessions (
											sess_ID        INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
											sess_key       CHAR(32) NULL,
											sess_lastseen  DATETIME NOT NULL,
											sess_ipaddress VARCHAR(15) NOT NULL DEFAULT '',
											sess_user_ID   INT(10) DEFAULT NULL,
											sess_agnt_ID   INT UNSIGNED NULL,
											sess_data      TEXT DEFAULT NULL,
											PRIMARY KEY( sess_ID )
										)" );
			


			
			$var_2->query( "CREATE TABLE {$var_64}usersettings (
											uset_user_ID INT(11) UNSIGNED NOT NULL,
											uset_name    VARCHAR( 30 ) NOT NULL,
											uset_value   VARCHAR( 255 ) NULL,
											PRIMARY KEY ( uset_user_ID, uset_name )
										)");
			


			
			$var_2->query( "CREATE TABLE T_plugins (
											plug_ID        INT(11) UNSIGNED NOT NULL auto_increment,
											plug_priority  INT(11) NOT NULL default 50,
											plug_classname VARCHAR(40) NOT NULL default '',
											PRIMARY KEY ( plug_ID )
										)");
			


			
			$var_7="CREATE TABLE {$var_64}poststatuses (
											pst_ID   int(11) unsigned not null AUTO_INCREMENT,
											pst_name varchar(30)      not null,
											primary key ( pst_ID )
										)";
			$var_2->query( $var_7 );
			


			
			$var_7="CREATE TABLE {$var_64}posttypes (
											ptyp_ID   int(11) unsigned not null AUTO_INCREMENT,
											ptyp_name varchar(30)      not null,
											primary key (ptyp_ID)
										)";
			$var_2->query( $var_7 );
			


			
			$var_2->query( "CREATE TABLE T_files (
										 file_ID        int(11) unsigned  not null AUTO_INCREMENT,
										 file_root_type enum('absolute','user','group','collection') not null default 'absolute',
										 file_root_ID   int(11) unsigned  not null default 0,
										 file_path      varchar(255)      not null default '',
										 file_title     varchar(255),
										 file_alt       varchar(255),
										 file_desc      text,
										 primary key (file_ID),
										 unique file (file_root_type, file_root_ID, file_path)
									)" );
			


			
			$var_2->query( "CREATE TABLE T_basedomains (
										dom_ID     INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
										dom_name   VARCHAR(250) NOT NULL DEFAULT '',
										dom_status ENUM('unknown','whitelist','blacklist') NOT NULL DEFAULT 'unknown',
										dom_type   ENUM('unknown','normal','searcheng','aggregator') NOT NULL DEFAULT 'unknown',
										PRIMARY KEY (dom_ID),
										UNIQUE dom_name (dom_name)
									)" );	
			

		fn_0( '8820' );
	}


	if( $var_13 < 8840 )
	{

			
			$var_2->query( "CREATE TABLE {$var_64}useragents (
										agnt_ID        INT UNSIGNED NOT NULL AUTO_INCREMENT,
										agnt_signature VARCHAR(250) NOT NULL,
										agnt_type      ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL,
										PRIMARY KEY (agnt_ID) )" );
			


			
			$var_7 = "CREATE TABLE T_hitlog (
									hit_ID             INT(11) NOT NULL AUTO_INCREMENT,
									hit_sess_ID        INT UNSIGNED,
									hit_datetime       DATETIME NOT NULL,
									hit_uri            VARCHAR(250) DEFAULT NULL,
									hit_referer_type   ENUM('search','blacklist','referer','direct','spam') NOT NULL,
									hit_referer        VARCHAR(250) DEFAULT NULL,
									hit_referer_dom_ID INT UNSIGNED DEFAULT NULL,
									hit_blog_ID        int(11) UNSIGNED NULL DEFAULT NULL,
									hit_remote_addr    VARCHAR(40) DEFAULT NULL,
									PRIMARY KEY (hit_ID),
									INDEX hit_datetime ( hit_datetime ),
									INDEX hit_blog_ID (hit_blog_ID)
								)";
			$var_2->query( $var_7 );
			


			
			$var_2->query( "CREATE TABLE T_subscriptions (
										 sub_coll_ID     int(11) unsigned    not null,
										 sub_user_ID     int(11) unsigned    not null,
										 sub_items       tinyint(1)          not null,
										 sub_comments    tinyint(1)          not null,
										 primary key (sub_coll_ID, sub_user_ID)
										)" );
			


			
			$var_2->query( "CREATE TABLE T_coll_group_perms (
											bloggroup_blog_ID int(11) unsigned NOT NULL default 0,
											bloggroup_group_ID int(11) unsigned NOT NULL default 0,
											bloggroup_ismember tinyint NOT NULL default 0,
											bloggroup_perm_poststatuses set('published','deprecated','protected','private','draft') NOT NULL default '',
											bloggroup_perm_delpost tinyint NOT NULL default 0,
											bloggroup_perm_comments tinyint NOT NULL default 0,
											bloggroup_perm_cats tinyint NOT NULL default 0,
											bloggroup_perm_properties tinyint NOT NULL default 0,
											bloggroup_perm_media_upload tinyint NOT NULL default 0,
											bloggroup_perm_media_browse tinyint NOT NULL default 0,
											bloggroup_perm_media_change tinyint NOT NULL default 0,
											PRIMARY KEY bloggroup_pk (bloggroup_blog_ID,bloggroup_group_ID) )" );
			


		
		$var_7 = "ALTER TABLE T_blogs
							MODIFY COLUMN blog_ID int(11) unsigned NOT NULL auto_increment,
							MODIFY COLUMN blog_links_blog_ID INT(11) NULL DEFAULT NULL,
							CHANGE COLUMN blog_stub blog_urlname VARCHAR(255) NOT NULL DEFAULT 'urlname',
							ADD COLUMN blog_allowcomments VARCHAR(20) NOT NULL default 'post_by_post' AFTER blog_keywords,
							ADD COLUMN blog_allowblogcss TINYINT(1) NOT NULL default 1 AFTER blog_allowpingbacks,
							ADD COLUMN blog_allowusercss TINYINT(1) NOT NULL default 1 AFTER blog_allowblogcss,
							DROP INDEX blog_stub,
							ADD COLUMN blog_stub VARCHAR(255) NOT NULL DEFAULT 'stub' AFTER blog_staticfilename,
							ADD COLUMN blog_commentsexpire INT(4) NOT NULL DEFAULT 0 AFTER blog_links_blog_ID,
							ADD COLUMN blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) DEFAULT 'default' NOT NULL AFTER blog_commentsexpire,
							ADD COLUMN blog_media_subdir VARCHAR( 255 ) NOT NULL AFTER blog_media_location,
							ADD COLUMN blog_media_fullpath VARCHAR( 255 ) NOT NULL AFTER blog_media_subdir,
							ADD COLUMN blog_media_url VARCHAR(255) NOT NULL AFTER blog_media_fullpath";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE T_blogs
							ADD UNIQUE blog_urlname ( blog_urlname )";
		$var_2->query( $var_7 );
		

		fn_0( '8840' );
	}


	
	
	
	if( $var_13 < 8850 )
	{
		
		
		$var_7 = "UPDATE T_blogs
								 SET blog_siteurl = CONCAT( SUBSTRING(blog_siteurl,2) , '/' )
							 WHERE blog_siteurl LIKE '/%'";
		$var_2->query( $var_7 );
		

		
		$var_7 = 'UPDATE T_blogs
							SET blog_stub = blog_urlname';
		$var_2->query( $var_7 );
		

		fn_0( '8850' );
	}


	if( $var_13 < 8855 )
	{
		
		$var_7 = "ALTER TABLE {$var_64}posts
							DROP INDEX post_author,
							DROP INDEX post_issue_date,
							DROP INDEX post_category";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE {$var_64}posts
							DROP COLUMN post_karma,
							DROP COLUMN post_autobr,
							CHANGE COLUMN ID post_ID int(11) unsigned NOT NULL auto_increment,
							CHANGE COLUMN post_author	post_creator_user_ID int(11) unsigned NOT NULL,
							CHANGE COLUMN post_issue_date	post_datestart datetime NOT NULL,
							CHANGE COLUMN post_mod_date	post_datemodified datetime NOT NULL,
							CHANGE COLUMN post_category post_main_cat_ID int(11) unsigned NOT NULL,
							ADD post_parent_ID				int(11) unsigned NULL AFTER post_ID,
							ADD post_lastedit_user_ID	int(11) unsigned NULL AFTER post_creator_user_ID,
							ADD post_assigned_user_ID	int(11) unsigned NULL AFTER post_lastedit_user_ID,
							ADD post_datedeadline 		datetime NULL AFTER post_datestart,
							ADD post_datecreated			datetime NULL AFTER post_datedeadline,
							ADD post_pst_ID						int(11) unsigned NULL AFTER post_status,
							ADD post_ptyp_ID					int(11) unsigned NULL AFTER post_pst_ID,
							ADD post_views						int(11) unsigned NOT NULL DEFAULT 0 AFTER post_flags,
							ADD post_commentsexpire		datetime DEFAULT NULL AFTER post_comments,
							ADD post_priority					int(11) unsigned null";
		$var_2->query( $var_7 );

		$var_7 = "ALTER TABLE {$var_64}posts
							ADD INDEX post_creator_user_ID( post_creator_user_ID ),
							ADD INDEX post_parent_ID( post_parent_ID ),
							ADD INDEX post_assigned_user_ID( post_assigned_user_ID ),
							ADD INDEX post_datestart( post_datestart ),
							ADD INDEX post_main_cat_ID( post_main_cat_ID ),
							ADD INDEX post_ptyp_ID( post_ptyp_ID ),
							ADD INDEX post_pst_ID( post_pst_ID ) ";
		$var_2->query( $var_7 );
		

		fn_0( '8855' );
	}


	if( $var_13 < 8860 )
	{
		
		$var_7 = "UPDATE {$var_64}posts
							SET post_lastedit_user_ID = post_creator_user_ID,
									post_datecreated = post_datestart";
		$var_2->query( $var_7 );
		


		task_begin( 'Upgrading users table... ' );
		$var_2->query( 'UPDATE T_users
									  SET dateYMDhour = \'2000-01-01 00:00:00\'
									WHERE dateYMDhour = \'0000-00-00 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_users
							MODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\',
							CHANGE COLUMN ID user_ID int(11) unsigned NOT NULL auto_increment,
							MODIFY COLUMN user_icq int(11) unsigned DEFAULT 0 NOT NULL,
							ADD COLUMN user_showonline tinyint(1) NOT NULL default 1 AFTER user_notify' );
		task_end();


		fn_0( '8860' );
	}


	if( $var_13 < 8900 )
	{

		
		$var_7 = 'INSERT INTO T_settings (set_name, set_value)
							VALUES
								( "reloadpage_timeout", "300" ),
								( "upload_enabled", "'.(isset($var_74) ? (int)$var_74 : '1').'" ),
								( "upload_allowedext", "'.(isset($var_75) ? $var_75 : 'jpg gif png').'" ),
								( "upload_maxkb", "'.(isset($var_76) ? (int)$var_76 : '96').'" )
							';
		$var_2->query( $var_7 );
		
		$var_2->query( 'UPDATE T_settings
										SET set_value = "posts"
									WHERE set_name = "what_to_show"
									  AND set_value = "paged"' );
		


		if( !isset( $var_88 ) )
		{	
			
			$var_2->query( 'ALTER TABLE T_coll_user_perms
										MODIFY COLUMN bloguser_blog_ID int(11) unsigned NOT NULL default 0,
										MODIFY COLUMN bloguser_user_ID int(11) unsigned NOT NULL default 0,
										ADD COLUMN bloguser_perm_media_upload tinyint NOT NULL default 0,
										ADD COLUMN bloguser_perm_media_browse tinyint NOT NULL default 0,
										ADD COLUMN bloguser_perm_media_change tinyint NOT NULL default 0' );
			
		}


		task_begin( 'Altering comments table...' );
		$var_2->query( 'UPDATE T_comments
									  SET comment_date = \'2000-01-01 00:00:00\'
									WHERE comment_date = \'0000-00-00 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_comments
									MODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\',
									MODIFY COLUMN comment_post_ID		int(11) unsigned NOT NULL default 0' );
		task_end();

		fn_0( '8900' );
	}

	if( $var_13 < 9000 )
	{
		
		$var_2->query( "ALTER TABLE T_postcats
									MODIFY COLUMN postcat_post_ID int(11) unsigned NOT NULL,
									MODIFY COLUMN postcat_cat_ID int(11) unsigned NOT NULL" );
		


		
		$var_2->query( "ALTER TABLE T_categories
									MODIFY COLUMN cat_ID int(11) unsigned NOT NULL auto_increment,
									MODIFY COLUMN cat_parent_ID int(11) unsigned NULL,
									MODIFY COLUMN cat_blog_ID int(11) unsigned NOT NULL default 2" );
		


		
		$var_2->query( 'ALTER TABLE T_locales
									ADD loc_startofweek TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER loc_timefmt' );
		


		if( !isset( $var_87 ) )
		{	
			
			$var_2->query( "ALTER TABLE T_groups
										ADD COLUMN grp_perm_admin enum('none','hidden','visible') NOT NULL default 'visible' AFTER grp_name,
										ADD COLUMN grp_perm_files enum('none','view','add','edit') NOT NULL default 'none'" );
			
		}


		
		$var_2->query( "CREATE TABLE T_links (
									link_ID               int(11) unsigned  not null AUTO_INCREMENT,
									link_datecreated      datetime          not null,
									link_datemodified     datetime          not null,
									link_creator_user_ID  int(11) unsigned  not null,
									link_lastedit_user_ID int(11) unsigned  not null,
									link_item_ID          int(11) unsigned  NOT NULL,
									link_dest_item_ID     int(11) unsigned  NULL,
									link_file_ID          int(11) unsigned  NULL,
									link_ltype_ID         int(11) unsigned  NOT NULL default 1,
									link_external_url     VARCHAR(255)      NULL,
									link_title            TEXT              NULL,
									PRIMARY KEY (link_ID),
									INDEX link_item_ID( link_item_ID ),
									INDEX link_dest_item_ID (link_dest_item_ID),
									INDEX link_file_ID (link_file_ID)
								)" );
		


		
		$var_2->query( "
			INSERT INTO {$var_64}posttypes ( ptyp_ID, ptyp_name )
			VALUES ( 1, 'Post' ),
			       ( 2, 'Link' )" );
		


		fn_0( '9000' );
	}


	if( $var_13 < 9100 )
	{	

		
		$var_2->query( '
			CREATE TABLE T_pluginevents(
					pevt_plug_ID INT(11) UNSIGNED NOT NULL,
					pevt_event VARCHAR(40) NOT NULL,
					pevt_enabled TINYINT NOT NULL DEFAULT 1,
					PRIMARY KEY( pevt_plug_ID, pevt_event )
				)' );
		


		
		$var_2->query( 'ALTER TABLE T_links
		             CHANGE link_item_ID link_itm_ID INT( 11 ) UNSIGNED NOT NULL,
		             CHANGE link_dest_item_ID link_dest_itm_ID INT( 11 ) UNSIGNED NULL' );
		


		if( $var_13 >= 9000 )
		{ 
			
			$var_7 = "
					ALTER TABLE T_sessions
					 DROP COLUMN sess_agnt_ID";
			$var_2->query( $var_7 );
			
		}

		
		$var_2->query( '
				CREATE TABLE T_filetypes (
					ftyp_ID int(11) unsigned NOT NULL auto_increment,
					ftyp_extensions varchar(30) NOT NULL,
					ftyp_name varchar(30) NOT NULL,
					ftyp_mimetype varchar(50) NOT NULL,
					ftyp_icon varchar(20) default NULL,
					ftyp_viewtype varchar(10) NOT NULL,
					ftyp_allowed tinyint(1) NOT NULL default 0,
					PRIMARY KEY (ftyp_ID)
				)' );
		

		
		$var_2->query( "INSERT INTO T_filetypes
				(ftyp_ID, ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)
			VALUES
				(1, 'gif', 'GIF image', 'image/gif', 'image2.png', 'image', 1),
				(2, 'png', 'PNG image', 'image/png', 'image2.png', 'image', 1),
				(3, 'jpg jpeg', 'JPEG image', 'image/jpeg', 'image2.png', 'image', 1),
				(4, 'txt', 'Text file', 'text/plain', 'document.png', 'text', 1),
				(5, 'htm html', 'HTML file', 'text/html', 'html.png', 'browser', 0),
				(6, 'pdf', 'PDF file', 'application/pdf', 'pdf.png', 'browser', 1),
				(7, 'doc', 'Microsoft Word file', 'application/msword', 'doc.gif', 'external', 1),
				(8, 'xls', 'Microsoft Excel file', 'application/vnd.ms-excel', 'xls.gif', 'external', 1),
				(9, 'ppt', 'Powerpoint', 'application/vnd.ms-powerpoint', 'ppt.gif', 'external', 1),
				(10, 'pps', 'Slideshow', 'pps', 'pps.gif', 'external', 1),
				(11, 'zip', 'ZIP archive', 'application/zip', 'zip.gif', 'external', 1),
				(12, 'php php3 php4 php5 php6', 'PHP script', 'application/x-httpd-php', 'php.gif', 'text', 0),
				(13, 'css', 'Style sheet', 'text/css', '', 'text', 1)
			" );
		

		
		$var_2->query( 'UPDATE T_groups
		             SET grp_perm_files = "edit"
		             WHERE grp_ID = 1' );
	 	
		

		
		$var_2->query( 'UPDATE T_coll_group_perms
		             SET bloggroup_perm_media_upload = 1,
		                 bloggroup_perm_media_browse = 1,
		                 bloggroup_perm_media_change = 1
		             WHERE bloggroup_group_ID = 1' );
		


		if( $var_13 >= 9000 )
		{ 
			
			$var_2->query( 'DELETE FROM T_plugins WHERE 1=1' );
			
		}

		


		fn_0( '9100' );
	}


	if( $var_13 < 9190 ) 
	{	
		
		$var_2->query( "ALTER TABLE {$var_64}posts
		             CHANGE post_comments post_comment_status ENUM('disabled', 'open', 'closed') NOT NULL DEFAULT 'open'" );
		


		fn_0( '9190' );
	}


	if( $var_13 < 9192 )
	{ 

		
		if( $var_2->get_row( 'SHOW COLUMNS FROM T_hitlog LIKE "hit_referer_type"' ) )
		{ 
			task_begin( 'Deleting all "spam" hitlog entries... ' );
			$var_2->query( '
					DELETE FROM T_hitlog
					 WHERE hit_referer_type = "spam"' );
			task_end();
		}

		task_begin( 'Upgrading users table... ' );
		$var_2->query( 'ALTER TABLE T_users
										CHANGE COLUMN user_firstname user_firstname varchar(50) NULL,
										CHANGE COLUMN user_lastname user_lastname varchar(50) NULL,
										CHANGE COLUMN user_nickname user_nickname varchar(50) NULL,
										CHANGE COLUMN user_icq user_icq int(11) unsigned NULL,
										CHANGE COLUMN user_email user_email varchar(255) NOT NULL,
										CHANGE COLUMN user_url user_url varchar(255) NULL,
										CHANGE COLUMN user_ip user_ip varchar(15) NULL,
										CHANGE COLUMN user_domain user_domain varchar(200) NULL,
										CHANGE COLUMN user_browser user_browser varchar(200) NULL,
										CHANGE COLUMN user_aim user_aim varchar(50) NULL,
										CHANGE COLUMN user_msn user_msn varchar(100) NULL,
										CHANGE COLUMN user_yim user_yim varchar(50) NULL,
										ADD COLUMN user_allow_msgform TINYINT NOT NULL DEFAULT \'1\' AFTER user_idmode,
										ADD COLUMN user_validated TINYINT(1) NOT NULL DEFAULT 0 AFTER user_grp_ID' );
		task_end();

		task_begin( 'Creating blog settings...' );
		$var_2->query( 'CREATE TABLE T_coll_settings (
															cset_coll_ID INT(11) UNSIGNED NOT NULL,
															cset_name    VARCHAR( 30 ) NOT NULL,
															cset_value   VARCHAR( 255 ) NULL,
															PRIMARY KEY ( cset_coll_ID, cset_name )
											)' );
		task_end();
		fn_0( '9192' );
	}


	if( $var_13 < 9195 )
	{
		task_begin( 'Upgrading posts table... ' );
		$var_2->query( 'ALTER TABLE '.$var_64.'posts
										CHANGE COLUMN post_content post_content         text NULL,
										CHANGE COLUMN post_url post_url              		VARCHAR(255) NULL DEFAULT NULL,
										CHANGE COLUMN post_renderers post_renderers     TEXT NOT NULL' );
		task_end();

		task_begin( 'Upgrading comments table... ' );
		$var_2->query( 'ALTER TABLE T_comments
										CHANGE COLUMN comment_author_email comment_author_email varchar(255) NULL,
										CHANGE COLUMN comment_author_url comment_author_url varchar(255) NULL,
										ADD COLUMN comment_spam_karma TINYINT NULL AFTER comment_karma,
										ADD COLUMN comment_allow_msgform TINYINT NOT NULL DEFAULT 0 AFTER comment_spam_karma' );
		task_end();

		fn_0( '9195' );
	}


	if( $var_13 < 9200 )
	{
		task_begin( 'Upgrading hitlog table... ' );
		$var_2->query( 'ALTER TABLE T_hitlog
										CHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\'search\',\'blacklist\',\'referer\',\'direct\') NOT NULL,
										ADD COLUMN hit_agnt_ID        INT UNSIGNED NULL AFTER hit_remote_addr' );
		task_end();

		task_begin( 'Upgrading post links table... ' );
		$var_2->query( 'ALTER TABLE T_links
										ADD INDEX link_itm_ID( link_itm_ID ),
										ADD INDEX link_dest_itm_ID (link_dest_itm_ID)' );
		task_end();

		task_begin( 'Upgrading plugins table... ' );
		$var_2->query( 'ALTER TABLE T_plugins
										CHANGE COLUMN plug_priority plug_priority        TINYINT NOT NULL default 50,
										ADD COLUMN plug_code            VARCHAR(32) NULL AFTER plug_classname,
										ADD COLUMN plug_apply_rendering ENUM( \'stealth\', \'always\', \'opt-out\', \'opt-in\', \'lazy\', \'never\' ) NOT NULL DEFAULT \'never\' AFTER plug_code,
										ADD COLUMN plug_version         VARCHAR(42) NOT NULL default \'0\' AFTER plug_apply_rendering,
										ADD COLUMN plug_status          ENUM( \'enabled\', \'disabled\', \'needs_config\', \'broken\' ) NOT NULL AFTER plug_version,
										ADD COLUMN plug_spam_weight     TINYINT UNSIGNED NOT NULL DEFAULT 1 AFTER plug_status');
		$var_2->query( 'ALTER TABLE T_plugins
										ADD UNIQUE plug_code( plug_code ),
										ADD INDEX plug_status( plug_status )' );
		task_end();

		task_begin( 'Creating plugin settings table... ' );
		$var_2->query( 'CREATE TABLE T_pluginsettings (
															pset_plug_ID INT(11) UNSIGNED NOT NULL,
															pset_name VARCHAR( 30 ) NOT NULL,
															pset_value TEXT NULL,
															PRIMARY KEY ( pset_plug_ID, pset_name )
											)' );
		task_end();

		task_begin( 'Creating plugin user settings table... ' );
		$var_2->query( 'CREATE TABLE T_pluginusersettings (
															puset_plug_ID INT(11) UNSIGNED NOT NULL,
															puset_user_ID INT(11) UNSIGNED NOT NULL,
															puset_name VARCHAR( 30 ) NOT NULL,
															puset_value TEXT NULL,
															PRIMARY KEY ( puset_plug_ID, puset_user_ID, puset_name )
											)' );
		task_end();

		task_begin( 'Creating scheduled tasks table... ' );
		$var_2->query( 'CREATE TABLE T_cron__task(
												 ctsk_ID              int(10) unsigned      not null AUTO_INCREMENT,
												 ctsk_start_datetime  datetime              not null,
												 ctsk_repeat_after    int(10) unsigned,
												 ctsk_name            varchar(50)           not null,
												 ctsk_controller      varchar(50)           not null,
												 ctsk_params          text,
												 primary key (ctsk_ID)
											)' );
		task_end();

		task_begin( 'Creating cron log table... ' );
		$var_2->query( 'CREATE TABLE T_cron__log(
															 clog_ctsk_ID              int(10) unsigned   not null,
															 clog_realstart_datetime   datetime           not null,
															 clog_realstop_datetime    datetime,
															 clog_status               enum(\'started\',\'finished\',\'error\',\'timeout\') not null default \'started\',
															 clog_messages             text,
															 primary key (clog_ctsk_ID)
											)' );
		task_end();

		task_begin( 'Upgrading blogs table... ' );
		
		$var_2->query( 'ALTER TABLE T_blogs
										ALTER COLUMN blog_allowpingbacks SET DEFAULT 0,
    								CHANGE COLUMN blog_media_subdir blog_media_subdir VARCHAR( 255 ) NULL,
										CHANGE COLUMN blog_media_fullpath blog_media_fullpath VARCHAR( 255 ) NULL,
										CHANGE COLUMN blog_media_url blog_media_url VARCHAR( 255 ) NULL' );
		task_end();


		fn_0( '9200' ); 
	}


	

	if( $var_13 < 9290 )
	{
		
		
		$var_2->query( '
					DELETE FROM T_hitlog
					 WHERE hit_referer_type IS NULL' );
		

		
		$var_2->query( '
				UPDATE T_users
				   SET user_validated = 1
				 WHERE user_grp_ID = 1' );
		

		
		$var_101 = $var_2->get_var( '
				SELECT set_value
				  FROM T_settings
				 WHERE set_name = "auto_prune_stats"' );
		if( ! is_null($var_101) && $var_101 < 1 )
		{ 
			$var_2->query( '
					REPLACE INTO T_settings ( set_name, set_value )
					 VALUES ( "auto_prune_stats_mode", "off" )' );
		}
		

		
		$var_2->query( 'UPDATE T_settings SET set_value = set_value*3600 WHERE set_name = "time_difference"' );
		


		
		$var_2->query( '
				ALTER TABLE '.$var_64.'useragents ADD INDEX agnt_type ( agnt_type )' );
		$var_2->query( '
				ALTER TABLE T_hitlog
				  CHANGE COLUMN hit_referer_type hit_referer_type ENUM(\'search\',\'blacklist\',\'referer\',\'direct\',\'self\',\'admin\') NOT NULL' );
		

		
		$var_2->query( '
				ALTER TABLE T_plugins
					MODIFY COLUMN plug_status ENUM( \'enabled\', \'disabled\', \'needs_config\', \'broken\' ) NOT NULL' );
		

		fn_0( '9290' );
	}


	if( $var_13 < 9300 )
	{
		
		
		$var_2->query( '
				ALTER TABLE T_hitlog
				  ADD INDEX hit_agnt_ID        ( hit_agnt_ID ),
				  ADD INDEX hit_uri            ( hit_uri ),
				  ADD INDEX hit_referer_dom_ID ( hit_referer_dom_ID )
				' );
		

		fn_0( '9300' );
	}


	if( $var_13 < 9310 )
	{
		
		$var_2->query( '
				UPDATE T_basedomains
				   SET dom_status = "unknown"' );		
		$var_2->query( '
				ALTER TABLE T_basedomains  ADD INDEX dom_type (dom_type)' );
		

		fn_0( '9310' );
	}


	if( $var_13 < 9315 )
	{
		
		$var_2->query( "ALTER TABLE T_locales CHANGE COLUMN loc_datefmt loc_datefmt varchar(20) NOT NULL default 'y-m-d'" );
		$var_2->query( "ALTER TABLE T_locales CHANGE COLUMN loc_timefmt loc_timefmt varchar(20) NOT NULL default 'H:i:s'" );
		

		
		$var_2->query( "
				CREATE TABLE {$var_64}item__prerendering(
					itpr_itm_ID                   INT(11) UNSIGNED NOT NULL,
					itpr_format                   ENUM('htmlbody', 'entityencoded', 'xml', 'text') NOT NULL,
					itpr_renderers                TEXT NOT NULL,
					itpr_content_prerendered      TEXT NULL,
					itpr_datemodified             TIMESTAMP NOT NULL,
					PRIMARY KEY (itpr_itm_ID, itpr_format)
				)" );
		

		
		$var_2->query( "ALTER TABLE T_plugins ADD COLUMN plug_name            VARCHAR(255) NULL default NULL AFTER plug_version" );
		$var_2->query( "ALTER TABLE T_plugins ADD COLUMN plug_shortdesc       VARCHAR(255) NULL default NULL AFTER plug_name" );
		

		fn_0( '9315' );
	}


	if( $var_13 < 9320 )
	{ 
		
		if( fn_4( 'T_hitlog', 'hit_datetime' ) )
		{ 
			
			$var_2->query( '
					ALTER TABLE T_hitlog
						DROP INDEX hit_datetime
					' );
			
		}

		fn_0( '9320' );
	}


	if( $var_13 < 9326 )
	{
		
		$var_2->query( 'DELETE FROM T_settings WHERE set_name = "upload_allowedext"' );
		

		
		fn_6( 'T_blogs', 'blog_allowpingbacks' );

		
		if( fn_5( 'T_blogs', array('blog_pingb2evonet', 'blog_pingtechnorati', 'blog_pingweblogs', 'blog_pingblodotgs') ) )
		{
			foreach( $var_2->get_results( '
					SELECT blog_ID, blog_pingb2evonet, blog_pingtechnorati, blog_pingweblogs, blog_pingblodotgs
						FROM T_blogs' ) as $var_27 )
			{
				$var_102 = $var_2->get_var( 'SELECT cset_value FROM T_coll_settings WHERE cset_coll_ID = '.$var_27->var_82.' AND cset_name = "ping_plugins"' );
				$var_102 = explode(',', $var_102);
				if( $var_27->var_103 )
				{
					$var_102[] = 'ping_b2evonet';
				}
				if( $var_27->var_104 || $var_27->var_105 || $var_27->var_106 )
				{ 
					$var_102[] = 'ping_pingomatic';
				}

				
				$var_102 = array_unique($var_102);
				$var_2->query( 'REPLACE INTO T_coll_settings
						( cset_coll_ID, cset_name, cset_value )
						VALUES ( '.$var_27->var_82.', "ping_plugins", "'.implode( ',', $var_102 ).'" )' );
			}
			$var_2->query( 'ALTER TABLE T_blogs
					DROP COLUMN blog_pingb2evonet,
					DROP COLUMN blog_pingtechnorati,
					DROP COLUMN blog_pingweblogs,
					DROP COLUMN blog_pingblodotgs' );
		}
		


		fn_0( '9326' );
	}


	if( $var_13 < 9328 )
	{
		
		fn_7( "{$var_64}posts", 'post_notifications_status',  'ENUM("noreq","todo","started","finished") NOT NULL DEFAULT "noreq" AFTER post_flags' );
		fn_7( "{$var_64}posts", 'post_notifications_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL AFTER post_notifications_status' );
		
		fn_0( '9328' );
	}


	if( $var_13 < 9330 )
	{
		if( db_col_exists( "{$var_64}posts", 'post_flags') )
		{
			
			$var_2->query( "
				UPDATE {$var_64}posts
					 SET post_notifications_status = 'finished'
				 WHERE post_flags LIKE '%pingsdone%'" );
			fn_6( "{$var_64}posts", 'post_flags' );
			
		}
		fn_0( '9330' );
	}


	if( $var_13 < 9340 )
	{
		
		if( fn_4( 'T_links', 'link_item_ID' ) )
		{ 
			$var_2->query( '
					ALTER TABLE T_links
						DROP INDEX link_item_ID
					' );
		}
		if( fn_4( 'T_links', 'link_dest_item_ID' ) )
		{ 
			$var_2->query( '
					ALTER TABLE T_links
						DROP INDEX link_dest_item_ID
					' );
		}
		

		fn_0( '9340' );
	}

	

	if( $var_13 < 9345 )
	{
		
		$var_2->query( "ALTER TABLE {$var_64}posts CHANGE COLUMN post_content post_content MEDIUMTEXT NULL" );
		
		fn_0( '9345' );
	}

	if( $var_13 < 9346 )
	{
		
		$var_2->query( "ALTER TABLE {$var_64}item__prerendering CHANGE COLUMN itpr_content_prerendered itpr_content_prerendered MEDIUMTEXT NULL" );
		
		fn_0( '9346' );
	}

	if( $var_13 < 9348 )
	{
		
		$var_2->query( 'ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL' );
		
		fn_0( '9348' );
	}

	if( $var_13 < 9350 )
	{
		
		$var_2->query( 'ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type   ENUM(\'search\',\'blacklist\',\'spam\',\'referer\',\'direct\',\'self\',\'admin\') NOT NULL' );
		

		fn_0( '9350' );
	}


	
	


	

	if( $var_13 < 9406 )
	{
		
		$var_2->query( '
			ALTER TABLE T_categories
				ADD COLUMN cat_urlname VARCHAR(255) NOT NULL' );

		
		
		load_funcs('locales/_charset.funcs.php');
		foreach( $var_2->get_results('SELECT cat_ID, cat_name FROM T_categories') as $var_107 )
		{
			$var_108 = trim($var_107->var_108);
			if( strlen($var_108) )
			{
				
				$var_109 = urltitle_validate('', $var_108, $var_107->var_110, false, 'cat_urlname', 'cat_ID', 'T_categories');
			}
			else
			{
				$var_109 = 'c'.$var_107->var_110;
			}

			$var_2->query( '
				UPDATE T_categories
					 SET cat_urlname = '.$var_2->quote($var_109).'
				 WHERE cat_ID = '.$var_107->var_110 );
		}

		$var_2->query( '
			ALTER TABLE T_categories
				ADD UNIQUE cat_urlname ( cat_urlname )' );
		

		
		$var_2->query( '
      UPDATE T_settings
         SET set_value = "disabled"
       WHERE set_name = "links_extrapath"
         AND set_value = 0' );
		$var_2->query( '
      UPDATE T_settings
         SET set_value = "ymd"
       WHERE set_name = "links_extrapath"
         AND set_value <> 0' );
		

		fn_0( '9406' );
	}


	if( $var_13 < 9407 )
	{
		
		$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
		             SELECT blog_ID, set_name, set_value
									 FROM T_blogs, T_settings
									WHERE set_name = "posts_per_page"
									   OR set_name = "what_to_show"
									   OR set_name = "archive_mode"' );
		$var_2->query( 'DELETE FROM T_settings
									WHERE set_name = "posts_per_page"
									   OR set_name = "what_to_show"
									   OR set_name = "archive_mode"' );
		

		
		$var_7 = "ALTER TABLE T_blogs
							DROP COLUMN blog_force_skin";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_groups
							CHANGE COLUMN grp_perm_files grp_perm_files enum('none','view','add','edit','all') NOT NULL default 'none'";
		$var_2->query( $var_7 );
		

		
		$var_7 = "ALTER TABLE T_files
							CHANGE COLUMN file_root_type file_root_type enum('absolute','user','group','collection','skins') not null default 'absolute'";
		$var_2->query( $var_7 );
		

		
		
		$var_2->query( "UPDATE T_filetypes
										SET ftyp_viewtype = 'text'
									WHERE ftyp_ID = 12
										AND ftyp_extensions = 'php php3 php4 php5 php6'
										AND ftyp_mimetype ='application/x-httpd-php'
										AND ftyp_icon = 'php.gif'" );
		

		
		$var_2->query( 'DELETE FROM '.$var_64.'usersettings
									WHERE uset_name = "plugins_disp_avail"' );
		

		fn_0( '9407' );
	}


	if( $var_13 < 9408 )
	{
		
		$var_2->query( 'CREATE TABLE T_skins__skin (
              skin_ID      int(10) unsigned      NOT NULL auto_increment,
              skin_name    varchar(32)           NOT NULL,
              skin_type    enum(\'normal\',\'feed\') NOT NULL default \'normal\',
              skin_folder  varchar(32)           NOT NULL,
              PRIMARY KEY skin_ID (skin_ID),
              UNIQUE skin_folder( skin_folder ),
              KEY skin_name( skin_name )
            )' );
		

		
		$var_2->query( 'CREATE TABLE T_skins__container (
              sco_skin_ID   int(10) unsigned      NOT NULL,
              sco_name      varchar(40)           NOT NULL,
              PRIMARY KEY (sco_skin_ID, sco_name)
            )' );
		

		
		$var_2->query( 'CREATE TABLE T_widget (
 						wi_ID					INT(10) UNSIGNED auto_increment,
						wi_coll_ID    INT(11) UNSIGNED NOT NULL,
						wi_sco_name   VARCHAR( 40 ) NOT NULL,
						wi_order			INT(10) UNSIGNED NOT NULL,
						wi_type       ENUM( \'core\', \'plugin\' ) NOT NULL DEFAULT \'core\',
						wi_code       VARCHAR(32) NOT NULL,
						wi_params     TEXT NULL,
						PRIMARY KEY ( wi_ID ),
						UNIQUE wi_order( wi_coll_ID, wi_sco_name, wi_order )
          )' );
		

		install_basic_skins( false );

		
		$var_2->query( 'ALTER TABLE T_blogs
								 ALTER COLUMN blog_allowtrackbacks SET DEFAULT 0,
									DROP COLUMN blog_default_skin,
									 ADD COLUMN blog_owner_user_ID   int(11) unsigned NOT NULL default 1 AFTER blog_name,
									 ADD COLUMN blog_skin_ID INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER blog_allowusercss' );
		


		
		function fn_13()
		{
			
			global $var_2;

			load_funcs( 'widgets/_widgets.funcs.php' );

			$var_111 = $var_2->get_assoc( 'SELECT blog_ID, "std" FROM T_blogs' );

			foreach( $var_111 as $var_113 => $var_114 )
			{
				task_begin( 'Installing default widgets for blog 
				insert_basic_widgets_9408( $blog_id, true, $blog_type );
				task_end();
			}
		}
		
		function add_basic_widget_9408( $blog_ID, $container_name, $code, $type, $order, $params = NULL )
		{
			global $basic_widgets_insert_sql_rows, $DB;

			if( is_null( $params ) )
			{ 
				$params = 'var_115';
			}
			elseif( is_array( $var_116 ) )
			{ 
				$var_116 = $var_2->quote( serialize( $var_116 ) );
			}
			var_342
			{ 
				$var_116 = $var_2->quote( $var_116 );
			}

			$var_123[] = '( '
				.$var_82.', '
				.$var_2->quote( $var_117 ).', '
				.$var_118.', '
				.$var_2->quote( $var_42 ).', '
				.$var_2->quote( $var_119 ).', '
				.$var_116.' )';
		}
		
		function insert_basic_widgets_9408( $var_113, $var_120 = false, $var_121 = '' )
		{
			global $var_2, $var_122, $var_123;

			
			$var_123 = array();

			
			global $var_130, $var_124, $var_125, $var_126, $var_127, $var_128, $var_129;
			$var_130 = intval( $var_130 );
			$var_124 = intval( $var_124 );
			$var_125 = intval( $var_125 );
			$var_126 = intval( $var_126 );
			$var_127 = intval( $var_127 );
			$var_128 = intval( $var_128 );
			$var_129 = intval( $var_129 );

			$var_131 = 's:7:"blog_ID";s:0:"";';
			if( $var_120 && ! empty( $var_126 ) )
			{ 
				$var_131 = 's:7:"blog_ID";s:1:"'.intval( $var_126 ).'";';
			}


			
			add_basic_widget_9408( $var_113, 'Header', 'coll_title', 'core', 1 );
			add_basic_widget_9408( $var_113, 'Header', 'coll_tagline', 'core', 2 );


			
			if( $var_121 != 'main' )
			{ 
				
				add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 5, array( 'link_type' => 'home' ) );
				if( $var_113 == $var_125 )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 10, array( 'link_type' => 'recentposts', 'link_text' => T_('News') ) );
				}
				if( $var_121 == 'forum' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest topics') ) );
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest replies') ) );
				}
				if( $var_121 == 'manual' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 13, array( 'link_type' => 'recentposts', 'link_text' => T_('Latest pages') ) );
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 15, array( 'link_type' => 'latestcomments', 'link_text' => T_('Latest comments') ) );
				}
				if( $var_121 == 'photo' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 18, array( 'link_type' => 'mediaidx', 'link_text' => T_('Index') ) );
				}
				if( $var_121 == 'forum' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 20, array( 'link_type' => 'users' ) );
				}
				
				add_basic_widget_9408( $var_113, 'Menu', 'coll_page_list', 'core', 25 );
				if( $var_121 == 'forum' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 30, array( 'link_type' => 'myprofile' ) );
				}
				if( $var_121 == 'std' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 33, array( 'link_type' => 'catdir' ) );
					
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 35, array( 'link_type' => 'arcdir' ) );
					
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 37, array( 'link_type' => 'latestcomments' ) );
				}
				add_basic_widget_9408( $var_113, 'Menu', 'msg_menu_link', 'core', 50, array( 'link_type' => 'messages' ) );
				add_basic_widget_9408( $var_113, 'Menu', 'msg_menu_link', 'core', 60, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );
				add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 70, array( 'link_type' => 'login' ) );
				if( $var_121 == 'forum' )
				{ 
					add_basic_widget_9408( $var_113, 'Menu', 'menu_link', 'core', 80, array( 'link_type' => 'register' ) );
				}
			}


			
			add_basic_widget_9408( $var_113, 'Item Single', 'item_content', 'core', 10 );
			if( $var_113 != $var_124 && $var_121 != 'forum' && ( empty( $var_129 ) || $var_113 != $var_129 ) )
			{ 
				add_basic_widget_9408( $var_113, 'Item Single', 'item_tags', 'core', 20 );
			}
			if( $var_113 == $var_125 )
			{ 
				add_basic_widget_9408( $var_113, 'Item Single', 'item_about_author', 'core', 25 );
			}
			if( ( $var_113 == $var_124 || ( ! empty( $var_129 ) && $var_113 == $var_129 ) ) && ! empty( $var_122 ) )
			{ 
				add_basic_widget_9408( $var_113, 'Item Single', 'evo_Gmaps', 'plugin', 30 );
			}
			if( $var_113 == $var_124 || $var_121 == 'manual' )
			{ 
				add_basic_widget_9408( $var_113, 'Item Single', 'item_small_print', 'core', 40, array( 'format' => ( $var_113 == $var_124 ? 'standard' : 'revision' ) ) );
			}


			
			add_basic_widget_9408( $var_113, 'Page Top', 'user_links', 'core', 10 );


			
			if( $var_121 == 'manual' )
			{
				$var_132 = array( 'title' => T_('Search this manual:') );
				add_basic_widget_9408( $var_113, 'Sidebar', 'coll_search_form', 'core', 10, $var_132 );
				add_basic_widget_9408( $var_113, 'Sidebar', 'content_hierarchy', 'core', 20 );
			}
			else
			{
				if( ! empty( $var_122 ) )
				{
					if( $var_121 != 'forum' && $var_121 != 'manual' )
					{ 
						add_basic_widget_9408( $var_113, 'Sidebar', 'coll_current_filters', 'core', 5 );
					}
					
					add_basic_widget_9408( $var_113, 'Sidebar', 'user_login', 'core', 10 );
				}
				if( ( !$var_120 || $var_113 != $var_127 ) && $var_121 != 'forum' )
				{ 
					add_basic_widget_9408( $var_113, 'Sidebar', 'coll_avatar', 'core', 20 );
					if( $var_113 > $var_124 )
					{
						add_basic_widget_9408( $var_113, 'Sidebar', 'evo_Calr', 'plugin', 30 );
					}
					add_basic_widget_9408( $var_113, 'Sidebar', 'coll_longdesc', 'core', 40, array( 'title' => '$title$' ) );
					add_basic_widget_9408( $var_113, 'Sidebar', 'coll_search_form', 'core', 50 );
					add_basic_widget_9408( $var_113, 'Sidebar', 'coll_category_list', 'core', 60 );

					if( $var_113 == $var_130 )
					{ 
						add_basic_widget_9408( $var_113, 'Sidebar', 'coll_item_list', 'core', 70, array(
								'title' => 'Advertisement (Demo)',
								'item_type' => 4000,
								'blog_ID' => $var_113,
								'order_by' => 'RAND',
								'limit' => 1,
								'disp_title' => false,
								'item_title_link_type' => 'linkto_url',
								'attached_pics' => 'first',
								'item_pic_link_type' => 'linkto_url',
								'thumb_size' => 'fit-160x160',
							) );
					}

					if( $var_113 != $var_125 )
					{
						add_basic_widget_9408( $var_113, 'Sidebar', 'coll_media_index', 'core', 80, 'a:11:{s:5:"title";s:12:"Random photo";s:10:"thumb_size";s:11:"fit-160x120";s:12:"thumb_layout";s:4:"grid";s:12:"grid_nb_cols";s:1:"1";s:5:"limit";s:1:"1";s:8:"order_by";s:4:"RAND";s:9:"order_dir";s:3:"ASC";'.$var_131.'s:11:"widget_name";s:12:"Random photo";s:16:"widget_css_class";s:0:"";s:9:"widget_ID";s:0:"";}' );
					}
					if( ! empty( $var_130 ) && ( $var_113 == $var_124 || $var_113 == $var_125 ) )
					{
						add_basic_widget_9408( $var_113, 'Sidebar', 'linkblog', 'core', 90, array( 'blog_ID' => $var_130, 'item_type' => '3000' ) );
					}
				}
				add_basic_widget_9408( $var_113, 'Sidebar', 'coll_xml_feeds', 'core', 100 );
				add_basic_widget_9408( $var_113, 'Sidebar', 'mobile_skin_switcher', 'core', 110 );
			}


			
			add_basic_widget_9408( $var_113, 'Sidebar 2', 'coll_post_list', 'core', 1 );
			if( $var_113 == $var_125 )
			{
				add_basic_widget_9408( $var_113, 'Sidebar 2', 'coll_link_list', 'core', 5, array( 'title' => 'Sidebar links', 'order_by' => 'RAND' ) );
			}
			add_basic_widget_9408( $var_113, 'Sidebar 2', 'coll_comment_list', 'core', 10 );
			add_basic_widget_9408( $var_113, 'Sidebar 2', 'coll_media_index', 'core', 15, 'a:11:{s:5:"title";s:13:"Recent photos";s:10:"thumb_size";s:10:"crop-80x80";s:12:"thumb_layout";s:4:"flow";s:12:"grid_nb_cols";s:1:"3";s:5:"limit";s:1:"9";s:8:"order_by";s:9:"datestart";s:9:"order_dir";s:4:"DESC";'.$var_131.'s:11:"widget_name";s:11:"Photo index";s:16:"widget_css_class";s:0:"";s:9:"widget_ID";s:0:"";}' );
			add_basic_widget_9408( $var_113, 'Sidebar 2', 'free_html', 'core', 20, 'a:5:{s:5:"title";s:9:"Sidebar 2";s:7:"content";s:162:"This is the "Sidebar 2" container. You can place any widget you like in here. In the evo toolbar at the top of this page, select "Customize", then "Blog Widgets".";s:11:"widget_name";s:9:"Free HTML";s:16:"widget_css_class";s:0:"";s:9:"widget_ID";s:0:"";}' );


			
			if( $var_121 == 'main' )
			{ 
				add_basic_widget_9408( $var_113, 'Front Page Main Area', 'coll_title', 'core', 1 );
				add_basic_widget_9408( $var_113, 'Front Page Main Area', 'coll_tagline', 'core', 2 );
			}
			$var_133 = NULL;
			if( $var_121 == 'main' )
			{ 
				$var_133 = array( 'disp_title' => 0 );
			}
			add_basic_widget_9408( $var_113, 'Front Page Main Area', 'coll_featured_intro', 'core', 10, $var_133 );
			if( $var_121 == 'main' )
			{ 
				add_basic_widget_9408( $var_113, 'Front Page Main Area', 'user_links', 'core', 15 );
			}
			$var_134 = NULL;
			if( $var_121 == 'main' )
			{ 
				$var_134 = array(
						'blog_ID'          => '',
						'limit'            => 50,
						'attached_pics'    => 'first',
						'disp_first_image' => 'special',
					);
			}
			add_basic_widget_9408( $var_113, 'Front Page Main Area', 'coll_post_list', 'core', 20, $var_134 );
			if( $var_121 != 'main' )
			{ 
				add_basic_widget_9408( $var_113, 'Front Page Main Area', 'coll_comment_list', 'core', 30 );
			}


			
			add_basic_widget_9408( $var_113, 'Front Page Secondary Area', 'org_members', 'core', 10 );


			
			add_basic_widget_9408( $var_113, 'Mobile: Footer', 'coll_longdesc', 'core', 10 );
			add_basic_widget_9408( $var_113, 'Mobile: Footer', 'mobile_skin_switcher', 'core', 20 );


			
			add_basic_widget_9408( $var_113, 'Mobile: Navigation Menu', 'coll_page_list', 'core', 10 );
			add_basic_widget_9408( $var_113, 'Mobile: Navigation Menu', 'menu_link', 'core', 20, array( 'link_type' => 'ownercontact' ) );
			add_basic_widget_9408( $var_113, 'Mobile: Navigation Menu', 'menu_link', 'core', 30, array( 'link_type' => 'home' ) );
			if( $var_121 == 'forum' )
			{ 
				add_basic_widget_9408( $var_113, 'Mobile: Navigation Menu', 'menu_link', 'core', 40, array( 'link_type' => 'users' ) );
			}


			
			add_basic_widget_9408( $var_113, 'Mobile: Tools Menu', 'menu_link', 'core', 10, array( 'link_type' => 'login' ) );
			add_basic_widget_9408( $var_113, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 20, array( 'link_type' => 'messages' ) );
			add_basic_widget_9408( $var_113, 'Mobile: Tools Menu', 'msg_menu_link', 'core', 30, array( 'link_type' => 'contacts', 'show_badge' => 0 ) );
			add_basic_widget_9408( $var_113, 'Mobile: Tools Menu', 'menu_link', 'core', 50, array( 'link_type' => 'logout' ) );


			
			if( ! empty( $var_123 ) )
			{ 
				$var_2->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_type, wi_code, wi_params ) '
									 .'VALUES '.implode( ', ', $var_123 ) );
			}
		}


		
		fn_13();

		fn_0( '9408' );
	}


	if( $var_13 < 9409 )
	{
		
		
		$var_2->query( 'UPDATE T_blogs
										SET blog_access_type = "absolute"
									WHERE blog_siteurl LIKE "http:
									   OR blog_siteurl LIKE "https:

		$DB->query( 'var_135 var_136
										var_137 var_138 = "var_139",
												var_83 = CONCAT( var_83, var_140 )
									var_141 var_138 = "stub"' );

		fn_6( 'T_blogs', 'blog_stub' );

		


 		
		$var_2->query( "ALTER TABLE T_groups CHANGE COLUMN grp_perm_stats grp_perm_stats enum('none','user','view','edit') NOT NULL default 'none'" );

		$var_2->query( "ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''" );

		$var_2->query( "ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('published','deprecated','protected','private','draft','redirected') NOT NULL default ''" );

		$var_2->query( "ALTER TABLE {$var_64}posts CHANGE COLUMN post_status post_status enum('published','deprecated','protected','private','draft','redirected') NOT NULL default 'published'" );
		

		fn_0( '9409' );
	}


	if( $var_13 < 9410 )
	{
 		
		$var_2->query( "ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','deprecated','protected','private','draft','redirected') DEFAULT 'published' NOT NULL" );

		$var_2->query( "ALTER TABLE T_sessions CHANGE COLUMN sess_data sess_data MEDIUMBLOB DEFAULT NULL" );

		$var_2->query( "ALTER TABLE T_hitlog CHANGE COLUMN hit_referer_type hit_referer_type ENUM('search','blacklist','spam','referer','direct','self','admin') NOT NULL" );

		

		fn_0( '9410' );
	}


	if( $var_13 < 9411 )
	{
		
		$var_2->query( "
			REPLACE INTO {$var_64}posttypes ( ptyp_ID, ptyp_name )
			VALUES ( 1000, 'Page' ),
						 ( 2000, 'Reserved' ),
						 ( 3000, 'Reserved' ),
						 ( 4000, 'Reserved' ),
						 ( 5000, 'Reserved' ) " );
		
		fn_0( '9411' );
	}


	if( $var_13 < 9412 )
	{
		
		$var_2->query( "ALTER TABLE {$var_64}posts ADD COLUMN post_excerpt  text NULL AFTER post_content" );
		
		fn_0( '9412' );
	}

	if( $var_13 < 9414 )
	{
		
		$var_2->query( "RENAME TABLE {$var_64}item__prerendering TO T_items__prerendering" );
		$var_2->query( "RENAME TABLE {$var_64}poststatuses TO T_items__status" );
		$var_2->query( "RENAME TABLE {$var_64}posttypes TO T_items__type" );
		$var_2->query( "RENAME TABLE {$var_64}posts TO T_items__item" );
		

		
		$var_2->query( "CREATE TABLE T_items__tag (
		      tag_ID   int(11) unsigned not null AUTO_INCREMENT,
		      tag_name varchar(50) not null,
		      primary key (tag_ID),
		      UNIQUE tag_name( tag_name )
		    )" );

		$var_2->query( "CREATE TABLE T_items__itemtag (
		      itag_itm_ID int(11) unsigned NOT NULL,
		      itag_tag_ID int(11) unsigned NOT NULL,
		      PRIMARY KEY (itag_itm_ID, itag_tag_ID),
		      UNIQUE tagitem ( itag_tag_ID, itag_itm_ID )
		    )" );
		

		fn_0( '9414' );
	}


	if( $var_13 < 9416 )
	{
		
		$var_2->query( "ALTER TABLE T_blogs
									ADD COLUMN blog_advanced_perms  TINYINT(1) NOT NULL default 0 AFTER blog_owner_user_ID,
									DROP COLUMN blog_staticfilename" );
		$var_2->query( "UPDATE T_blogs
									  SET blog_advanced_perms = 1" );
		

		
		$var_2->query( "ALTER TABLE T_coll_user_perms
									ADD COLUMN bloguser_perm_admin tinyint NOT NULL default 0 AFTER bloguser_perm_properties,
									ADD COLUMN bloguser_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloguser_perm_poststatuses" );

		$var_2->query( "ALTER TABLE T_coll_group_perms
									ADD COLUMN bloggroup_perm_admin tinyint NOT NULL default 0 AFTER bloggroup_perm_properties,
									ADD COLUMN bloggroup_perm_edit  ENUM('no','own','lt','le','all','redirected') NOT NULL default 'no' AFTER bloggroup_perm_poststatuses" );

		
		$var_2->query( "UPDATE T_coll_user_perms
										SET bloguser_perm_admin = 1
									WHERE bloguser_perm_properties <> 0" );
		$var_2->query( "UPDATE T_coll_group_perms
										SET bloggroup_perm_admin = 1
									WHERE bloggroup_perm_properties <> 0" );

		
		$var_2->query( "UPDATE T_coll_user_perms
										SET bloguser_perm_edit = 'all'" );
		$var_2->query( "UPDATE T_coll_group_perms
										SET bloggroup_perm_edit = 'all'" );

		

		fn_0( '9416' );
	}


	if( $var_13 < 9500 )
	{
		task_begin( 'Normalizing columns...' );
		$var_2->query( 'ALTER TABLE T_blogs
										ALTER COLUMN blog_shortname SET DEFAULT \'\',
										ALTER COLUMN blog_tagline SET DEFAULT \'\',
										CHANGE COLUMN blog_description blog_description     varchar(250) NULL default \'\',
										ALTER COLUMN blog_siteurl SET DEFAULT \'\'' );
		task_end();

		task_begin( 'Normalizing dates...' );
		$var_2->query( 'UPDATE T_users
										SET dateYMDhour = \'2000-01-01 00:00:00\'
									WHERE dateYMDhour = \'0000-00-00 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_users
									MODIFY COLUMN dateYMDhour DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'UPDATE T_comments
										SET comment_date = \'2000-01-01 00:00:00\'
									WHERE comment_date = \'0000-00-00 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_comments
									MODIFY COLUMN comment_date DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		task_end();

		task_begin( 'Normalizing cron jobs...' );
		$var_2->query( 'UPDATE T_cron__task
										SET ctsk_controller = REPLACE(ctsk_controller, "cron/_", "cron/jobs/_" )
									WHERE ctsk_controller LIKE "cron/_%"' );
		task_end();

		task_begin( 'Extending comments table...' );
		$var_2->query( 'ALTER TABLE T_comments
									ADD COLUMN comment_rating     TINYINT(1) NULL DEFAULT NULL AFTER comment_content,
									ADD COLUMN comment_featured   TINYINT(1) NOT NULL DEFAULT 0 AFTER comment_rating,
									ADD COLUMN comment_nofollow   TINYINT(1) NOT NULL DEFAULT 1 AFTER comment_featured;');
		task_end();

		fn_0( '9500' );
	}


	if( $var_13 < 9600 )
	{	
		task_begin( 'Creating global cache table...' );
		$var_2->query( 'CREATE TABLE T_global__cache (
							      cach_name VARCHAR( 30 ) NOT NULL ,
							      cach_cache MEDIUMBLOB NULL ,
							      PRIMARY KEY ( cach_name )
							    )' );
		task_end();

		task_begin( 'Altering posts table...' );
		$var_2->query( 'ALTER TABLE T_items__item
										MODIFY COLUMN post_datestart DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\',
										MODIFY COLUMN post_datemodified DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\',
										ADD COLUMN post_order    float NULL AFTER post_priority,
										ADD COLUMN post_featured tinyint(1) NOT NULL DEFAULT 0 AFTER post_order');
		$var_2->query( 'ALTER TABLE T_items__item
										ADD INDEX post_order( post_order )' );
		task_end();

		fn_0( '9600' );
	}


	if( $var_13 < 9700 )
	{	
	  
		$var_2->query( "
			REPLACE INTO T_items__type ( ptyp_ID, ptyp_name )
			VALUES ( 2000, 'Podcast' )" );
		

		
	  
		$var_2->query( "
	      ALTER TABLE T_groups
					ADD COLUMN grp_perm_bypass_antispam         TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_blogs,
					ADD COLUMN grp_perm_xhtmlvalidation         VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_bypass_antispam,
					ADD COLUMN grp_perm_xhtmlvalidation_xmlrpc  VARCHAR(10) NOT NULL default 'always' AFTER grp_perm_xhtmlvalidation,
					ADD COLUMN grp_perm_xhtml_css_tweaks        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtmlvalidation_xmlrpc,
      		ADD COLUMN grp_perm_xhtml_iframes           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_css_tweaks,
      		ADD COLUMN grp_perm_xhtml_javascript        TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_iframes,
					ADD COLUMN grp_perm_xhtml_objects           TINYINT(1)  NOT NULL DEFAULT 0        AFTER grp_perm_xhtml_javascript " );
		

		fn_0( '9700' );
	}


	if( $var_13 < 9800 )
	{	
		
		fn_6( 'T_blogs', 'blog_commentsexpire' );
		

		
		$var_2->query( "ALTER TABLE T_items__item
			CHANGE COLUMN post_urltitle post_urltitle VARCHAR(210) NULL DEFAULT NULL,
			CHANGE COLUMN post_order    post_order DOUBLE NULL,
			ADD COLUMN post_titletag  VARCHAR(255) NULL DEFAULT NULL AFTER post_urltitle,
			ADD COLUMN post_double1   DOUBLE NULL COMMENT 'Custom double value 1' AFTER post_priority,
			ADD COLUMN post_double2   DOUBLE NULL COMMENT 'Custom double value 2' AFTER post_double1,
			ADD COLUMN post_double3   DOUBLE NULL COMMENT 'Custom double value 3' AFTER post_double2,
			ADD COLUMN post_double4   DOUBLE NULL COMMENT 'Custom double value 4' AFTER post_double3,
			ADD COLUMN post_double5   DOUBLE NULL COMMENT 'Custom double value 5' AFTER post_double4,
			ADD COLUMN post_varchar1  VARCHAR(255) NULL COMMENT 'Custom varchar value 1' AFTER post_double5,
			ADD COLUMN post_varchar2  VARCHAR(255) NULL COMMENT 'Custom varchar value 2' AFTER post_varchar1,
			ADD COLUMN post_varchar3  VARCHAR(255) NULL COMMENT 'Custom varchar value 3' AFTER post_varchar2" );
		

		
		$var_7 = "CREATE TABLE T_track__keyphrase (
            keyp_ID      INT UNSIGNED NOT NULL AUTO_INCREMENT,
            keyp_phrase  VARCHAR( 255 ) NOT NULL,
            PRIMARY KEY        ( keyp_ID ),
            UNIQUE keyp_phrase ( keyp_phrase )
          )";
		$var_2->query( $var_7 );
		

		
		evo_flush();
		$var_7 = "ALTER TABLE T_hitlog
			 CHANGE COLUMN hit_ID hit_ID              INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			 CHANGE COLUMN hit_datetime hit_datetime  DATETIME NOT NULL DEFAULT '2000-01-01 00:00:00',
			 ADD COLUMN hit_keyphrase_keyp_ID         INT UNSIGNED DEFAULT NULL AFTER hit_referer_dom_ID,
			 ADD INDEX hit_remote_addr ( hit_remote_addr ),
			 ADD INDEX hit_sess_ID        ( hit_sess_ID )";
		$var_2->query( $var_7 );
		

		
		$var_2->query( "ALTER TABLE T_sessions
			ALTER COLUMN sess_lastseen SET DEFAULT '2000-01-01 00:00:00',
			ADD COLUMN sess_hitcount  INT(10) UNSIGNED NOT NULL DEFAULT 1 AFTER sess_key,
			ADD KEY sess_user_ID (sess_user_ID)" );
		

		
    $var_2->query( "CREATE TABLE T_track__goal(
					  goal_ID int(10) unsigned NOT NULL auto_increment,
					  goal_name varchar(50) default NULL,
					  goal_key varchar(32) default NULL,
					  goal_redir_url varchar(255) default NULL,
					  goal_default_value double default NULL,
					  PRIMARY KEY (goal_ID),
					  UNIQUE KEY goal_key (goal_key)
          )" );

    $var_2->query( "CREATE TABLE T_track__goalhit (
					  ghit_ID int(10) unsigned NOT NULL auto_increment,
					  ghit_goal_ID    int(10) unsigned NOT NULL,
					  ghit_hit_ID     int(10) unsigned NOT NULL,
					  ghit_params     TEXT default NULL,
					  PRIMARY KEY  (ghit_ID),
					  KEY ghit_goal_ID (ghit_goal_ID),
					  KEY ghit_hit_ID (ghit_hit_ID)
         )" );
		

		fn_0( '9800' );
	}


	if( $var_13 < 9900 )
	{	
		task_begin( 'Updating keyphrases in hitlog table... ' );
		load_class( 'sessions/model/_hit.class.php', 'Hit' );
		
		
		$var_142 = new class_2();
		$var_143 = 'SELECT SQL_NO_CACHE hit_ID, hit_referer
  		          FROM T_hitlog
   		         WHERE hit_referer_type = "search"
		           AND hit_keyphrase_keyp_ID IS NULL'; 
		$var_99 = $var_2->get_results( $var_143, var_144, 'get all search hits' );
		foreach( $var_99 as $var_27 )
		{
			$var_116 = $var_142->extract_params_from_referer( $var_27->var_146 );
			if( empty( $var_116['keyphrase'] ) )
			{
				continue;
			}

			$var_2->begin();

			$var_143 = 'SELECT keyp_ID
			          FROM T_track__keyphrase
			         WHERE keyp_phrase = '.$var_2->quote($var_116['keyphrase']);
			$var_148 = $var_2->get_var( $var_143, 0, 0, 'Get keyphrase ID' );

			if( empty( $var_148 ) )
			{
				$var_143 = 'INSERT INTO T_track__keyphrase( keyp_phrase )
				        VALUES ('.$var_2->quote($var_116['keyphrase']).')';
				$var_2->query( $var_143, 'Add new keyphrase' );
				$var_148 = $var_2->var_149;
			}

			$var_2->query( 'UPDATE T_hitlog
			                SET hit_keyphrase_keyp_ID = '.$var_148.'
			              WHERE hit_ID = '.$var_27->var_150, 'Update hit' );

			$var_2->commit();
			
		}
		task_end();

		task_begin( 'Upgrading widgets table... ' );
		$var_2->query( "ALTER TABLE T_widget
			CHANGE COLUMN wi_order wi_order INT(10) NOT NULL" );
		task_end();

		task_begin( 'Upgrading Files table... ' );
		$var_2->query( "ALTER TABLE T_files
								CHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins') not null default 'absolute'" );
		task_end();

		fn_0( '9900' );
	}

	if( $var_13 < 9910 )
	{	

		task_begin( 'Upgrading Blogs table... ' );
		$var_2->query( "ALTER TABLE T_blogs CHANGE COLUMN blog_name blog_name varchar(255) NOT NULL default ''" );
		task_end();

		task_begin( 'Adding new Post Types...' );
		$var_2->query( "
			REPLACE INTO T_items__type( ptyp_ID, ptyp_name )
			VALUES ( 1500, 'Intro-Main' ),
						 ( 1520, 'Intro-Cat' ),
						 ( 1530, 'Intro-Tag' ),
						 ( 1570, 'Intro-Sub' ),
						 ( 1600, 'Intro-All' ) " );
		task_end();

		task_begin( 'Updating User table' );
		$var_2->query( "ALTER TABLE T_users
									ADD COLUMN user_avatar_file_ID int(10) unsigned default NULL AFTER user_validated" );
		task_end();

		task_begin( 'Creating table for User field definitions' );
		$var_2->query( "CREATE TABLE T_users__fielddefs (
				ufdf_ID int(10) unsigned NOT NULL,
				ufdf_type char(8) NOT NULL,
				ufdf_name varchar(255) collate latin1_general_ci NOT NULL,
				PRIMARY KEY  (ufdf_ID)
			)" );
		task_end();

		task_begin( 'Creating default field definitions...' );
		$var_2->query( "
	    INSERT INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name)
			 VALUES ( 10000, 'email',    'MSN/Live IM'),
							( 10100, 'word',     'Yahoo IM'),
							( 10200, 'word',     'AOL AIM'),
							( 10300, 'number',   'ICQ ID'),
							( 40000, 'phone',    'Skype'),
							( 50000, 'phone',    'Main phone'),
							( 50100, 'phone',    'Cell phone'),
							( 50200, 'phone',    'Office phone'),
							( 50300, 'phone',    'Home phone'),
							( 60000, 'phone',    'Office FAX'),
							( 60100, 'phone',    'Home FAX'),
							(100000, 'url',      'Website'),
							(100100, 'url',      'Blog'),
							(110000, 'url',      'Linkedin'),
							(120000, 'url',      'Twitter'),
							(130100, 'url',      'Facebook'),
							(130200, 'url',      'Myspace'),
							(140000, 'url',      'Flickr'),
							(150000, 'url',      'YouTube'),
							(160000, 'url',      'Digg'),
							(160100, 'url',      'StumbleUpon'),
							(200000, 'text',     'Role'),
							(200100, 'text',     'Company/Org.'),
							(200200, 'text',     'Division'),
							(211000, 'text',     'VAT ID'),
							(300000, 'text',     'Main address'),
							(300300, 'text',     'Home address');" );
		task_end();

		task_begin( 'Creating table for User fields...' );
		$var_2->query( "CREATE TABLE {$var_64}users_fields (
				uf_ID      int(10) unsigned NOT NULL auto_increment,
			  uf_user_ID int(10) unsigned NOT NULL,
			  uf_ufdf_ID int(10) unsigned NOT NULL,
			  uf_varchar varchar(255) NOT NULL,
			  PRIMARY KEY (uf_ID)
			)" );
		task_end();

		fn_0( '9910' );
	}

	if( $var_13 < 9920 )
	{	
		task_begin( 'Upgrading Posts table... ' );
		
		$var_2->query( "UPDATE T_items__item
										SET post_ptyp_ID = 1
									WHERE post_ptyp_ID IS NULL" );
		$var_2->query( "ALTER TABLE T_items__item
							CHANGE COLUMN post_ptyp_ID post_ptyp_ID int(10) unsigned NOT NULL DEFAULT 1" );
		task_end();

		task_begin( 'Upgrading Categories table... ' );
		$var_2->query( "ALTER TABLE T_categories
			CHANGE COLUMN cat_name cat_name varchar(255) NOT NULL,
			CHANGE COLUMN cat_description cat_description varchar(255) NULL DEFAULT NULL" );
		fn_7( 'T_categories', 'cat_order', 'int(11) NULL DEFAULT NULL AFTER cat_description' );
		fn_8( 'T_categories', 'cat_order', 'cat_order' );

		$var_2->query( "UPDATE T_categories
					SET cat_order = cat_ID" );
		task_end();

		task_begin( 'Upgrading widgets table... ' );
		fn_7( 'T_widget', 'wi_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER wi_order' );
		task_end();
	}
	if( $var_13 < 9930 )
	{	
		task_begin( 'Updating Post Types...' );
		$var_2->query( "
			REPLACE INTO T_items__type ( ptyp_ID, ptyp_name )
			VALUES ( 3000, 'Sidebar link' )" );
		
		task_end();

		task_begin( 'Updating items table...' );
		$var_2->query( "ALTER TABLE T_items__item ENGINE=innodb" );	
		task_end();

		task_begin( 'Creating versions table...' );
		$var_2->query( "CREATE TABLE T_items__version (
	            iver_itm_ID        INT UNSIGNED NOT NULL ,
	            iver_edit_user_ID  INT UNSIGNED NOT NULL ,
	            iver_edit_datetime DATETIME NOT NULL ,
	            iver_status        ENUM('published','deprecated','protected','private','draft','redirected') NULL ,
	            iver_title         TEXT NULL ,
	            iver_content       MEDIUMTEXT NULL ,
	            INDEX iver_itm_ID ( iver_itm_ID )
	            ) ENGINE = innodb" );
		task_end();

		task_begin( 'Updating group permissions...' );
		$var_2->query( "UPDATE T_groups
										SET grp_perm_xhtml_css_tweaks = 1
									WHERE grp_ID <= 3" );
		task_end();

		fn_0( '9930' );
	}

	if( $var_13 < 9940 )
	{	
		task_begin( 'Updating hitlog table...' );
		$var_2->query( "ALTER TABLE T_hitlog ADD COLUMN hit_serprank INT UNSIGNED DEFAULT NULL AFTER hit_keyphrase_keyp_ID" );
		task_end();

		task_begin( 'Updating versions table...' );
		$var_2->query( "ALTER TABLE T_items__version
								CHANGE COLUMN iver_edit_user_ID iver_edit_user_ID  INT UNSIGNED NULL" );
		task_end();
	}

	if( $var_13 < 9950 )
	{	
		task_begin( 'Altering Blogs table... ' );
		$var_2->query( "ALTER TABLE T_blogs CHANGE COLUMN blog_shortname blog_shortname varchar(255) default ''" );
		task_end();

		task_begin( 'Altering default dates... ' );
		$var_2->query( "ALTER TABLE T_links
      ALTER COLUMN link_datecreated SET DEFAULT '2000-01-01 00:00:00',
      ALTER COLUMN link_datemodified SET DEFAULT '2000-01-01 00:00:00'" );
		$var_2->query( "ALTER TABLE T_cron__task
      ALTER COLUMN ctsk_start_datetime SET DEFAULT '2000-01-01 00:00:00'" );
		$var_2->query( "ALTER TABLE T_cron__log
      ALTER COLUMN clog_realstart_datetime SET DEFAULT '2000-01-01 00:00:00'" );
		task_end();

 		task_begin( 'Altering Items table... ' );
		$var_2->query( "ALTER TABLE T_items__item
			ADD COLUMN post_metadesc VARCHAR(255) NULL DEFAULT NULL AFTER post_titletag,
			ADD COLUMN post_metakeywords VARCHAR(255) NULL DEFAULT NULL AFTER post_metadesc,
			ADD COLUMN post_editor_code VARCHAR(32) NULL COMMENT 'Plugin code of the editor used to edit this post' AFTER post_varchar3" );
		task_end();

		task_begin( 'Forcing AutoP posts to html editor...' );
		$var_2->query( 'UPDATE T_items__item
											SET post_editor_code = "html"
										WHERE post_renderers = "default"
											 OR post_renderers LIKE "%b2WPAutP%"' );
		task_end();

		fn_0( '9950' );
	}

	if( $var_13 < 9960 )
	{	

		
		$var_2->save_error_state();
		$var_2->var_153 = false;
		$var_2->var_154 = false;
		$var_2->query( "ALTER TABLE {$var_64}users_fields RENAME TO T_users__fields" );
		$var_2->restore_error_state();
		

		
		task_begin( 'Making sure all tables use desired storage ENGINE as specified in the b2evo schema...' );
		foreach( $var_78 as $var_156=>$var_157 )
		{
			if( $var_2->query( 'SHOW TABLES LIKE \''.$var_156.'\'' )
				&& preg_match( '/\sENGINE\s*=\s*([a-z]+)/is', $var_157[1], $var_158 ) )
			{	
				
				$var_2->query( "ALTER TABLE $var_156 ENGINE = ".$var_158[1] );
			}
		}
		task_end();

		fn_0( '9960' );
	}

	if( $var_13 < 9970 )
	{	

		

		task_begin( 'Creating table for default currencies... ' );
		$var_2->query( 'CREATE TABLE '.$var_64.'currency (
				curr_ID int(10) unsigned NOT NULL auto_increment,
				curr_code char(3) NOT NULL,
				curr_shortcut varchar(30) NOT NULL,
				curr_name varchar(40) NOT NULL,
				PRIMARY KEY curr_ID (curr_ID),
				UNIQUE curr_code (curr_code)
			) ENGINE = innodb' );
		task_end();

		create_default_currencies( $var_64.'currency' );

		task_begin( 'Creating table for default countries... ' );
		$var_2->query( 'CREATE TABLE '.$var_64.'country (
				ctry_ID int(10) unsigned NOT NULL auto_increment,
				ctry_code char(2) NOT NULL,
				ctry_name varchar(40) NOT NULL,
				ctry_curr_ID int(10) unsigned,
				PRIMARY KEY ctry_ID (ctry_ID),
				UNIQUE ctry_code (ctry_code)
			) ENGINE = innodb' );
		task_end();

		create_default_countries( $var_64.'country', false );

		task_begin( 'Upgrading user permissions table... ' );
		$var_2->query( "ALTER TABLE T_coll_user_perms
			ADD COLUMN bloguser_perm_page		tinyint NOT NULL default 0 AFTER bloguser_perm_media_change,
			ADD COLUMN bloguser_perm_intro		tinyint NOT NULL default 0 AFTER bloguser_perm_page,
			ADD COLUMN bloguser_perm_podcast	tinyint NOT NULL default 0 AFTER bloguser_perm_intro,
			ADD COLUMN bloguser_perm_sidebar	tinyint NOT NULL default 0 AFTER bloguser_perm_podcast" );
		task_end();

		task_begin( 'Upgrading group permissions table... ' );
		$var_2->query( "ALTER TABLE T_coll_group_perms
			ADD COLUMN bloggroup_perm_page		tinyint NOT NULL default 0 AFTER bloggroup_perm_media_change,
			ADD COLUMN bloggroup_perm_intro		tinyint NOT NULL default 0 AFTER bloggroup_perm_page,
			ADD COLUMN bloggroup_perm_podcast	tinyint NOT NULL default 0 AFTER bloggroup_perm_intro,
			ADD COLUMN bloggroup_perm_sidebar	tinyint NOT NULL default 0 AFTER bloggroup_perm_podcast" );
		task_end();

		task_begin( 'Upgrading users table... ' );
		$var_2->query( "ALTER TABLE T_users
			ADD COLUMN user_ctry_ID int(10) unsigned NULL AFTER user_avatar_file_ID" );
		task_end();

		

		task_begin( 'Creating table for message threads... ' );
		$var_2->query( "CREATE TABLE T_messaging__thread (
			thrd_ID int(10) unsigned NOT NULL auto_increment,
			thrd_title varchar(255) NOT NULL,
			thrd_datemodified datetime NOT NULL,
			PRIMARY KEY thrd_ID (thrd_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Creating table for messagee... ' );
		$var_2->query( "CREATE TABLE T_messaging__message (
			msg_ID int(10) unsigned NOT NULL auto_increment,
			msg_author_user_ID int(10) unsigned NOT NULL,
			msg_datetime datetime NOT NULL,
			msg_thread_ID int(10) unsigned NOT NULL,
			msg_text text NULL,
			PRIMARY KEY msg_ID (msg_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Creating table for message thread statuses... ' );
		$var_2->query( "CREATE TABLE T_messaging__threadstatus (
			tsta_thread_ID int(10) unsigned NOT NULL,
			tsta_user_ID int(10) unsigned NOT NULL,
			tsta_first_unread_msg_ID int(10) unsigned NULL,
			INDEX(tsta_user_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Creating table for messaging contacts... ' );
		$var_2->query( "CREATE TABLE T_messaging__contact (
			mct_from_user_ID int(10) unsigned NOT NULL,
			mct_to_user_ID int(10) unsigned NOT NULL,
			mct_blocked tinyint(1) default 0,
			mct_last_contact_datetime datetime NOT NULL,
			PRIMARY KEY mct_PK (mct_from_user_ID, mct_to_user_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Upgrading skins table... ' );
		$var_2->query( "ALTER TABLE T_skins__skin
						MODIFY skin_type enum('normal','feed','sitemap') NOT NULL default 'normal'" );
		task_end();

		task_begin( 'Setting skin type of sitemap skin to "sitemap"... ' );
		$var_2->query( "UPDATE T_skins__skin
						SET skin_type = 'sitemap'
						WHERE skin_folder = '_sitemap'" );
		task_end();

		

		
		task_begin( 'Creating table for Group Settings... ' );
		$var_2->query( "CREATE TABLE IF NOT EXISTS T_groups__groupsettings (
			gset_grp_ID INT(11) UNSIGNED NOT NULL,
			gset_name VARCHAR(30) NOT NULL,
			gset_value VARCHAR(255) NULL,
			PRIMARY KEY (gset_grp_ID, gset_name)
		) ENGINE = innodb" );
		task_end();

		
		task_begin( 'Rename T_usersettings table to T_users__usersettings... ' );
		$var_2->query( 'ALTER TABLE '.$var_64.'usersettings RENAME TO T_users__usersettings' );
		task_end();

		fn_0( '9970' );
	}


	if( $var_13 < 9980 )
	{	

		task_begin( 'Upgrading posts... ' );
		$var_2->query( '
			UPDATE T_items__item
			   SET post_datestart = FROM_UNIXTIME( FLOOR(UNIX_TIMESTAMP(post_datestart)/60)*60 )
			 WHERE post_datestart > NOW()' );
		fn_7( 'T_items__item', 'post_excerpt_autogenerated', 'TINYINT NULL DEFAULT NULL AFTER post_excerpt' );
		fn_7( 'T_items__item', 'post_dateset', 'tinyint(1) NOT NULL DEFAULT 1 AFTER post_assigned_user_ID' );
		task_end();

		task_begin( 'Upgrading countries... ' );
		fn_7( $var_64.'country', 'ctry_enabled', 'tinyint(1) NOT NULL DEFAULT 1 AFTER ctry_curr_ID' );
		task_end();


		task_begin( 'Upgrading links... ' );

		
		
		
		
		fn_7( 'T_links', 'link_position', "varchar(10) NULL AFTER link_title" );
		$var_2->query( "UPDATE T_links SET link_position = 'teaser' WHERE link_position IS NULL" );
		fn_7( 'T_links', 'link_position', "varchar(10) NOT NULL AFTER link_title" ); 

		
		fn_7( 'T_links', 'link_order', 'int(11) unsigned NULL AFTER link_position' );
		$var_2->query( "UPDATE T_links SET link_order = link_ID WHERE link_order IS NULL" );
		fn_7( 'T_links', 'link_order', 'int(11) unsigned NOT NULL AFTER link_position' ); 
		fn_8( 'T_links', 'link_itm_ID_order', 'link_itm_ID, link_order', 'UNIQUE' );

		task_end();

		task_begin( 'Upgrading sessions... ' );
		$var_2->query( "ALTER TABLE T_sessions CHANGE COLUMN sess_ipaddress sess_ipaddress VARCHAR(39) NOT NULL DEFAULT ''" );
		task_end();

		fn_0( '9980' );
	}

	if( $var_13 < 9990 )
	{	

		task_begin( 'Upgrading hitlog... ' );

		fn_7( 'T_hitlog', 'hit_agent_type', "ENUM('rss','robot','browser','unknown') DEFAULT 'unknown' NOT NULL AFTER hit_remote_addr" );

		if( db_col_exists('T_hitlog', 'hit_agnt_ID') )
		{
			$var_2->query( 'UPDATE T_hitlog, '.$var_64.'useragents
			                SET hit_agent_type = agnt_type
			              WHERE hit_agnt_ID = agnt_ID
			                AND agnt_type <> "unknown"' ); 
			fn_6( 'T_hitlog', 'hit_agnt_ID' );
		}
		$var_2->query( 'DROP TABLE IF EXISTS '.$var_64.'useragents' );

		task_end();

		fn_0( '9990' );
	}

	if( $var_13 < 10000 )
	{	
		
		task_begin( 'Extending Comment table... ' );
		fn_7( 'T_comments', 'comment_secret', 'varchar(32) NULL default NULL' );
		task_end();

		
		task_begin( 'Create Slugs table... ' );
		$var_2->query( 'CREATE TABLE IF NOT EXISTS T_slug (
						slug_ID int(10) unsigned NOT NULL auto_increment,
						slug_title varchar(255) NOT NULL COLLATE ascii_bin,
						slug_type char(6) NOT NULL DEFAULT "item",
						slug_itm_ID int(11) unsigned,
						PRIMARY KEY slug_ID (slug_ID),
						UNIQUE	slug_title (slug_title)
					) ENGINE = innodb' );
		task_end();

		task_begin( 'Making sure all posts have a slug...' );
		
		$var_143 = 'SELECT post_ID, post_title
				      FROM T_items__item
				     WHERE post_urltitle IS NULL OR post_urltitle = ""';
		$var_99 = $var_2->get_results( $var_143, var_144, 'Get posts with empty urltitle' );
		
		foreach( $var_99 as $var_27 )
		{
			
			$var_2->query( 'UPDATE T_items__item
				              SET post_urltitle = "'.urltitle_validate( '', $var_27->var_159, 0 ).'"
		                WHERE post_ID = '.$var_27->var_160, 'Set posts urltitle' );
		}
		task_end();

		task_begin( 'Populating Slugs table... ' );
		$var_2->query( 'REPLACE INTO T_slug( slug_title, slug_type, slug_itm_ID)
		              SELECT post_urltitle, "item", post_ID
							      FROM T_items__item' );
		task_end();

		task_begin( 'Add canonical and tiny slug IDs to post table...' );
		
		fn_7( 'T_items__item', 'post_urltitle', 'VARCHAR(210) NOT NULL' );
		fn_7( 'T_items__item', 'post_canonical_slug_ID', 'int(10) unsigned NULL default NULL after post_urltitle' );
		fn_7( 'T_items__item', 'post_tiny_slug_ID', 'int(10) unsigned NULL default NULL after post_canonical_slug_ID' );
		task_end();

		task_begin( 'Upgrading posts...' );
		$var_2->query( 'UPDATE T_items__item, T_slug
			              SET post_canonical_slug_ID = slug_ID
			            WHERE CONVERT( post_urltitle USING ASCII ) COLLATE ascii_bin = slug_title' );
		task_end();

		task_begin( 'Adding "help" slug...' );
		if( fn_9( 'T_slug', 'slug_title', '"help"' ) )
		{
			
		}
		else
		{
			$var_2->query( 'INSERT INTO T_slug( slug_title, slug_type )
			             VALUES( "help", "help" )', 'Add "help" slug' );
			task_end();
		}

		
		task_begin( 'Updgrading groups: Giving Administrators Group edit perms on slugs...' );
		fn_7( 'T_groups', 'grp_perm_slugs', "enum('none','view','edit') NOT NULL default 'none'" );
		$var_2->query( 'UPDATE T_groups
		             SET grp_perm_slugs = "edit"
		             WHERE grp_ID = 1' );
		task_end();

		task_begin( 'Upgrading settings table... ');
		$var_2->query( 'UPDATE T_settings
		                SET set_value = 1
		              WHERE set_name = "fm_enable_roots_user"
		                    AND set_value = 0' );
		task_end();

		
		task_begin( 'Upgrading Blog-User permissions...' );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_comments' );

		if( db_col_exists( 'T_coll_user_perms', 'bloguser_perm_comments' ) )
		{ 
			$var_2->query( 'UPDATE T_coll_user_perms
						SET bloguser_perm_draft_cmts = bloguser_perm_comments,
							bloguser_perm_publ_cmts = bloguser_perm_comments,
							bloguser_perm_depr_cmts = bloguser_perm_comments');
			fn_6( 'T_coll_user_perms', 'bloguser_perm_comments' );
		}
		task_end();

		task_begin( 'Upgrading Blog-Group permissions...' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_comments' );

		if( db_col_exists( 'T_coll_group_perms', 'bloggroup_perm_comments' ) )
		{ 
			$var_2->query( 'UPDATE T_coll_group_perms
						SET bloggroup_perm_draft_cmts = bloggroup_perm_comments,
							bloggroup_perm_publ_cmts = bloggroup_perm_comments,
							bloggroup_perm_depr_cmts = bloggroup_perm_comments');
			fn_6( 'T_coll_group_perms', 'bloggroup_perm_comments' );
		}
		task_end();

		task_begin( 'Upgrading messaging permissions...' );
		$var_2->query( 'ALTER TABLE T_users ALTER COLUMN user_allow_msgform SET DEFAULT "2"' );
		$var_2->query( 'UPDATE T_users
					SET user_allow_msgform = 3
					WHERE user_allow_msgform = 1');
		task_end();

		task_begin( 'Upgrading currency table...' );
		$var_2->query( 'ALTER TABLE '.$var_64.'currency ADD COLUMN curr_enabled tinyint(1) NOT NULL DEFAULT 1 AFTER curr_name' );
		task_end();

		task_begin( 'Upgrading default blog access type for new blogs...' );
		$var_2->query( 'ALTER TABLE T_blogs ALTER COLUMN blog_access_type SET DEFAULT "extrapath"' );
		task_end();

		task_begin( 'Upgrading tags table...' );
		$var_2->query( 'ALTER TABLE T_items__tag CHANGE COLUMN tag_name tag_name varbinary(50) not null' );
		task_end();

		
		
		task_begin( 'Makin sure usersettings table is InnoDB...' );
		$var_2->query( 'ALTER TABLE T_users__usersettings ENGINE=innodb' );
		task_end();

		fn_0( '10000' );
	}

	if( $var_13 < 10100 )
	{	
		task_begin( 'Convert group permissions to pluggable permissions...' );
		
		$var_2->query( 'DELETE FROM T_groups__groupsettings
						WHERE gset_name = "perm_files" OR gset_name = "perm_options" OR gset_name = "perm_templates"' );
		
		$var_143 = 'SELECT grp_ID, grp_perm_spamblacklist, grp_perm_slugs, grp_perm_files, grp_perm_options, grp_perm_templates
				      FROM T_groups';
		$var_99 = $var_2->get_results( $var_143, var_144, 'Get groups converted permissions' );
		
		foreach( $var_99 as $var_27 )
		{	
			$var_2->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )
							VALUES( '.$var_27->var_161.', "perm_spamblacklist", "'.$var_27->var_162.'" ),
								( '.$var_27->var_161.', "perm_slugs", "'.$var_27->var_163.'" ),
								( '.$var_27->var_161.', "perm_files", "'.$var_27->var_164.'" ),
								( '.$var_27->var_161.', "perm_options", "'.$var_27->var_165.'" ),
								( '.$var_27->var_161.', "perm_templates", "'.$var_27->var_166.'" )' );
		}

		
		fn_6( 'T_groups', 'grp_perm_spamblacklist' );
		fn_6( 'T_groups', 'grp_perm_slugs' );
		fn_6( 'T_groups', 'grp_perm_files' );
		fn_6( 'T_groups', 'grp_perm_options' );
		fn_6( 'T_groups', 'grp_perm_templates' );
		task_end();

		task_begin( 'Upgrading users table, adding user gender...' );
		fn_7( 'T_users', 'user_gender', 'char(1) NULL DEFAULT NULL AFTER user_showonline' );
		task_end();

		task_begin( 'Upgrading edit timpestamp blog-user permission...' );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_delpost' );
		$var_2->query( 'UPDATE T_coll_user_perms, T_users
							SET bloguser_perm_edit_ts = 1
							WHERE bloguser_user_ID = user_ID  AND user_level > 4' );
		task_end();

		task_begin( 'Upgrading edit timpestamp blog-group permission...' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_edit_ts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_delpost' );
		$var_2->query( 'UPDATE T_coll_group_perms
							SET bloggroup_perm_edit_ts = 1
							WHERE bloggroup_group_ID = 1' );
		task_end();

		task_begin( 'Upgrading comments table, add trash status...' );
		$var_2->query( "ALTER TABLE T_comments MODIFY COLUMN comment_status ENUM('published','deprecated','draft', 'trash') DEFAULT 'published' NOT NULL");
		task_end();

		task_begin( 'Upgrading groups admin access permission...' );
		$var_143 = 'SELECT grp_ID, grp_perm_admin
					FROM T_groups';
		$var_99 = $var_2->get_results( $var_143, var_144, 'Get groups admin perms' );
		foreach( $var_99 as $var_27 )
		{
			switch( $var_27->var_167 )
			{
				case 'visible':
					$var_168 = 'normal';
					break;
				case 'hidden':
					$var_168 = 'restricted';
					break;
				default:
					$var_168 = 'none';
			}
			
			$var_2->query( 'INSERT IGNORE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )
							VALUES( '.$var_27->var_161.', "perm_admin", "'.$var_168.'" )' );
		}
		fn_6( 'T_groups', 'grp_perm_admin' );
		task_end();

		task_begin( 'Upgrading users table, add users source...' );
		fn_7( 'T_users', 'user_source', 'varchar(30) NULL' );
		task_end();

		task_begin( 'Upgrading blogs table: more granularity for comment allowing...' );
		$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						SELECT blog_ID, "allow_comments", "never"
							FROM T_blogs
							WHERE blog_allowcomments = "never"' );
		fn_6( 'T_blogs', 'blog_allowcomments' );
		task_end();

		task_begin( 'Upgrading blogs table: allow_rating fields...' );
		$var_2->query( 'UPDATE T_coll_settings
						SET cset_value = "any"
						WHERE cset_value = "always" AND cset_name = "allow_rating"' );
		task_end();

		task_begin( 'Upgrading links table, add link_cmt_ID...' );
		$var_2->query( 'ALTER TABLE T_links
						MODIFY COLUMN link_itm_ID int(11) unsigned NULL,
						MODIFY COLUMN link_creator_user_ID int(11) unsigned NULL,
						MODIFY COLUMN link_lastedit_user_ID int(11) unsigned NULL,
						ADD COLUMN link_cmt_ID int(11) unsigned NULL COMMENT "Used for linking files to comments (comment attachments)" AFTER link_itm_ID');
		$var_2->query( 'ALTER TABLE T_links
						ADD INDEX link_cmt_ID ( link_cmt_ID )' );
		task_end();

		task_begin( 'Upgrading filetypes table...' );
		
		$var_143 = 'SELECT ftyp_ID
					FROM T_filetypes
					WHERE ftyp_allowed != 0';
		$var_169 = implode( ',', $var_2->get_col( $var_143, 0, 'Get allowed filetypes' ) );

		
		$var_2->query( 'ALTER TABLE T_filetypes
						MODIFY COLUMN ftyp_allowed enum("any","registered","admin") NOT NULL default "admin"' );

		
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_allowed = "registered"
						WHERE ftyp_ID IN ('.$var_169.')' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_allowed = "admin"
						WHERE ftyp_ID NOT IN ('.$var_169.')' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_allowed = "any"
						WHERE ftyp_extensions = "gif" OR ftyp_extensions = "png" OR ftyp_extensions LIKE "%jpg%"' );

		
		if( !fn_9( 'T_filetypes', 'ftyp_extensions', '"m4v"' ) )
		{
			$var_2->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)
				             VALUES ("m4v", "MPEG video file", "video/x-m4v", "", "browser", "registered")', 'Add "m4v" file type' );
		}
		task_end();

		
		task_begin( 'Upgrading collection settings table, change cset_value type...' );
		$var_2->query( 'ALTER TABLE T_coll_settings
								 MODIFY COLUMN cset_name VARCHAR(50) NOT NULL,
								 MODIFY COLUMN cset_value VARCHAR(10000) NULL' );
		task_end();

		fn_0( '10100' );
	}

	if( $var_13 < 10200 )
	{	
		task_begin( 'Creating table for a specific blog post subscriptions...' );
		$var_2->query( "CREATE TABLE T_items__subscriptions (
						isub_item_ID  int(11) unsigned NOT NULL,
						isub_user_ID  int(11) unsigned NOT NULL,
						isub_comments tinyint(1) NOT NULL default 0 COMMENT 'The user wants to receive notifications for new comments on this post',
						PRIMARY KEY (isub_item_ID, isub_user_ID )
					) ENGINE = innodb" );
		task_end();

		task_begin( 'Upgrading comments table, add subscription fields...' );
		fn_7( 'T_comments', 'comment_notif_status', 'ENUM("noreq","todo","started","finished") NOT NULL DEFAULT "noreq" COMMENT "Have notifications been sent for this comment? How far are we in the process?" AFTER comment_secret' );
		fn_7( 'T_comments', 'comment_notif_ctsk_ID', 'INT(10) unsigned NULL DEFAULT NULL COMMENT "When notifications for this comment are sent through a scheduled job, what is the job ID?" AFTER comment_notif_status' );
		task_end();

		task_begin( 'Upgrading users table...' );
		fn_7( 'T_users', 'user_notify_moderation', 'tinyint(1) NOT NULL default 0 COMMENT "Notify me by email whenever a comment is awaiting moderation on one of my blogs" AFTER user_notify' );
		fn_7( 'T_users', 'user_unsubscribe_key', 'varchar(32) NOT NULL default "" COMMENT "A specific key, it is used when a user wants to unsubscribe from a post comments without signing in" AFTER user_notify_moderation' );
		
		$var_143 = 'SELECT user_ID
							FROM T_users
						 WHERE user_unsubscribe_key = ""';
		$var_99 = $var_2->get_results( $var_143, var_144, 'Get users with no unsubscribe key' );
		foreach( $var_99 as $var_27 )
		{
			$var_2->query( 'UPDATE T_users
							SET user_unsubscribe_key = "'.generate_random_key().'"
							WHERE user_ID = '.$var_27->var_170 );
		}
		task_end();

		task_begin( 'Upgrading settings table... ');
		
		
		$var_2->query( 'ALTER TABLE T_coll_settings
									CHANGE COLUMN cset_value cset_value   VARCHAR( 10000 ) NULL COMMENT "The AdSense plugin wants to store very long snippets of HTML"' );
  		task_end();

  		
  		
		task_begin( 'Upgrading users table, no notification by default...');
		$var_2->query( 'ALTER TABLE T_users ALTER COLUMN user_notify SET DEFAULT 0' );
		task_end();

		task_begin( 'Upgrading items table...');
		$var_2->query( 'ALTER TABLE T_items__item CHANGE COLUMN post_priority post_priority int(11) unsigned null COMMENT "Task priority in workflow"' );
		task_end();

		fn_0( '10200' );
	}


	if( $var_13 < 10300 )
	{	
		task_begin( 'Upgrading user fields...' );
		$var_2->query( 'ALTER TABLE T_users__fielddefs
									ADD COLUMN ufdf_required enum("hidden","optional","recommended","require") NOT NULL default "optional"');
		$var_2->query( 'UPDATE T_users__fielddefs
										SET ufdf_required = "recommended"
									WHERE ufdf_name in ("Website", "Twitter", "Facebook") ' );
		$var_2->query( "REPLACE INTO T_users__fielddefs (ufdf_ID, ufdf_type, ufdf_name, ufdf_required)
			 						VALUES (400000, 'text', 'About me', 'recommended');" );
		task_end();

		task_begin( 'Moving data to user fields...' );
		$var_2->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )
								 SELECT user_ID, 10300, user_icq
									 FROM T_users
								  WHERE user_icq IS NOT NULL AND TRIM(user_icq) <> ""' );
		$var_2->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )
								 SELECT user_ID, 10200, user_aim
									 FROM T_users
								  WHERE user_aim IS NOT NULL AND TRIM(user_aim) <> ""' );
		$var_2->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )
								 SELECT user_ID, 10000, user_msn
									 FROM T_users
								  WHERE user_msn IS NOT NULL AND TRIM(user_msn) <> ""' );
		$var_2->query( 'INSERT INTO T_users__fields( uf_user_ID, uf_ufdf_ID, uf_varchar )
								 SELECT user_ID, 10100, user_yim
									 FROM T_users
								  WHERE user_yim IS NOT NULL AND TRIM(user_yim) <> ""' );
		task_end();

		task_begin( 'Dropping obsolete user columns...' );
		$var_2->query( 'ALTER TABLE T_users
									DROP COLUMN user_icq,
									DROP COLUMN user_aim,
									DROP COLUMN user_msn,
									DROP COLUMN user_yim' );
		task_end();

		

		task_begin( 'Adding new user columns...' );
		$var_2->query( 'ALTER TABLE T_users
									ADD COLUMN user_postcode varchar(12) NULL AFTER user_ID,
									ADD COLUMN user_age_min int unsigned NULL AFTER user_postcode,
									ADD COLUMN user_age_max int unsigned NULL AFTER user_age_min' );
		task_end();

		task_begin( 'Upgrading item table for hide teaser...' );
		$var_2->query( 'ALTER TABLE T_items__item
						ADD COLUMN post_hideteaser tinyint(1) NOT NULL DEFAULT 0 AFTER post_featured');
		$var_2->query( 'UPDATE T_items__item
										SET post_hideteaser = 1
									WHERE post_content LIKE "%<!--noteaser-->%"' );
		task_end();

		task_begin( 'Creating table for a specific post settings...' );
		$var_2->query( "CREATE TABLE T_items__item_settings (
						iset_item_ID  int(10) unsigned NOT NULL,
						iset_name     varchar( 50 ) NOT NULL,
						iset_value    varchar( 2000 ) NULL,
						PRIMARY KEY ( iset_item_ID, iset_name )
					) ENGINE = innodb" );
		task_end();

		task_begin( 'Adding new column to comments...' );
		$var_2->query( 'ALTER TABLE T_comments
									ADD COLUMN comment_in_reply_to_cmt_ID INT(10) unsigned NULL AFTER comment_status' );
		task_end();

		task_begin( 'Create table for internal searches...' );
		$var_2->query( 'CREATE TABLE T_logs__internal_searches (
						isrch_ID bigint(20) NOT NULL auto_increment,
						isrch_coll_ID bigint(20) NOT NULL,
						isrch_hit_ID bigint(20) NOT NULL,
						isrch_keywords varchar(255) NOT NULL,
						PRIMARY KEY (isrch_ID)
					) ENGINE = MyISAM' );
		task_end();

		task_begin( 'Create table for comments votes...' );
		$var_2->query( 'CREATE TABLE T_comments__votes (
						cmvt_cmt_ID  int(10) unsigned NOT NULL,
						cmvt_user_ID int(10) unsigned NOT NULL,
						cmvt_helpful TINYINT(1) NULL DEFAULT NULL,
						cmvt_spam    TINYINT(1) NULL DEFAULT NULL,
						PRIMARY KEY (cmvt_cmt_ID, cmvt_user_ID),
						KEY cmvt_cmt_ID (cmvt_cmt_ID),
						KEY cmvt_user_ID (cmvt_user_ID)
					) ENGINE = innodb' );
		task_end();

		task_begin( 'Adding new comments columns...' );
		$var_2->query( 'ALTER TABLE T_comments
									ADD comment_helpful_addvotes INT NOT NULL DEFAULT 0 AFTER comment_nofollow ,
									ADD comment_helpful_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_helpful_addvotes ,
									ADD comment_spam_addvotes INT NOT NULL DEFAULT 0 AFTER comment_helpful_countvotes ,
									ADD comment_spam_countvotes INT UNSIGNED NOT NULL DEFAULT 0 AFTER comment_spam_addvotes ,
									CHANGE COLUMN comment_notif_ctsk_ID comment_notif_ctsk_ID      INT(10) unsigned NULL DEFAULT NULL COMMENT "When notifications for this comment are sent through a scheduled job, what is the job ID?"');
		task_end();

		task_begin( 'Adding new user permission for spam voting...' );
		$var_2->query( 'ALTER TABLE T_coll_user_perms
									ADD bloguser_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );
		task_end();

		task_begin( 'Adding new group permission for spam voting...' );
		$var_2->query( 'ALTER TABLE T_coll_group_perms
									ADD bloggroup_perm_vote_spam_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );
		task_end();

		task_begin( 'Upgrading countries table...' );
		$var_2->query( 'ALTER TABLE '.$var_64.'country ADD COLUMN ctry_preferred tinyint(1) NOT NULL DEFAULT 0 AFTER ctry_enabled' );
		task_end();

		$var_2->query( 'ALTER TABLE T_items__subscriptions CHANGE COLUMN isub_comments isub_comments   tinyint(1) NOT NULL DEFAULT 0 COMMENT "The user wants to receive notifications for new comments on this post"' );

		fn_0( '10300' );
	}


	if( $var_13 < 10400 )
	{	
		task_begin( 'Updating "Post by Email" settings...' );
		$var_2->query( 'UPDATE T_settings SET set_name = "eblog_autobr" WHERE set_name = "AutoBR"' );
		task_end();

		if( $var_2->get_var('SELECT set_value FROM T_settings WHERE set_name = "eblog_enabled"') )
		{	
			task_begin( 'Creating "Post by Email" scheduled job...' );
			$var_171 = form_date( date2mysql($GLOBALS['localtimenow'] + 86400), '05:00:00' ); 
			$var_2->query( '
				INSERT INTO T_cron__task ( ctsk_start_datetime, ctsk_repeat_after, ctsk_name, ctsk_controller, ctsk_params )
				VALUES ( '.$var_2->quote( $var_171 ).', 86400, '.$var_2->quote( T_('Create posts by email') ).', '.$var_2->quote( 'cron/jobs/_post_by_email.job.php' ).', '.$var_2->quote( 'N;' ).' )' );
			task_end();
		}

		task_begin( 'Upgrading hitlog table...' );
		$var_2->query( 'ALTER TABLE T_hitlog
								ADD COLUMN hit_disp        VARCHAR(30) DEFAULT NULL AFTER hit_uri,
								ADD COLUMN hit_ctrl        VARCHAR(30) DEFAULT NULL AFTER hit_disp,
								ADD COLUMN hit_response_code     INT DEFAULT NULL AFTER hit_agent_type ' );
		task_end();

		task_begin( 'Upgrading file types...' );
		
		
		
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_image"
						WHERE ftyp_extensions IN ( "gif", "png", "jpg jpeg" )' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_document"
						WHERE ftyp_extensions = "txt"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_www"
						WHERE ftyp_extensions = "htm html"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_pdf"
						WHERE ftyp_extensions = "pdf"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_doc"
						WHERE ftyp_extensions = "doc"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_xls"
						WHERE ftyp_extensions = "xls"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_ppt"
						WHERE ftyp_extensions = "ppt"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_pps"
						WHERE ftyp_extensions = "pps"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_zip"
						WHERE ftyp_extensions = "zip"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_php"
						WHERE ftyp_extensions = "php php3 php4 php5 php6"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = ""
						WHERE ftyp_extensions = "css"' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_sound"
						WHERE ftyp_extensions IN ( "mp3", "m4a" )' );
		$var_2->query( 'UPDATE T_filetypes
						SET ftyp_icon = "file_video"
						WHERE ftyp_extensions IN ( "mp4", "mov", "m4v" )' );
		task_end();

		fn_0( '10400' );
	}


	if( $var_13 < 10500 )
	{	
		task_begin( 'Upgrading hitlog table...' );
		$var_2->query( "ALTER TABLE T_hitlog
								CHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self',  'admin', 'blacklist' ) NOT NULL,
								ADD COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service') DEFAULT 'standard' NOT NULL AFTER hit_ctrl,
								ADD COLUMN hit_action VARCHAR(30) DEFAULT NULL AFTER hit_ctrl" );
		$var_2->query( 'UPDATE T_hitlog SET hit_referer_type = "special" WHERE hit_referer_type = "blacklist"' );
		$var_2->query( 'UPDATE T_hitlog SET hit_type = "admin", hit_referer_type = "direct"  WHERE hit_referer_type = "admin"' );
		$var_2->query( "ALTER TABLE T_hitlog
								CHANGE COLUMN hit_referer_type  hit_referer_type ENUM(  'search',  'special',  'spam',  'referer',  'direct',  'self' ) NOT NULL");
		task_end();

		task_begin( 'Creating table for Groups of user field definitions...' );
		$var_2->query( 'CREATE TABLE T_users__fieldgroups (
				ufgp_ID int(10) unsigned NOT NULL auto_increment,
				ufgp_name varchar(255) NOT NULL,
				ufgp_order int(11) NOT NULL,
				PRIMARY KEY (ufgp_ID)
			) ENGINE = innodb' );
		$var_2->query( 'INSERT INTO T_users__fieldgroups ( ufgp_name, ufgp_order )
				VALUES ( "Instant Messaging", "1" ),
							 ( "Phone", "2" ),
							 ( "Web", "3" ),
							 ( "Organization", "4" ),
							 ( "Address", "5" ),
							 ( "Other", "6" ) ' );
		task_end();

		task_begin( 'Upgrading user field definitions...' );
		
		
		
		
		
		
		$var_2->query( 'ALTER TABLE T_users__fielddefs
						ADD ufdf_options    TEXT NOT NULL AFTER ufdf_name,
						ADD ufdf_duplicated enum("forbidden","allowed","list") NOT NULL default "allowed",
						ADD ufdf_ufgp_ID    int(10) unsigned NOT NULL AFTER ufdf_ID,
						ADD ufdf_order      int(11) NOT NULL,
						ADD ufdf_suggest    tinyint(1) NOT NULL DEFAULT 0,
						CHANGE ufdf_ID ufdf_ID int(10) UNSIGNED NOT NULL AUTO_INCREMENT' );
		
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_duplicated = "allowed"
						WHERE ufdf_ID IN ( 10000, 10100, 10200, 10300, 50100, 50200, 100000, 100100 )' );
		
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "1"
						WHERE ufdf_ID <= 40000 ' );
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "2"
						WHERE ufdf_ID > 40000 AND ufdf_ID <= 60100' );
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "3"
						WHERE ufdf_ID > 60100 AND ufdf_ID <= 160100' );
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "4"
						WHERE ufdf_ID > 160100 AND ufdf_ID <= 211000' );
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "5"
						WHERE ufdf_ID > 211000 AND ufdf_ID <= 300300' );
		$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_ufgp_ID = "6"
						WHERE ufdf_ID > 300300' );
		
		$var_172 = $var_2->get_results( 'SELECT ufdf_ID, ufdf_ufgp_ID
				FROM T_users__fielddefs
				ORDER BY ufdf_ufgp_ID, ufdf_ID' );
		$var_173 = 1;
		foreach( $var_172 as $var_174 => $var_175 )
		{
			if( $var_174 > 0 )
			{
				if( $var_172[$var_174-1]->var_176 != $var_175->var_176 )
				{	
					$var_173 = 1;
				}
			}
			$var_2->query( 'UPDATE T_users__fielddefs
						SET ufdf_order = "'.$var_173.'"
						WHERE ufdf_ID = '.$var_175->var_177 );
			$var_173++;
		}
		
		$var_2->query( 'UPDATE T_users__fielddefs
					SET ufdf_type = "word"
					WHERE ufdf_ufgp_ID = "4"' );
		
		$var_2->query( 'INSERT INTO T_users__fields ( uf_user_ID, uf_ufdf_ID, uf_varchar )
			VALUES ( 1, 200000, "Site administrator" ),
						 ( 1, 200000, "Moderator" ),
						 ( 1, 100000, "'.$var_65.'" )' );
		
		$var_2->query( 'ALTER TABLE T_users__fields
						ADD INDEX uf_ufdf_ID ( uf_ufdf_ID ),
						ADD INDEX uf_varchar ( uf_varchar ) ' );
		task_end();

		task_begin( 'Upgrading permissions...' );
		
		$var_2->query( 'ALTER TABLE T_coll_group_perms
						ADD bloggroup_perm_own_cmts tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );
		
		$var_2->query( 'UPDATE T_coll_group_perms
						SET bloggroup_perm_own_cmts = "1"
						WHERE bloggroup_group_ID IN ( 1, 2 )' );
		
		$var_2->query( 'ALTER TABLE T_coll_user_perms
						ADD bloguser_perm_own_cmts tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );
		task_end();

		fn_0( '10500' );
	}


	if( $var_13 < 10600 )
	{	

		

		task_begin( 'Renaming Countries table...' );
		$var_2->query( 'RENAME TABLE '.$var_64.'country TO T_regional__country' );
		task_end();

		task_begin( 'Renaming Currencies table...' );
		$var_2->query( 'RENAME TABLE '.$var_64.'currency TO T_regional__currency' );
		task_end();

		task_begin( 'Creating Regions table...' );
		$var_2->query( 'CREATE TABLE T_regional__region (
			rgn_ID        int(10) unsigned NOT NULL auto_increment,
			rgn_ctry_ID   int(10) unsigned NOT NULL,
			rgn_code      char(6) NOT NULL,
			rgn_name      varchar(40) NOT NULL,
			rgn_enabled   tinyint(1) NOT NULL DEFAULT 1,
			rgn_preferred tinyint(1) NOT NULL DEFAULT 0,
			PRIMARY KEY rgn_ID (rgn_ID),
			UNIQUE rgn_ctry_ID_code (rgn_ctry_ID, rgn_code)
		) ENGINE = innodb' );
		task_end();

		create_default_regions();

		task_begin( 'Creating Sub-regions table...' );
		$var_2->query( 'CREATE TABLE T_regional__subregion (
			subrg_ID        int(10) unsigned NOT NULL auto_increment,
			subrg_rgn_ID    int(10) unsigned NOT NULL,
			subrg_code      char(6) NOT NULL,
			subrg_name      varchar(40) NOT NULL,
			subrg_enabled   tinyint(1) NOT NULL DEFAULT 1,
			subrg_preferred tinyint(1) NOT NULL DEFAULT 0,
			PRIMARY KEY subrg_ID (subrg_ID),
			UNIQUE subrg_rgn_ID_code (subrg_rgn_ID, subrg_code)
		) ENGINE = innodb' );
		task_end();

		create_default_subregions();

		task_begin( 'Creating Cities table...' );
		$var_2->query( 'CREATE TABLE T_regional__city (
			city_ID         int(10) unsigned NOT NULL auto_increment,
			city_ctry_ID    int(10) unsigned NOT NULL,
			city_rgn_ID     int(10) unsigned NULL,
			city_subrg_ID   int(10) unsigned NULL,
			city_postcode   char(12) NOT NULL,
			city_name       varchar(40) NOT NULL,
			city_enabled    tinyint(1) NOT NULL DEFAULT 1,
			city_preferred  tinyint(1) NOT NULL DEFAULT 0,
			PRIMARY KEY city_ID (city_ID),
			INDEX city_ctry_ID_postcode ( city_ctry_ID, city_postcode ),
			INDEX city_rgn_ID_postcode ( city_rgn_ID, city_postcode ),
			INDEX city_subrg_ID_postcode ( city_subrg_ID, city_postcode )
		) ENGINE = innodb' );
		task_end();

		task_begin( 'Update Item Settings...' );
		
		$var_7 = "INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value )
						SELECT post_ID, 'hide_teaser', post_hideteaser
							FROM T_items__item";
		$var_2->query( $var_7 );

		fn_6( 'T_items__item', 'post_hideteaser' );
		task_end();

		task_begin( 'Upgrading hitlog table...' );
		$var_2->query( "ALTER TABLE T_hitlog
						ADD COLUMN hit_keyphrase VARCHAR(255) DEFAULT NULL AFTER hit_keyphrase_keyp_ID" );
		task_end();

		task_begin( 'Upgrading track__keyphrase...' );
		$var_2->query( "ALTER TABLE T_track__keyphrase
						ADD COLUMN keyp_count_refered_searches INT UNSIGNED DEFAULT 0 AFTER keyp_phrase,
						ADD COLUMN keyp_count_internal_searches INT UNSIGNED DEFAULT 0 AFTER keyp_count_refered_searches" );
		task_end();



		task_begin( 'Droping table internal searches...' );

		$var_2->query( "DROP TABLE T_logs__internal_searches" );
		task_end();


		task_begin( 'Upgrading users table...' );
		fn_7( 'T_users', 'user_rgn_ID', 'int(10) unsigned NULL AFTER user_ctry_ID' );
		fn_7( 'T_users', 'user_subrg_ID', 'int(10) unsigned NULL AFTER user_rgn_ID' );
		fn_7( 'T_users', 'user_city_ID', 'int(10) unsigned NULL AFTER user_subrg_ID' );
		task_end();

		task_begin( 'Upgrading hitlog table...' );
		$var_2->query( 'UPDATE T_hitlog
						SET hit_type = "rss",
							hit_agent_type = "unknown"
						WHERE hit_agent_type = "rss"' );

		$var_2->query( "ALTER TABLE T_hitlog
								CHANGE COLUMN hit_agent_type hit_agent_type ENUM('robot','browser','unknown') DEFAULT 'unknown' NOT NULL" );
		task_end();

		task_begin( 'Creating mail log table...' );
		$var_2->query( 'CREATE TABLE '.$var_64.'mail__log (
		  emlog_ID        INT(10) UNSIGNED NOT NULL auto_increment,
		  emlog_timestamp TIMESTAMP NOT NULL,
		  emlog_to        VARCHAR(255) DEFAULT NULL,
		  emlog_success   TINYINT(1) NOT NULL DEFAULT 0,
		  emlog_subject   VARCHAR(255) DEFAULT NULL,
		  emlog_headers   TEXT DEFAULT NULL,
		  emlog_message   TEXT DEFAULT NULL,
		  PRIMARY KEY     (emlog_ID)
		) ENGINE = myisam' );
		task_end();

		fn_0( '10600' );
	}


	if( $var_13 < 10700 )
	{	

		task_begin( 'Upgrading user notifications settings...' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "notify_published_comments", user_notify
							FROM T_users', 'Move notify settings from users to users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "notify_comment_moderation", user_notify_moderation
							FROM T_users', 'Move notify moderation settings from users to users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "enable_PM", 1
							FROM T_users
								WHERE user_allow_msgform = 1 OR user_allow_msgform = 3', 'Set enable PM on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "enable_PM", 0
							FROM T_users
								WHERE user_allow_msgform = 0 OR user_allow_msgform = 2', 'Set enable PM on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "enable_email", 1
							FROM T_users
								WHERE user_allow_msgform > 1', 'Set enable email true on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "enable_email", 0
							FROM T_users
								WHERE user_allow_msgform < 2', 'Set enable email false on users_usersettings' );
		fn_6( 'T_users', 'user_notify' );
		fn_6( 'T_users', 'user_notify_moderation' );
		fn_6( 'T_users', 'user_allow_msgform' );
		task_end();

		task_begin( 'Upgrading Item table...' );
		fn_7( 'T_items__item', 'post_ctry_ID', 'INT(10) UNSIGNED NULL' );
		fn_7( 'T_items__item', 'post_rgn_ID', 'INT(10) UNSIGNED NULL' );
		fn_7( 'T_items__item', 'post_subrg_ID', 'INT(10) UNSIGNED NULL' );
		fn_7( 'T_items__item', 'post_city_ID', 'INT(10) UNSIGNED NULL' );
		task_end();

		task_begin( 'Upgrading users table...' );
		fn_6( 'T_users', 'user_postcode' );	
		fn_6( 'T_users', 'user_idmode' );
		task_end();

		task_begin( 'Upgrading users fields table...' );
		fn_7( 'T_users__fielddefs', 'ufdf_bubbletip', 'varchar(2000) NULL' );
		task_end();


		task_begin( 'Creating table for groups of messaging contacts...' );
		$var_2->query( "CREATE TABLE IF NOT EXISTS T_messaging__contact_groups (
			cgr_ID      int(10) unsigned NOT NULL auto_increment,
			cgr_user_ID int(10) unsigned NOT NULL,
			cgr_name    varchar(50) NOT NULL,
			PRIMARY KEY cgr_ID (cgr_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Creating table for group users of messaging contacts...' );
		$var_2->query( "CREATE TABLE T_messaging__contact_groupusers (
			cgu_user_ID int(10) unsigned NOT NULL,
			cgu_cgr_ID  int(10) unsigned NOT NULL,
			PRIMARY KEY cgu_PK (cgu_user_ID, cgu_cgr_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Upgrading mail log table...' );
		fn_7( $var_64.'mail__log', 'emlog_user_ID', 'INT(10) UNSIGNED DEFAULT NULL AFTER emlog_timestamp' );
		task_end();

		fn_0( '10700' );
	}

	if( $var_13 < 10800 )
	{	

		task_begin( 'Upgrading users table, add user status...' );
		fn_7( 'T_users', 'user_status', 'enum( "activated", "autoactivated", "closed", "deactivated", "emailchanged", "new" ) NOT NULL default "new" AFTER user_validated' );
		$var_178 = 'UPDATE T_users SET user_status = ';
		
		$var_179 = $var_2->get_var( 'SELECT set_value FROM T_settings WHERE set_name = '.$var_2->quote( 'newusers_mustvalidate' ) );
		if( $var_179 || ( $var_179 == NULL ) )
		{ 
			
			$var_178 .= $var_2->quote( 'activated' );
			$var_178 .= ' WHERE user_validated = 1';
		}
		else
		{
			$var_178 .= $var_2->quote( 'autoactivated' );
		}
		
		$var_2->query( $var_178 );
		fn_6( 'T_users', 'user_validated' );
		task_end();

		fn_0( '10800' );
	}

	if( $var_13 < 10900 )
	{	

		task_begin( 'Upgrading user settings table...' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "show_online", 0
							FROM T_users
								WHERE user_showonline = 0', 'Set show online on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "user_ip", user_ip
							FROM T_users
								WHERE user_ip IS NOT NULL', 'Set user ip on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "user_domain", user_domain
							FROM T_users
								WHERE user_domain IS NOT NULL', 'Set user domain on users_usersettings' );
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
						SELECT user_ID, "user_browser", user_browser
							FROM T_users
								WHERE user_browser IS NOT NULL', 'Set user browser on users_usersettings' );
		fn_6( 'T_users', 'user_showonline' );
		fn_6( 'T_users', 'user_ip' );
		fn_6( 'T_users', 'user_domain' );
		fn_6( 'T_users', 'user_browser' );
		task_end();

		task_begin( 'Upgrading user activation settings...' );
		
		$var_2->query( 'DELETE FROM T_users__usersettings WHERE uset_name = "last_activation_email"' );
		task_end();

		task_begin( 'Upgrading Users table...' );
		
		$var_2->query( 'ALTER TABLE T_users CHANGE user_status
					user_status enum( "activated", "autoactivated", "closed", "deactivated", "emailchanged", "failedactivation", "new" ) NOT NULL default "new"' );
		fn_7( 'T_users', 'user_created_fromIPv4', 'int(10) unsigned NOT NULL' );
		fn_7( 'T_users', 'user_email_dom_ID', 'int(10) unsigned NULL' );
		$var_2->query( 'ALTER TABLE T_users CHANGE dateYMDhour user_created_datetime DATETIME NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		fn_7( 'T_users', 'user_reg_ctry_ID', 'int(10) unsigned NULL AFTER user_age_max' );
		fn_7( 'T_users', 'user_profileupdate_ts', 'TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP' );
		$var_2->query( 'ALTER TABLE T_users ADD INDEX user_email ( user_email )' );
		task_end();

		task_begin( 'Renaming Email log table...' );
		$var_2->query( 'RENAME TABLE '.$var_64.'mail__log TO T_email__log' );
		task_end();

		task_begin( 'Creating email returns table...' );
		$var_2->query( "CREATE TABLE T_email__returns (
			  emret_ID        INT(10) UNSIGNED NOT NULL auto_increment,
			  emret_address   VARCHAR(255) DEFAULT NULL,
			  emret_errormsg  VARCHAR(255) DEFAULT NULL,
			  emret_timestamp TIMESTAMP NOT NULL,
			  emret_headers   TEXT DEFAULT NULL,
			  emret_message   TEXT DEFAULT NULL,
			  emret_errtype   CHAR(1) NOT NULL DEFAULT 'U',
			  PRIMARY KEY     (emret_ID)
			) ENGINE = myisam" );
		task_end();

		task_begin( 'Upgrading general settings table...' );
		$var_2->query( 'ALTER TABLE T_settings CHANGE set_value set_value VARCHAR( 5000 ) NULL' );
		task_end();

		task_begin( 'Upgrading sessions table...' );
		fn_7( 'T_sessions', 'sess_device', 'VARCHAR(8) NOT NULL DEFAULT \'\'' );
		task_end();

		task_begin( 'Creating table for Antispam IP Ranges...' );
		$var_2->query( "CREATE TABLE T_antispam__iprange (
			aipr_ID         int(10) unsigned NOT NULL auto_increment,
			aipr_IPv4start  int(10) unsigned NOT NULL,
			aipr_IPv4end    int(10) unsigned NOT NULL,
			aipr_user_count int(10) unsigned DEFAULT 0,
			PRIMARY KEY aipr_ID (aipr_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Upgrading base domains table...' );
		$var_2->query( "ALTER TABLE T_basedomains CHANGE dom_type dom_type ENUM( 'unknown', 'normal', 'searcheng', 'aggregator', 'email' ) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL DEFAULT 'unknown'" );
		$var_2->query( 'ALTER TABLE T_basedomains DROP INDEX dom_name' );
		$var_2->query( 'ALTER TABLE T_basedomains DROP INDEX dom_type' );
		$var_2->query( 'ALTER TABLE T_basedomains ADD UNIQUE dom_type_name ( dom_type, dom_name )' );
		task_end();

		task_begin( 'Upgrading base domains table...' );
		$var_2->query( "ALTER TABLE T_basedomains
			MODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''" );
		task_end();

		
		task_begin( 'Upgrading users email domains...' );
		$var_2->begin();
		
		$var_180 = new class_3();
		$var_180->SELECT( 'user_ID, user_email' );
		$var_180->FROM( 'T_users' );
		$var_184 = $var_2->get_assoc( $var_180->get() );

		if( count( $var_184 ) > 0 )
		{
			
			$var_186 = new class_3();
			$var_186->SELECT( 'dom_ID, dom_name' );
			$var_186->FROM( 'T_basedomains' );
			$var_186->WHERE( 'dom_type = \'email\'' );
			$var_187 = $var_2->get_assoc( $var_186->get() );

			foreach( $var_184 as $var_170 => $var_188 )
			{
				if( var_189( '
				{	
					$email_domain = trim( $ematch[1] );
					$dom_ID = array_search( $email_domain, $email_domains );

					if( ! $dom_ID )
					{	
						$DB->query( 'var_190 var_191 var_192 ( var_193, var_194 )
							var_195 ( \'email\', '.$var_2->quote( $var_196 ).' )' );
						$var_197 = $var_2->var_149;

						
						$var_187[$var_197] = $var_196;
						
					}

					
					$var_2->query( 'UPDATE T_users
						SET user_email_dom_ID = '.$var_2->quote( $var_197 ).'
						WHERE user_ID = '.$var_2->quote( $var_170 ) );
				}
			}
		}
		$var_2->commit();
		task_end();

		task_begin( 'Upgrading users fields table...' );
		
		$var_2->query( 'ALTER TABLE T_users__fields DROP INDEX uf_varchar' );
		
		$var_2->query( 'ALTER TABLE T_users__fields CHANGE uf_varchar uf_varchar VARCHAR( 10000 ) NOT NULL' );
		
		$var_2->query( 'ALTER TABLE T_users__fields ADD INDEX uf_varchar ( uf_varchar(255) )' );
		task_end();

		task_begin( 'Upgrading cron tasks table...' );
		$var_2->query( 'ALTER TABLE T_cron__task CHANGE ctsk_name ctsk_name VARCHAR(255) NOT NULL' );
		task_end();

		task_begin( 'Upgrading comments table...' );
		fn_7( 'T_comments', 'comment_IP_ctry_ID', 'int(10) unsigned NULL AFTER comment_author_IP' );
		task_end();

		task_begin( 'Creating table for Blocked Email Addreses...' );
		$var_2->query( "CREATE TABLE {$var_64}email__blocked (
			emblk_ID                    INT(10) UNSIGNED NOT NULL auto_increment,
			emblk_address               VARCHAR(255) DEFAULT NULL,
			emblk_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',
			emblk_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,
			emblk_last_sent_ts          TIMESTAMP NULL,
			emblk_last_error_ts         TIMESTAMP NULL,
			PRIMARY KEY                 (emblk_ID),
			UNIQUE                      emblk_address (emblk_address)
		) ENGINE = myisam" );
		var_198();

		var_199( 'Upgrading email log table...' );
		
		$var_181 = new class_3();
		$var_181->SELECT( 'emlog_ID' );
		$var_181->FROM( 'T_email__log' );
		$var_181->WHERE( 'emlog_success = 0' );
		$var_200 = $var_2->get_col( $var_181->get() );
		
		$var_2->query( 'ALTER TABLE T_email__log CHANGE emlog_success emlog_result ENUM ( "ok", "error", "blocked" ) NOT NULL DEFAULT "ok"' );
		if( !empty( $var_200 ) )
		{	
			
			$var_2->query( 'UPDATE T_email__log
					SET emlog_result = '.$var_2->quote( 'error' ).'
				WHERE emlog_ID IN ( '.$var_2->quote( $var_200 ).' )' );
		}
		var_198();

		var_0( '10900' );
	}

	if( $var_13 < 10970 )
	{	

		task_begin( 'Upgrading Locales table...' );
		fn_7( 'T_locales', 'loc_transliteration_map', 'VARCHAR(10000) NOT NULL default \'\' AFTER loc_priority' );
		task_end();

		task_begin( 'Upgrading general settings table...' );
		$var_2->query( 'UPDATE T_settings SET set_name = '.$var_2->quote( 'smart_view_count' ).' WHERE set_name = '.$var_2->quote( 'smart_hit_count' ) );
		
		$var_2->query( 'DELETE FROM T_settings WHERE set_name = '.$var_2->quote( 'smart_view_count' ) );
		task_end();

		task_begin( 'Upgrading sessions table...' );
		$var_2->query( "UPDATE T_sessions SET sess_lastseen = concat( '2000-01-01 ', time( sess_lastseen ) )
						WHERE date( sess_lastseen ) = '1970-01-01'" );
		$var_2->query( "ALTER TABLE T_sessions CHANGE COLUMN sess_lastseen sess_lastseen_ts TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' COMMENT 'User last logged activation time. Value may be off by up to 60 seconds'" );
		fn_7( 'T_sessions', 'sess_start_ts', "TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER sess_hitcount" );
		$var_2->query( 'UPDATE T_sessions SET sess_start_ts = TIMESTAMPADD( SECOND, -1, sess_lastseen_ts )' );
		fn_6( 'T_sessions', 'sess_hitcount' );
		task_end();

		task_begin( 'Upgrading users table...' );
		fn_7( 'T_users', 'user_lastseen_ts', 'TIMESTAMP NULL AFTER user_created_datetime' );
		$var_2->query( 'UPDATE T_users SET user_lastseen_ts = ( SELECT MAX( sess_lastseen_ts ) FROM T_sessions WHERE sess_user_ID = user_ID )' );
		$var_2->query( 'UPDATE T_users SET user_profileupdate_ts = user_created_datetime WHERE user_profileupdate_ts < user_created_datetime' );
		$var_2->query( "ALTER TABLE T_users CHANGE COLUMN user_profileupdate_ts user_profileupdate_date DATE NOT NULL DEFAULT '2000-01-01' COMMENT 'Last day when the user has updated some visible field in his profile.'" );
		task_end();

		task_begin( 'Updating versions table...' );
		fn_7( 'T_items__version', 'iver_ID', 'INT UNSIGNED NOT NULL FIRST' );
		$var_2->query( 'ALTER TABLE T_items__version DROP INDEX iver_itm_ID, ADD INDEX iver_ID_itm_ID ( iver_ID , iver_itm_ID )' );
		task_end();

		task_begin( 'Upgrading messaging contact group users...' );
		fn_10( 'T_messaging__contact_groupusers', 'cgu_cgr_ID', 'T_messaging__contact_groups', 'cgr_ID', 'ON DELETE CASCADE' );
		task_end();

		task_begin( 'Creating table for a latest version of the POT file...' );
		$var_2->query( "CREATE TABLE T_i18n_original_string (
			iost_ID        int(10) unsigned NOT NULL auto_increment,
			iost_string    varchar(10000) NOT NULL default '',
			iost_inpotfile tinyint(1) NOT NULL DEFAULT 0,
			PRIMARY KEY (iost_ID)
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Creating table for a latest versions of the PO files...' );
		$var_2->query( "CREATE TABLE T_i18n_translated_string (
			itst_ID       int(10) unsigned NOT NULL auto_increment,
			itst_iost_ID  int(10) unsigned NOT NULL,
			itst_locale   varchar(20) NOT NULL default '',
			itst_standard varchar(10000) NOT NULL default '',
			itst_custom   varchar(10000) NULL,
			itst_inpofile tinyint(1) NOT NULL DEFAULT 0,
			PRIMARY KEY (itst_ID)
		) ENGINE = innodb DEFAULT CHARSET = utf8" );
		task_end();

		task_begin( 'Updating Antispam IP Ranges table...' );
		fn_7( 'T_antispam__iprange', 'aipr_status', 'enum( \'trusted\', \'suspect\', \'blocked\' ) NULL DEFAULT NULL' );
		fn_7( 'T_antispam__iprange', 'aipr_block_count', 'int(10) unsigned DEFAULT 0' );
		$var_2->query( "ALTER TABLE T_antispam__iprange CHANGE COLUMN aipr_user_count aipr_user_count int(10) unsigned DEFAULT 0" );
		task_end();

		fn_0( '10970' );
	}

	var_201( $var_13 < 10975 )
	{	

		task_begin( 'Creating default antispam IP ranges... ' );
		$var_2->query( '
			INSERT INTO T_antispam__iprange ( aipr_IPv4start, aipr_IPv4end, aipr_status )
			VALUES ( '.$var_2->quote( ip2int( '127.0.0.0' ) ).', '.$var_2->quote( ip2int( '127.0.0.255' ) ).', "trusted" ),
				( '.$var_2->quote( ip2int( '10.0.0.0' ) ).', '.$var_2->quote( ip2int( '10.255.255.255' ) ).', "trusted" ),
				( '.$var_2->quote( ip2int( '172.16.0.0' ) ).', '.$var_2->quote( ip2int( '172.31.255.255' ) ).', "trusted" ),
				( '.$var_2->quote( ip2int( '192.168.0.0' ) ).', '.$var_2->quote( ip2int( '192.168.255.255' ) ).', "trusted" )
			' );
		var_198();

		fn_0( '10975' );
	}

	var_201( $var_13 < 11000 )
	{	

		task_begin( 'Adding new countries...' );
		
		$var_2->query( 'INSERT IGNORE INTO T_regional__country ( ctry_code, ctry_name, ctry_curr_ID ) VALUES ( \'ct\', \'Catalonia\', \'2\' )' );
		task_end();

		task_begin( 'Upgrading message thread statuses table...' );
		fn_7( 'T_messaging__threadstatus', 'tsta_thread_leave_msg_ID', 'int(10) unsigned NULL DEFAULT NULL' );
		task_end();

		task_begin( 'Upgrading Item Settings...' );
		
		$var_7 = "INSERT INTO T_items__item_settings( iset_item_ID, iset_name, iset_value ) ";
		for( $var_80 = 1; $var_80 <= 8; $var_80++ )
		{ 
			if( $var_80 > 1 )
			{
				$var_7 .= ' UNION';
			}
			$var_43 = ( $var_80 > 5 ) ? 'varchar'.( $var_80 - 5 ) : 'double'.$var_80;
			$var_7 .= " SELECT post_ID, 'custom_".$var_43."', post_".$var_43."
							FROM T_items__item WHERE post_".$var_43." IS NOT NULL";
		}
		$var_2->query( $var_7 );

		for( $var_80 = 1; $var_80 <= 5; $var_80++ )
		{ 
			fn_6( 'T_items__item', 'post_double'.$var_80 );
		}
		for( $var_80 = 1; $var_80 <= 3; $var_80++ )
		{ 
			fn_6( 'T_items__item', 'post_varchar'.$var_80 );
		}

		
		$var_2->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )
						SELECT post_ID, "editor_code", post_editor_code
							FROM T_items__item
							WHERE post_editor_code IS NOT NULL' );
		fn_6( 'T_items__item', 'post_editor_code' );

		
		$var_2->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )
						SELECT post_ID, "post_metadesc", post_metadesc
							FROM T_items__item
							WHERE post_metadesc IS NOT NULL' );
		fn_6( 'T_items__item', 'post_metadesc' );

		
		$var_2->query( 'INSERT INTO T_items__item_settings ( iset_item_ID, iset_name, iset_value )
						SELECT post_ID, "post_custom_headers", post_metakeywords
							FROM T_items__item
							WHERE post_metakeywords IS NOT NULL' );
		fn_6( 'T_items__item', 'post_metakeywords' );
		task_end();

		task_begin( 'Upgrading items table...' );
		
		fn_6( 'T_items__item', 'post_commentsexpire' );
		task_end();

		task_begin( 'Adding new video file types...' );
		$var_202 = $var_2->get_row('SELECT ftyp_ID, ftyp_extensions
									FROM T_filetypes
									WHERE ftyp_mimetype = "video/mp4"
									AND ftyp_extensions NOT LIKE "%f4v%"
									LIMIT 1');

		if( $var_202 )
		{	
			$var_2->query( 'UPDATE T_filetypes SET ftyp_extensions = "'.$var_2->escape($var_202->var_204.' f4v').'"
							WHERE ftyp_ID = '.$var_2->quote($var_202->var_205) );
		}
		
		if( !fn_9( 'T_filetypes', 'ftyp_extensions', '"flv"' ) )
		{
			$var_2->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)
				             VALUES ("flv", "Flash video file", "video/x-flv", "", "browser", "registered")', 'Add "flv" file type' );
		}
		
		var_201( !fn_9( 'T_filetypes', 'ftyp_extensions', '"swf"' ) )
		{
			$var_2->query( 'INSERT INTO T_filetypes (ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed)
				             VALUES ("swf", "Flash video file", "application/x-shockwave-flash", "", "browser", "registered")', 'Add "swf" file type' );
		}
		var_198();

		task_begin( 'Upgrading custom item settings...' );
		$var_2->begin();
		
		
		$var_206 = $var_2->get_col( 'SELECT cs_left.cset_coll_ID
									FROM T_coll_settings as cs_left
									INNER JOIN T_coll_settings as cs_right ON cs_left.cset_coll_ID = cs_right.cset_coll_ID
									WHERE cs_left.cset_name = "custom_double3" AND cs_left.cset_value = "Latitude" AND
										cs_right.cset_name = "custom_double4" AND cs_right.cset_value = "Longitude"' );
		if( $var_206 )
		{ 
			
			$var_207 = '( '.implode( ', "show_location_coordinates", 1 ), ( ', $var_206 ).', "show_location_coordinates", 1 )';
			$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
							VALUES '.$var_207 );

			$var_208 = implode( ', ', $var_206 );
			
			$var_2->query( 'UPDATE T_items__item_settings SET iset_name = "latitude"
							WHERE iset_name = "custom_double3" AND iset_item_ID IN (
								SELECT post_ID FROM T_items__item
								INNER JOIN T_categories ON post_main_cat_ID = cat_ID
								WHERE cat_blog_ID IN ( '.$var_208.' )
							)' );
			
			$var_2->query( 'UPDATE T_items__item_settings SET iset_name = "longitude"
							WHERE iset_name = "custom_double4" AND iset_item_ID IN (
								SELECT post_ID FROM T_items__item
								INNER JOIN T_categories ON post_main_cat_ID = cat_ID
								WHERE cat_blog_ID IN ( '.$var_208.' )
							)' );
			
			$var_2->query( 'DELETE FROM T_coll_settings
						WHERE ( cset_name = "custom_double3" OR cset_name = "custom_double4" ) AND
							cset_coll_ID IN ( '.$var_208.' )' );
		}
		$var_2->commit(); 

		$var_2->var_147(); 
		
		$var_2->query( 'DELETE FROM T_coll_settings WHERE ( cset_value IS NULL OR cset_value = "" ) AND cset_name LIKE "custom\_%"' );
		
		$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						SELECT cset_coll_ID, "count_custom_double", COUNT( cset_name )
						FROM T_coll_settings
						WHERE cset_name LIKE "custom\_double%"
						GROUP BY cset_coll_ID' );
		
		$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						SELECT cset_coll_ID, "count_custom_varchar", COUNT( cset_name )
						FROM T_coll_settings
						WHERE cset_name LIKE "custom\_varchar%"
						GROUP BY cset_coll_ID' );
		
		$var_206 = $var_2->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value
										FROM T_coll_settings
										WHERE cset_name LIKE "custom\_%"
										ORDER BY cset_coll_ID, cset_name' );
		if( !empty( $var_206 ) )
		{ 
			$var_209 = '';
			$var_210 = '';
			$var_211 = "";
			$var_212 = "";
			foreach( $var_206 as $var_27 )
			{ 
				$var_213 = uniqid( '' );
				$var_214 = ( substr( $var_27->var_40, 7, 6 ) === 'double' ) ? 'custom_double' : 'custom_varchar';
				
				$var_209 .= '( '.$var_27->var_215.', "'.$var_27->var_40.'", "'.$var_213.'" ), ';
				
				$var_209 .= '( '.$var_27->var_215.', "'.$var_214.'_'.$var_213.'", "'.$var_27->var_168.'" ), ';

				
				$var_216 = ( ( $var_211 == $var_214 ) && ( $var_212 == $var_27->var_215 ) ) ? $var_216 + 1 : 1;
				$var_210 .= '( '.$var_27->var_215.', "'.$var_214.$var_216.'", "'.$var_213.'" ), ';
				$var_211 = $var_214;
				$var_212 = $var_27->var_215;
			}
			$var_209 = substr( $var_209, 0, -2 );
			$var_210 = substr( $var_210, 0, -2 );
			
			$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
							VALUES '.$var_209 );
			
			$var_2->query( 'UPDATE T_items__item_settings SET iset_name = (
								SELECT CONCAT( "custom_double_", cset_value ) FROM T_coll_settings
									INNER JOIN T_categories ON cset_coll_ID = cat_blog_ID
									INNER JOIN T_items__item ON cat_ID = post_main_cat_ID
									WHERE cset_name = iset_name AND post_ID  = iset_item_ID )
							WHERE iset_name LIKE "custom\_double%"' );
			
			$var_2->query( 'UPDATE T_items__item_settings SET iset_name = (
								SELECT CONCAT( "custom_varchar_", cset_value ) FROM T_coll_settings
									INNER JOIN T_categories ON cset_coll_ID = cat_blog_ID
									INNER JOIN T_items__item ON cat_ID = post_main_cat_ID
									WHERE cset_name = iset_name AND post_ID  = iset_item_ID )
							WHERE iset_name LIKE "custom\_varchar%"' );
			
			$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
							VALUES '.$var_210 );
		}
		$var_2->commit(); 
		var_198();

		var_199( 'Convert group var_232 permissions to pluggable permissions...' );
		$var_2->query( 'REPLACE INTO T_groups__groupsettings( gset_grp_ID, gset_name, gset_value )
						SELECT grp_ID, "perm_users", grp_perm_users
							FROM T_groups' );
		fn_6( 'T_groups', 'grp_perm_users' );
		task_end();

		task_begin( 'Update Post Types... ' );
		$var_2->query( "REPLACE INTO T_items__type ( ptyp_ID, ptyp_name )
			VALUES ( 4000, 'Advertisement' )" );
		task_end();

		task_begin( 'Update files table... ' );
		fn_7( 'T_files', 'file_hash', 'char(32) default NULL' );
		task_end();

		task_begin( 'Create table for files voting...' );
		$var_2->query( 'CREATE TABLE '.$var_64.'files__vote (
				fvot_file_ID       int(11) UNSIGNED NOT NULL,
				fvot_user_ID       int(11) UNSIGNED NOT NULL,
				fvot_like          tinyint(1),
				fvot_inappropriate tinyint(1),
				fvot_spam          tinyint(1),
				primary key (fvot_file_ID, fvot_user_ID)
			) ENGINE = innodb' );
		task_end();

		task_begin( 'Create table for users reporting...' );
		$var_2->query( "CREATE TABLE T_users__reports (
			urep_target_user_ID int(11) unsigned NOT NULL,
			urep_reporter_ID    int(11) unsigned NOT NULL,
			urep_status         enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ),
			urep_info           varchar(240),
			urep_datetime		datetime NOT NULL,
			PRIMARY KEY ( urep_target_user_ID, urep_reporter_ID )
		) ENGINE = innodb" );
		task_end();

		task_begin( 'Upgrading skins type...' );
		$var_2->query( "ALTER TABLE T_skins__skin MODIFY COLUMN skin_type enum('normal','feed','sitemap','mobile','tablet') NOT NULL default 'normal'" );
		task_end();

		task_begin( 'Upgrading blogs skins...' );
		
		$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						SELECT blog_ID, "normal_skin_ID", blog_skin_ID
						FROM T_blogs' );
		fn_6( 'T_blogs', 'blog_skin_ID' );
		task_end();

		task_begin( 'Update categories table... ' );
		fn_7( 'T_categories', 'cat_meta', 'tinyint(1) NOT NULL DEFAULT 0' );
		fn_7( 'T_categories', 'cat_lock', 'tinyint(1) NOT NULL DEFAULT 0' );
		task_end();

		task_begin( 'Plugin settings update...' );
		$var_217 = $var_2->get_col( 'SELECT blog_ID FROM T_blogs' );
		$var_218 = $var_2->get_assoc( 'SELECT pset_plug_ID, pset_value FROM T_pluginsettings WHERE pset_name = "render_comments"' );
		$var_219 = '';
		foreach( $var_217 as $var_82 )
		{
			foreach( $var_218 as $var_220 => $var_221 )
			{
				$var_222 = $var_221 ? 'stealth' : 'never';
				$var_219 .= '( '.$var_82.', "plugin'.$var_220.'_coll_apply_comment_rendering", "'.$var_222.'" ),';
			}
		}
		var_201( !empty( $var_219 ) )
		{
			$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						VALUES '.substr( $var_219, 0, strlen( $var_219 ) - 1 ) );
		}
		$var_2->query( 'DELETE FROM T_pluginsettings WHERE pset_name = "render_comments"' );
		var_198();

		task_begin( 'Creating comment prerendering cache table...' );
		$var_2->query( "CREATE TABLE T_comments__prerendering (
			cmpr_cmt_ID INT(11) UNSIGNED NOT NULL,
			cmpr_format ENUM('htmlbody','entityencoded','xml','text') NOT NULL,
			cmpr_renderers TEXT NOT NULL,
			cmpr_content_prerendered MEDIUMTEXT NULL,
			cmpr_datemodified TIMESTAMP NOT NULL,
			PRIMARY KEY (cmpr_cmt_ID, cmpr_format)
		) ENGINE = innodb" );
		fn_7( 'T_comments', 'comment_renderers', "TEXT NOT NULL AFTER comment_content" );
		$var_2->query( 'UPDATE T_comments SET comment_renderers = "default"' );
		task_end();

		task_begin( 'Upgrading plugins table...' );
		fn_6( 'T_plugins', 'plug_apply_rendering' );
		task_end();

		task_begin( 'Upgrading Auto_P plugin...' );
		$var_223 = $var_2->get_assoc( 'SELECT cset_coll_ID, cset_value FROM T_coll_settings WHERE cset_name = "comment_autobr"' );
		$var_219 = array();
		$var_218 = $var_2->get_col( 'SELECT plug_ID FROM T_plugins WHERE plug_code = "b2WPAutP"' );
		foreach( $var_223 as $var_82 => $var_224 )
		{
			foreach( $var_218 as $var_220 )
			{
				switch( $var_224 )
				{
					case 'never':
						$var_222 = 'never';
						break;
					case 'optional':
						$var_222 = 'opt-out';
						break;
					case 'always':
						$var_222 = 'stealth';
						break;
					default:
						break 2;
				}
				$var_219[] = '( '.$var_82.', "plugin'.$var_220.'_coll_apply_comment_rendering", "'.$var_222.'" )';
			}
		}
		var_201( count( $var_219 ) > 0 )
		{
			$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
						VALUES '.implode( ',', $var_219 ) );
		}
		$var_2->query( 'DELETE FROM T_coll_settings WHERE cset_name = "comment_autobr"' );
		$var_2->query( 'UPDATE T_comments SET comment_content = REPLACE( REPLACE( comment_content, "<br>\n", "\n" ), "<br />\n", "\n" )' );
		task_end();

		fn_0( '11000' );
	}

	var_201( $var_13 < 11010 )
	{	

		task_begin( 'Upgrading post statuses...' );
		$var_2->query( "ALTER TABLE T_items__item CHANGE COLUMN post_status post_status enum('published','community','deprecated','protected','private','review','draft','redirected') NOT NULL default 'published'" );
		$var_2->query( "ALTER TABLE T_items__version CHANGE COLUMN iver_status iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') NULL" );
		$var_2->query( "ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_poststatuses bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''" );
		$var_2->query( "ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_poststatuses bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') NOT NULL default ''" );
		task_end();

		task_begin( 'Upgrading groups table...' );
		$var_225 = $var_2->query( 'UPDATE T_groups SET grp_name = "Moderators" WHERE grp_ID = 2 AND grp_name = "Privileged Bloggers"' );
		
		
		$var_226 = $var_225 ? ' OR bloggroup_group_ID = 2' : '';
		$var_2->query( "UPDATE T_coll_group_perms SET bloggroup_perm_poststatuses = 'published,community,deprecated,protected,private,review,draft' WHERE bloggroup_group_ID = 1".$var_226 );
		
		$var_2->query( 'UPDATE T_groups SET grp_name = "Trusted Users" WHERE grp_ID = 3 AND grp_name = "Bloggers"' );
		$var_2->query( 'UPDATE T_groups SET grp_name = "Normal Users" WHERE grp_ID = 4 AND grp_name = "Basic Users"' );

		
		$var_227 = 'SELECT grp_ID
						FROM T_groups
						WHERE grp_name = "Misbehaving/Suspect Users"
						ORDER BY grp_ID DESC
						LIMIT 1';
		$var_228 = $var_2->get_var( $var_227 );
		if( empty( $var_228 ) )
		{ 
			$var_219 = '( "Misbehaving/Suspect Users" )';
			
			$var_7 = 'SELECT grp_ID
					FROM T_groups
					WHERE grp_name = "Spammers/Restricted Users"
					ORDER BY grp_ID DESC
					LIMIT 1';
			$var_229 = $var_2->get_var( $var_7 );
			if( empty( $var_229 ) )
			{
				$var_219 .= ', ( "Spammers/Restricted Users" )';
			}
			
			$var_2->query( 'INSERT INTO T_groups ( grp_name )
						VALUES '.$var_219 );

			$var_228 = $var_2->get_var( $var_227 );
			if( $var_228 )
			{ 
				$var_7 = "
					INSERT INTO T_coll_group_perms( bloggroup_blog_ID, bloggroup_group_ID, bloggroup_ismember,
						bloggroup_perm_poststatuses, bloggroup_perm_delpost, bloggroup_perm_edit_ts,
						bloggroup_perm_own_cmts, bloggroup_perm_vote_spam_cmts, bloggroup_perm_draft_cmts, bloggroup_perm_publ_cmts, bloggroup_perm_depr_cmts,
						bloggroup_perm_cats, bloggroup_perm_properties,
						bloggroup_perm_media_upload, bloggroup_perm_media_browse, bloggroup_perm_media_change )
					SELECT blog_ID, ".$var_228.", 1, 'review,draft', 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
						FROM T_blogs WHERE blog_ID = 5 AND blog_shortname = 'Forums'";
				$var_2->var_7( $var_7 );
			}
		}
		var_198();

		var_199( 'Upgrading var_298 var_18...' );
		fn_7( 'T_blogs', 'blog_type', 'ENUM( "std", "photo", "group", "forum", "manual" ) DEFAULT "std" NOT NULL' );
		task_end();

		task_begin( 'Upgrading comment statuses...' );
		$var_2->query( "ALTER TABLE T_comments CHANGE COLUMN comment_status comment_status ENUM('published','community','deprecated','protected','private','review','draft','trash') DEFAULT 'published' NOT NULL" );
		task_end();

		task_begin( 'Updating collection user/group permissions...' );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_cmtstatuses', "set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloguser_perm_vote_spam_cmts" );
		fn_7( 'T_coll_user_perms', 'bloguser_perm_edit_cmt', "ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloguser_perm_cmtstatuses" );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_cmtstatuses', "set('review','draft','private','protected','deprecated','community','published') NOT NULL default '' AFTER bloggroup_perm_vote_spam_cmts" );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_edit_cmt', "ENUM('no','own','anon','lt','le','all') NOT NULL default 'no' AFTER bloggroup_perm_cmtstatuses" );

		
		$var_2->query( 'UPDATE T_coll_user_perms
					SET bloguser_perm_cmtstatuses = ( bloguser_perm_publ_cmts * 1 ) | ( bloguser_perm_depr_cmts * 4 ) | ( bloguser_perm_draft_cmts * 64 )' );
		
		$var_2->query( 'UPDATE T_coll_user_perms
					SET bloguser_perm_cmtstatuses = "published,community,deprecated,protected,private,review,draft", bloguser_perm_edit_cmt = "all"
					WHERE bloguser_perm_publ_cmts <> 0 AND bloguser_perm_depr_cmts <> 0 AND bloguser_perm_draft_cmts <> 0' );
		
		$var_2->query( 'UPDATE T_coll_user_perms
					SET bloguser_perm_edit_cmt = "lt"
					WHERE ( bloguser_perm_cmtstatuses & 65 ) != 0 AND bloguser_perm_edit_cmt = "no"' );

		
		$var_2->query( 'UPDATE T_coll_group_perms
					SET bloggroup_perm_cmtstatuses = ( bloggroup_perm_publ_cmts * 1 ) | ( bloggroup_perm_depr_cmts * 4 ) | ( bloggroup_perm_draft_cmts * 64 )' );
		
		$var_2->query( 'UPDATE T_coll_group_perms
					SET bloggroup_perm_cmtstatuses = "published,community,deprecated,protected,private,review,draft", bloggroup_perm_edit_cmt = "all"
					WHERE bloggroup_perm_publ_cmts <> 0 AND bloggroup_perm_depr_cmts <> 0 AND bloggroup_perm_draft_cmts <> 0' );
		
		$var_2->query( 'UPDATE T_coll_group_perms
					SET bloggroup_perm_edit_cmt = "lt"
					WHERE ( bloggroup_perm_cmtstatuses & 65 ) != 0 AND bloggroup_perm_edit_cmt = "no"' );

		fn_6( 'T_coll_user_perms', 'bloguser_perm_draft_cmts' );
		fn_6( 'T_coll_user_perms', 'bloguser_perm_publ_cmts' );
		fn_6( 'T_coll_user_perms', 'bloguser_perm_depr_cmts' );
		fn_6( 'T_coll_group_perms', 'bloggroup_perm_draft_cmts' );
		fn_6( 'T_coll_group_perms', 'bloggroup_perm_publ_cmts' );
		fn_6( 'T_coll_group_perms', 'bloggroup_perm_depr_cmts' );

		fn_7( 'T_coll_user_perms', 'bloguser_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_ts' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_delcmts', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_ts' );
		
		$var_2->query( 'UPDATE T_coll_group_perms
					SET bloggroup_perm_delcmts = 1
					WHERE bloggroup_perm_edit_cmt = "le" OR bloggroup_perm_edit_cmt = "all"' );

		$var_2->query( "ALTER TABLE T_coll_user_perms CHANGE COLUMN bloguser_perm_own_cmts bloguser_perm_recycle_owncmts tinyint NOT NULL default 0" );
		$var_2->query( "ALTER TABLE T_coll_group_perms CHANGE COLUMN bloggroup_perm_own_cmts bloggroup_perm_recycle_owncmts tinyint NOT NULL default 0" );
		task_end();

		task_begin( 'Updating blogs settings...' );
		$var_2->query( 'UPDATE T_coll_settings SET cset_value = "blog" WHERE cset_name = "enable_goto_blog" AND cset_value = "1"' );
		$var_2->query( 'UPDATE T_coll_settings SET cset_value = "no" WHERE cset_name = "enable_goto_blog" AND cset_value = "0"' );
		task_end();

		fn_0( '11010' );
	}

	var_201( $var_13 < 11020 )
	{	

		task_begin( 'Upgrading users table...' );
		
		$var_230 = new class_3();
		$var_230->SELECT( 'user_ID, user_created_fromIPv4' );
		$var_230->FROM( 'T_users' );
		$var_230->WHERE( 'user_created_fromIPv4 IS NOT NULL' );
		$var_230->WHERE_and( 'user_created_fromIPv4 != '.$var_2->quote( ip2int( '0.0.0.0' ) ) );
		$var_230->WHERE_and( 'user_created_fromIPv4 != '.$var_2->quote( ip2int( '127.0.0.1' ) ) );
		$var_232 = $var_2->get_assoc( $var_230->get() );
		
		$var_233 = new class_3();
		$var_233->SELECT( 'uset_user_ID, uset_value' );
		$var_233->FROM( 'T_users__usersettings' );
		$var_233->WHERE( 'uset_name = "user_ip"' );
		if( count( $var_232 ) > 0 )
		{	
			$var_233->WHERE_and( 'uset_user_ID NOT IN ('.$var_2->quote( array_keys( $var_232 ) ).')' );
		}
		$var_234 = $var_2->get_assoc( $var_233->get() );
		if( count( $var_232 ) > 0 || count( $var_234 ) > 0 )
		{
			$var_235 = array();
			foreach( $var_232 as $var_170 => $var_236 )
			{
				$var_235[] = '( '.$var_2->quote( $var_170 ).', "created_fromIPv4", '.$var_2->quote( $var_236 ).' )';
			}
			foreach( $var_234 as $var_170 => $var_236 )
			{
				$var_235[] = '( '.$var_2->quote( $var_170 ).', "created_fromIPv4", '.$var_2->quote( ip2int( $var_236 ) ).' )';
			}
			
			$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
				VALUES '.implode( ', ', $var_235 ) );
		}
		
		$var_2->query( 'DELETE FROM T_users__usersettings
			WHERE uset_name = "user_ip"' );
		fn_6( 'T_users', 'user_created_fromIPv4' );
		task_end();

		fn_0( '11020' );
	}

	var_201( $var_13 < 11025 )
	{	

		task_begin( 'Upgrading items table...' );
		$var_2->query( "UPDATE T_items__item SET post_datecreated = concat( '2000-01-01 ', time( post_datecreated ) )
						WHERE date( post_datecreated ) = '1970-01-01'" );
		$var_2->query( "UPDATE T_items__item SET post_datemodified = concat( '2000-01-01 ', time( post_datemodified ) )
						WHERE date( post_datemodified ) = '1970-01-01'" );
		$var_2->query( "ALTER TABLE T_items__item CHANGE COLUMN post_datecreated post_datecreated TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'" );
		$var_2->query( "ALTER TABLE T_items__item CHANGE COLUMN post_datemodified post_datemodified TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'" );
		fn_7( 'T_items__item', 'post_last_touched_ts', "TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER post_datemodified" );
		$var_2->query( 'UPDATE T_items__item SET post_last_touched_ts = post_datemodified' );
		task_end();

		

		fn_0( '11025' );
	}

	
	
	
	$var_237 = false;

	if( $var_13 < 11100 )
	{	

		task_begin( 'Update links table...' );
		fn_7( 'T_links', 'link_usr_ID', 'int(11) unsigned  NULL COMMENT "Used for linking files to users (user profile picture)" AFTER link_cmt_ID' );
		fn_8( 'T_links', 'link_usr_ID', 'link_usr_ID' );
		task_end();

		task_begin( 'Creating links for users profile pictures...' );
		
		$var_238 = date2mysql( time() );
		$var_2->query( 'INSERT INTO T_links( link_datecreated, link_datemodified, link_usr_ID, link_file_ID, link_position, link_order )
						SELECT '.$var_2->quote( $var_238 ).', '.$var_2->quote( $var_238 ).', user_ID, user_avatar_file_ID, "", 1
						FROM T_users
						WHERE user_avatar_file_ID IS NOT NULL' );
		
		$var_237 = true;
		task_end();

		task_begin( 'Upgrading custom item settings...' );
		$var_2->begin(); 
		
		$var_206 = $var_2->get_results( 'SELECT cset_coll_ID as coll_ID, cset_name as name, cset_value as value
										FROM T_coll_settings
										WHERE cset_name LIKE "custom\_double\_%"
										   OR cset_name LIKE "custom\_varchar\_%"
										ORDER BY cset_coll_ID, cset_name' );
		if( !empty( $var_206 ) )
		{ 
			$var_239 = '';
			foreach( $var_206 as $var_27 )
			{ 
				$var_240 = preg_replace( '/^custom_(double|varchar)_([a-f0-9\-]+)$/', '$2', $var_27->var_40 );
				
				load_funcs('locales/_charset.funcs.php');
				$var_43 = strtolower( preg_replace( '/[^a-z0-9\-_]+/i', '_', $var_27->var_168 ) );
				$var_43 = replace_special_chars( $var_43 );

				$var_239 .= '( '.$var_27->var_215.', "custom_fname_'.$var_240.'", "'.$var_43.'" ), ';
			}
			
			$var_2->query( 'INSERT INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
							VALUES '.substr( $var_239, 0, -2 ) );
		}
		$var_2->commit(); 
		var_198();

		task_begin( 'Upgrading comments table...' );
		fn_8( 'T_comments', 'comment_status', 'comment_status' );
		task_end();

		fn_0( '11100' );
	}

	var_201( $var_13 < 11110 )
	{ 

		
		$var_241 = $var_2->get_assoc( 'SELECT set_name, set_value
			 FROM T_settings
			WHERE set_name IN ( '.$var_2->quote( array( 'antispam_suspicious_group', 'antispam_trust_groups' ) ).')' );
		if( count( $var_241 ) < 2 )
		{ 
			task_begin( 'Updating general settings...' );
			
			if( !isset( $var_241['antispam_suspicious_group'] ) )
			{ 
				$var_242 = new class_3();
				$var_242->SELECT( 'grp_ID' );
				$var_242->FROM( 'T_groups' );
				$var_242->WHERE( 'grp_name = '.$var_2->quote( 'Misbehaving/Suspect Users' ) );
				$var_228 = $var_2->get_var( $var_242->get() );
				if( !empty( $var_228 ) )
				{ 
					$var_2->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES
							( '.$var_2->quote( 'antispam_suspicious_group' ).', '.$var_2->quote( $var_228 ).' )' );
				}
			}
			
			var_201( !isset( $var_241['antispam_trust_groups'] ) )
			{ 
				$var_243 = array( 'Administrators', 'Moderators', 'Trusted Users', 'Spammers/Restricted Users' );
				$var_244 = new class_3();
				$var_244->SELECT( 'grp_ID' );
				$var_244->FROM( 'T_groups' );
				$var_244->WHERE( 'grp_name IN ( '.$var_2->quote( $var_243 ).')' );
				$var_245 = $var_2->get_col( $var_244->get() );
				if( !empty( $var_245 ) )
				{ 
					$var_2->query( 'INSERT INTO T_settings ( set_name, set_value ) VALUES
							( '.$var_2->quote( 'antispam_trust_groups' ).', '.$var_2->quote( implode( ',', $var_245 ) ).' )' );
				}
			}
			var_198();
		}

		var_0( '11110' );
	}

	var_201( $var_13 < 11200 )
	{ 

		task_begin( 'Upgrading comments table...' );
		fn_7( 'T_comments', 'comment_last_touched_ts', "TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00' AFTER comment_date" );
		$var_2->query( 'UPDATE T_comments
		                SET comment_last_touched_ts = comment_date' );
		task_end();

		task_begin( 'Convert email addresses to lowercase... ' );
		$var_2->query( 'UPDATE T_users SET user_email = LOWER( user_email )' );
		$var_2->query( 'UPDATE '.$var_64.'email__blocked SET emblk_address = LOWER( emblk_address )' );
		$var_2->query( 'UPDATE T_email__returns SET emret_address = LOWER( emret_address )' );
		$var_2->query( 'UPDATE T_email__log SET emlog_to = LOWER( emlog_to )' );
		$var_2->query( 'UPDATE T_comments
			  SET comment_author_email = LOWER( comment_author_email )
			WHERE comment_author_email IS NOT NULL' );
		task_end();

		task_begin( 'Upgrading blogs table...' );
		fn_7( 'T_blogs', 'blog_order', 'int(11) NULL DEFAULT NULL' );
		$var_2->query( 'UPDATE T_blogs
		                SET blog_order = blog_ID' );
		task_end();

		task_begin( 'Updating general settings...' );
		$var_246 = $var_2->get_var( 'SELECT set_value
			 FROM T_settings
			WHERE set_name = '.$var_2->quote( 'site_skins_enabled' ) );
		if( is_null( $var_246 ) )
		{ 
			$var_2->query( 'INSERT INTO T_settings ( set_name, set_value )
				VALUES ( '.$var_2->quote( 'site_skins_enabled' ).', '.$var_2->quote( '0' ).' )' );
		}
		elseif( $var_246 == '1' )
		{ 
			$var_2->query( 'UPDATE T_settings
				  SET set_value = '.$var_2->quote( '0' ).'
				WHERE set_name = '.$var_2->quote( 'site_skins_enabled' ) );
		}
		task_end();

		task_begin( 'Upgrading blogs table...' );
		fn_7( 'T_blogs', 'blog_favorite', 'TINYINT(1) NOT NULL DEFAULT 1' );
		task_end();

		task_begin( 'Upgrade table of base domains... ' );
		$var_2->query( "ALTER TABLE T_basedomains CHANGE COLUMN dom_status dom_status ENUM('unknown','trusted','suspect','blocked') NOT NULL DEFAULT 'unknown'" );
		task_end();

		task_begin( 'Create table for file links voting... ' );
		fn_3( $var_64.'links__vote', '
			lvot_link_ID       int(11) UNSIGNED NOT NULL,
			lvot_user_ID       int(11) UNSIGNED NOT NULL,
			lvot_like          tinyint(1),
			lvot_inappropriate tinyint(1),
			lvot_spam          tinyint(1),
			primary key (lvot_link_ID, lvot_user_ID)' );

		
		$var_2->query( 'INSERT INTO '.$var_64.'links__vote ( lvot_link_ID, lvot_user_ID, lvot_like, lvot_inappropriate, lvot_spam )
						SELECT link_ID, fvot_user_ID, fvot_like, fvot_inappropriate, fvot_spam
						FROM '.$var_64.'files__vote
						LEFT JOIN T_links ON link_file_ID = fvot_file_ID
						WHERE link_ID IS NOT NULL' );

		
		$var_2->query( 'DROP TABLE IF EXISTS '.$var_64.'files__vote' );
		task_end();

		task_begin( 'Create table for goal categories... ' );
		fn_3( 'T_track__goalcat', '
			gcat_ID     int(10) unsigned NOT NULL auto_increment,
			gcat_name   varchar(50) default NULL,
			gcat_color  char(7) default NULL,
			PRIMARY KEY (gcat_ID)',
			'ENGINE = myisam' );
		
		$var_2->var_7( 'INSERT INTO T_track__goalcat ( gcat_name, gcat_color )
			VALUES ( '.$var_2->quote( 'Default' ).', '.$var_2->quote( '
		$default_goalcat_ID = $DB->insert_id;

		db_add_col( 'var_247', 'goal_gcat_ID', 'int(10) unsigned NOT NULL DEFAULT "'.$var_248.'" AFTER goal_ID' );
		$var_2->query( 'ALTER TABLE T_track__goal
			CHANGE goal_gcat_ID goal_gcat_ID int(10) unsigned NOT NULL' );
		var_198();

		
		
		var_199( 'Update links table...' );
		$var_2->query( "UPDATE T_links SET link_datecreated = concat( '2000-01-01 ', time( link_datecreated ) )
						WHERE date( link_datecreated ) = '1970-01-01'" );
		$var_2->query( "UPDATE T_links SET link_datemodified = concat( '2000-01-01 ', time( link_datemodified ) )
						WHERE date( link_datemodified ) = '1970-01-01'" );
		var_198();

		var_199( 'Upgrading Blogs table...' );
		$var_2->query( 'ALTER TABLE T_blogs CHANGE blog_description blog_shortdesc varchar(250) NULL default ""' );
		var_198();

		var_199( 'Upgrading Comments table...' );
		$var_2->query( 'ALTER TABLE T_comments
			CHANGE comment_post_ID   comment_item_ID        int(11) unsigned NOT NULL default 0,
			CHANGE comment_author_ID comment_author_user_ID int unsigned NULL default NULL');
		$var_2->query( 'ALTER TABLE T_comments
			DROP INDEX comment_post_ID');
		$var_2->query( 'ALTER TABLE T_comments
			ADD KEY comment_item_ID ( comment_item_ID )' );
		var_198();

		var_199( 'Upgrading Files table...' );
		$var_2->query( 'ALTER TABLE T_files
			DROP INDEX file,
			ADD COLUMN file_path_hash char(32) default NULL' );
		
		$var_2->query( "ALTER TABLE T_files CHANGE COLUMN file_path file_path VARCHAR(767) NOT NULL DEFAULT ''" );
		$var_2->query( 'UPDATE T_files SET file_path_hash = MD5( CONCAT( file_root_type, file_root_ID, file_path ) )');
		$var_2->query( 'ALTER TABLE T_files ADD UNIQUE file_path (file_path_hash)' );
		var_198();

		var_199( 'Create table for email campaigns... ' );
		var_17( 'T_email__campaign', '
			ecmp_ID          INT NOT NULL AUTO_INCREMENT,
			ecmp_date_ts     TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\',
			ecmp_name        VARCHAR(255) NOT NULL,
			ecmp_email_title VARCHAR(255) NULL,
			ecmp_email_html  TEXT NULL,
			ecmp_email_text  TEXT NULL,
			ecmp_sent_ts     TIMESTAMP NULL,
			PRIMARY KEY      (ecmp_ID)',
			'ENGINE = myisam' );
		var_198();

		var_199( 'Create table for email campaign send data... ' );
		var_17( 'T_email__campaign_send', '
			csnd_camp_ID  INT(11) UNSIGNED NOT NULL,
			csnd_user_ID  INT(11) UNSIGNED NOT NULL,
			csnd_emlog_ID INT(11) UNSIGNED NULL,
			PRIMARY KEY   csnd_PK ( csnd_camp_ID, csnd_user_ID )',
			'ENGINE = myisam' );
		var_198();

		var_199( 'Rename table "email blocked" to "email address"... ' );
		$var_2->query( 'RENAME TABLE '.$var_64.'email__blocked TO T_email__address' );
		$var_2->query( "ALTER TABLE T_email__address
			CHANGE emblk_ID                    emadr_ID                    INT(10) UNSIGNED NOT NULL auto_increment,
			CHANGE emblk_address               emadr_address               VARCHAR(255) DEFAULT NULL,
			CHANGE emblk_status                emadr_status                ENUM ( 'unknown', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown',
			CHANGE emblk_sent_count            emadr_sent_count            INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_sent_last_returnerror emadr_sent_last_returnerror INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_prmerror_count        emadr_prmerror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_tmperror_count        emadr_tmperror_count        INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_spamerror_count       emadr_spamerror_count       INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_othererror_count      emadr_othererror_count      INT(10) UNSIGNED NOT NULL DEFAULT 0,
			CHANGE emblk_last_sent_ts          emadr_last_sent_ts          TIMESTAMP NULL,
			CHANGE emblk_last_error_ts         emadr_last_error_ts         TIMESTAMP NULL");
		$var_2->query( "ALTER TABLE T_email__address
			ADD UNIQUE emadr_address ( emadr_address )" );
		$var_2->query( "ALTER TABLE T_email__address
			DROP INDEX emblk_address");
		var_198();

		
		var_199( 'Upgrading table of email addresses...' );
		$var_2->query( "ALTER TABLE T_email__address
			CHANGE emadr_status   emadr_status ENUM ( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) NOT NULL DEFAULT 'unknown'" );
		var_198();

		var_199( 'Upgrading blog-group permissions table...' );
		var_38( 'T_coll_group_perms', 'bloggroup_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloggroup_ismember' );
		$var_2->query( 'UPDATE T_coll_group_perms
			  SET bloggroup_can_be_assignee = 1
			WHERE bloggroup_group_ID IN ( 1, 2 )' );
		var_198();

		var_199( 'Upgrading blog-user permissions table...' );
		var_38( 'T_coll_user_perms', 'bloguser_can_be_assignee', 'tinyint NOT NULL default 0 AFTER bloguser_ismember' );
		var_198();

		var_199( 'Dropping obsolete columns from table Links...' );
		$var_2->query( 'ALTER TABLE T_links
									DROP COLUMN link_external_url,
									DROP COLUMN link_title,
									DROP COLUMN link_dest_itm_ID' );
		var_198();

		
		var_199( 'Turn off smart view counting...' );
		$var_2->query( 'DELETE FROM T_settings WHERE set_name = '.$var_2->quote( 'smart_view_count' ) );
		var_198();

		var_199( 'Upgrading Posts table...' );
		var_36( 'T_items__item', 'post_views' );
		var_198();

		var_199( 'Upgrading Files table... ' );
		$var_2->query( "ALTER TABLE T_files
			CHANGE COLUMN file_root_type file_root_type enum('absolute','user','collection','shared','skins','import') not null default 'absolute'" );
		var_198();

		
		
		$var_6 = true;

		fn_0( '11200' );
	}

	if( $var_13 < 11208 )
	{ 

		
		task_begin( 'Upgrade hitlog table...' );
		$var_2->query( 'ALTER TABLE T_hitlog
			CHANGE COLUMN hit_ID            hit_ID            INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
			CHANGE COLUMN hit_datetime      hit_datetime      TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\',
			CHANGE COLUMN hit_serprank      hit_serprank      SMALLINT UNSIGNED DEFAULT NULL,
			CHANGE COLUMN hit_blog_ID       hit_coll_ID       INT(10) UNSIGNED NULL DEFAULT NULL,
			CHANGE COLUMN hit_response_code hit_response_code SMALLINT DEFAULT NULL,
			ADD COLUMN hit_agent_ID SMALLINT UNSIGNED NULL DEFAULT NULL AFTER hit_agent_type' );
		$var_2->query( 'ALTER TABLE T_hitlog
			DROP INDEX hit_blog_ID');
		$var_2->query( 'ALTER TABLE T_hitlog
			ADD KEY hit_coll_ID ( hit_coll_ID )' );

		task_end();

		fn_0( '11208' );
	}

	var_201( $var_13 < 11210 )
	{ 

		task_begin( 'Updating widgets setting...' );
		
		$var_2->query( 'UPDATE T_widget
				SET wi_params = REPLACE( wi_params, \'s:16:"allow_blockcache";i:1\', \'s:16:"allow_blockcache";i:0\' )
				WHERE wi_params LIKE \'%s:16:"allow_blockcache";i:1%\' AND (
					wi_code = "user_tools" OR wi_code = "user_login" OR ( wi_code = "msg_menu_link" AND wi_params LIKE \'%s:9:"link_type";s:8:"messages"%\' )
					OR ( wi_code = "menu_link" AND ( wi_params LIKE \'%s:9:"link_type";s:5:"login"%\' OR wi_params LIKE \'%s:9:"link_type";s:8:"register"%\' ) )
					)' );
		
		$var_2->query( 'UPDATE T_widget
				SET wi_params = REPLACE( wi_params, \'s:10:"show_badge";i:1\', \'s:10:"show_badge";i:0\' )
				WHERE wi_code = "msg_menu_link" AND wi_params LIKE \'%s:9:"link_type";s:8:"contacts"%\' AND wi_params LIKE \'%s:10:"show_badge";i:1%\'' );
		task_end();

		task_begin( 'Updating files hash values...' );
		$var_2->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash VARBINARY(32), MODIFY COLUMN file_path_hash VARBINARY(32)' );
		$var_2->query( 'UPDATE T_files SET file_hash = UNHEX( file_hash ), file_path_hash = UNHEX( file_path_hash )' );
		$var_2->query( 'ALTER TABLE T_files MODIFY COLUMN file_hash BINARY(16) default NULL, MODIFY COLUMN file_path_hash BINARY(16) default NULL' );
		task_end();

		task_begin( 'Upgrading goals table...' );
		$var_2->query( 'ALTER TABLE T_track__goal
			ADD COLUMN goal_temp_redir_url varchar(255) default NULL AFTER goal_redir_url,
			ADD COLUMN goal_temp_start_ts  TIMESTAMP NULL            AFTER goal_temp_redir_url,
			ADD COLUMN goal_temp_end_ts    TIMESTAMP NULL            AFTER goal_temp_start_ts,
			ADD COLUMN goal_notes          TEXT DEFAULT NULL' );
		task_end();

		fn_0( '11210' );
	}

	var_201( $var_13 < 11220 )
	{ 
		task_begin( 'Upgrading countries table...' );
		$var_2->query( 'ALTER TABLE T_regional__country
			ADD COLUMN ctry_status      enum( \'trusted\', \'suspect\', \'blocked\' ) NULL DEFAULT NULL,
			ADD COLUMN ctry_block_count int(10) unsigned DEFAULT 0' );
		task_end();

		fn_0( '11220' );
	}

	var_201( $var_13 < 11240 )
	{ 

		task_begin( 'Updating general settings...' );
		$var_2->query( 'UPDATE T_settings SET
			set_name = CASE
				WHEN set_name = "user_closing_allow" THEN "account_close_enabled"
				WHEN set_name = "user_closing_intro" THEN "account_close_intro"
				WHEN set_name = "user_closing_reasons" THEN "account_close_reasons"
				WHEN set_name = "user_closing_byemsg" THEN "account_close_byemsg"
				ELSE set_name
			END' );
		task_end();

		fn_0( '11240' );
	}

	var_201( $var_13 < 11245 )
	{ 

		task_begin( 'Updating Antispam IP Ranges table...' );
		fn_7( 'T_antispam__iprange', 'aipr_contact_email_count', 'int(10) unsigned DEFAULT 0 AFTER aipr_user_count' );
		task_end();

		task_begin( 'Updating invalid locale settings...' );
		$var_249 = $var_2->get_var( 'SELECT set_value FROM T_settings WHERE set_name = "default_locale"' );
		if( empty( $var_249 ) )
		{ 
			global $var_54;
			$var_249 = $var_54;
		}
		if( $var_2->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = '.$var_2->quote( $var_249 ) ) )
		{ 
			$var_2->query( 'UPDATE T_users
				SET user_locale = '.$var_2->quote( $var_249 ).'
				WHERE  user_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'
			);
			$var_2->query( 'UPDATE T_blogs
				SET blog_locale = '.$var_2->quote( $var_249 ).'
				WHERE  blog_locale NOT IN ( SELECT loc_locale FROM T_locales WHERE loc_enabled = 1 )'
			);
		}
		var_198();

		fn_0( '11245' );
	}

	var_201( $var_13 < 11250 )
	{ 

		
		load_funcs('tools/model/_maintenance.funcs.php');
		dbm_convert_item_content_separators();
		fn_0( '11250' );
	}

	var_201( $var_13 < 11255 )
	{ 

		task_begin( 'Updating post types...' );
		$var_2->query( "INSERT INTO T_items__type ( ptyp_ID, ptyp_name )
			VALUES ( 1400, 'Intro-Front' )" );
		task_end();

		fn_0( '11255' );
	}

	var_201( $var_13 < 11260 )
	{ 

		

		task_begin( 'Clean up comment emails...' );
		$var_2->query( "UPDATE T_comments
						SET comment_author_email = CONVERT(comment_author_email USING ascii)" );
		$var_2->commit();
		task_end();


		task_begin( 'Convert the field collations from ascii_bin to ascii_general_ci... <br />' );
		
		task_begin( '- Converting skins table...' );
		$var_2->query( "ALTER TABLE T_skins__skin
			MODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'" );
		task_end();
		task_begin( '- Converting blogs table...' );
		$var_2->query( "ALTER TABLE T_blogs
			MODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',
			MODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',
			MODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,
			MODIFY blog_type           ENUM( 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL" );
		task_end();
		task_begin( '- Converting blog settings table...' );
		$var_2->query( 'ALTER TABLE T_coll_settings
			MODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );
		task_end();
		task_begin( '- Converting widgets table...' );
		$var_2->query( "ALTER TABLE {$var_64}widget
			MODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',
			MODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting categories table...' );
		$var_2->query( "ALTER TABLE T_categories
			MODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting posts table...' );
		$var_2->query( "ALTER TABLE T_items__item
			MODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',
			MODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,
			MODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',
			MODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',
			MODIFY post_renderers            TEXT COLLATE ascii_general_ci NOT NULL" );
		var_198();
		task_begin( '- Converting comments table...' );
		$var_2->query( "ALTER TABLE T_comments
			MODIFY comment_type         enum('comment','linkback','trackback','pingback') COLLATE ascii_general_ci NOT NULL default 'comment',
			MODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,
			MODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,
			MODIFY comment_author_IP    varchar(23) COLLATE ascii_general_ci NOT NULL default '',
			MODIFY comment_renderers    TEXT COLLATE ascii_general_ci NOT NULL,
			MODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,
			MODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'" );
		var_198();
		task_begin( '- Converting post prerendered contents table...' );
		$var_2->query( "ALTER TABLE T_items__prerendering
			MODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,
			MODIFY itpr_renderers TEXT COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting comment prerendered contents table...' );
		$var_2->query( "ALTER TABLE T_comments__prerendering
			MODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,
			MODIFY cmpr_renderers TEXT COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting post versions table...' );
		$var_2->query( "ALTER TABLE T_items__version
			MODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL" );
		task_end();
		task_begin( '- Converting post settings table...' );
		$var_2->query( "ALTER TABLE T_items__item_settings
			MODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting user permissions table...' );
		$var_2->query( "ALTER TABLE T_coll_user_perms
			MODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',
			MODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		var_198();
		task_begin( '- Converting group permissions table...' );
		$var_2->query( "ALTER TABLE T_coll_group_perms
			MODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',
			MODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		var_198();
		task_begin( '- Converting links table...' );
		$var_2->query( "ALTER TABLE T_links
			MODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting files table...' );
		$var_2->query( "ALTER TABLE T_files
			MODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'" );
		task_end();
		task_begin( '- Converting file types table...' );
		$var_2->query( "ALTER TABLE T_filetypes
			MODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,
			MODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,
			MODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'" );
		task_end();
		task_begin( '- Converting sessions table...' );
		$var_2->query( "ALTER TABLE T_sessions
			MODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,
			MODIFY sess_ipaddress VARCHAR(39) COLLATE ascii_general_ci NOT NULL DEFAULT '',
			MODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''" );
		task_end();
		task_begin( '- Converting domains table...' );
		$var_2->query( "ALTER TABLE T_basedomains
			MODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',
			MODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'" );
		task_end();
		task_begin( '- Converting logs table...' );
		$var_2->query( "ALTER TABLE T_hitlog
			MODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,
			MODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,
			MODIFY hit_remote_addr  VARCHAR(40) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL" );
		task_end();
		task_begin( '- Converting goal categories table...' );
		$var_2->query( "ALTER TABLE T_track__goalcat
			MODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL" );
		task_end();
		task_begin( '- Converting groups table...' );
		$var_2->query( "ALTER TABLE T_groups
			MODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',
			MODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',
			MODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',
			MODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'" );
		task_end();
		task_begin( '- Converting group settings table...' );
		$var_2->query( "ALTER TABLE T_groups__groupsettings
			MODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting settings table...' );
		$var_2->query( "ALTER TABLE T_settings
			MODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cache table...' );
		$var_2->query( "ALTER TABLE T_global__cache
			MODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting users table...' );
		$var_2->query( "ALTER TABLE T_users
			MODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,
			MODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',
			MODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',
			MODIFY user_gender          char(1) COLLATE ascii_general_ci NULL" );
		task_end();
		task_begin( '- Converting user fields table...' );
		$var_2->query( "ALTER TABLE T_users__fielddefs
			MODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,
			MODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',
			MODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed'" );
		task_end();
		task_begin( '- Converting user reports table...' );
		$var_2->query( "ALTER TABLE T_users__reports
			MODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci" );
		task_end();
		task_begin( '- Converting locales table...' );
		$var_2->query( "ALTER TABLE T_locales
			MODIFY loc_charset varchar(15) COLLATE ascii_general_ci NOT NULL default 'iso-8859-1',
			MODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',
			MODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s'" );
		task_end();
		task_begin( '- Converting antispam table...' );
		$var_2->query( "ALTER TABLE {$var_64}antispam
			MODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'" );
		task_end();
		task_begin( '- Converting IP ranges table...' );
		$var_2->query( "ALTER TABLE T_antispam__iprange
			MODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL" );
		task_end();
		task_begin( '- Converting user settings table...' );
		$var_2->query( "ALTER TABLE T_users__usersettings
			MODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugins table...' );
		$var_2->query( "ALTER TABLE T_plugins
			MODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',
			MODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,
			MODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',
			MODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin settings table...' );
		$var_2->query( "ALTER TABLE T_pluginsettings
			MODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin user settings table...' );
		$var_2->query( "ALTER TABLE T_pluginusersettings
			MODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin events table...' );
		$var_2->query( "ALTER TABLE T_pluginevents
			MODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cron logs table...' );
		$var_2->query( "ALTER TABLE T_cron__log
			MODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'" );
		task_end();
		task_begin( '- Converting countries table...' );
		$var_2->query( "ALTER TABLE T_regional__country
			MODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,
			MODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL" );
		task_end();
		task_begin( '- Converting regions table...' );
		$var_2->query( "ALTER TABLE T_regional__region
			MODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting subregions table...' );
		$var_2->query( "ALTER TABLE T_regional__subregion
			MODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cities table...' );
		$var_2->query( "ALTER TABLE T_regional__city
			MODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting currencies table...' );
		$var_2->query( "ALTER TABLE T_regional__currency
			MODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting email logs table...' );
		$var_2->query( "ALTER TABLE T_email__log
			MODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'" );
		task_end();
		task_begin( '- Converting email returns table...' );
		$var_2->query( "ALTER TABLE T_email__returns
			MODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'" );
		task_end();
		task_begin( '- Converting email addresses table...' );
		$var_2->query( "ALTER TABLE T_email__address
			MODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'" );
		task_end();
		
		task_end();

		fn_0( '11260' );
	}

	var_201( $var_13 < 11270 )
	{ 

		
		task_begin( 'Upgrading comments table...' );
		$var_2->query( "ALTER TABLE T_comments
			MODIFY comment_author_IP varchar(45) COLLATE ascii_general_ci NOT NULL default ''" );
		task_end();
		task_begin( 'Upgrading sessions table...' );
		$var_2->query( "ALTER TABLE T_sessions
			MODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT ''" );
		task_end();

		fn_0( '11270' );
	}

	var_201( $var_13 < 11280 )
	{ 

		task_begin( 'Upgrading hit logs table...' );
		$var_2->query( "ALTER TABLE T_hitlog
			MODIFY hit_remote_addr VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL" );
		task_end();

		task_begin( 'Upgrading blogs table...' );
		fn_6( 'T_blogs', 'blog_UID' );
		task_end();

		fn_0( '11280' );
	}

	var_201( $var_13 < 11285 )
	{ 

		task_begin( 'Updating plugins table...' );
		$var_2->query( 'UPDATE T_plugins SET
			plug_code = CASE
				WHEN plug_classname = "generic_ping_plugin"         THEN "b2evGPing"
				WHEN plug_classname = "basic_antispam_plugin"       THEN "b2evBAspm"
				WHEN plug_classname = "flowplayer_plugin"           THEN "b2evFlwP"
				WHEN plug_classname = "html5_mediaelementjs_plugin" THEN "b2evH5MP"
				WHEN plug_classname = "html5_videojs_plugin"        THEN "b2evH5VJSP"
				ELSE plug_code
			END' );
		task_end();

		fn_0( '11285' );
	}

	var_201( $var_13 < 11286 )
	{	

		task_begin( 'Upgrade timestamp fields... ' );
		$var_2->query( 'ALTER TABLE T_email__log
			MODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_email__returns
			MODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_items__prerendering
			MODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_comments__prerendering
			MODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_users__reports
			MODIFY urep_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_items__version
			MODIFY iver_edit_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__thread
			MODIFY thrd_datemodified datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__message
			MODIFY msg_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__contact
			MODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		task_end();

		fn_0( '11286' );
	}

	var_201( $var_13 < 11300 )
	{ 

		task_begin( 'Upgrading locales table...' );
		fn_7( 'T_locales', 'loc_shorttimefmt', 'varchar(20) COLLATE ascii_general_ci NOT NULL default "H:i" AFTER loc_timefmt' );
		task_end();
		task_begin( 'Creating message prerendering cache table... ' );
		fn_3( 'T_messaging__prerendering', '
			mspr_msg_ID              INT(11) UNSIGNED NOT NULL,
			mspr_format              ENUM("htmlbody","entityencoded","xml","text") COLLATE ascii_general_ci NOT NULL,
			mspr_renderers           TEXT NOT NULL,
			mspr_content_prerendered MEDIUMTEXT NULL,
			mspr_datemodified        TIMESTAMP NOT NULL,
			PRIMARY KEY (mspr_msg_ID, mspr_format)' );
		fn_7( 'T_messaging__message', 'msg_renderers', 'TEXT NOT NULL' );
		$var_2->query( 'UPDATE T_messaging__message SET msg_renderers = "default"' );
		task_end();

		task_begin( 'Upgrading categories table...' );
		fn_7( 'T_categories', 'cat_last_touched_ts', "TIMESTAMP NOT NULL DEFAULT '2000-01-01 00:00:00'" );
		$var_2->query( 'UPDATE T_categories SET cat_last_touched_ts = (
			SELECT post_last_touched_ts
			  FROM T_items__item
			       INNER JOIN T_postcats ON postcat_post_ID = post_ID
			 WHERE postcat_cat_ID = cat_ID
			 ORDER BY post_last_touched_ts DESC
			 LIMIT 1 )' );
		task_end();

		task_begin( 'Create table for User post read status... ' );
		fn_3( 'T_users__postreadstatus', '
			uprs_user_ID int(11) unsigned NOT NULL,
			uprs_post_ID int(11) unsigned NOT NULL,
			uprs_read_post_ts TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\',
			uprs_read_comment_ts TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\',
			PRIMARY KEY ( uprs_user_ID, uprs_post_ID )' );
		task_end();

		task_begin( 'Create table for System log... ' );
		fn_3( 'T_syslog', "
			slg_ID        INT NOT NULL AUTO_INCREMENT,
			slg_timestamp TIMESTAMP NOT NULL,
			slg_origin    ENUM('core', 'plugin') COLLATE ascii_general_ci,
			slg_origin_ID INT UNSIGNED NULL,
			slg_object    ENUM('comment', 'item', 'user') COLLATE ascii_general_ci,
			slg_object_ID INT UNSIGNED NOT NULL,
			slg_message   VARCHAR(255) NOT NULL,
			PRIMARY KEY   (slg_ID),
			INDEX         slg_object (slg_object, slg_object_ID)",
			'ENGINE = myisam' );
		var_198();

		fn_0( '11300' );
	}

	var_201( $var_13 < 11310 )
	{ 

		task_begin( 'Upgrading cron tasks table...' );
		load_funcs( 'cron/_cron.funcs.php' );
		$var_2->begin();
		$var_2->query( 'ALTER TABLE T_cron__task
			CHANGE COLUMN ctsk_controller ctsk_key varchar(50) COLLATE ascii_general_ci NOT NULL AFTER ctsk_repeat_after,
			CHANGE COLUMN ctsk_name ctsk_name varchar(255) null COMMENT "Specific name of this task. This value is set only if this job name was modified by an admin user"' );
		
		
		$var_2->query( 'UPDATE T_cron__task
			INNER JOIN ( '.cron_job_sql_query( 'key,ctrl' ).' ) AS temp
			       ON ctsk_key = CONVERT( temp.task_ctrl USING ascii )
			SET ctsk_key = temp.task_key' );
		
		$var_2->query( $var_143 = 'UPDATE T_cron__task
			INNER JOIN ( '.cron_job_sql_query().' ) AS temp
			        ON ctsk_key = CONVERT( temp.task_key USING ascii ) AND ctsk_name = CONVERT( temp.task_name USING '.$var_2->var_250.' )
			SET ctsk_name = NULL' );
		$var_2->commit();
		task_end();

		task_begin( 'Upgrade table system log... ' );
		$var_2->query( 'ALTER TABLE T_syslog
			CHANGE COLUMN slg_object slg_object ENUM(\'comment\', \'item\', \'user\', \'file\') COLLATE ascii_general_ci,
			CHANGE COLUMN slg_object_ID slg_object_ID INT UNSIGNED NULL,
			ADD    COLUMN slg_user_ID INT UNSIGNED NULL AFTER slg_timestamp,
			ADD    COLUMN slg_type ENUM(\'info\', \'warning\', \'error\', \'critical_error\') COLLATE ascii_general_ci NOT NULL DEFAULT \'info\' AFTER slg_user_ID' );
		task_end();

		task_begin( 'Upgrade groups table... ' );
		fn_7( 'T_groups', 'grp_level', 'int unsigned DEFAULT 0 NOT NULL AFTER grp_name' );
		$var_251 = array(
				'Administrators' => 10,
				'Moderators' => 8,
				'Trusted Users' => 6,
				'Normal Users' => 4,
				'Misbehaving/Suspect Users' => 2,
				'Spammers/Restricted Users' => 1
			);
		
		$var_252 = 'SELECT group_name, group_level FROM (';
		$var_253 = true;
		foreach( $var_251 as $var_254 => $var_255 )
		{
			if( $var_253 )
			{
				$var_252 .= 'SELECT '.$var_2->quote( $var_254 ).' AS group_name, '.$var_2->quote( $var_255 ).' AS group_level';
				$var_253 = false;
			}
			var_342
			{
				$var_252 .= ' UNION SELECT '.$var_2->quote( $var_254 ).', '.$var_2->quote( $var_255 );
			}
		}
		$var_252 .= ') AS inner_temp';
		
		$var_2->query( 'UPDATE T_groups
			INNER JOIN ( '.$var_252.' ) AS temp
			       ON grp_name = CONVERT( temp.group_name USING '.$var_2->var_250.' )
			  SET grp_level = temp.group_level' );
		
		$var_2->query( 'UPDATE T_groups
			  SET grp_level = 4
			WHERE grp_level = 0' );
		
		$var_2->query( 'UPDATE T_groups__groupsettings
			  SET gset_value = "moderate"
			WHERE gset_name = "perm_users"
			  AND gset_grp_ID = (SELECT grp_ID FROM T_groups WHERE grp_name = "Moderators")' );
		task_end();

		task_begin( 'Updating general settings...' );
		$var_2->query( 'UPDATE T_settings
				SET set_value = '.$var_2->quote( 'yes' ).'
			WHERE set_name = '.$var_2->quote( 'newusers_canregister' ).'
				AND set_value = '.$var_2->quote( '1' ) );
		task_end();

		task_begin( 'Creating table for User invitation codes... ' );
		fn_3( 'T_users__invitation_code', '
			ivc_ID        int(11) unsigned NOT NULL auto_increment,
			ivc_code      varchar(32) COLLATE ascii_general_ci NOT NULL,
			ivc_expire_ts TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\',
			ivc_source    varchar(30) NULL,
			ivc_grp_ID    int(4) NOT NULL,
			PRIMARY KEY ( ivc_ID ),
			UNIQUE ivc_code ( ivc_code )' );
		task_end();

		task_begin( 'Creating table for User organizations... ' );
		fn_3( 'T_users__organization', '
			org_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			org_name VARCHAR(255) NOT NULL,
			org_url  VARCHAR(2000) NULL,
			PRIMARY KEY ( org_ID ),
			UNIQUE org_name ( org_name )' );
		task_end();

		task_begin( 'Creating table for relations users with organizations... ' );
		fn_3( 'T_users__user_org', '
			uorg_user_ID  INT(11) UNSIGNED NOT NULL,
			uorg_org_ID   INT(11) UNSIGNED NOT NULL,
			uorg_accepted TINYINT(1) DEFAULT 0,
			PRIMARY KEY ( uorg_user_ID, uorg_org_ID )' );
		task_end();

		
		
		
		
		task_begin( 'Upgrading Item Settings...' );
		$var_2->query( 'UPDATE T_items__item_settings
				  SET iset_name = "metakeywords"
				WHERE iset_name = "post_custom_headers"' );
		$var_2->query( 'UPDATE T_items__item_settings
				  SET iset_name = "metadesc"
				WHERE iset_name = "post_metadesc"' );
		$var_2->query( 'UPDATE T_items__item_settings
				  SET iset_name = "comment_expiry_delay"
				WHERE iset_name = "post_expiry_delay"' );
		task_end();

		task_begin( 'Upgrade table files... ' );
		fn_7( 'T_files', 'file_type', "enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER file_ID" );
		task_end();

		task_begin( 'Upgrade table posts... ' );
		$var_2->query( 'ALTER TABLE T_items__item
			CHANGE post_title     post_title     VARCHAR(255) NOT NULL,
			CHANGE post_renderers post_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table post prerendering cache... ' );
		$var_2->query( 'ALTER TABLE T_items__prerendering
			CHANGE itpr_renderers itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table post versions... ' );
		$var_2->query( 'ALTER TABLE T_items__version
			CHANGE iver_title iver_title VARCHAR(255) NULL' );
		task_end();

		task_begin( 'Upgrade table comments... ' );
		$var_2->query( 'ALTER TABLE T_comments
			CHANGE comment_renderers comment_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table comment prerendering cache... ' );
		$var_2->query( 'ALTER TABLE T_comments__prerendering
			CHANGE cmpr_renderers cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table messages... ' );
		$var_2->query( 'ALTER TABLE T_messaging__message
			CHANGE msg_renderers msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table message prerendering cache... ' );
		$var_2->query( 'ALTER TABLE T_messaging__prerendering
			CHANGE mspr_renderers mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL' );
		task_end();

		task_begin( 'Upgrade table user field definitions... ' );
		$var_2->query( 'ALTER TABLE T_users__fielddefs
			CHANGE ufdf_options ufdf_options VARCHAR(255) NULL DEFAULT NULL' );
		
		$var_2->query( 'UPDATE T_users__fielddefs
			SET ufdf_options = NULL
			WHERE ufdf_options = "" AND ufdf_type != "list"');
		task_end();

		task_begin( 'Upgrade table cron tasks... ' );
		$var_2->query( 'ALTER TABLE T_cron__task
			CHANGE ctsk_params ctsk_params varchar(255)' );
		task_end();

		task_begin( 'Upgrading users table...' );
		fn_7( 'T_users', 'user_salt', 'CHAR(8) NOT NULL default "" AFTER user_pass' );
		task_end();

		task_begin( 'Updating users pass storage...' );
		$var_2->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass VARBINARY(32)' );
		$var_2->query( 'UPDATE T_users SET user_pass = UNHEX( user_pass )' );
		$var_2->query( 'ALTER TABLE T_users MODIFY COLUMN user_pass BINARY(16) NOT NULL' );
		task_end();

		fn_0( '11310' );
	}

	var_201( $var_13 < 11320 )
	{ 

		task_begin( 'Update locales to utf-8 charset...' );
		fn_6( 'T_locales', 'loc_charset' );
		$var_2->query( 'UPDATE T_locales
			SET loc_name = REPLACE( loc_name, "latin1", "utf8" )
			WHERE loc_locale IN ( "en-US", "en-AU", "en-CA", "en-GB", "en-IL", "en-NZ", "en-SG" )' );
		$var_2->query( 'UPDATE T_users SET user_locale = "en-US" WHERE user_locale = "en-US-utf8"' );
		$var_2->query( 'UPDATE T_blogs SET blog_locale = "en-US" WHERE blog_locale = "en-US-utf8"' );
		$var_2->query( 'UPDATE T_items__item SET post_locale = "en-US" WHERE post_locale = "en-US-utf8"' );
		$var_2->query( 'UPDATE T_settings SET set_value = "en-US" WHERE set_name = "default_locale" AND set_value = "en-US-utf8"' );
		
		$var_256 = $var_2->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = "en-US-utf8"' );
		if( $var_256 !== NULL )
		{ 
			$var_257 = $var_2->get_var( 'SELECT loc_enabled FROM T_locales WHERE loc_locale = "en-US"' );
			if( $var_257 === NULL )
			{ 
				$var_2->query( 'UPDATE T_locales SET loc_locale = "en-US" WHERE loc_locale = "en-US-utf8"' );
			}
			elseif( $var_256 && ( ! $var_257 ) )
			{ 
				$var_2->query( 'UPDATE T_locales SET loc_enabled = 1 WHERE loc_locale = "en-US"' );
			}

			if( $var_257 !== NULL )
			{ 
				$var_2->query( 'DELETE FROM T_locales WHERE loc_locale = "en-US-utf8"' );
			}
		}
		var_198();

		task_begin( 'Upgrade table files... ' );
		fn_7( 'T_files', 'file_can_be_main_profile', 'TINYINT(1) NOT NULL DEFAULT 1' );
		task_end();

		task_begin( 'Add new video file types... ' );
		$var_258 = array(
				'webm' => "( 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered' )",
				'ogv'  => "( 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered' )",
				'm3u8' => "( 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered' )"
			);
		$var_181 = new class_3();
		$var_181->SELECT( 'ftyp_extensions' );
		$var_181->FROM( 'T_filetypes' );
		$var_181->WHERE( 'ftyp_extensions LIKE "%'.implode( '%" OR ftyp_extensions LIKE "%', array_keys( $var_258 ) ).'%"' );
		$var_259 = $var_2->get_col( $var_181->get() );
		if( ! empty( $var_259 ) )
		{ 
			foreach( $var_259 as $var_260 )
			{
				unset( $var_258[ $var_260 ] );
			}
		}
		if( count( $var_258 ) )
		{ 
			$var_2->query( "INSERT INTO T_filetypes
				( ftyp_extensions, ftyp_name, ftyp_mimetype, ftyp_icon, ftyp_viewtype, ftyp_allowed )
				VALUES ".implode( ', ', $var_258 ) );
		}
		task_end();

		fn_0( '11320' );
	}

	var_201( $var_13 < 11330 )
	{ 

		task_begin( 'Upgrade table blogs... ' );
		$var_2->query( 'UPDATE T_blogs
			  SET blog_in_bloglist = "1"
			WHERE blog_in_bloglist > 0' );
		$var_2->query( 'ALTER TABLE T_blogs
			CHANGE blog_in_bloglist blog_in_bloglist ENUM( "public", "logged", "member", "never" ) COLLATE ascii_general_ci DEFAULT "public" NOT NULL' );
		$var_2->query( 'UPDATE T_blogs
			  SET blog_in_bloglist = "never"
			WHERE blog_in_bloglist = ""' );
		task_end();

		fn_0( '11330' );
	}

	var_201( $var_13 < 11340 )
	{ 

		task_begin( 'Upgrading blogs table...' );
		$var_2->query( "ALTER TABLE T_blogs
			MODIFY blog_type ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL" );
		task_end();

		fn_0( '11340' );
	}

	var_201( $var_13 < 11350 )
	{ 

		task_begin( 'Update category ordering...' );
		$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
				SELECT blog_ID, "category_ordering", IFNULL( set_value, "alpha" )
				FROM T_blogs LEFT JOIN T_settings ON set_name = "chapter_ordering"' );
		$var_2->query( 'DELETE FROM T_settings WHERE set_name = "chapter_ordering"');
		fn_7( 'T_categories', 'cat_subcat_ordering', "enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL AFTER cat_order" );
		task_end();

		fn_0( '11350' );
	}

	var_201( $var_13 < 11360 )
	{ 

		task_begin( 'Upgrade table posts... ' );
		$var_2->query( 'ALTER TABLE T_items__item
            CHANGE post_ptyp_ID post_ityp_ID int(10) unsigned NOT NULL DEFAULT 1');
        $var_2->query( 'ALTER TABLE T_items__item
            DROP INDEX post_ptyp_ID');
		$var_2->query( 'ALTER TABLE T_items__item
            ADD INDEX post_ityp_ID ( post_ityp_ID )');
		task_end();

		task_begin( 'Upgrade table post types... ' );
		$var_2->query( "ALTER TABLE T_items__type
			CHANGE ptyp_ID   ityp_ID   INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			CHANGE ptyp_name ityp_name VARCHAR(30) NOT NULL,
			ADD ityp_description       TEXT NULL DEFAULT NULL,
			ADD ityp_backoffice_tab    VARCHAR(30) NULL DEFAULT NULL,
			ADD ityp_template_name     VARCHAR(40) NULL DEFAULT NULL,
			ADD ityp_use_title         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',
			ADD ityp_use_url           ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_use_text          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_allow_html        TINYINT DEFAULT 1,
			ADD ityp_allow_attachments TINYINT DEFAULT 1,
			ADD ityp_use_excerpt       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_use_title_tag     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_use_meta_desc     ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_use_meta_keywds   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_use_tags          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			ADD ityp_allow_featured    TINYINT DEFAULT 1,
			ADD ityp_use_country       ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			ADD ityp_use_region        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			ADD ityp_use_sub_region    ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			ADD ityp_use_city          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			ADD ityp_use_coordinates   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			ADD ityp_use_custom_fields TINYINT DEFAULT 1,
			ADD ityp_use_comments      TINYINT DEFAULT 1,
			ADD ityp_allow_closing_comments   TINYINT DEFAULT 1,
			ADD ityp_allow_disabling_comments TINYINT DEFAULT 0,
			ADD ityp_use_comment_expiration   ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'" );
		$var_2->query( 'UPDATE T_items__type SET
			ityp_backoffice_tab = CASE
				WHEN ityp_ID = 1    THEN "Posts"
				WHEN ityp_ID = 1000 THEN "Pages"
				WHEN ityp_ID >= 1400 AND ityp_ID <= 1600 THEN "Intros"
				WHEN ityp_ID = 2000 THEN "Podcasts"
				WHEN ityp_ID = 3000 THEN "Sidebar links"
				WHEN ityp_ID = 4000 THEN "Advertisement"
				WHEN ityp_ID = 5000 THEN NULL
				ELSE "Posts"
			END,
			ityp_template_name = CASE
				WHEN ityp_ID = 1 OR ityp_ID = 2000 THEN "single"
				WHEN ityp_ID = 1000 THEN "page"
				ELSE NULL
			END' );
		var_198();

		task_begin( 'Adding new post types...' );
		$var_2->begin();
		$var_261 = array(
				
				'manual' => array( 'type_ID' => 100, 'title' => 'Manual Page' ),
				'forum'  => array( 'type_ID' => 200, 'title' => 'Forum Topic' ),
			);
		$var_262 = array();
		foreach( $var_261 as $var_114 => $var_263 )
		{
			$var_264 = $var_261[ $var_114 ]['type_ID'];
			while( $var_264 !== NULL )
			{ 
				$var_265 = $var_264;
				$var_264 = $var_2->get_var( 'SELECT ityp_ID FROM T_items__type WHERE ityp_ID = '.$var_2->quote( $var_264 ) );
				if( $var_264 === NULL )
				{ 
					$var_262[] = '( '.$var_265.', '.$var_2->quote( $var_261[ $var_114 ]['title'] ).', "Posts", "single", 0 )';
					$var_261[ $var_114 ]['new_type_ID'] = $var_265;
					break;
				}
				$var_264++;
			}
		}
		var_201( count( $var_262 ) )
		{
			
			$var_2->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_allow_html )
						VALUES '.implode( ', ', $var_262 ) );
			
			foreach( $var_261 as $var_114 => $var_263 )
			{
				$var_2->query( 'UPDATE T_items__item
					INNER JOIN T_categories
					   ON post_main_cat_ID = cat_ID
					  AND post_ityp_ID = 1
					INNER JOIN T_blogs
					   ON cat_blog_ID = blog_ID
					  AND blog_type = '.$var_2->quote( $var_114 ).'
					  SET post_ityp_ID = '.$var_2->quote( $var_263['new_type_ID'] ) );
			}
		}
		$var_2->commit();
		var_198();

		var_199( 'Upgrade var_18 comments... ' );
		$var_2->query( "ALTER TABLE T_comments
			CHANGE comment_type comment_type enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment'" );
		task_end();

		task_begin( 'Creating table for custom fields of Post Types... ' );
		fn_3( 'T_items__type_custom_field', '
			itcf_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			itcf_ityp_ID INT(11) UNSIGNED NOT NULL,
			itcf_label   VARCHAR(255) NOT NULL,
			itcf_name    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,
			itcf_type    ENUM( \'double\', \'varchar\' ) COLLATE ascii_general_ci NOT NULL,
			itcf_order   INT NULL,
			PRIMARY KEY ( itcf_ID ),
			UNIQUE itcf_ityp_ID_name( itcf_ityp_ID, itcf_name )' );

		
		$var_181 = new class_3();
		$var_181->SELECT( '*' );
		$var_181->FROM( 'T_coll_settings' );
		$var_181->WHERE( 'cset_name LIKE '.$var_2->quote( 'custom_%' ) );
		$var_181->ORDER_BY( 'cset_coll_ID' );
		$var_267 = $var_2->get_results( $var_181->get() );
		$var_268 = array();
		$var_269 = array();
		$var_270 = array();
		if( count( $var_267 ) )
		{ 
			foreach( $var_267 as $var_271 )
			{
				if( preg_match( '/custom_(double|varchar)\d+/', $var_271->var_272, $var_158 ) )
				{ 
					if( ! isset( $var_268[ $var_271->var_273 ] ) )
					{
						$var_268[ $var_271->var_273 ] = array();
					}
					
					$var_269[] = 'cset_coll_ID = '.$var_2->quote( $var_271->var_273 ).' AND cset_name = '.$var_2->quote( $var_271->var_272 );

					$var_274 = $var_158[1];
					$var_275 = $var_271->var_276;
					$var_277 = '';
					$var_278 = '';
					foreach( $var_267 as $var_279 )
					{
						if( $var_279->var_272 == 'custom_'.$var_274.'_'.$var_275 )
						{ 
							$var_277 = $var_279->var_276;
							
							$var_269[] = 'cset_coll_ID = '.$var_2->quote( $var_279->var_273 ).' AND cset_name = '.$var_2->quote( $var_279->var_272 );
						}
						var_201( $var_279->var_272 == 'custom_fname_'.$var_275 )
						{ 
							$var_278 = $var_279->var_276;
							
							$var_269[] = 'cset_coll_ID = '.$var_2->quote( $var_279->var_273 ).' AND cset_name = '.$var_2->quote( $var_279->var_272 );
						}
					}
					$var_268[ $var_271->var_273 ][] = array(
							'type'  => $var_274,
							'key'   => $var_275,
							'label' => $var_277,
							'name'  => $var_278
						);
				}
			}
			var_201( count( $var_268 ) )
			{ 
				$var_280 = & get_BlogCache();
				$var_281 = array();
				$var_282 = $var_2->get_var( 'SELECT MAX( ityp_ID ) FROM T_items__type' ) + 1;
				foreach( $var_268 as $var_82 => $var_283 )
				{
					if( ! ( $var_284 = $var_280->get_by_ID( $var_82, false, false ) ) )
					{ 
						var_317;
					}
					$var_281[] = '( '.$var_282.', '
						.$var_2->quote( 'custom_'.$var_284->get( 'shortname' ) ).', '
						.'"Posts", '
						.'"single", '
						.$var_2->quote( $var_284->get_setting( 'require_title' ) == 'none' ? 'never' : $var_284->get_setting( 'require_title' ) ).', '
						.$var_2->quote( intval( $var_284->get_setting( 'allow_html_post' ) ) ).', '
						.$var_2->quote( $var_284->get_setting( 'location_country' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_country' ) ).', '
						.$var_2->quote( $var_284->get_setting( 'location_region' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_region' ) ).', '
						.$var_2->quote( $var_284->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_subregion' ) ).', '
						.$var_2->quote( $var_284->get_setting( 'location_city' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_city' ) ).', '
						.$var_2->quote( $var_284->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '
						.$var_2->quote( intval( $var_284->get_setting( 'disable_comments_bypost' ) ) ).' )';
					
					$var_270[ $var_284->var_89 ] = $var_282;
					$var_287 = $var_2->get_col( 'SELECT cat_ID FROM T_categories WHERE cat_blog_ID = '.$var_284->var_89 );
					if( count( $var_287 ) )
					{ 
						$var_2->query( 'UPDATE T_items__item SET post_ityp_ID = '.$var_282.'
							WHERE post_ityp_ID = 1
							  AND post_main_cat_ID IN ( '.implode( ', ', $var_287 ).' )' );

						
						$var_288 = new class_3();
						$var_288->SELECT( 'post_ID' );
						$var_288->FROM( 'T_items__item' );
						$var_288->FROM_add( 'INNER JOIN T_items__item_settings ON post_ID = iset_item_ID' );
						$var_288->WHERE( 'post_main_cat_ID IN ( '.implode( ', ', $var_287 ).' )' );
						$var_288->WHERE_and( 'post_ityp_ID = 1000' );
						$var_288->WHERE_and( 'iset_name LIKE '.$var_2->quote( 'custom_double_%' )
															.' OR iset_name LIKE '.$var_2->quote( 'custom_varchar_%' ) );
						$var_288->WHERE_and( 'iset_value != ""' );
						$var_288->GROUP_BY( 'post_ID' );
						$var_291 = $var_2->get_col( $var_288->get() );
						$var_292 = 0;
						if( count( $var_291 ) > 0 )
						{ 
							
							$var_292 = $var_282 + 1;
							$var_281[] = '( '.$var_292.', '
								.$var_2->quote( 'page_'.$var_284->get( 'shortname' ) ).', '
								.'"Pages", '
								.'"page", '
								.$var_2->quote( $var_284->get_setting( 'require_title' ) == 'none' ? 'never' : $var_284->get_setting( 'require_title' ) ).', '
								.$var_2->quote( intval( $var_284->get_setting( 'allow_html_post' ) ) ).', '
								.$var_2->quote( $var_284->get_setting( 'location_country' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_country' ) ).', '
								.$var_2->quote( $var_284->get_setting( 'location_region' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_region' ) ).', '
								.$var_2->quote( $var_284->get_setting( 'location_subregion' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_subregion' ) ).', '
								.$var_2->quote( $var_284->get_setting( 'location_city' ) == 'hidden' ? 'never' : $var_284->get_setting( 'location_city' ) ).', '
								.$var_2->quote( $var_284->get_setting( 'show_location_coordinates' ) ? 'optional' : 'never' ).', '
								.$var_2->quote( intval( $var_284->get_setting( 'disable_comments_bypost' ) ) ).' )';
							foreach( $var_283 as $var_295 )
							{
								
								$var_2->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )
									VALUES ( '.$var_292.', '
									.$var_2->quote( $var_295['label'] ).', '
									.$var_2->quote( $var_295['name'] ).', '
									.$var_2->quote( $var_295['type'] ).' )' );
								$var_293 = $var_2->var_149;
								
								$var_2->query( 'UPDATE T_items__item_settings
										SET iset_name = '.$var_2->quote( 'custom_'.$var_295['type'].'_'.$var_293 ).'
									WHERE iset_item_ID IN ( '.implode( ', ', $var_291 ).' )
										AND iset_name = '.$var_2->quote( 'custom_'.$var_295['type'].'_'.$var_295['key'] ) );
							}
							
							$var_2->query( 'UPDATE T_items__item SET post_ityp_ID = '.$var_292.'
								WHERE post_ID IN ( '.implode( ', ', $var_291 ).' )' );
						}
					}
					
					var_294( $var_283 as $var_295 )
					{
						
						$var_2->query( 'INSERT INTO T_items__type_custom_field ( itcf_ityp_ID, itcf_label, itcf_name, itcf_type )
							VALUES ( '.$var_282.', '
							.$var_2->quote( $var_295['label'] ).', '
							.$var_2->quote( $var_295['name'] ).', '
							.$var_2->quote( $var_295['type'] ).' )' );
						$var_293 = $var_2->var_149;
						
						$var_2->query( 'UPDATE T_items__item_settings
								SET iset_name = '.$var_2->quote( 'custom_'.$var_295['type'].'_'.$var_293 ).'
							WHERE iset_name = '.$var_2->quote( 'custom_'.$var_295['type'].'_'.$var_295['key'] ) );
					}
					
					$var_282 += $var_292 > 0 ? 2 : 1;
				}
				
				$var_2->query( 'INSERT INTO T_items__type ( ityp_ID, ityp_name, ityp_backoffice_tab, ityp_template_name, ityp_use_title, ityp_allow_html, ityp_use_country, ityp_use_region, ityp_use_sub_region, ityp_use_city, ityp_use_coordinates, ityp_allow_disabling_comments )
					VALUES '.implode( ', ', $var_281 ) );
				
				$var_269[] = 'var_272 var_296 "var_297%"';
				$var_2->var_7( 'DELETE FROM T_coll_settings
					WHERE ( '.implode( ') OR (', $var_269 ).' )' );
			}
		}

		
		$var_298 = $var_2->var_91( 'SELECT blog_ID FROM T_blogs' );
		$var_299 = array();
		foreach( $var_298 as $var_82 )
		{
			if( isset( $var_270[ $var_82 ] ) )
			{ 
				$var_300 = $var_270[ $var_82 ];
			}
			else
			{ 
				if( ! isset( $var_301 ) )
				{
					$var_181 = new SQL();
					$var_181->var_182( 'ityp_ID' );
					$var_181->var_183( 'T_items__type' );
					$var_181->var_141( 'ityp_ID NOT IN (1000,1400,1500,1520,1530,1570,1600,2000,3000,4000,5000)' );
					$var_181->var_266( 'ityp_ID' );
					$var_181->var_302( '1' );
					$var_301 = $var_2->var_24( $var_181->var_185() );;
				}
				$var_300 = $var_301;
			}
			$var_299[] = '( '.$var_2->var_25( $var_82 ).', "var_303", '.$var_2->var_25( $var_300 ).' )';
		}
		if( ! empty( $var_299 ) )
		{ 
			$var_2->var_7( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )
				VALUES '.implode( ', ', $var_299 ) );
		}
		task_end();

		task_begin( 'Updating site settings... ' );
		if( $var_2->var_24( 'SELECT set_value FROM T_settings WHERE set_name = "var_304"' ) === NULL )
		{ 
			$var_2->var_7( 'var_190 var_191 var_305 ( var_306, var_307 )'
								.' VALUES ( "site_color", "
		}
		task_end();

		set_upgrade_checkpoint( '11360' );
	}

	var_201( $var_13 < 11370 )
	{ 

		task_begin( 'Updating user settings... ' );
		$var_2->query( 'DELETE FROM T_users__usersettings WHERE uset_name = "admin_skin"' );
		task_end();

		fn_0( '11370' );
	}

	var_201( $var_13 < 11375 )
	{ 

		task_begin( 'Upgrade table user field definitions... ' );
		$var_2->query( 'ALTER TABLE T_users__fielddefs
			ADD ufdf_icon_name varchar(100) COLLATE ascii_general_ci NULL' );
		$var_2->query( 'UPDATE T_users__fielddefs SET
			ufdf_icon_name = CASE
				WHEN ufdf_name = "Yahoo IM"      THEN "fa fa-yahoo"
				WHEN ufdf_name = "Skype"         THEN "fa fa-skype"
				WHEN ufdf_name = "Main phone"    THEN "fa fa-phone"
				WHEN ufdf_name = "Cell phone"    THEN "fa fa-mobile-phone"
				WHEN ufdf_name = "Office phone"  THEN "fa fa-phone"
				WHEN ufdf_name = "Home phone"    THEN "fa fa-phone"
				WHEN ufdf_name = "Office FAX"    THEN "fa fa-fax"
				WHEN ufdf_name = "Home FAX"      THEN "fa fa-fax"
				WHEN ufdf_name = "Linkedin"      THEN "fa fa-linkedin fa-x-linkedin--nudge"
				WHEN ufdf_name = "Twitter"       THEN "fa fa-twitter"
				WHEN ufdf_name = "Facebook"      THEN "fa fa-facebook"
				WHEN ufdf_name = "Flickr"        THEN "fa fa-flickr"
				WHEN ufdf_name = "YouTube"       THEN "fa fa-youtube"
				WHEN ufdf_name = "Digg"          THEN "fa fa-digg"
				WHEN ufdf_name = "StumbleUpon"   THEN "fa fa-stumbleupon"
				WHEN ufdf_name = "GitHub"        THEN "fa fa-github-alt"
				WHEN ufdf_name = "Google Plus"   THEN "fa fa-google-plus fa-x-google-plus--nudge"
				WHEN ufdf_name = "Pinterest"     THEN "fa fa-pinterest-p"
				WHEN ufdf_name = "Main address"  THEN "fa fa-building"
				WHEN ufdf_name = "Home address"  THEN "fa fa-home"
				WHEN ufdf_name = "About me"      THEN "fa fa-info-circle"
				WHEN ufdf_name = "I like"        THEN "fa fa-thumbs-o-up"
				WHEN ufdf_name = "I don\'t like" THEN "fa fa-thumbs-o-down"
				ELSE ufdf_icon_name
			END' );
		var_198();

		var_0( '11375' );
	}

	var_201( $var_13 < 11380 )
	{ 

		task_begin( 'Update links table... ' );
		$var_2->query( 'UPDATE T_links
			  SET link_position = "cover"
			WHERE link_position = "albumart"' );
		task_end();

		fn_0( '11380' );
	}

	var_201( $var_13 < 11390 )
	{ 

		task_begin( 'Upgrading table of relations users with organizations... ' );
		$var_2->query( 'ALTER TABLE T_users__user_org
			ADD COLUMN uorg_role VARCHAR(255) NULL' );
		task_end();

		fn_0( '11390' );
	}

	var_201( $var_13 < 11400 )
	{ 

		task_begin( 'Upgrade table user field definitions... ' );
		$var_2->query( 'ALTER TABLE T_users__fielddefs
			ADD ufdf_code varchar(20) COLLATE ascii_general_ci NULL' );
		$var_308 = array(
				'Micro bio'     => 'microbio',
				'I like'        => 'ilike',
				'I don\'t like' => 'idontlike',
				'MSN/Live IM'   => 'msnliveim',
				'Yahoo IM'      => 'yahooim',
				'AOL AIM'       => 'aolaim',
				'ICQ ID'        => 'icqid',
				'Skype'         => 'skype',
				'Main phone'    => 'mainphone',
				'Cell phone'    => 'cellphone',
				'Office phone'  => 'officephone',
				'Home phone'    => 'homephone',
				'Office FAX'    => 'officefax',
				'Home FAX'      => 'homefax',
				'Twitter'       => 'twitter',
				'Facebook'      => 'facebook',
				'Google Plus'   => 'googleplus',
				'Linkedin'      => 'linkedin',
				'GitHub'        => 'github',
				'Website'       => 'website',
				'Blog'          => 'blog',
				'Myspace'       => 'myspace',
				'Flickr'        => 'flickr',
				'YouTube'       => 'youtube',
				'Digg'          => 'digg',
				'StumbleUpon'   => 'stumbleupon',
				'Pinterest'     => 'pinterest',
				'Role'          => 'role',
				'Organization'  => 'organization',
				'Division'      => 'division',
				'VAT ID'        => 'vatid',
				'Main address'  => 'mainaddress',
				'Home address'  => 'homeaddress',
			);
		foreach( $var_308 as $var_309 => $var_310 )
		{
			$var_2->var_7( 'var_135 var_311
				  var_137 var_312 = '.$var_2->quote( $var_310 ).'
				WHERE ufdf_name = '.$var_2->quote( $var_309 ).'
				LIMIT 1' ); 
		}
		
		$var_2->query( 'UPDATE T_users__fielddefs
				SET ufdf_code = CONCAT( "code_", ufdf_ID )
			WHERE ufdf_code IS NULL' );
		
		$var_2->var_7( 'ALTER TABLE var_311
			MODIFY var_312 varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL' );
		var_198();

		

		var_0( '11400' );
	}

	var_201( $var_13 < 11410 )
	{ 

		task_begin( 'Upgrading skin names... ' );
		$var_2->query( 'UPDATE T_skins__skin
							 SET skin_folder = CASE
									WHEN skin_folder = "bootstrap"        THEN "bootstrap_blog_skin"
									WHEN skin_folder = "bootstrap_main"   THEN "bootstrap_main_skin"
									WHEN skin_folder = "bootstrap_manual" THEN "bootstrap_manual_skin"
									ELSE skin_folder
			END' );
		task_end();

		

		fn_0( '11410' );
	}

	var_201( $var_13 < 11420 )
	{ 

		
		

		task_begin( 'Updating hit log keyphrases table...' );
		$var_2->query( 'ALTER TABLE T_track__keyphrase
			MODIFY keyp_phrase  VARCHAR( 255 ) COLLATE utf8_bin NOT NULL' );
		task_end();

		task_begin( 'Check and normalize the ASCII charsets/collations... <br />' );
		task_begin( '- Converting skins table...' );
		$var_2->query( "ALTER TABLE T_skins__skin
			MODIFY skin_type enum('normal','feed','sitemap','mobile','tablet') COLLATE ascii_general_ci NOT NULL default 'normal'" );
		task_end();
		task_begin( '- Converting blogs table...' );
		$var_2->query( "ALTER TABLE T_blogs
			MODIFY blog_access_type    VARCHAR(10) COLLATE ascii_general_ci NOT NULL DEFAULT 'extrapath',
			MODIFY blog_urlname        VARCHAR(255) COLLATE ascii_general_ci NOT NULL DEFAULT 'urlname',
			MODIFY blog_in_bloglist    ENUM( 'public', 'logged', 'member', 'never' ) COLLATE ascii_general_ci DEFAULT 'public' NOT NULL,
			MODIFY blog_media_location ENUM( 'default', 'subdir', 'custom', 'none' ) COLLATE ascii_general_ci DEFAULT 'default' NOT NULL,
			MODIFY blog_type           ENUM( 'main', 'std', 'photo', 'group', 'forum', 'manual' ) COLLATE ascii_general_ci DEFAULT 'std' NOT NULL" );
		var_198();
		task_begin( '- Converting blog settings table...' );
		$var_2->query( 'ALTER TABLE T_coll_settings
			MODIFY cset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );
		task_end();
		task_begin( '- Converting widgets table...' );
		$var_2->query( "ALTER TABLE {$var_64}widget
			MODIFY wi_type ENUM( 'core', 'plugin' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'core',
			MODIFY wi_code VARCHAR(32) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting categories table...' );
		$var_2->query( "ALTER TABLE T_categories
			MODIFY cat_urlname varchar(255) COLLATE ascii_general_ci NOT NULL,
			MODIFY cat_subcat_ordering enum('parent', 'alpha', 'manual') COLLATE ascii_general_ci NULL DEFAULT NULL" );
		task_end();
		task_begin( '- Converting posts table...' );
		$var_2->query( "ALTER TABLE T_items__item
			MODIFY post_status               enum('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NOT NULL default 'published',
			MODIFY post_urltitle             VARCHAR(210) COLLATE ascii_general_ci NOT NULL,
			MODIFY post_notifications_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq',
			MODIFY post_comment_status       ENUM('disabled', 'open', 'closed') COLLATE ascii_general_ci NOT NULL DEFAULT 'open',
			MODIFY post_renderers            VARCHAR(255) COLLATE ascii_general_ci NOT NULL" );
		var_198();
		task_begin( '- Converting comments table...' );
		$var_2->query( "ALTER TABLE T_comments
			MODIFY comment_type         enum('comment','linkback','trackback','pingback','meta') COLLATE ascii_general_ci NOT NULL default 'comment',
			MODIFY comment_status       ENUM('published','community','deprecated','protected','private','review','draft','trash') COLLATE ascii_general_ci DEFAULT 'published' NOT NULL,
			MODIFY comment_author_email varchar(255) COLLATE ascii_general_ci NULL,
			MODIFY comment_author_IP    varchar(45) COLLATE ascii_general_ci NOT NULL default '',
			MODIFY comment_renderers    VARCHAR(255) COLLATE ascii_general_ci NOT NULL,
			MODIFY comment_secret       CHAR(32) COLLATE ascii_general_ci NULL default NULL,
			MODIFY comment_notif_status ENUM('noreq','todo','started','finished') COLLATE ascii_general_ci NOT NULL DEFAULT 'noreq' COMMENT 'Have notifications been sent for this comment? How far are we in the process?'" );
		var_198();
		task_begin( '- Converting post prerendered contents table...' );
		$var_2->query( "ALTER TABLE T_items__prerendering
			MODIFY itpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,
			MODIFY itpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting comment prerendered contents table...' );
		$var_2->query( "ALTER TABLE T_comments__prerendering
			MODIFY cmpr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,
			MODIFY cmpr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting post versions table...' );
		$var_2->query( "ALTER TABLE T_items__version
			MODIFY iver_status ENUM('published','community','deprecated','protected','private','review','draft','redirected') COLLATE ascii_general_ci NULL" );
		task_end();
		task_begin( '- Converting post types table...' );
		$var_2->query( "ALTER TABLE T_items__type
			MODIFY ityp_use_title              ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'required',
			MODIFY ityp_use_url                ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_text               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_excerpt            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_title_tag          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_meta_desc          ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_meta_keywds        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_tags               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional',
			MODIFY ityp_use_country            ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			MODIFY ityp_use_region             ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			MODIFY ityp_use_sub_region         ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			MODIFY ityp_use_city               ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			MODIFY ityp_use_coordinates        ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never',
			MODIFY ityp_use_comment_expiration ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'optional'" );
		var_198();
		var_199( '- var_60 post types custom var_19 var_18...' );
		$var_2->query( "ALTER TABLE T_items__type_custom_field
			MODIFY itcf_name VARCHAR(255) COLLATE ascii_general_ci NOT NULL,
			MODIFY itcf_type ENUM( 'double', 'varchar' ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting post settings table...' );
		$var_2->query( "ALTER TABLE T_items__item_settings
			MODIFY iset_name varchar( 50 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting user permissions table...' );
		$var_2->query( "ALTER TABLE T_coll_user_perms
			MODIFY bloguser_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloguser_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',
			MODIFY bloguser_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloguser_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		var_198();
		task_begin( '- Converting group permissions table...' );
		$var_2->query( "ALTER TABLE T_coll_group_perms
			MODIFY bloggroup_perm_poststatuses set('review','draft','private','protected','deprecated','community','published','redirected') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloggroup_perm_edit         ENUM('no','own','lt','le','all','redirected') COLLATE ascii_general_ci NOT NULL default 'no',
			MODIFY bloggroup_perm_cmtstatuses  set('review','draft','private','protected','deprecated','community','published') COLLATE ascii_general_ci NOT NULL default '',
			MODIFY bloggroup_perm_edit_cmt     ENUM('no','own','anon','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		var_198();
		task_begin( '- Converting links table...' );
		$var_2->query( "ALTER TABLE T_links
			MODIFY link_position varchar(10) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting files table...' );
		$var_2->query( "ALTER TABLE T_files
			MODIFY file_type      enum('image', 'audio', 'other') COLLATE ascii_general_ci NULL DEFAULT NULL,
			MODIFY file_root_type enum('absolute','user','collection','shared','skins','import') COLLATE ascii_general_ci NOT NULL DEFAULT 'absolute'" );
		task_end();
		task_begin( '- Converting file types table...' );
		$var_2->query( "ALTER TABLE T_filetypes
			MODIFY ftyp_extensions varchar(30) COLLATE ascii_general_ci NOT NULL,
			MODIFY ftyp_viewtype   varchar(10) COLLATE ascii_general_ci NOT NULL,
			MODIFY ftyp_allowed    enum('any','registered','admin') COLLATE ascii_general_ci NOT NULL default 'admin'" );
		task_end();
		task_begin( '- Converting messages table...' );
		$var_2->query( "ALTER TABLE T_messaging__message
			MODIFY msg_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting message prerendering contents table...' );
		$var_2->query( "ALTER TABLE T_messaging__prerendering
			MODIFY mspr_format    ENUM('htmlbody','entityencoded','xml','text') COLLATE ascii_general_ci NOT NULL,
			MODIFY mspr_renderers VARCHAR(255) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting sessions table...' );
		$var_2->query( "ALTER TABLE T_sessions
			MODIFY sess_key       CHAR(32) COLLATE ascii_general_ci NULL,
			MODIFY sess_ipaddress VARCHAR(45) COLLATE ascii_general_ci NOT NULL DEFAULT '',
			MODIFY sess_device    VARCHAR(8) COLLATE ascii_general_ci NOT NULL DEFAULT ''" );
		task_end();
		task_begin( '- Converting domains table...' );
		$var_2->query( "ALTER TABLE T_basedomains
			MODIFY dom_status ENUM('unknown','trusted','suspect','blocked') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown',
			MODIFY dom_type   ENUM('unknown','normal','searcheng','aggregator','email') COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'" );
		task_end();
		task_begin( '- Converting logs table...' );
		$var_2->query( "ALTER TABLE T_hitlog
			MODIFY hit_ctrl         VARCHAR(30) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY hit_type         ENUM('standard','rss','admin','ajax', 'service') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL,
			MODIFY hit_referer_type ENUM('search','special','spam','referer','direct','self') COLLATE ascii_general_ci NOT NULL,
			MODIFY hit_remote_addr  VARCHAR(45) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY hit_agent_type   ENUM('robot','browser','unknown') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL" );
		task_end();
		task_begin( '- Converting goal categories table...' );
		$var_2->query( "ALTER TABLE T_track__goalcat
			MODIFY gcat_color  char(7) COLLATE ascii_general_ci default NULL" );
		task_end();
		task_begin( '- Converting groups table...' );
		$var_2->query( "ALTER TABLE T_groups
			MODIFY grp_perm_blogs                  enum('user','viewall','editall') COLLATE ascii_general_ci NOT NULL default 'user',
			MODIFY grp_perm_xhtmlvalidation        VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',
			MODIFY grp_perm_xhtmlvalidation_xmlrpc VARCHAR(10) COLLATE ascii_general_ci NOT NULL default 'always',
			MODIFY grp_perm_stats                  enum('none','user','view','edit') COLLATE ascii_general_ci NOT NULL default 'none'" );
		task_end();
		task_begin( '- Converting group settings table...' );
		$var_2->query( "ALTER TABLE T_groups__groupsettings
			MODIFY gset_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting settings table...' );
		$var_2->query( "ALTER TABLE T_settings
			MODIFY set_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cache table...' );
		$var_2->query( "ALTER TABLE T_global__cache
			MODIFY cach_name VARCHAR(30) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting users table...' );
		$var_2->query( "ALTER TABLE T_users
			MODIFY user_email           varchar(255) COLLATE ascii_general_ci NOT NULL,
			MODIFY user_status          enum( 'activated', 'autoactivated', 'closed', 'deactivated', 'emailchanged', 'failedactivation', 'new' ) COLLATE ascii_general_ci NOT NULL default 'new',
			MODIFY user_unsubscribe_key CHAR(32) COLLATE ascii_general_ci NOT NULL default '' COMMENT 'A specific key, it is used when a user wants to unsubscribe from a post comments without signing in',
			MODIFY user_gender          char(1) COLLATE ascii_general_ci NULL" );
		task_end();
		task_begin( '- Converting user fields table...' );
		$var_2->query( "ALTER TABLE T_users__fielddefs
			MODIFY ufdf_type       char(8) COLLATE ascii_general_ci NOT NULL,
			MODIFY ufdf_required   enum('hidden','optional','recommended','require') COLLATE ascii_general_ci NOT NULL default 'optional',
			MODIFY ufdf_duplicated enum('forbidden','allowed','list') COLLATE ascii_general_ci NOT NULL default 'allowed',
			MODIFY ufdf_icon_name  varchar(100) COLLATE ascii_general_ci NULL,
			MODIFY ufdf_code       varchar(20) COLLATE ascii_general_ci UNIQUE NOT NULL" );
		task_end();
		task_begin( '- Converting user reports table...' );
		$var_2->query( "ALTER TABLE T_users__reports
			MODIFY urep_status enum( 'fake', 'guidelines', 'harass', 'spam', 'other' ) COLLATE ascii_general_ci" );
		task_end();
		task_begin( '- Converting user invitation codes table...' );
		$var_2->query( "ALTER TABLE T_users__invitation_code
			MODIFY ivc_code varchar(32) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting locales table...' );
		$var_2->query( "ALTER TABLE T_locales
			MODIFY loc_datefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'y-m-d',
			MODIFY loc_timefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i:s',
			MODIFY loc_shorttimefmt varchar(20) COLLATE ascii_general_ci NOT NULL default 'H:i'" );
		task_end();
		task_begin( '- Converting antispam table...' );
		$var_2->query( "ALTER TABLE {$var_64}antispam
			MODIFY aspm_source enum( 'local','reported','central' ) COLLATE ascii_general_ci NOT NULL default 'reported'" );
		task_end();
		task_begin( '- Converting IP ranges table...' );
		$var_2->query( "ALTER TABLE T_antispam__iprange
			MODIFY aipr_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL" );
		task_end();
		task_begin( '- Converting user settings table...' );
		$var_2->query( "ALTER TABLE T_users__usersettings
			MODIFY uset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugins table...' );
		$var_2->query( "ALTER TABLE T_plugins
			MODIFY plug_classname VARCHAR(40) COLLATE ascii_general_ci NOT NULL default '',
			MODIFY plug_code      VARCHAR(32) COLLATE ascii_general_ci NULL,
			MODIFY plug_version   VARCHAR(42) COLLATE ascii_general_ci NOT NULL default '0',
			MODIFY plug_status    ENUM( 'enabled', 'disabled', 'needs_config', 'broken' ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin settings table...' );
		$var_2->query( "ALTER TABLE T_pluginsettings
			MODIFY pset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin user settings table...' );
		$var_2->query( "ALTER TABLE T_pluginusersettings
			MODIFY puset_name VARCHAR( 30 ) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting plugin events table...' );
		$var_2->query( "ALTER TABLE T_pluginevents
			MODIFY pevt_event VARCHAR(40) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cron tasks table...' );
		$var_2->query( "ALTER TABLE T_cron__task
			MODIFY ctsk_key varchar(50) COLLATE ascii_general_ci not null" );
		task_end();
		task_begin( '- Converting cron logs table...' );
		$var_2->query( "ALTER TABLE T_cron__log
			MODIFY clog_status enum('started','finished','error','timeout') COLLATE ascii_general_ci not null default 'started'" );
		task_end();
		task_begin( '- Converting countries table...' );
		$var_2->query( "ALTER TABLE T_regional__country
			MODIFY ctry_code   char(2) COLLATE ascii_general_ci NOT NULL,
			MODIFY ctry_status enum( 'trusted', 'suspect', 'blocked' ) COLLATE ascii_general_ci NULL DEFAULT NULL" );
		task_end();
		task_begin( '- Converting regions table...' );
		$var_2->query( "ALTER TABLE T_regional__region
			MODIFY rgn_code char(6) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting subregions table...' );
		$var_2->query( "ALTER TABLE T_regional__subregion
			MODIFY subrg_code char(6) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting cities table...' );
		$var_2->query( "ALTER TABLE T_regional__city
			MODIFY city_postcode char(12) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting currencies table...' );
		$var_2->query( "ALTER TABLE T_regional__currency
			MODIFY curr_code char(3) COLLATE ascii_general_ci NOT NULL" );
		task_end();
		task_begin( '- Converting slugs table...' );
		$var_2->query( "ALTER TABLE T_slug
			MODIFY slug_title varchar(255) COLLATE ascii_bin NOT NULL,
			MODIFY slug_type	char(6) COLLATE ascii_bin NOT NULL DEFAULT 'item'" );
		task_end();
		task_begin( '- Converting email logs table...' );
		$var_2->query( "ALTER TABLE T_email__log
			MODIFY emlog_to     VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emlog_result ENUM( 'ok', 'error', 'blocked' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'ok'" );
		task_end();
		task_begin( '- Converting email returns table...' );
		$var_2->query( "ALTER TABLE T_email__returns
			MODIFY emret_address   VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emret_errtype   CHAR(1) COLLATE ascii_general_ci NOT NULL DEFAULT 'U'" );
		task_end();
		task_begin( '- Converting email addresses table...' );
		$var_2->query( "ALTER TABLE T_email__address
			MODIFY emadr_address VARCHAR(255) COLLATE ascii_general_ci DEFAULT NULL,
			MODIFY emadr_status  ENUM( 'unknown', 'redemption', 'warning', 'suspicious1', 'suspicious2', 'suspicious3', 'prmerror', 'spammer' ) COLLATE ascii_general_ci NOT NULL DEFAULT 'unknown'" );
		task_end();
		task_begin( '- Converting system log table...' );
		$var_2->query( "ALTER TABLE T_syslog
			MODIFY slg_type   ENUM('info', 'warning', 'error', 'critical_error') COLLATE ascii_general_ci NOT NULL DEFAULT 'info',
			MODIFY slg_origin ENUM('core', 'plugin') COLLATE ascii_general_ci,
			MODIFY slg_object ENUM('comment', 'item', 'user', 'file') COLLATE ascii_general_ci" );
		task_end();
		task_end();

		fn_0( '11420' );
	}

	var_201( $var_13 < 11430 )
	{ 

		task_begin( 'Upgrading tags table...' );
		
		$var_313 = $var_2->get_results( 'SELECT *
			 FROM T_items__tag
			WHERE tag_name NOT REGEXP "^[A-Za-z0-9_\-\s]+$"' );
		foreach( $var_313 as $var_314 )
		{ 
			$var_315 = preg_replace( '/[^A-Za-z0-9_\-\s]/', '_', $var_314->var_316 );
			$var_315 = str_replace( '__', '_', $var_315 );

			if( $var_315 == $var_314->var_316 )
			{ 
				var_317;
			}

			
			$var_318 = 1;
			$var_319 = $var_315;
			while( $var_2->get_var( 'SELECT tag_ID
				 FROM T_items__tag
				WHERE tag_name = '.$var_2->quote( $var_319 ) ) )
			{
				$var_319 = $var_315.$var_318;
				$var_318++;
			}

			
			$var_2->query( 'UPDATE T_items__tag
				  SET tag_name = '.$var_2->quote( $var_319 ).'
				WHERE tag_ID = '.$var_314->var_320 );
		}
		
		$var_321 = $var_2->get_col( 'SELECT tag_ID FROM T_items__tag
			WHERE tag_name = ""' );
		if( ! empty( $var_321 ) )
		{
			$var_2->query( 'DELETE FROM T_items__tag
				WHERE tag_ID IN ( '.$var_2->quote( $var_321 ).' ) ' );
			$var_2->query( 'DELETE FROM T_items__itemtag
				WHERE itag_tag_ID IN ( '.$var_2->quote( $var_321 ).' ) ' );
		}
		
		$var_2->query( 'ALTER TABLE T_items__tag
			MODIFY tag_name VARCHAR(50) COLLATE utf8_bin NOT NULL' ); 
		task_end();

		task_begin( 'Upgrading collection user/group permissions tables...' );
		$var_2->query( "ALTER TABLE T_coll_user_perms
			MODIFY bloguser_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		$var_2->query( "ALTER TABLE T_coll_group_perms
			MODIFY bloggroup_perm_edit ENUM('no','own','lt','le','all') COLLATE ascii_general_ci NOT NULL default 'no'" );
		task_end();

		

		fn_0( '11430' );
	}

	var_201( fn_1( 11440, 'Upgrading base domains table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_basedomains
			MODIFY dom_name VARCHAR(250) COLLATE utf8_bin NOT NULL DEFAULT ''" );
		fn_2();
	}

	var_201( fn_1( 11450, 'Upgrading blog-group permissions table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_coll_group_perms
			ADD COLUMN bloggroup_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloggroup_perm_poststatuses,
			DROP COLUMN bloggroup_perm_page,
			DROP COLUMN bloggroup_perm_intro,
			DROP COLUMN bloggroup_perm_podcast,
			DROP COLUMN bloggroup_perm_sidebar" );
		var_15();
	}

	var_201( fn_1( 11453, 'Upgrading blog-user permissions table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_coll_user_perms
			ADD COLUMN bloguser_perm_item_type ENUM('standard','restricted','admin') COLLATE ascii_general_ci NOT NULL default 'standard' AFTER bloguser_perm_poststatuses,
			DROP COLUMN bloguser_perm_page,
			DROP COLUMN bloguser_perm_intro,
			DROP COLUMN bloguser_perm_podcast,
			DROP COLUMN bloguser_perm_sidebar" );
		var_15();
	}

	var_201( fn_1( 11456, 'Upgrade post types table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_items__type
			ADD COLUMN ityp_perm_level ENUM( 'standard', 'restricted', 'admin' ) COLLATE ascii_general_ci NOT NULL default 'standard'" );
		fn_2();
	}

	var_201( fn_1( 11460, 'Creating table for PostType-to-Collection relationships...' ) )
	{	
		fn_3( 'T_items__type_coll', '
			itc_ityp_ID int(11) unsigned NOT NULL,
			itc_coll_ID int(11) unsigned NOT NULL,
			PRIMARY KEY (itc_ityp_ID, itc_coll_ID),
			UNIQUE itemtypecoll ( itc_ityp_ID, itc_coll_ID )' );
		var_15();
	}

	var_201( fn_1( 11463, 'Updating collection permissions...' ) )
	{	
		$var_2->query( 'UPDATE T_coll_group_perms
			  SET bloggroup_perm_item_type = "restricted"
			WHERE bloggroup_perm_item_type = "standard"' );
		$var_2->query( 'UPDATE T_coll_user_perms
			  SET bloguser_perm_item_type = "restricted"
			WHERE bloguser_perm_item_type = "standard"' );
		fn_2();
	}

	var_201( fn_1( 11466, 'Updating post types table...' ) )
	{	
		$var_2->query( 'UPDATE T_items__type SET
			ityp_perm_level = CASE
				WHEN ityp_ID = "1"    THEN "standard"
				WHEN ityp_ID = "100"  THEN "standard"
				WHEN ityp_ID = "200"  THEN "standard"
				WHEN ityp_ID = "1000" THEN "restricted"
				WHEN ityp_ID = "1400" THEN "restricted"
				WHEN ityp_ID = "1500" THEN "restricted"
				WHEN ityp_ID = "1520" THEN "restricted"
				WHEN ityp_ID = "1530" THEN "restricted"
				WHEN ityp_ID = "1570" THEN "restricted"
				WHEN ityp_ID = "1600" THEN "restricted"
				WHEN ityp_ID = "2000" THEN "standard"
				WHEN ityp_ID = "3000" THEN "admin"
				WHEN ityp_ID = "4000" THEN "admin"
				ELSE ityp_perm_level
			END' );
		var_15();
	}

	var_201( fn_1( 11470, 'Updating widgets table...' ) )
	{	
		
		$var_2->query( 'UPDATE '.$var_64.'widget
			INNER JOIN T_blogs ON blog_ID = wi_coll_ID AND blog_type = "main"
			  SET wi_enabled = 0
			WHERE wi_sco_name = "Menu"' );
		var_15();
	}

	var_201( fn_1( 11480, 'Updating table for PostType-to-Collection relationships...' ) )
	{	
		
		$var_322 = new class_3();
		$var_322->SELECT( 'blog_ID, blog_type' );
		$var_322->FROM( 'T_blogs' );
		$var_323 = $var_2->get_assoc( $var_322->get() );
		
		$var_324 = new class_3();
		$var_324->SELECT( 'ityp_ID' );
		$var_324->FROM( 'T_items__type' );
		$var_325 = $var_2->get_col( $var_324->get() );
		
		$var_326 = array();
		foreach( $var_323 as $var_327 => $var_328 )
		{
			switch( $var_328 )
			{ 
				case 'main':
				case 'photo':
					$var_329 = array( 100, 200, 2000, 5000 );
					break;
				case 'forum':
					$var_329 = array( 1, 100, 2000, 5000 );
					break;
				case 'manual':
					$var_329 = array( 1, 200, 2000, 5000 );
					break;
				default: 
					$var_329 = array( 100, 200, 5000 );
					break;
			}
			var_294( $var_325 as $var_330 )
			{
				if( in_array( $var_330, $var_329 ) )
				{ 
					var_317;
				}
				$var_326[] = '( '.$var_330.', '.$var_327.' )';
			}
		}
		var_201( count( $var_326 ) )
		{ 
			$var_2->query( 'REPLACE INTO T_items__type_coll
				( itc_ityp_ID, itc_coll_ID )
				VALUES '.implode( ', ', $var_326 ) );
		}
		var_15();
	}

	var_201( fn_1( 11482, 'Updating default post types for forums and manual collections...' ) )
	{	
		$var_331 = array(
				'manual' => array( 'ID' => 100, 'name' => 'Manual Page' ),
				'forum'  => array( 'ID' => 200, 'name' => 'Forum Topic' ),
			);
		$var_332 = array();
		foreach( $var_331 as $var_328 => $var_333 )
		{
			
			$var_264 = $var_2->get_var( 'SELECT ityp_ID
				 FROM T_items__type
				WHERE ityp_ID = '.$var_333['ID'].'
				   OR ityp_name = '.$var_2->quote( $var_333['name'] ) );
			if( empty( $var_264 ) )
			{ 
				var_317;
			}
			
			$var_334 = $var_2->get_col( 'SELECT blog_ID
				 FROM T_blogs
				WHERE blog_type = '.$var_2->quote( $var_328 ) );
			foreach( $var_334 as $var_335 )
			{
				$var_332[] = '( '.$var_335.', "default_post_type", '.$var_2->quote( $var_264 ).' )';
			}
		}
		var_201( count( $var_332 ) > 0 )
		{ 
			$var_2->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )
				VALUES '.implode( ',', $var_332 ) );
		}
		var_15();
	}

	var_201( fn_1( 11483, 'Updating general settings...' ) )
	{	
		$var_2->query( 'UPDATE T_settings
				SET set_value = '.$var_2->quote( 'no' ).'
			WHERE set_name = '.$var_2->quote( 'newusers_canregister' ).'
				AND set_value = '.$var_2->quote( '0' ) );
		var_198();

		task_begin( 'Updating user settings...' );
		$var_2->query( 'ALTER TABLE T_users__usersettings CHANGE COLUMN uset_name uset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );
		$var_2->query( 'ALTER TABLE T_pluginusersettings CHANGE COLUMN puset_name puset_name VARCHAR( 50 ) COLLATE ascii_general_ci NOT NULL' );
		fn_2();
	}

	var_201( fn_1( 11484, 'Upgrade table item types...' ) )
	{	
		$var_2->query( "ALTER TABLE T_items__type
			ADD ityp_use_parent ENUM( 'required', 'optional', 'never' ) COLLATE ascii_general_ci DEFAULT 'never' AFTER ityp_use_url" );
		fn_2();
	}

	var_201( fn_1( 11485, 'Upgrade table item types...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_items__type
			ADD ityp_allow_breaks TINYINT DEFAULT 1 AFTER ityp_allow_html' );
		$var_2->query( 'UPDATE T_items__type
			SET ityp_allow_breaks = 0,
			    ityp_allow_featured = 0
			WHERE ityp_ID >= 1400
			  AND ityp_ID <= 1600' );
		fn_2();
	}

	var_201( fn_1( 11486, 'Upgrade timestamp fields...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_email__log
			MODIFY emlog_timestamp TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_email__returns
			MODIFY emret_timestamp TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_syslog
			MODIFY slg_timestamp TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_items__prerendering
			MODIFY itpr_datemodified TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_comments__prerendering
			MODIFY cmpr_datemodified TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__prerendering
			MODIFY mspr_datemodified TIMESTAMP NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_users__reports
			MODIFY urep_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_items__version
			MODIFY iver_edit_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__thread
			MODIFY thrd_datemodified datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__message
			MODIFY msg_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		$var_2->query( 'ALTER TABLE T_messaging__contact
			MODIFY mct_last_contact_datetime datetime NOT NULL DEFAULT \'2000-01-01 00:00:00\'' );
		fn_2();
	}

	var_201( fn_1( 11600, 'Updating blogs settings...' ) )
	{	

		
		
		$var_336 = new class_3();
		$var_336->SELECT( 'blog_ID' );
		$var_336->FROM( 'T_blogs' );
		$var_336->WHERE( 'blog_access_type = "absolute"' );
		$var_337 = $var_2->get_col( $var_336->get() );
		if( count( $var_337 ) )
		{ 
			$var_338 = '';
			foreach( $var_337 as $var_339 => $var_340 )
			{
				if( $var_339 != 0 )
				{
					$var_338 .= ', ';
				}
				$var_338 .= '( '.$var_340.', "rsc_assets_url_type", "relative" ), '
					.'( '.$var_340.', "media_assets_url_type", "relative" ), '
					.'( '.$var_340.', "skins_assets_url_type", "relative" )';
			}
			$var_2->query( 'REPLACE INTO T_coll_settings( cset_coll_ID, cset_name, cset_value )
				VALUES '.$var_338 );
		}

		var_15();
	}

	var_201( fn_1( 11605, 'Upgrading cron logs table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_cron__log
			CHANGE clog_status clog_status enum('started','finished','error','timeout','warning') COLLATE ascii_general_ci not null default 'started'" );
		fn_2();
	}

	var_201( fn_1( 11610, 'Upgrading cron tasks table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_cron__task
			ADD COLUMN ctsk_repeat_variation int(10) unsigned DEFAULT 0 AFTER ctsk_repeat_after' );
		fn_2();
	}

	var_201( fn_1( 11615, 'Upgrading email log table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_email__log
			MODIFY emlog_result ENUM( "ok", "error", "blocked", "simulated" ) COLLATE ascii_general_ci NOT NULL DEFAULT "ok"' );
		fn_2();
	}

	var_201( fn_1( 11620, 'Upgrading hitlog table...' ) )
	{	
		$var_2->query( "ALTER TABLE T_hitlog
			MODIFY COLUMN hit_type ENUM('standard','rss','admin','ajax', 'service', 'api') COLLATE ascii_general_ci DEFAULT 'standard' NOT NULL" );
		fn_2();
	}

	var_201( fn_1( 11625, 'Update plugins table...' ) )
	{	
		$var_2->query( 'UPDATE T_plugins
			  SET plug_classname = "shortlinks_plugin"
			WHERE plug_classname = "wikilinks_plugin"' );
		fn_2();
	}

	var_201( fn_1( 11630, 'Upgrading plugin settings table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_pluginsettings
			MODIFY pset_name VARCHAR( 60 ) COLLATE ascii_general_ci NOT NULL' );
		fn_2();
	}

	var_201( fn_1( 11635, 'Upgrading email campaigns table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_email__campaign
			ADD COLUMN ecmp_email_plaintext TEXT NULL AFTER ecmp_email_text,
			ADD COLUMN ecmp_renderers       VARCHAR(255) COLLATE ascii_general_ci NOT NULL,
			ADD COLUMN ecmp_use_wysiwyg     TINYINT(1) NOT NULL DEFAULT 0' );
		var_15();
	}

	var_201( fn_1( 11640, 'Upgrading hitlog table...' ) )
	{	
		fn_7( 'T_hitlog', 'hit_method', "ENUM('unknown','GET','POST','PUT','PATCH','DELETE','COPY','HEAD','OPTIONS','LINK','UNLINK','PURGE','LOCK','UNLOCK','PROPFIND','VIEW') COLLATE ascii_general_ci DEFAULT 'unknown' NOT NULL" );
		fn_2();
	}

	var_201( fn_1( 11645 ) )
	{	

		
		global $var_123;
		$var_123 = array();

		
		function add_basic_widget_11670( $var_82, $var_117, $var_119, $var_42, $var_118, $var_116 = NULL, $var_341 = 1 )
		{
			global $var_123, $var_2;

			if( is_null( $var_116 ) )
			{ 
				$var_116 = 'NULL';
			}
			elseif( is_array( $var_116 ) )
			{ 
				$var_116 = $var_2->quote( serialize( $var_116 ) );
			}
			var_342
			{ 
				$var_116 = $var_2->quote( $var_116 );
			}

			$var_123[] = '( '
				.$var_82.', '
				.$var_2->quote( $var_117 ).', '
				.$var_118.', '
				.$var_341.', '
				.$var_2->quote( $var_42 ).', '
				.$var_2->quote( $var_119 ).', '
				.$var_116.' )';
		}

		$var_323 = $var_2->get_assoc( 'SELECT blog_ID, blog_type FROM T_blogs ORDER BY blog_ID' );
		foreach( $var_323 as $var_215 => $var_345 )
		{
			task_begin( 'Installing default "Item Single" widgets for collection 
			add_basic_widget_11670( $coll_ID, 'var_343 var_344', 'item_content', 'core', 20 );
			if( $var_345 != 'forum' )
			{	
				add_basic_widget_11670( $var_215, 'Item Single', 'item_tags', 'core', 30 );
			}
			if( $var_345 == 'std' )
			{	
				add_basic_widget_11670( $var_215, 'Item Single', 'item_about_author', 'core', 40 );
			}
			if( $var_345 == 'std' || $var_345 == 'manual' )
			{	
				add_basic_widget_11670( $var_215, 'Item Single', 'item_small_print', 'core', 50, array( 'format' => ( $var_345 == 'std' ? 'standard' : 'revision' ) ) );
			}
			
			add_basic_widget_11670( $var_215, 'Item Single', 'item_seen_by', 'core', 60, NULL,
				
				$var_345 == 'forum' ? 0 : 1 );
			task_end();
		}

		var_201( ! empty( $var_123 ) )
		{	
			$var_2->query( 'INSERT INTO T_widget( wi_coll_ID, wi_sco_name, wi_order, wi_enabled, wi_type, wi_code, wi_params ) '
								 .'VALUES '.implode( ', ', $var_123 ) );
		}
		

		var_15( false );
	}

	if( fn_1( 11650, 'Upgrading user organizations table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_users__organization
			ADD COLUMN org_owner_user_ID INT(11) UNSIGNED NOT NULL AFTER org_ID,
			ADD COLUMN org_accept        ENUM( "yes", "owner", "no" ) COLLATE ascii_general_ci NOT NULL DEFAULT "owner"' );
		$var_2->query( 'UPDATE T_users__organization SET org_owner_user_ID = 1' );
		fn_2();
	}

	var_201( fn_1( 11655, 'Creating table for Poll questions...' ) )
	{	
		fn_3( 'T_polls__question', '
			pqst_ID            INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			pqst_owner_user_ID INT(11) UNSIGNED NOT NULL,
			pqst_question_text VARCHAR(2000) NULL,
			PRIMARY KEY (pqst_ID)' );
		var_15();
	}

	var_201( fn_1( 11660, 'Creating table for Poll options...' ) )
	{	
		fn_3( 'T_polls__option', '
			popt_ID          INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			popt_pqst_ID     INT(11) UNSIGNED NOT NULL,
			popt_option_text VARCHAR(2000) NULL,
			popt_order       INT(11) NOT NULL,
			PRIMARY KEY (popt_ID)' );
		var_15();
	}

	var_201( fn_1( 11665, 'Creating table for Poll answers...' ) )
	{	
		fn_3( 'T_polls__answer', '
			pans_ID      INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
			pans_pqst_ID INT(11) UNSIGNED NOT NULL,
			pans_user_ID INT(11) UNSIGNED NOT NULL,
			pans_popt_ID INT(11) UNSIGNED NOT NULL,
			PRIMARY KEY (pans_ID),
			UNIQUE pans_pqst_user_ID ( pans_pqst_ID, pans_user_ID )' );
		var_15();
	}

	var_201( fn_1( 11670, 'Creating default polls...' ) )
	{	
		$var_2->query( 'INSERT INTO T_polls__question ( pqst_owner_user_ID, pqst_question_text )
			VALUES ( 1, "What is your favorite b2evolution feature?" )' );
		$var_2->query( 'INSERT INTO T_polls__option ( popt_pqst_ID, popt_option_text, popt_order )
			VALUES ( 1, "Multiple blogs",          1 ),
						 ( 1, "Photo Galleries",         2 ),
						 ( 1, "Forums",                  3 ),
						 ( 1, "Online Manuals",          4 ),
						 ( 1, "Newsletters / E-mailing", 5 ),
						 ( 1, "Easy Maintenance",        6 )' );
		$var_2->query( 'INSERT INTO T_polls__answer ( pans_pqst_ID, pans_user_ID, pans_popt_ID )
			VALUES ( 1, 5, 1 ),
						 ( 1, 6, 2 ),
						 ( 1, 7, 2 ),
						 ( 1, 2, 2 ),
						 ( 1, 3, 3 ),
						 ( 1, 4, 3 ),
						 ( 1, 1, 6 )' );
		fn_2();
	}

	var_201( fn_1( 11675, 'Creating table for secondary user groups...' ) )
	{	
		fn_3( 'T_users__secondary_user_groups', '
				sug_user_ID INT(11) UNSIGNED NOT NULL,
				sug_grp_ID  INT(11) UNSIGNED NOT NULL,
				PRIMARY KEY ( sug_user_ID, sug_grp_ID )' );
		var_15();
	}

	var_201( fn_1( 11680, 'Upgrading groups table...' ) )
	{	
		fn_7( 'T_groups', 'grp_usage', "ENUM('primary','secondary') COLLATE ascii_general_ci NOT NULL DEFAULT 'primary' AFTER grp_name" );
		fn_2();
	}

	var_201( fn_1( 11685, 'Upgrading files table...' ) )
	{	
		fn_7( 'T_files', 'file_download_count', 'INT(10) UNSIGNED NOT NULL DEFAULT 0 AFTER file_can_be_main_profile' );
		fn_2();
	}

	var_201( fn_1( 11690, 'Updating collection user/group permissions...' ) )
	{	
		fn_7( 'T_coll_user_perms', 'bloguser_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloguser_perm_edit_cmt' );
		fn_7( 'T_coll_group_perms', 'bloggroup_perm_meta_comment', 'tinyint NOT NULL default 0 AFTER bloggroup_perm_edit_cmt' );
		fn_2();
	}

	var_201( fn_1( 11695, 'Upgrade table item types...' ) )
	{	
		
		$var_2->query( 'ALTER TABLE T_items__type
			ADD COLUMN ityp_usage   VARCHAR(20) COLLATE ascii_general_ci NOT NULL DEFAULT "post" AFTER ityp_backoffice_tab,
			ADD COLUMN ityp_podcast TINYINT(1) DEFAULT 0 AFTER ityp_use_url' );
		
		$var_2->query( 'UPDATE T_items__type SET
			ityp_usage = CASE
				WHEN ( ityp_backoffice_tab = "Pages" OR ityp_name = "Page" ) THEN "page"
				WHEN ityp_name = "Intro-Front"   THEN "intro-front"
				WHEN ityp_name = "Intro-Main"    THEN "intro-main"
				WHEN ityp_name = "Intro-Cat"     THEN "intro-cat"
				WHEN ityp_name = "Intro-Tag"     THEN "intro-tag"
				WHEN ityp_name = "Intro-Sub"     THEN "intro-sub"
				WHEN ityp_name = "Intro-All"     THEN "intro-all"
				WHEN ityp_name = "Sidebar link"  THEN "special"
				WHEN ityp_name = "Advertisement" THEN "special"
				ELSE "post"
			END' );
		fn_6( 'T_items__type', 'ityp_backoffice_tab' );
		fn_2();
	}

	var_201( fn_1( 11700, 'Update item types for new created fields...' ) )
	{	
		
		$var_2->query( 'UPDATE T_items__type
			  SET ityp_name = "Podcast Episode"
			WHERE ityp_name = "Podcast"' );
		
		$var_2->query( 'UPDATE T_items__type
			  SET ityp_podcast = "1"
			WHERE ityp_ID = "2000"' );
		
		$var_2->query( 'DELETE FROM T_items__type
			WHERE ityp_ID = "5000"' );
		
		$var_2->query( 'UPDATE T_items__type
			  SET ityp_name = "Standalone Page"
			WHERE ityp_usage = "page"
			  AND ityp_name = "Page"' );
		fn_2();
	}

	var_201( fn_1( 11705, 'Upgrading users organization table...' ) )
	{	
		fn_7( 'T_users__organization', 'org_perm_role', "ENUM('owner and member', 'owner') COLLATE ascii_general_ci NOT NULL DEFAULT 'owner and member' AFTER org_accept" );
		fn_2();
	}

	var_201( fn_1( 11710, 'Deleting back-office skin "chicago"...' ) )
	{	
		
		$var_2->query( 'DELETE FROM T_users__usersettings WHERE uset_name = "admin_skin"' );
		
		global $var_346;
		$var_347 = $var_346.'chicago/';
		if( file_exists( $var_347 ) && ! rmdir_r( $var_347 ) )
		{	
			
		}
		fn_2();
	}

	if( fn_1( 11715, 'Replace widgets "Simple Sidebar Links list" and "Simple Linkblog Links list" with "Universal Item list"...' ) )
	{	
		$var_348 = $var_2->get_results( 'SELECT wi_ID, wi_code, wi_params
			 FROM T_widget
			WHERE wi_type = "core"
			  AND wi_code IN ( "linkblog", "coll_link_list" )', var_144,
			'Get widgets "linkblog" and "coll_link_list" to replace them with "coll_item_list"' );
		foreach( $var_348 as $var_350 )
		{
			
			$var_349 = empty( $var_350->var_351 ) ? array() : unserialize( $var_350->var_351 );
			
			switch( $var_350->var_352 )
			{
				case 'linkblog':
					
					$var_349 = array_merge( array(
							'title'                => T_('Linkblog'),
							'item_group_by'        => 'chapter',
							'item_title_link_type' => 'auto',
							'item_type'            => '',
							'item_type_usage'      => 'special',
						), $var_349 );
					break;

				case 'coll_link_list':
					
					$var_349 = array_merge( array(
							'title'                => T_('Links'),
							'item_title_link_type' => 'auto',
							'item_type'            => '',
							'item_type_usage'      => 'special',
						), $var_349 );
					break;
			}
			$var_2->query( 'UPDATE T_widget
					SET wi_code = "coll_item_list", wi_params = '.$var_2->quote( serialize( $var_349 ) ).'
				WHERE wi_ID = '.$var_350->var_353 );
		}
		var_15();
	}

	var_201( fn_1( 11720, 'Replace renamed widgets...' ) )
	{	
		
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "item_seen_by"
			WHERE wi_type = "core"
			  AND wi_code = "coll_seen_by"' );
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "item_small_print"
			WHERE wi_type = "core"
			  AND wi_code = "coll_small_print"' );
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "item_tags"
			WHERE wi_type = "core"
			  AND wi_code = "coll_item_tags"' );
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "item_content"
			WHERE wi_type = "core"
			  AND wi_code = "coll_item_content"' );
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "item_about_author"
			WHERE wi_type = "core"
			  AND wi_code = "coll_about_author"' );
		$var_2->query( 'UPDATE T_widget
			  SET wi_code = "coll_member_count"
			WHERE wi_type = "core"
			  AND wi_code = "member_count"' );
		fn_2();
	}

	var_201( fn_1( 11725, 'Upgrade table post type...' ) )
	{	
		fn_7( 'T_items__type', 'ityp_front_instruction', 'tinyint default 0 AFTER ityp_template_name' );
		fn_7( 'T_items__type', 'ityp_back_instruction', 'tinyint default 0 AFTER ityp_front_instruction' );
		fn_7( 'T_items__type', 'ityp_instruction', 'text NULL default NULL AFTER ityp_back_instruction' );
		fn_2();
	}

	var_201( fn_1( 11730, 'Upgrade table invitation codes...' ) )
	{	
		fn_7( 'T_users__invitation_code', 'ivc_level', 'int unsigned NULL' );
		$var_2->query( 'ALTER TABLE T_users__invitation_code
			MODIFY COLUMN ivc_grp_ID int(4) NULL' );
		fn_2();
	}

	var_201( fn_1( 11735, 'Upgrade table files...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_files
			MODIFY file_type ENUM( "image", "audio", "video", "other" ) COLLATE ascii_general_ci NULL DEFAULT NULL' );
		fn_2();
	}

	var_201( fn_1( 11740, 'Update table user settings for new post/comment moderation settings...' ) )
	{	
		$var_2->query( 'INSERT INTO T_users__usersettings ( uset_user_ID, uset_name, uset_value )
			SELECT uset_user_ID, IF( uset_name = "notify_comment_moderation", "notify_edit_cmt_moderation", "notify_edit_pst_moderation" ), uset_value
			  FROM T_users__usersettings
			 WHERE uset_name IN ( "notify_comment_moderation", "notify_post_moderation" )' );
		var_15();
	}

	var_201( fn_1( 11745, 'Upgrading items table...' ) )
	{	
		fn_7( 'T_items__item', 'post_notifications_flags', "SET('moderators_notified','members_notified','community_notified','pings_sent') NOT NULL DEFAULT '' AFTER post_notifications_ctsk_ID" );
		$var_2->query( 'UPDATE T_items__item
			  SET post_notifications_flags = "moderators_notified,members_notified,community_notified,pings_sent"
			WHERE post_notifications_status = "finished"' );
		fn_2();
	}

	var_201( fn_1( 11750, 'Upgrading comments table...' ) )
	{	
		fn_7( 'T_comments', 'comment_notif_flags', "SET('moderators_notified','members_notified','community_notified') NOT NULL DEFAULT ''" );
		$var_2->query( 'UPDATE T_comments
			  SET comment_notif_flags = "moderators_notified,members_notified,community_notified"
			WHERE comment_notif_status = "finished"' );
		fn_2();
	}

	var_201( fn_1( 11755, 'Creating collection user favorites table...' ) )
	{	
		fn_3( 'T_coll_user_favs', '
				cufv_user_ID INT(10) UNSIGNED NOT NULL,
				cufv_blog_ID INT(11) UNSIGNED NOT NULL,
				PRIMARY KEY cufv_pk ( cufv_user_ID, cufv_blog_ID )' );

		
		load_funcs( 'tools/model/_system.funcs.php' );
		$var_354 = system_get_user_IDs();

		$var_355 = new class_3( 'Get ALL collections' );
		$var_355->SELECT( 'blog_ID, blog_owner_user_ID, blog_favorite' );
		$var_355->FROM( 'T_blogs' );
		$var_355->ORDER_BY( 'blog_ID' );
		$var_356 = $var_2->get_results( $var_355->get() );

		$var_357 = array();
		$var_219 = array();
		foreach( $var_356 as $var_358 )
		{	
			if( ! isset( $var_357[ $var_358->var_359 ] ) )
			{	
				$var_357[ $var_358->var_359 ] = 1;
			}
			var_201( $var_357[ $var_358->var_359 ] <= 7 )
			{	
				$var_219[] = '( '.$var_358->var_82.', '.$var_358->var_359.' )';
				$var_357[ $var_358->var_359 ]++;
			}
		}

		var_201( count( $var_354 ) <= 10 )
		{	
			foreach( $var_354 as $var_170 )
			{
				if( ! isset( $var_357[ $var_170 ] ) )
				{	
					$var_357[ $var_170 ] = 1;
				}
				var_294( $var_356 as $var_358 )
				{
					if( $var_357[ $var_170 ] > 7 )
					{	
						var_360;
					}
					var_201( $var_358->var_361 && $var_170 != $var_358->var_359 )
					{	
						$var_219[] = '( '.$var_358->var_82.', '.$var_170.' )';
						$var_357[ $var_170 ]++;
					}
				}
			}
		}

		var_201( count( $var_219 ) )
		{	
			$var_2->query( 'INSERT INTO T_coll_user_favs ( cufv_blog_ID, cufv_user_ID ) VALUES '.implode( ', ', $var_219 ) );
		}

		
		var_36( 'T_blogs', 'blog_favorite' );
		var_15();
	}

	var_201( fn_1( 11760, 'Upgrading email campaigns table...' ) )
	{	
		fn_7( 'T_email__campaign', 'ecmp_send_ctsk_ID', 'INT(10) UNSIGNED NULL DEFAULT NULL' );
		fn_2();
	}

	var_201( fn_1( 11765, 'Upgrading files table...' ) )
	{ 
		fn_7( 'T_files', 'file_creator_user_ID', 'int(10) unsigned NULL default NULL AFTER file_ID' );

		
		$var_181 = 'UPDATE T_files AS t1,
				(
					SELECT a.link_file_ID, a.link_creator_user_ID
					FROM T_links AS a
					INNER JOIN
					(
						SELECT link_file_ID, MIN( link_ID ) AS min_ID
						FROM T_links
						GROUP BY link_file_ID
					) AS b
						ON a.link_file_ID = b.link_file_ID AND a.link_ID = b.min_ID
				) AS t2
				SET
					t1.file_creator_user_ID = t2.link_creator_user_ID
				WHERE
					t1.file_ID = t2.link_file_ID';
		$var_2->query( $var_181 );

		fn_2();
	}

	var_201( fn_1( 11770, 'Upgrading files table...' ) )
	{ 
		fn_8( 'T_files', 'file_creator_user_id', 'file_creator_user_id' );
		fn_2();
	}

	var_201( fn_1( 11775, 'Upgrading posts and comments statuses depeding on max allowed status by their collections...' ) )
	{	
		$var_280 = & get_BlogCache();
		$var_280->load_all( 'ID', 'ASC' );
		foreach( $var_280->var_363 as $var_364 )
		{
			$var_364->update_reduced_status_data();
		}
		fn_2();
	}

	var_201( fn_1( 11780, 'Upgrading subscription settings of collections...' ) )
	{	
		$var_2->query( 'REPLACE INTO T_coll_settings ( cset_coll_ID, cset_name, cset_value )
				SELECT cset_coll_ID, "allow_comment_subscriptions", 1
				  FROM T_coll_settings
				 WHERE cset_name = "allow_subscriptions"
				   AND cset_value = 1' );
		var_15();
	}

	var_201( fn_1( 11785, 'Upgrading email log table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_email__log
			MODIFY emlog_message MEDIUMTEXT DEFAULT NULL' );
		fn_2();
	}

	var_201( fn_1( 11790, 'Fix number of favorite collections per each user...' ) )
	{	
		
		$var_365 = new class_3();
		$var_365->SELECT( 'cufv_user_ID' );
		$var_365->FROM( 'T_coll_user_favs' );
		$var_365->GROUP_BY( 'cufv_user_ID' );
		$var_365->HAVING( 'COUNT( cufv_blog_ID ) > 20' );
		$var_367 = $var_2->get_col( $var_365->get() );

		foreach( $var_367 as $var_368 )
		{
			
			$var_369 = new class_3();
			$var_369->SELECT( 'cufv_blog_ID' );
			$var_369->FROM( 'T_coll_user_favs' );
			$var_369->WHERE( 'cufv_user_ID = '.$var_368 );
			$var_369->ORDER_BY( 'cufv_blog_ID' );
			$var_369->LIMIT( '7' );
			$var_370 = $var_2->get_col( $var_369->get() );

			if( count( $var_370 ) )
			{	
				$var_2->query( 'DELETE FROM T_coll_user_favs
					WHERE cufv_user_ID = '.$var_368.'
					  AND cufv_blog_ID NOT IN ( '.$var_2->quote( $var_370 ).' )' );
			}
		}
		var_15();
	}

	var_201( fn_1( 11795, 'Upgrading posts table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_items__item
			MODIFY post_excerpt_autogenerated  TINYINT(1) NOT NULL DEFAULT 1' );
		fn_2();
	}

	var_201( fn_1( 11800, 'Upgrading collection-user permissions table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_coll_user_perms
			ADD bloguser_perm_analytics tinyint NOT NULL default 0' );
		$var_2->query( 'UPDATE T_coll_user_perms
			  SET bloguser_perm_analytics = 1
			WHERE bloguser_perm_properties = 1' );
		fn_2();
	}

	var_201( fn_1( 11805, 'Upgrading collection-group permissions table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_coll_group_perms
			ADD bloggroup_perm_analytics tinyint NOT NULL default 0' );
		$var_2->query( 'UPDATE T_coll_group_perms
			  SET bloggroup_perm_analytics = 1
			WHERE bloggroup_perm_properties = 1' );
		fn_2();
	}

	var_201( fn_1( 11810, 'Upgrading plugins table...' ) )
	{	
		$var_2->query( 'ALTER TABLE T_plugins
			MODIFY plug_priority TINYINT UNSIGNED NOT NULL default 50' );
		fn_2();
	}

	var_201( fn_1( 11815, 'Updating file types table...' ) )
	{ 
		$var_2->query( 'UPDATE T_filetypes
				SET ftyp_allowed = "admin"
			WHERE ftyp_extensions REGEXP "[[:<:]]swf[[:>:]]"' );
		fn_2();
	}

	

	
	
	var_201( param( 'exec_general_tasks', 'boolean', 1 ) )
	{	

		
		
		evo_flush();
		modules_call_method( 'upgrade_b2evo_tables' );

		
		if( ! is_object( $var_72 ) )
		{ 
			load_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );
			$var_72 = new class_4();
		}
		if( ! is_object( $var_73 ) )
		{ 
			load_class( 'plugins/model/_plugins.class.php', 'Plugins' );
			$var_73 = new class_0();
		}

		
		load_funcs('tools/model/_system.funcs.php');
		system_init_caches( true, ($var_13 <= 11410) ); 
		

		
		task_begin( 'Checking &amp; repairing caches...' );
		load_funcs('tools/model/_system.funcs.php');
		
		$var_371 = system_check_caches( true );
		if( is_array( $var_371 ) && count( $var_371 ) )
		{ 
			foreach( $var_371 as $var_372 )
			{
				
				
			}
			
		}
		task_end();

		
		
		
		if( $var_237 )
		{ 
			task_begin( 'Creating profile picture links...' );
			create_profile_picture_links();
			task_end();
		}

		
		
		
		task_begin( 'Invalidating all page caches to make sure they don\'t contain old action links...' );
		invalidate_pagecaches();
		task_end();


		
		task_begin( 'Reloading installed plugins to make sure their config is up to date...' );
		$var_373 = & get_Plugins_admin();
		$var_373->reload_plugins();
		task_end();


		
		
		
		task_begin( 'Installing new default plugins (if any)...' );
		install_basic_plugins( $var_13 );
		task_end();

		
		
		evo_flush();
		create_default_jobs( true );

		
		
		task_begin( 'Checking timing of upgrade...' );
		$var_8 = time() - $var_3;
		$var_9 = ini_get( 'max_execution_time' );
		if( $var_9 && ( $var_8 > ( $var_9 - 20 ) ) )
		{ 
			
			$var_11 = $var_6 ? '&amp;recreate_excerpts=1' : '';
			$var_375 = $var_65.'install/index.php?locale='.$var_4.'&amp;action='.$var_10.'&amp;exec_general_tasks=0'.$var_11;
			
			
			exit(0);
		}
		var_198();

		task_begin( 'Checking default locale...' );
		locale_check_default();
		task_end();
	}

	var_201( $var_6 )
	{
		if( ! is_object( $var_72 ) )
		{ 
			load_class( 'settings/model/_generalsettings.class.php', 'GeneralSettings' );
			$var_72 = new class_4();
		}
		var_201( ! is_object( $var_73 ) )
		{ 
			load_class( 'plugins/model/_plugins.class.php', 'Plugins' );
			$var_73 = new class_0();
		}

		var_199( 'Recreate autogenerated post excerpts...' );
		$var_375 = $var_65.'install/index.php?locale='.$var_4.'&amp;action='.$var_10.'&amp;exec_general_tasks=0&amp;recreate_excerpts=1';
		$var_376 = param( 'all_excerpt', 'integer', 0 );
		recreate_autogenerated_excerpts( $var_375, $var_376 == 0 );
		task_end();
	}


	
	var_377();

	
	
	var_378();

	$var_379 = array(); 

	global $var_380;

	foreach( $var_78 as $var_18 => $var_381 )
	{	
		if( $var_380 )
		{
			
			
		}
		$var_382 = db_delta( $var_381[1], array('drop_column', 'drop_index'), false, true );
		if( empty($var_382) )
		{
			if( $var_380 ) 
		}
		var_342
		{
			if( $var_380 ) 
			var_294( $var_382 as $var_18 => $var_383 )
			{
				foreach( $var_383 as $var_384 )
				{
					foreach( $var_384['queries'] as $var_7 )
					{ 
						$var_379[] = $var_7;
					}
				}
			}
		}
	}

	var_201( $var_380 )
	{
		
	}

	if( empty($var_379) )
	{	
		
	}
	else
	{	

		$var_385 = param('confirmed', 'integer', 0); 
		$var_386 = param( 'upgrade_db_deltas_confirm_md5', 'string', '' );

		if( ! $var_385 )
		{
			if( ! empty($var_386) )
			{ 
				if( $var_386 != md5( implode('', $var_379) ) )
				{ 
					
				}
				else
				{
					$var_385 = true;
				}
			}
		}

		var_201( ! $var_385 )
		{
			global $var_5, $var_387, $var_388;
			load_class( '_core/ui/forms/_form.class.php', 'Form' );

			if( empty( $var_388 ) || $var_388 != 'cli' )
			{	
				if( !empty( $var_387 ) )
				{
					$var_389 = new class_5( $var_387, '', 'post' );
				}
				var_342
				{
					$var_389 = new class_5( NULL, '', 'post' );
				}

				$var_389->begin_form( 'fform', T_('Upgrade database') );

				$var_389->begin_fieldset();
				$var_389->hidden( 'upgrade_db_deltas_confirm_md5', md5(implode( '', $var_379 )) );
				$var_389->hidden( 'action', $var_5 );
				$var_389->hidden( 'locale', $var_4 );
			}


			

			

			
			var_294( $var_379 as $var_393 )
			{
				
				
			}
			

			if( empty( $var_388 ) || $var_388 != 'cli' )
			{	
				$var_389->submit( array( '', T_('Try to Repair/Upgrade database now!'), 'btn-warning' ) );
				$var_389->end_form();
			}

			return 'need-fix';
		}

		
		var_395( true );
	}

	
	$var_2->query( 'SET sql_mode = "TRADITIONAL"', 'Force MySQL "strict" mode (and make sure server is not configured with a weird incompatible mode)' );

	var_396( 'var_397-success' );

	return true;
}

?>