<?php


declare(strict_types=1);




trait var_0
{
    
    protected function fn_0(string $var_1): string
    {
        Log::debug(sprintf('Trying to retrieve URL stored under "%s"', $var_1));
        
        
        $var_2     = [
            'accounts.delete.uri'          => '/accounts/show/',
            'transactions.delete.uri'      => '/transactions/show/',
            'attachments.delete.uri'       => '/attachments/show/',
            'bills.delete.uri'             => '/bills/show/',
            'budgets.delete.uri'           => '/budgets/show/',
            'categories.delete.uri'        => '/categories/show/',
            'currencies.delete.uri'        => '/currencies/show/',
            'piggy-banks.delete.uri'       => '/piggy-banks/show/',
            'tags.delete.uri'              => '/tags/show/',
            'rules.delete.uri'             => '/rules/edit/',
            'transactions.mass-delete.uri' => '/transactions/show/',
        ];
        $var_3 = $var_2[$var_1] ?? '/show/';
        Log::debug(sprintf('The forbidden word for %s is "%s"', $var_1, $var_3));

        $var_4 = (string)session($var_1);
        Log::debug(sprintf('The URI is %s', $var_4));
        if (
            !(false === strpos($var_1, 'delete'))
            && !(false === strpos($var_4, $var_3))) {
            $var_4 = $var_5->var_6;
            Log::debug(sprintf('URI is now %s (identifier contains "delete")', $var_4));
        }
        if (!(false === strpos($var_4, 'jscript'))) {
            $var_4 = $var_5->var_6; 
            Log::debug(sprintf('URI is now %s (uri contains jscript)', $var_4));
        }

        
        Log::debug(sprintf('strpos($identifier, "delete"): %s', var_export(strpos($var_1, 'delete'), true)));
        Log::debug(sprintf('strpos($uri, $forbidden): %s', var_export(strpos($var_4, $var_3), true)));

        return $var_4;
    }

    
    protected function fn_1(var_7 $var_8)
    {
        $var_9        = [var_10\var_11\var_12::var_13, var_10\var_11\var_12::var_14];
        $var_15 = $var_8->var_15;
        
        foreach ($var_15 as $var_16) {
            $var_17 = $var_16->var_17;
            if (\var_18($var_17->var_19->var_20, $var_9, true)) {
                return redirect(route('accounts.show', [$var_17->var_21]));
            }
        }
        
        session()->flash('error', (string)trans('firefly.cannot_redirect_to_account'));

        return redirect(route('index'));
        
    }

    
    protected function fn_2(var_23 $var_17)
    {
        
        $var_16 = $var_17->transactions()->first();
        if (null === $var_16) {
            app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => e($var_17->var_25), 'id' => $var_17->var_21]));
            Log::error(sprintf('Expected a transaction. Account 

            return redirect(route('var_26'));
        }

        $var_8 = $var_16->var_27;
        
        $var_28 = $var_8->transactions()->where('transactions.id', '!=', $var_16->var_21)->first();

        if (null === $var_28) {
            app('session')->flash('error', trans('firefly.account_missing_transaction', ['name' => e($var_17->var_25), 'id' => $var_17->var_21]));
            Log::error(sprintf('Expected an opposing transaction. Account 
        }

        return redirect(route('var_30.var_31', [$var_28->var_32]));
    }

    
    protected function fn_3(string $var_1): void
    {
        
        $var_33 = session()->get('errors');
        if (null === $var_33 || (null !== $var_33 && 0 === $var_33->count())) {
            $var_36 = app('url')->previous();
            session()->put($var_1, $var_36);
            Log::debug(sprintf('Will put previous URI in cache under key %s: %s', $var_1, $var_36));

            return;
        }
        Log::debug(sprintf('The users session contains errors somehow so we will not remember the URI!: %s', var_export($var_33, true)));
    }
}
