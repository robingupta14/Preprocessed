<?php



class var_0 extends var_1 {
	
	protected $var_2 = array();

	private $var_3;

	private $var_4;

	
	public function fn_0( $var_5 = array() ) {
		$var_6->var_3 = ( isset( $var_12['attachment-filter'] ) && 'detached' === $var_12['attachment-filter'] );

		$var_6->var_7 = array(
			'list' => __( 'List View' ),
			'grid' => __( 'Grid View' )
		);

		parent::fn_0( array(
			'plural' => 'media',
			'screen' => isset( $var_5['screen'] ) ? $var_5['screen'] : null,
		) );
	}

	
	public function fn_1() {
		return current_user_can('upload_files');
	}

	
	public function fn_2() {
		global $var_8, $var_9, $var_10, $var_11;

		list( $var_9, $var_10 ) = wp_edit_attachments_query( $var_12 );

 		$var_6->var_4 = isset( $var_12['attachment-filter'] ) && 'trash' === $var_12['attachment-filter'];

 		$var_11 = empty( $var_12['mode'] ) ? 'list' : $var_12['mode'];

		$var_6->set_pagination_args( array(
			'total_items' => $var_8->var_14,
			'total_pages' => $var_8->var_15,
			'per_page' => $var_8->query_vars['posts_per_page'],
		) );
	}

	
	protected function fn_3() {
		global $var_9, $var_10;

		$var_17 = array();

		$var_18 = empty( $_GET['attachment-filter'] ) ? '' : $_GET['attachment-filter'];

		$var_17['all'] = sprintf(
			'<option value=""%s>%s</option>',
			selected( $var_18, true, false ),
			__( 'All media items' )
		);

		foreach ( $var_9 as $var_19 => $var_20 ) {
			if ( ! wp_match_mime_types( $var_19, $var_10 ) ) {
				continue;
			}

			$var_21 = selected(
				$var_18 && 0 === strpos( $var_18, 'post_mime_type:' ) &&
					wp_match_mime_types( $var_19, str_replace( 'post_mime_type:', '', $var_18 ) ),
				true,
				false
			);

			$var_17[$var_19] = sprintf(
				'<option value="post_mime_type:%s"%s>%s</option>',
				esc_attr( $var_19 ),
				$var_21,
				$var_20[0]
			);
		}
		$var_17['detached'] = '<option value="detached"' . ( $var_6->var_3 ? ' selected="selected"' : '' ) . '>' . __( 'Unattached' ) . '</option>';

		if ( $var_6->var_4 || ( defined( 'MEDIA_TRASH') && var_22 ) ) {
			$var_17['trash'] = sprintf(
				'<option value="trash"%s>%s</option>',
				selected( 'trash' === $var_18, true, false ),
				_x( 'Trash', 'attachment filter' )
			);
		}
		return $var_17;
	}

	
	protected function fn_4() {
		$var_23 = array();
		if ( var_22 ) {
			if ( $var_6->var_4 ) {
				$var_23['untrash'] = __( 'Restore' );
				$var_23['delete'] = __( 'Delete Permanently' );
			} else {
				$var_23['trash'] = _x( 'Trash', 'verb' );
			}
		} else {
			$var_23['delete'] = __( 'Delete Permanently' );
		}

		if ( $var_6->var_3 )
			$var_23['attach'] = __( 'Attach' );

		return $var_23;
	}

	
	protected function fn_5( $var_25 ) {
		if ( 'bar' !== $var_25 ) {
			return;
		}
?>
		<div class="actions">
<?php
		if ( ! is_singular() ) {
			if ( ! $var_6->var_4 ) {
				$var_6->months_dropdown( 'attachment' );
			}

			
			do_action( 'restrict_manage_posts', $var_6->var_27->var_28 );

			submit_button( __( 'Filter' ), 'button', 'filter_action', false, array( 'id' => 'post-query-submit' ) );
		}

		if ( $var_6->var_4 && current_user_can( 'edit_others_posts' ) ) {
			submit_button( __( 'Empty Trash' ), 'apply', 'delete_all', false );
		} ?>
		</div>
<?php
	}

	
	public function fn_6() {
		if ( isset( $var_12['found_post_id'] ) && isset( $var_12['media'] ) )
			return 'attach';

		if ( isset( $var_12['parent_post_id'] ) && isset( $var_12['media'] ) )
			return 'detach';

		if ( isset( $var_12['delete_all'] ) || isset( $var_12['delete_all2'] ) )
			return 'delete_all';

		return parent::fn_6();
	}

	
	public function fn_7() {
		return have_posts();
	}

	
	public function fn_8() {
		_e( 'No media files found.' );
	}

	
	public function fn_9() {
		global $var_11;

		$var_29 = $var_6->fn_3();

		$var_6->var_27->render_screen_reader_content( 'heading_views' );
?>
<div class="wp-filter">
	<div class="filter-items">
		<?php $var_6->view_switcher( $var_11 ); ?>

		<label for="attachment-filter" class="screen-reader-text"><?php _e( 'Filter by type' ); ?></label>
		<select class="attachment-filters" name="attachment-filter" id="attachment-filter">
			<?php
			if ( ! empty( $var_29 ) ) {
				foreach ( $var_29 as $var_32 => $var_33 ) {
					
				}
			}
			?>
		</select>

<?php
		$var_6->fn_5( 'bar' );

		
		$var_29 = apply_filters( "views_{$var_6->var_27->var_34}", array() );

		
		if ( ! empty( $var_29 ) ) {
			
			foreach ( $var_29 as $var_32 => $var_33 ) {
				
			}
			
		}
?>
	</div>

	<div class="search-form">
		<label for="media-search-input" class="screen-reader-text"><?php esc_html_e( 'Search Media' ); ?></label>
		<input type="search" placeholder="<?php esc_attr_e( 'Search' ) ?>" id="media-search-input" class="search" name="s" value="<?php _admin_search_query(); ?>"></div>
	</div>
	<?php
	}

	
	public function fn_10() {
		$var_35 = array();
		$var_35['cb'] = '<input type="checkbox" />';
		
		$var_35['title'] = _x( 'File', 'column name' );
		$var_35['author'] = __( 'Author' );

		$var_36 = get_taxonomies_for_attachments( 'objects' );
		$var_36 = wp_filter_object_list( $var_36, array( 'show_admin_column' => true ), 'and', 'name' );

		
		$var_36 = apply_filters( 'manage_taxonomies_for_attachment_columns', $var_36, 'attachment' );
		$var_36 = array_filter( $var_36, 'taxonomy_exists' );

		foreach ( $var_36 as $var_37 ) {
			if ( 'category' === $var_37 ) {
				$var_38 = 'categories';
			} elseif ( 'post_tag' === $var_37 ) {
				$var_38 = 'tags';
			} else {
				$var_38 = 'taxonomy-' . $var_37;
			}
			$var_35[ $var_38 ] = get_taxonomy( $var_37 )->var_39->var_40;
		}

		
		if ( !$var_6->var_3 ) {
			$var_35['parent'] = _x( 'Uploaded to', 'column name' );
			if ( post_type_supports( 'attachment', 'comments' ) )
				$var_35['comments'] = '<span class="vers comment-grey-bubble" title="' . esc_attr__( 'Comments' ) . '"><span class="screen-reader-text">' . __( 'Comments' ) . '</span></span>';
		}
		
		$var_35['date'] = _x( 'Date', 'column name' );
		
		return apply_filters( 'manage_media_columns', $var_35, $var_6->var_3 );
	}

	
	protected function fn_11() {
		return array(
			'title'    => 'title',
			'author'   => 'author',
			'parent'   => 'parent',
			'comments' => 'comment_count',
			'date'     => array( 'date', true ),
		);
	}

	
	public function fn_12( $var_41 ) {
		if ( current_user_can( 'edit_post', $var_41->var_42 ) ) { ?>
			<label class="screen-reader-text" for="cb-select-<?php  ?>"><?php
				
			?></label>
			<input type="checkbox" name="media[]" id="cb-select-<?php  ?>" value="<?php  ?>" />
		<?php }
	}

	
	public function var_43( $var_41 ) {
		list( $var_44 ) = explode( '/', $var_41->var_45 );

		$var_46 = _draft_or_post_title();
		$var_47 = wp_get_attachment_image( $var_41->var_42, array( 60, 60 ), true, array( 'alt' => '' ) );
		$var_48 = $var_49 = '';

		if ( current_user_can( 'edit_post', $var_41->var_42 ) && ! $var_6->var_4 ) {
			$var_48 = var_50(
				'<a href="%s" aria-label="%s">',
				get_edit_post_link( $var_41->var_42 ),
				
				var_51( var_50( var_52( '&
			);
			$link_end = '</var_53>';
		}

		$class = $thumb ? ' var_32="var_54-var_55-var_56"' : '';
		?>
		<var_57<?var_58  ?>>
			<?php
			
			if ( $var_47 ) : ?>
				<var_59 var_32="var_55-var_56 <?php  ?>"><?php  ?></var_59>
			<?php endif;
			
			_media_states( $var_41 );
			?>
		</var_57>
		<var_60 var_32="var_61">
			<var_59 var_32="var_27-var_62-var_63"><?php _e( 'File name:' ); ?> </var_59>
			<?php
			$var_64 = get_attached_file( $var_41->var_42 );
			
			?>
		</var_60>
		<?php
	}

	
	public function column_author( $var_41 ) {
		printf( '<a href="%s">%s</a>',
			esc_url( add_query_arg( array( 'author' => get_the_author_meta('ID') ), 'upload.php' ) ),
			get_the_author()
		);
	}

	
	var_65 function column_desc( $var_41 ) {
		
	}

	
	public function column_date( $var_41 ) {
		if ( '0000-00-00 00:00:00' === $var_41->var_66 ) {
			$var_67 = __( 'Unpublished' );
		} var_76 {
			$var_68 = $var_41->var_66;
			$var_69 = get_post_time( 'G', true, $var_41, false );
			if ( ( abs( $var_70 = time() - $var_69 ) ) < var_71 ) {
				if ( $var_70 < 0 ) {
					$var_67 = sprintf( __( '%s from now' ), human_time_diff( $var_69 ) );
				} var_76 {
					$var_67 = sprintf( __( '%s ago' ), human_time_diff( $var_69 ) );
				}
			} var_76 {
				$var_67 = mysql2date( __( 'Y/m/d' ), $var_68 );
			}
		}

		
	}

	
	var_65 function var_72( $var_41 ) {
		$var_73 = current_user_can( 'edit_post', $var_41->var_42 );

		if ( $var_41->var_74 > 0 ) {
			$var_75 = get_post( $var_41->var_74 );
		} var_76 {
			$var_75 = false;
		}

		if ( $var_75 ) {
			$var_46 = _draft_or_post_title( $var_41->var_74 );
			$var_77 = get_post_type_object( $var_75->var_28 );
?>
			<var_57>
			<?php if ( $var_77 && $var_77->var_78 && current_user_can( 'edit_post', $var_41->var_74 ) ) { ?>
				<a href="<?php  ?>">
					<?phpvar_79 
			} ?></strong>
			<br />
			<?php
			if ( $var_73 ):
				$var_80 = add_query_arg( array(
					'parent_post_id' => $var_41->var_74,
					'media[]' => $var_41->var_42,
					'_wpnonce' => wp_create_nonce( 'bulk-' . $var_6->_args['plural'] )
				), 'upload.php' );
				var_81(
					'<a href="%s" class="hide-if-no-js detach-from-parent" aria-label="%s">%s</a>',
					$var_80,
					
					var_51( sprintf( __( 'Detach from &
					__( 'var_82' )
				);
			endif;
		} else {
			_e( '(Unattached)' ); ?><var_83 />
			<?php if ( $var_73 ) {
				$var_46 = _draft_or_post_title( $var_41->var_74 );
				printf(
					'<a href="
					$post->ID,
					
					esc_attr( sprintf( __( 'var_84 &
					__( 'Attach' )
				);
			}
		}
	}

	
	public function var_85( $var_41 ) {
		

		if ( isset( $var_6->var_2[ $var_41->var_42 ] ) ) {
			$var_86 = $var_6->var_2[ $var_41->var_42 ];
		} var_76 {
			$var_86 = get_pending_comments_num( $var_41->var_42 );
		}

		$var_6->comments_bubble( $var_41->var_42, $var_86 );

		
	}

	
	var_65 function var_87( $var_41, $var_88 ) {
		if ( 'categories' === $var_88 ) {
			$var_37 = 'category';
		} var_89 ( 'tags' === $var_88 ) {
			$var_37 = 'post_tag';
		} var_89 ( 0 === strpos( $var_88, 'taxonomy-' ) ) {
			$var_37 = substr( $var_88, 9 );
		} var_76 {
			$var_37 = false;
		}

		var_90 ( $var_37 ) {
			$var_91 = get_the_terms( $var_41->var_42, $var_37 );
			if ( is_array( $var_91 ) ) {
				$var_92 = array();
				foreach ( $var_91 as $var_93 ) {
					$var_94 = array();
					$var_94['taxonomy'] = $var_37;
					$var_94['term'] = $var_93->var_95;

					$var_92[] = sprintf( '<a href="%s">%s</a>',
						esc_url( add_query_arg( $var_94, 'upload.php' ) ),
						esc_html( sanitize_term_field( 'name', $var_93->var_40, $var_93->var_96, $var_37, 'display' ) )
					);
				}
				
				
			} var_76 {
				
		}

		
		do_action( 'manage_media_custom_column', $var_88, $var_41->var_42 );
	}

	
	var_65 function var_97() {
		var_98 $var_41, $var_8;

		$var_99 = wp_list_pluck( $var_8->var_100, 'ID' );
		reset( $var_8->var_100 );

		$var_6->var_2 = get_pending_comments_num( $var_99 );

		add_filter( 'the_title','esc_html' );

		while ( have_posts() ) : the_post();
			if (
				( $var_6->var_4 && $var_41->var_101 != 'trash' )
				|| ( ! $var_6->var_4 && $var_41->var_101 === 'trash' )
			) {
				var_102;
			}
			$var_103 = ( get_current_user_id() == $var_41->var_104 ) ? 'self' : 'other';
		?>
			<var_105 var_34="var_41-<?php  ?>" class="<?php  ?>">
				<?php $var_6->single_row_columns( $var_41 ); ?>
			</var_105>
		<?php
		endwhile;
	}

	
	protected function get_default_primary_column_name() {
		return 'title';
	}

	
	var_107 function _get_row_actions( $var_41, $var_108 ) {
		$var_23 = array();

		if ( $var_6->var_3 ) {
			if ( current_user_can( 'edit_post', $var_41->var_42 ) ) {
				$var_23['edit'] = var_50(
					'<a href="%s" aria-label="%s">%s</a>',
					get_edit_post_link( $var_41->var_42 ),
					
					var_51( sprintf( __( 'Edit &
					__( 'var_109' )
				);
			}
			if ( current_user_can( 'delete_post', $var_41->var_42 ) ) {
				if ( var_110 && var_22 ) {
					$var_23['trash'] = var_50(
						'<a href="%s" class="submitdelete" aria-label="%s">%s</a>',
						wp_nonce_url( "post.php?action=trash&amp;post=$var_41->var_42", 'trash-post_' . $var_41->var_42 ),
						
						var_51( sprintf( __( 'Move &
						_x( 'var_111', 'verb' )
					);
				} else {
					$var_112 = ! var_22 ? " onclick='return showNotice.warn();'" : '';
					$var_23['delete'] = var_50(
						'<a href="%s" class="submitdelete"%s aria-label="%s">%s</a>',
						wp_nonce_url( "post.php?action=delete&amp;post=$var_41->var_42", 'delete-post_' . $var_41->var_42 ),
						$var_112,
						
						var_51( sprintf( __( 'Delete &
						__( 'var_113 var_114' )
					);
				}
			}
			$var_23['view'] = var_50(
				'<a href="%s" aria-label="%s" rel="permalink">%s</a>',
				get_permalink( $var_41->var_42 ),
				
				var_51( sprintf( __( 'View &
				__( 'var_115' )
			);

			if ( current_user_can( 'edit_post', $var_41->var_42 ) ) {
				$var_23['attach'] = sprintf(
					'<a href="
					$post->ID,
					
					esc_attr( sprintf( __( 'var_84 &
					__( 'Attach' )
				);
			}
		}
		else {
			if ( current_user_can( 'edit_post', $var_41->var_42 ) && !$var_6->var_4 ) {
				$var_23['edit'] = var_50(
					'<a href="%s" aria-label="%s">%s</a>',
					get_edit_post_link( $var_41->var_42 ),
					
					var_51( sprintf( __( 'Edit &
					__( 'var_109' )
				);
			}
			if ( current_user_can( 'delete_post', $var_41->var_42 ) ) {
				if ( $var_6->var_4 ) {
					$var_23['untrash'] = var_50(
						'<a href="%s" class="submitdelete" aria-label="%s">%s</a>',
						wp_nonce_url( "post.php?action=untrash&amp;post=$var_41->var_42", 'untrash-post_' . $var_41->var_42 ),
						
						var_51( sprintf( __( 'Restore &
						__( 'var_116' )
					);
				} elseif ( var_110 && var_22 ) {
					$var_23['trash'] = var_50(
						'<a href="%s" class="submitdelete" aria-label="%s">%s</a>',
						wp_nonce_url( "post.php?action=trash&amp;post=$var_41->var_42", 'trash-post_' . $var_41->var_42 ),
						
						var_51( sprintf( __( 'Move &
						_x( 'var_111', 'verb' )
					);
				}
				if ( $var_6->var_4 || ! var_110 || ! var_22 ) {
					$var_112 = ( !$var_6->var_4 && !var_22 ) ? " onclick='return showNotice.warn();'" : '';
					$var_23['delete'] = var_50(
						'<a href="%s" class="submitdelete"%s aria-label="%s">%s</a>',
						wp_nonce_url( "post.php?action=delete&amp;post=$var_41->var_42", 'delete-post_' . $var_41->var_42 ),
						$var_112,
						
						var_51( sprintf( __( 'Delete &
						__( 'var_113 var_114' )
					);
				}
			}
			if ( ! $var_6->var_4 ) {
				$var_23['view'] = var_50(
					'<a href="%s" aria-label="%s" rel="permalink">%s</a>',
					get_permalink( $var_41->var_42 ),
					
					var_51( sprintf( __( 'View &
					__( 'var_115' )
				);
			}
		}

		
		return var_117( 'media_row_actions', $var_23, $var_41, $var_6->var_3 );
	}

	
	protected function var_118( $var_41, $var_88, $var_119 ) {
		if ( $var_119 !== $var_88 ) {
			return '';
		}

		$var_108 = _draft_or_post_title();
		return $var_6->row_actions( $var_6->_get_row_actions( $var_41, $var_108 ) );
	}
}
