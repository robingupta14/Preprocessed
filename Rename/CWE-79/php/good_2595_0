<?php

















error_reporting( var_0 );
@set_time_limit( 0 );




define( 'MANTIS_MAINTENANCE_MODE', true );

$var_1 = false; 

$var_2 = false;
$var_3 = false;


function fn_0( $var_4, $var_5 = true, $var_6 = '' ) {
	global $var_2;
	
	if( var_7 == $var_4 ) {
		if( $var_5 ) {
			$var_2 = true;
			
		} else {
			
		}
		if( '' != $var_6 ) {
			
		}
	}

	if( var_8 == $var_4 ) {
		
	}
	
}


function fn_1( $var_9, $var_4, $var_5 = true, $var_6 = '' ) {
	
	fn_0( $var_4, $var_5, $var_6 );
	
}










$var_10 = gpc_get_int( 'install', 0 );

layout_page_header_begin( 'Administration - Installation' );
html_javascript_link( 'install.js' );
layout_page_header_end();

layout_admin_page_begin();
?>
<div class="col-md-12 col-xs-12">
	<div class="space-10"></div>

	<div class="page-header">
	<h1>
		<?php
switch( $var_10 ) {
	case 7:
		
		break;
	case 6:
		
		break;
	case 5:
		
		break;
	case 4:
		
		break;
	case 3:
		
		break;
	case 2:
		
		break;
	case 1:
		
		break;
	case 0:
	default:
		$var_10 = 0;
		
		break;
}
?>
		<div class="btn-group pull-right">
			<a class="btn btn-sm btn-primary btn-white btn-round" href="index.php">Back to Administration</a>
		</div>
	</h1>
	</div>
</div>
<?php


if( 0 == $var_10 || 2 == $var_10 ) {
	?>
<div class="col-md-12 col-xs-12">
<div class="space-10"></div>

<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Checking Installation
	</h4>
</div>

<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed">
<?php
}

$var_11 = $var_12 . 'config_inc.php';
$var_13 = file_exists( $var_11 );



$var_14 = array(
	'oci8' => array(
		'db_table_prefix'        => 'm',
		'db_table_plugin_prefix' => 'plg',
		'db_table_suffix'        => '',
	) ,
);
foreach( $var_14['oci8'] as $var_15 => $var_16 ) {
	$var_14['other'][$var_15] = config_get( $var_15, '' );
}

if( $var_13 && $var_10 <= 1 ) {
	
	$var_17                    = config_get( 'dsn', '' );
	$var_18               = config_get( 'hostname', '' );
	$var_19                = config_get( 'db_type', '' );
	$var_20          = config_get( 'database_name', '' );
	$var_21            = config_get( 'db_username', '' );
	$var_22            = config_get( 'db_password', '' );
	$var_23               = config_get( 'default_timezone', '' );

	
	$var_24 = 'other';
	foreach( $var_14[$var_24] as $var_15 => $var_16 ) {
		${'f_' . $var_15} = $var_16;
	}
} else {
	
	$var_17                = gpc_get( 'dsn', config_get( 'dsn', '' ) );
	$var_18           = gpc_get( 'hostname', config_get( 'hostname', 'localhost' ) );
	$var_19            = gpc_get( 'db_type', config_get( 'db_type', '' ) );
	$var_20      = gpc_get( 'database_name', config_get( 'database_name', 'bugtracker' ) );
	$var_21        = gpc_get( 'db_username', config_get( 'db_username', '' ) );
	$var_22        = gpc_get( 'db_password', config_get( 'db_password', '' ) );
	if( var_25 == $var_22 ) {
		$var_22 = config_get( 'db_password' );
	}
	$var_23           = gpc_get( 'timezone', config_get( 'default_timezone' ) );

	
	$var_24 = $var_19 == 'oci8' ? $var_19 : 'other';
	foreach( $var_14[$var_24] as $var_15 => $var_16 ) {
		${'f_' . $var_15} = gpc_get( $var_15, $var_16 );
	}
}
$var_26 = gpc_get( 'admin_username', '' );
$var_27 = gpc_get( 'admin_password', '' );
if( var_25 == $var_27 ) {
	$var_27 = '';
}
$var_28    = gpc_get_bool( 'log_queries', false );
$var_29      = gpc_get_bool( 'db_exists', false );

if( $var_13 ) {
	if( 0 == $var_10 ) {
		fn_1( 'Config File Exists - Upgrade', true );

		fn_1( 'Setting Database Type', '' !== $var_19, true, 'database type is blank?' );

		
		$var_30 = ( $var_17 !== '' || ( $var_20 !== '' && $var_21 !== '' && $var_18 !== '' ) );
		
		
		
		if( $var_19 == 'oci8' ) {
			$var_30 = $var_30 || ( $var_20 == '' && $var_21 !== '' && $var_18 !== '' );
		}
		fn_1( 'Checking Database connection settings exist',
			$var_30,
			true,
			'database connection settings do not exist?' );

		fn_1( 'Checking PHP support for database type',
			db_check_database_support( $var_19 ), true,
			'database is not supported by PHP. Check that it has been compiled into your server.' );

		if( $var_19 == 'mssql' ) {
			fn_1( 'Checking PHP support for Microsoft SQL Server driver',
				version_compare( phpversion(), '5.3' ) < 0, true,
				'mssql driver is no longer supported in PHP >= 5.3, please use mssqlnative instead' );
		}
	}

	$var_31 = ADONewConnection( $var_19 );
	$var_32 = @$var_31->Connect( $var_18, $var_21, $var_22, $var_20 );
	if( $var_31->IsConnected() ) {
		$var_35 = true;
	}

	$var_36 = config_get( 'database_version', -1 );

	if( $var_36 > 1 ) {
		$var_3 = true;
		$var_29 = true;
	} else {
		if( 0 == $var_10 ) {
			fn_1( 'Config File Exists but Database does not', false, false, 'Bad config_inc.php?' );
		}
	}
}

if( 0 == $var_10 ) {
	?>

<!-- Check PHP Version -->
<?php
	fn_1(
		'Checking PHP version (your version is ' . phpversion() . ')',
		check_php_version( phpversion() ),
		true,
		'Upgrade to a more recent version of PHP'
	);

	
	
	
	
	fn_1(
		'Checking UTF-8 support',
		extension_loaded( 'mbstring' ) || function_exists( 'utf8_encode' ),
		true,
		'Please install or enable the PHP mbstring extension'
	);
?>
<!-- Check Safe Mode -->
<?php
fn_1( 'Checking if safe mode is enabled for install script',
	!ini_get( 'SAFE_MODE' ),
	true,
	'Disable safe_mode in php.ini before proceeding' ) ?>

<?php
	
	$var_37 = array(
		'config_inc.php' => 'move',
		'custom_constants_inc.php' => 'move',
		'custom_strings_inc.php' => 'move',
		'custom_functions_inc.php' => 'move',
		'custom_relationships_inc.php' => 'move',
		'mc_config_defaults_inc.php' => 'delete',
		'mc_config_inc.php' => 'contents',
	);

	foreach( $var_37 as $var_38 => $var_39 ) {
		$var_40 = dirname( dirname( var_41 ) ) . '/';
		if( substr( $var_38, 0, 3 ) == 'mc_' ) {
			$var_40 .= 'api/soap/';
		}

		switch( $var_39 ) {
			case 'move':
				$var_42 = "Move $var_38 to config/$var_38.";
				break;
			case 'delete':
				$var_42 = 'Delete this file.';
				break;
			case 'contents':
				$var_42 = 'Move contents to config_inc.php file.';
				break;
		}

		fn_1(
			"Checking there is no '$var_38' file in 1.2.x location.",
			!file_exists( $var_40 . $var_38 ),
			true,
			$var_42
		);
	}
?>

<?php
	if( false == $var_2 ) {
		$var_10++;
	}
} 


if( 2 == $var_10 ) {
	
	date_default_timezone_set( $var_23 );
?>

<!-- Checking DB support-->
<?php
	fn_1( 'Setting Database Type', '' !== $var_19, true, 'database type is blank?' );

	fn_1( 'Checking PHP support for database type', db_check_database_support( $var_19 ), true, 'database is not supported by PHP. Check that it has been compiled into your server.' );

	
	$var_43 = substr( $var_44, 1, strpos( $var_44, ' ' ) - 1 );
	fn_1( 'Checking ADOdb Library version is at least ' . var_45,
		version_compare( $var_43, var_45, '>=' ),
		true,
		'Current version: ' . $var_44
	);

	fn_1( 'Setting Database Hostname', '' !== $var_18, true, 'host name is blank' );
	fn_1( 'Setting Database Username', '' !== $var_21, true, 'database username is blank' );
	fn_1( 'Setting Database Password', '' !== $var_22, false, 'database password is blank' );
	fn_1( 'Setting Database Name', '' !== $var_20 || $var_19 == 'oci8', true, 'database name is blank' );

?>
<tr>
	<td>
		Setting Admin Username
	</td>
	<?php
		if( '' !== $var_26 ) {
		fn_0( var_8 );
	} else {
		fn_0( var_7, false, 'admin user name is blank, using database user instead' );
		$var_26 = $var_21;
	}
	?>
</tr>
<tr>
	<td>
		Setting Admin Password
	</td>
	<?php
		if( '' !== $var_27 ) {
			fn_0( var_8 );
		} else {
			fn_0( var_7, false, 'admin user password is blank, using database user password instead' );
			$var_27 = $var_22;
		}
	?>
</tr>

<!-- connect to db -->
<tr>
	<td>
		Attempting to connect to database as admin
	</td>
	<?php
		$var_46 = false;
	$var_31 = ADONewConnection( $var_19 );
	$var_32 = @$var_31->Connect( $var_18, $var_26, $var_27 );

	if( $var_32 ) {
		
		
		$var_47 = @$var_31->ServerInfo();

		
		$var_32 = @$var_31->Connect( $var_18, $var_26, $var_27, $var_20 );
		if( $var_32 ) {
			$var_46 = true;
			$var_29 = true;
		}

		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			true,
			'Does administrative user have access to the database? ( ' . string_attribute( db_error_msg() ) . ' )'
		);
		$var_47 = null;
	}
	?>
</tr>
<?php
	if( $var_29 ) {
		?>
<tr>
	<td>
		Attempting to connect to database as user
	</td>
	<?php
		$var_31 = ADONewConnection( $var_19 );
		$var_32 = @$var_31->Connect( $var_18, $var_21, $var_22, $var_20 );

		if( $var_32 == true ) {
			$var_46 = true;
			fn_0( var_8 );
		} else {
			fn_0(
				var_7,
				false,
				'Database user doesn\'t have access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
			);
		}
		?>
</tr>

<?php
	}
	if( $var_46 ) {
		?>
<!-- display database version -->
<tr>
	<td>
		Checking Database Server Version
<?php
		if( isset( $var_47['description'] ) ) {
			
		}
?>
	</td>
<?php
		$var_49 = '';
		$var_50 = '';
		switch( $var_19 ) {
			case 'mysql':
			case 'mysqli':
				if( version_compare( $var_47['version'], var_51, '<' ) ) {
					$var_50 = 'MySQL ' . var_51 . ' or later is required for installation';
				}
				break;
			case 'mssql':
			case 'mssqlnative':
				if( version_compare( $var_47['version'], var_52, '<' ) ) {
					$var_50 = 'SQL Server (' . var_52 . ') or later is required for installation';
				}
				break;
			case 'pgsql':
			default:
				break;
		}

		if( is_null( $var_47 ) ) {
			$var_49 = "Unable to determine '$var_19' version. ($var_50).";
			$var_50 = '';
		}
		fn_0(
			( '' == $var_50 ) && ( '' == $var_49 ),
			( '' != $var_50 ),
			$var_50 . ' ' . $var_49
		);
?>
</tr>

<?php
	} 
	if( false == $var_2 ) {
		$var_10++;
	} else {
		$var_10--; 
	}
} 
?>

</table>
</table>
</div>
</div>
</div>
</div>
</div>

<?php

if( 1 == $var_10 ) {
	?>

<form method='POST'>

<input name="install" type="hidden" value="2">

<div class="col-md-12 col-xs-12">
<div class="space-10"></div>

<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
		<h4 class="widget-title lighter">
			<?php 
		foreach( $var_53 as $var_15 => $var_16 ) {
			
		}
		
	}
?>
		</div>

		<select id="db_type" name="db_type" class="input-sm">
<?php
			
			$var_54 = array(
				'mysqli'      => 'MySQL Improved',
				'mysql'       => 'MySQL',
				'mssqlnative' => 'Microsoft SQL Server Native Driver',
				'pgsql'       => 'PostgreSQL',
				'oci8'        => 'Oracle',
			);
			
			if( version_compare( phpversion(), '5.5.0' ) >= 0 ) {
				unset( $var_54['mysql']);
			}

			foreach( $var_54 as $var_55 => $var_56 ) {
				
			}
?>
		</select>
	</td>
</tr>

<!-- Database server hostname -->
<tr>
	<td>
		Hostname (for Database Server)
	</td>
	<td>
		<input name="hostname" type="text" value="<?php 
		?>">
	</td>
</tr>

<!-- Database name -->
<tr>
	<td>
		Database name (for Database)
	</td>
	<td>
		<input name="database_name" type="text" value="<?php 
		?>">
	</td>
</tr>

<?php

if( !$var_3 ) {
	$var_57 = array(
		'db_table_prefix'        => 'Database Table Prefix',
		'db_table_plugin_prefix' => 'Database Plugin Table Prefix',
		'db_table_suffix'        => 'Database Table Suffix',
	);
	foreach( $var_14[$var_24] as $var_15 => $var_16 ) {
		
		
		
		
		";
		if( $var_15 != 'db_table_suffix' ) {
			$var_58 = $var_15. '_sample';
			
			
		} else {
			
			
			
		}
		
	}

	
	$var_59 = config_get_global( 'default_timezone' );
	if( is_blank( $var_59 ) ) {
		$var_59 = @date_default_timezone_get();
	}
?>
<!-- Timezone -->
<tr>
	<td>
		Default Time Zone
	</td>
	<td>
		<select id="var_60" var_61="var_60">
			<?php print_timezone_option_list( $var_59 ) ?>
		</select>
	</td>
</tr>
<?php
} 
?>

<!-- Printing SQL queries -->
<tr>
	<td>
		Print SQL Queries instead of Writing to the Database
	</td>
	<td>
		<input name="log_queries" type="checkbox" class="ace" value="1" <?php echo( $var_28 ? 'checked="checked"' : '' )?>>
		<span class="lbl"></span>
	</td>
</tr>

<!-- Submit button -->
<tr>
	<td>
		<?php 
		?>
	</td>
	<td>
		<input name="go" type="submit" class="btn btn-primary btn-white btn-round" value="Install/Upgrade Database">
	</td>
</tr>

</table>
</div>
</div>
</div>
</div>
</div>
</form>

<?php
}  


if( 3 == $var_10 ) {
	?>
<div class="col-md-12 col-xs-12">
<div class="space-10"></div>
<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Installing Database
	</h4>
</div>
<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed" style="table-layout:fixed">
<?php if( !$var_28 ) {?>
<tr>
	<td>
		Create database if it does not exist
	</td>
	<?php
		$var_32 = @$var_31->Connect( $var_18, $var_26, $var_27, $var_20 );

		$var_46 = false;

		if( $var_32 == true ) {
			fn_0( var_8 );
			$var_46 = true;
		} else {
			
			$var_31 = ADONewConnection( $var_19 );
			$var_32 = $var_31->Connect( $var_18, $var_26, $var_27 );

			$var_62 = NewDataDictionary( $var_31 );

			$var_63 = $var_62->CreateDatabase( $var_20, array(
				'mysql' => 'DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci',
			) );
			$var_65 = $var_62->ExecuteSQLArray( $var_63, false );
			if( $var_65 == 2 ) {
				fn_0( var_8 );
				$var_46 = true;
			} else {
				$var_50 = db_error_msg();
				if( $var_19 == 'oci8' ) {
					$var_67 = preg_match( '/ORA-01920/', $var_50 );
				} else {
					$var_67 = strstr( $var_50, 'atabase exists' );
				}

				if( $var_67 ) {
					fn_0(
						var_7,
						false,
						'Database already exists? ( ' . string_attribute( db_error_msg() ) . ' )'
					);
				} else {
					fn_0(
						var_7,
						true,
						'Does administrative user have access to create the database? ( ' . string_attribute( db_error_msg() ) . ' )'
					);
					$var_10--; 
				}
			}
		}
		?>
</tr>
<?php
	
	$var_31->Close();
	$var_31 = null;
?>
<tr>
	<td>
		Attempting to connect to database as user
	</td>
	<?php
		$var_31 = ADONewConnection( $var_19 );
		$var_32 = @$var_31->Connect( $var_18, $var_21, $var_22, $var_20 );
		if( $var_32 == true ) {
			fn_0( var_8 );
		} else {
			fn_0(
				var_7,
				false,
				'Database user doesn\'t have access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
			);
		}
		$var_31->Close();
	?>
</tr>
<?php
	}

	
	if( false == $var_2 ) {
		$var_35 = false;

		
		config_set_global( 'db_type', $var_19 );

		
		config_set_global( 'db_table_prefix', $var_69 );
		config_set_global( 'db_table_plugin_prefix', $var_70 );
		config_set_global( 'db_table_suffix', $var_71 );
		
		$var_31 = ADONewConnection( $var_19 );
		$var_32 = @$var_31->Connect( $var_18, $var_26, $var_27, $var_20 );
		if( !$var_28 ) {
			$var_35 = true;

			
		}
		$var_72 = config_get( 'database_version', -1, var_73, var_74 );
		$var_75 = count( $var_76 ) - 1;
		$var_77 = $var_72 + 1;
		if( $var_28 ) {
			
		}

		
		if( $var_19 === 'mysql' || $var_19 === 'mysqli' ) {
			$var_31->execute( 'SET NAMES UTF8' );
		}

		$var_62 = NewDataDictionary( $var_31 );

		
		
		
		

		if( $var_72 > 51 && $var_72 < 189 ) {
			
			
			
			$var_79 = check_pgsql_bool_columns();
			if( $var_79 !== true ) {
				
				$var_80 = "PostgreSQL: check Boolean columns' actual type";
				if( is_array( $var_79 ) ) {
					fn_1(
						$var_80,
						count( $var_79 ) == 0,
						false,
						count( $var_79 ) . ' columns must be converted to BOOLEAN' );
				} else {
					
					fn_1( $var_80, false, true, $var_79 );
				}

				
				foreach( $var_79 as $var_81 ) {
					extract( $var_81, var_82, 'v' );
					$var_83 = $var_84 ? 'NULL' : 'NOT NULL';
					$var_85 = is_null( $var_86 ) ? 'NULL' : $var_86;
					$var_63 = $var_62->AlterColumnSQL(
						$var_88,
						$var_89 . ' L ' . $var_83 . ' DEFAULT ' . $var_85 );
					fn_1(
						'Converting column ' . $var_88 . '.' . $var_89 . ' to BOOLEAN',
						2 == $var_62->ExecuteSQLArray( $var_63, false ),
						true,
						print_r( $var_63, true ) );
					if( $var_2 ) {
						
						break;
					}
				}
			}
		}
		

		while( ( $var_77 <= $var_75 ) && !$var_2 ) {
			if( !$var_28 ) {
				
			}

			$var_90 = true;
			$var_91 = $var_76[$var_77][1][0];

			switch( $var_76[$var_77][0] ) {
				case 'InsertData':
					$var_63 = call_user_func_array( $var_76[$var_77][0], $var_76[$var_77][1] );
					break;

				case 'UpdateSQL':
					$var_63 = array(
						$var_76[$var_77][1],
					);
					$var_91 = $var_76[$var_77][1];
					break;

				case 'UpdateFunction':
					$var_63 = array(
						$var_76[$var_77][1],
					);
					if( isset( $var_76[$var_77][2] ) ) {
						$var_63[] = $var_76[$var_77][2];
					}
					$var_90 = false;
					$var_91 = $var_76[$var_77][1];
					break;

				case null:
					
					break;

				default:
					$var_63 = call_user_func_array( array( $var_62, $var_76[$var_77][0] ), $var_76[$var_77][1] );

					
					if( isset( $var_76[$var_77][2] ) ) {
						if( call_user_func_array( $var_76[$var_77][2][0], $var_76[$var_77][2][1] ) ) {
							$var_63 = call_user_func_array( array( $var_62, $var_76[$var_77][0] ), $var_76[$var_77][1] );
						} else {
							$var_63 = array();
						}
					} else {
						$var_63 = call_user_func_array( array( $var_62, $var_76[$var_77][0] ), $var_76[$var_77][1] );
					}
					break;
			}
			if( $var_28 ) {
				if( $var_90 ) {
					foreach( $var_63 as $var_90 ) {
						
						if( $var_19 == 'oci8' && stripos( $var_90, 'CREATE OR REPLACE TRIGGER' ) === 0 ) {
							$var_92 = var_93 . '/';
						} else {
							$var_92 = ';';
						}
						
					}
				}
			} else {
				
				if( is_null( $var_76[$var_77][0] ) ) {
					
					$var_65 = 2;
				} else {
					
					if( $var_90 ) {
						$var_65 = $var_62->ExecuteSQLArray( $var_63, false );
					} else {
						if( isset( $var_63[1] ) ) {
							$var_65 = call_user_func( 'install_' . $var_63[0], $var_63[1] );
						} else {
							$var_65 = call_user_func( 'install_' . $var_63[0] );
						}
					}
				}
				
				if( $var_65 == 2 ) {
					fn_0( var_8 );
					config_set( 'database_version', $var_77 );
				} else {
					$var_94 = '';
					if( $var_90 ) {
						foreach( $var_63 as $var_95 ) {
							if( !empty( $var_95 ) ) {
								$var_94 .= $var_95 . '<br />';
							}
						}
					}
					fn_0( var_7, true, $var_94  . $var_31->ErrorMsg() );
				}
				
			}
			$var_77++;
		}
		if( $var_28 ) {
			
			' . PHP_EOL;
			
		}
	}
	if( false == $g_failed ) {
		$t_install_state++;
	} else {
		$t_install_state--;
	}

	?>
</table>
</div>
</div>
</div>
</div>
</div>

<?php
}  


if( 4 == $t_install_state ) {


	$t_install_state++;
}  


if( 5 == $t_install_state ) {
	$t_config_exists = file_exists( $t_config_filename );
	?>

<div class="col-md-12 col-xs-12">
<div class="space-10"></div>
<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Write Configuration File(s)
	</h4>
</div>
<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed">
<tr>
    <td>
        <?php  ?>
        Configuration File (config/config_inc.php)<br />
    </td>
<?php
	

	
	
	
	
	$t_crypto_master_salt = crypto_generate_random_string( 32 );
	if( $t_crypto_master_salt !== null ) {
		$t_crypto_master_salt = base64_encode( $t_crypto_master_salt );
	}

	$t_config = '<?var_97' . var_93
		. '$g_hostname               = \'' . addslashes( $var_18 ) . '\';' . var_93
		. '$g_db_type                = \'' . addslashes( $var_19 ) . '\';' . var_93
		. '$g_database_name          = \'' . addslashes( $var_20 ) . '\';' . var_93
		. '$g_db_username            = \'' . addslashes( $var_21 ) . '\';' . var_93
		. '$g_db_password            = \'' . addslashes( $var_22 ) . '\';' . var_93;

	$var_98 .= var_93;

	
	$var_99 = false;
	foreach( $var_14['other'] as $var_15 => $var_16 ) {
		$var_100 = ${'f_' . $var_15};
		if( $var_100 != $var_16 ) {
			$var_98 .= '$g_' . str_pad( $var_15, 25 ) . '= \'' . addslashes( ${'f_' . $var_15} ) . '\';' . var_93;
			$var_99 = true;
		}
	}
	if( $var_99 ) {
		$var_98 .= var_93;
	}

	$var_98 .=
		  '$g_default_timezone       = \'' . addslashes( $var_23 ) . '\';' . var_93
		. var_93
		. "\$g_crypto_master_salt     = '" . addslashes( $var_101 ) . "';" . var_93;

	$var_102 = true;

	if( !$var_13 ) {
		if( $var_103 = @fopen( $var_11, 'w' ) ) {
			fwrite( $var_103, $var_98 );
			fclose( $var_103 );
		}

		if( file_exists( $var_11 ) ) {
			fn_0( var_8 );
			$var_102 = false;
		} else {
			fn_0( var_7, false, 'cannot write ' . $var_11 );
		}
	} else {
		
		if( ( $var_18 != config_get( 'hostname', '' ) ) ||
			( $var_19 != config_get( 'db_type', '' ) ) ||
			( $var_20 != config_get( 'database_name', '' ) ) ||
			( $var_21 != config_get( 'db_username', '' ) ) ||
			( $var_22 != config_get( 'db_password', '' ) ) ) {
			fn_0( var_7, false, 'file ' . $var_11 . ' already exists and has different settings' );
		} else {
			fn_0( var_8, false );
			$var_102 = false;
		}
	}
	?>
</tr>
<?php
	if( $var_101 === null ) {
		fn_1( 'Setting Cryptographic salt in config file', false, false,
					'Unable to find a random number source for cryptographic purposes. You will need to edit ' .
					$var_11 . ' and set a value for $g_crypto_master_salt manually' );
	}

	if( true == $var_102 ) {
?>
<tr>
	<td colspan="2">
		<table width="50%" cellpadding="10" cellspacing="1">
			<tr>
				<td>
					Please add the following lines to
					<em>'<?php  ?>'</em>
					before continuing:
				</td>
			</tr>
			<tr>
				<td>
					<pre><?php  ?></pre>
				</td>
			</tr>
		</table>
	</td>
</tr>
<?php
	}
?>

</table>
</div>
</div>
</div>
</div>
</div>

<?php
	if( false == $var_2 ) {
		$var_10++;
	}
}



if( 6 == $var_10 ) {


?>
<div class="col-md-12 col-xs-12">
<div class="space-10"></div>
<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Checking Installation
	</h4>
</div>
<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed">

<tr>
	<td>
		Attempting to connect to database as user
	</td>
	<?php
		$var_31 = ADONewConnection( $var_19 );
	$var_32 = @$var_31->Connect( $var_18, $var_21, $var_22, $var_20 );

	if( $var_32 == true ) {
		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			false,
			'Database user does not have access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
		);
	}
	?>
</tr>
<tr>
	<td>
		checking ability to SELECT records
	</td>
	<?php
	$var_104 = 'SELECT COUNT(*) FROM ' . db_get_table( 'config' );
	$var_32 = @$var_31->Execute( $var_104 );

	if( $var_32 != false ) {
		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			true,
			'Database user does not have SELECT access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
		);
	}
	?>
</tr>
<tr>
	<td>
		checking ability to INSERT records
	</td>
	<?php
		$var_104 = 'INSERT INTO ' . db_get_table( 'config' ) . ' ( value, type, access_reqd, config_id, project_id, user_id ) VALUES (\'test\', 1, 90, \'database_test\', 20, 0 )';
	$var_32 = @$var_31->Execute( $var_104 );

	if( $var_32 != false ) {
		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			true,
			'Database user does not have INSERT access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
		);
	}
	?>
</tr>
<tr>
	<td>
		checking ability to UPDATE records
	</td>
	<?php
		$var_104 = 'UPDATE ' . db_get_table( 'config' ) . ' SET value=\'test_update\' WHERE config_id=\'database_test\'';
	$var_32 = @$var_31->Execute( $var_104 );

	if( $var_32 != false ) {
		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			true,
			'Database user does not have UPDATE access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
		);
	}
	?>
</tr>
<tr>
	<td>
		checking ability to DELETE records
	</td>
	<?php
		$var_104 = 'DELETE FROM ' . db_get_table( 'config' ) . ' WHERE config_id=\'database_test\'';
	$var_32 = @$var_31->Execute( $var_104 );

	if( $var_32 != false ) {
		fn_0( var_8 );
	} else {
		fn_0(
			var_7,
			true,
			'Database user does not have DELETE access to the database ( ' . string_attribute( db_error_msg() ) . ' )'
		);
	}
	?>
</tr>
</table>
</div>
</div>
</div>
</div>
</div>

<?php
	if( false == $var_2 ) {
		$var_10++;
	}
}



if( 7 == $var_10 ) {
	
	?>
<div class="col-md-12 col-xs-12">
<div class="space-10"></div>
<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Installation Complete
	</h4>
</div>
<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed">
<tr>
	<td>
		<span class="bigger-130">
		MantisBT was installed successfully.
<?php if( $var_29 ) {?>
		<a href="../login_page.php">Continue</a> to log in.
<?php } else { ?>
		Please log in as the administrator and <a href="../login_page.php">create</a> your first project.
		</span>
<?php } ?>
	</td>
	<?php fn_0( var_8 ); ?>
</tr>
</table>
</div>
</div>
</div>
</div>
</div>
<?php
}



if( $var_2 && $var_10 != 1 ) {
	?>
<div class="col-md-12 col-xs-12">
<div class="space-10"></div>
<div class="widget-box widget-color-blue2">
<div class="widget-header widget-header-small">
	<h4 class="widget-title lighter">
		Installation Failed
	</h4>
</div>
<div class="widget-body">
<div class="widget-main no-padding">
<div class="table-responsive">
<table class="table table-bordered table-condensed">
<tr>
	<td>Please correct failed checks</td>
	<td>
<form method='POST'>
		<input name="install" type="hidden" value="<?php 
		?>">
		<input name="admin_username" type="hidden" value="<?php 
		?>">
		<input name="log_queries" type="hidden" value="<?php echo( $var_28 ? 1 : 0 )?>">
		<input name="db_exists" type="hidden" value="<?php echo( $var_29 ? 1 : 0 )?>">
		<input name="retry" type="submit" class="btn btn-primary btn-white btn-round" value="Retry">
</form>
	</td>
</tr>
</table>
</div>
</div>
</div>
</div>
</div>

<div class="space-10"></div>
<?php
}
layout_admin_page_end();
