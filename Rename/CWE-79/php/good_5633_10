<?php defined('SYSPATH') OR die('No direct access allowed.');

class class_0 {

	private $var_0;

	
	public function fn_0()
	{
		
		imap_timeout(var_1,90);
		imap_timeout(var_2,90);


		
		$var_3 = Kohana::config('settings.email_ssl') == true ? "/ssl" : "";

		
		
		$var_4 = "/novalidate-cert";

		
		$var_5 = strtolower(Kohana::config('settings.email_servertype')) == "pop3" ? "/notls" : "";

		

		$var_6 = "{".Kohana::config('settings.email_host').":"
			.Kohana::config('settings.email_port')."/"
			.Kohana::config('settings.email_servertype')
			.$var_5.$var_3.$var_4."}";

		
		if(count(dns_get_record("".Kohana::config('settings.email_host')."")) == 0)
		{
			$var_7->var_0 = false;
			return false;
		}

		if ( $var_0 = @imap_open($var_6, Kohana::config('settings.email_username')
			,Kohana::config('settings.email_password')))
		{

			$var_7->var_0 = $var_0;

		} else {
			
			

			$var_7->var_0 = false;
			return false;

			
		}
	}

	
	public function fn_1($var_8="UNSEEN",
								 $var_9="Y-m-d H:i:s")
	{
		global $var_10,$var_11,$var_12;
		
		

		if($var_7->var_0 == false)
		{
			return array();
		}

		
		
		$var_13 = imap_search($var_7->var_0, 'UNSEEN');
		$var_14 = Kohana::config('email.max_imap_messages');

		if ($var_13 == null)
		{
			return array();
		}

		
		
		
		$var_15 = sizeof($var_13);
		
		
		if($var_15 > $var_14)
		{
			$var_15 = $var_14;
		}

		$var_16 = array();

		for ($var_17 = 0; $var_17 < $var_15; $var_17++)
		{
			$var_18 = $var_13[$var_17];
			$var_19 = imap_headerinfo($var_7->var_0, $var_18);

			if( ! isset($var_19->var_20) OR ! isset($var_19->var_21))
			{
				continue;
			}
			
			
			
			if ($var_19->var_22 != 'U' AND $var_19->var_23 != 'N')
			{
				continue;
			}

			$var_20 = $var_19->var_20;
			$var_24 = date($var_9, $var_19->var_21);

			if (isset($var_19->var_25))
			{
				$var_25 = $var_19->var_25;
			}else{
				$var_25 = FALSE;
			}

			$var_26 = "";
			$var_27 = "";
			$var_28 = "";
			$var_29 = "";
			$var_12 = "";

			if ($var_25 != FALSE)
			{
				foreach ($var_25 as $var_30 => $var_31)
				{
					if (isset($var_31->var_32))
					{
						$var_26 = $var_31->var_32;
					}

					if (isset($var_31->var_33) AND isset($var_31->var_34))
					{
						$var_27 = $var_31->var_33."@".$var_31->var_34;
					}

					if ($var_26 == "")
					{
						
						$var_26 = $var_27;
					}
				}
			}

			if (isset($var_19->var_28))
			{
				$var_28 = $var_7->fn_2($var_19->var_28);
			}

			
			$var_7->fn_3($var_7->var_0, $var_18);
			
			if ($var_10)
			{
				
				$var_37 = new class_1($var_10);
				$var_10 = $var_37->get_text();
			}
			$var_29 = ($var_11) ? $var_11 : $var_10;
			
			
			$var_12 = $var_7->fn_4($var_7->var_0, $var_18);

			
			
			if(mb_detect_encoding($var_29, 'auto', TRUE) == '')
			{
				$var_29 = iconv("windows-1256", "UTF-8", $var_29);
			}

			
			$var_40 = mb_detect_encoding($var_29, "auto");
			if($var_40 == 'ASCII') $var_40 = 'iso-8859-1';
			$var_29 = mb_convert_encoding($var_29, $var_40, 'UTF-8');
			$var_29 = html::escape($var_29);
			$var_28 = html::strip_tags($var_28);

			array_push($var_16, array('message_id' => $var_20,
										'date' => $var_24,
										'from' => $var_26,
										'email' => $var_27,
										'subject' => $var_28,
										'body' => $var_29,
										'attachments' => $var_12));

			
			imap_setflag_full($var_7->var_0, $var_18, "\\Seen");
		}

		return $var_16;
	}

	
	public function fn_5($var_41)
	{
		imap_delete($var_7->var_0, $var_41);
	}

	
	public function fn_6()
	{
		
		$var_42 = imap_errors();
		@imap_close($var_7->var_0);
	}

	private function fn_2($var_43)
	{
		$var_44 = imap_mime_header_decode($var_43);
		$var_45 = "";

		foreach ($var_44 as $var_46)
		{
			
			
			
			if(strtoupper($var_46->var_47) == 'WINDOWS-1256'){
				$var_46->var_45 = iconv("windows-1256", "UTF-8", $var_46->var_45);
			}
			
			$var_45.= $var_46->var_45;
		}

		return $var_45;
	}
	
	
	private function fn_4($var_48, $var_49) {

		$var_12 = array();
		$var_50 = imap_fetchstructure($var_48, $var_49);

		if(isset($var_50->var_51) && count($var_50->var_51)) {

			for($var_52 = 0; $var_52 < count($var_50->var_51); $var_52++) {

				$var_12[$var_52] = array(
					'is_attachment' => false,
					'file_name' => '',
					'name' => '',
					'type' => 0,
					'subtype' => '',
					'attachment' => ''
				);

				
				
				
				
				
				
				$var_12[$var_52]['type'] = $var_50->var_51[$var_52]->var_53;
				$var_12[$var_52]['subtype'] = $var_50->var_51[$var_52]->var_54;

				if($var_50->var_51[$var_52]->var_55) {
					foreach($var_50->var_51[$var_52]->var_56 as $var_31) {
						if(strtolower($var_31->var_57) == 'filename') {
							$var_12[$var_52]['is_attachment'] = true;
							$var_12[$var_52]['file_name'] = $var_31->var_58;
						}
					}
				}

				if($var_50->var_51[$var_52]->var_59) {
					foreach($var_50->var_51[$var_52]->var_60 as $var_31) {
						if(strtolower($var_31->var_57) == 'name') {
							$var_12[$var_52]['is_attachment'] = true;
							$var_12[$var_52]['name'] = $var_31->var_58;
						}
					}
				}

				if($var_12[$var_52]['is_attachment']) {
					$var_12[$var_52]['attachment'] = imap_fetchbody($var_48, $var_49, $var_52+1);
					if($var_50->var_51[$var_52]->var_61 == 3) { 
						$var_12[$var_52]['attachment'] = base64_decode($var_12[$var_52]['attachment']);
					}
					elseif($var_50->var_51[$var_52]->var_61 == 4) { 
						$var_12[$var_52]['attachment'] = quoted_printable_decode($var_12[$var_52]['attachment']);
					}
				}

			}

		}
		
		$var_62 = array();
		foreach ($var_12 as $var_63)
		{
			$var_64 = $var_63['attachment'];
			
			
			
			
			
			if (strlen($var_64) < 12500) {
				continue;
			}
			
			$var_65 = $var_63['type'];
			$var_66 = $var_63['subtype'];
			
			if ($var_66 == 'JPEG')
			{
				$var_66 = '.JPG';
			}
			else
			{
				$var_66 = '.' . $var_66;
			}
			
			$var_67 = time()."_".$var_7->fn_7(10); 
			$var_62[] = $var_7->fn_8($var_65, $var_67, $var_64, $var_66);
		}

		
		return array_filter($var_62);
	}
	
	
		
	private function fn_8($var_65,$var_70,$var_64,$var_66)
	{
	  
	  
	  if ($var_65 == 5)
		{
			$var_12 = array();
			$var_71 = Kohana::config("upload.directory")."/".$var_70.$var_66;
			$var_72 = fopen($var_71, "w");
			fwrite($var_72, $var_64);
			fclose($var_72);
			
			
			
			
			Image::factory($var_71)->resize(800,600,var_74::var_75)
				->save(Kohana::config('upload.directory', TRUE).$var_70.$var_66);

			
			Image::factory($var_71)->resize(400,300,var_74::var_77)
				->save(Kohana::config('upload.directory', TRUE).$var_70."_m".$var_66);
			
			
			Image::factory($var_71)->resize(89,59,var_74::var_77)
				->save(Kohana::config('upload.directory', TRUE).$var_70."_t".$var_66);
				
			$var_12[] = array(
					$var_70.$var_66,
					$var_70."_m".$var_66,
					$var_70."_t".$var_66
				);
			return $var_12;
		}
		else
		{
			return null;
		}
	}
	
	
	private function fn_7($var_78)
	{
		$var_79 = "";
		srand((double)microtime()*1000000);
		$var_80 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		$var_80 .= "abcdefghijklmnopqrstuvwxyz";
		$var_80 .= "1234567890";
		

		for($var_52 = 0; $var_52 < $var_78; $var_52++)
		{
			$var_79 .= substr($var_80,(rand()%(strlen($var_80))), 1);
		}
		
		return $var_79;
	}
	
	private function fn_3($var_81,$var_82)
	{
		
		
		global $var_10,$var_11,$var_12;
		
		$var_10 = $var_11 = '';
		$var_12 = array();

		
		$var_83 = imap_header($var_81,$var_82);
		

		
		$var_84 = imap_fetchstructure($var_81,$var_82);
		if (@!$var_84->var_51)	 
			$var_7->fn_9($var_81,$var_82,$var_84,0);  
		else {	
			foreach ($var_84->var_51 as $var_86=>$var_87)
				$var_7->fn_9($var_81,$var_82,$var_87,$var_86+1);
		}
	}

	private function fn_9($var_81,$var_82,$var_87,$var_88)
	{
		
		global $var_10,$var_11,$var_12;

		
		$var_89 = ($var_88)?
			imap_fetchbody($var_81,$var_82,$var_88):	 
			imap_body($var_81,$var_82);	
		
		if ($var_87->var_61==4)
			$var_89 = quoted_printable_decode($var_89);
		elseif ($var_87->var_61==3)
			$var_89 = base64_decode($var_89);
		

		
		if ($var_87->var_53==0 && $var_89) {
			
			
			if (strtolower($var_87->var_54)=='plain')
				$var_11 .= trim($var_89) ."\n\n";
			else
				$var_10 .= $var_89 ."<br><br>";
		}

		
		
		
		
		
		elseif ($var_87->var_53==2 && $var_89)
		{
			$var_11 .= trim($var_89) ."\n\n";
		}

		
		if (isset($var_87->var_51))
		{
			foreach ($var_87->var_51 as $var_86=>$var_90)
				$var_7->fn_9($var_81,$var_82,$var_90,$var_88.'.'.($var_86+1));  
		}
	}
} 
