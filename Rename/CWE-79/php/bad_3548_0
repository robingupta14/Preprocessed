<?php

class var_0 {
	
	
	protected static $var_1 = false;
	
	
	static function fn_0($var_2) {
		self::$var_1 = $var_2;
	}
	
	
	static function fn_1() {
		return self::$var_1;
	}
	
	
	private $var_3 = array();
	
	
	protected $var_4 = true;
	
	
	protected static $var_5 = null;
	
	
	protected static $var_6 = null;
	
	
	static function fn_4($var_7) {
		return new class_1($var_7);
	}
	
	
	static function fn_5($var_9) {
		self::$var_5 = $var_9;
		
		if(!is_null($var_9))
			self::$var_6=$var_9;
	}
	
	
	static function fn_2() {
		return self::$var_5;
	}
	
	
	static function fn_3(){
		return self::$var_6;
	}
	
	
	public function fn_6($var_11) {
		global $var_12;

		
		if (isset($_GET['flush']) && $_GET['flush'] == 'all') {
			if(Director::isDev() || Director::is_cli() || Permission::check('ADMIN')) {
				self::fn_16();
			} else {
				return Security::permissionFailure(null, 'Please log in as an administrator to flush the template cache.');
			}
		}
		
		if(substr((string) $var_11,-3) == '.ss') {
			$var_13->var_3['main'] = $var_11;
		} else {
			if(!is_array($var_11)) $var_11 = array($var_11);
			
			if(isset($_GET['debug_request'])) Debug::message("Selecting templates from the following list: " . implode(", ", $var_11));

			foreach($var_11 as $var_14) {
				
				if(strpos($var_14,'/') !== false) list($var_15, $var_14) = explode('/', $var_14, 2);
				else $var_15 = null;

				
				if(self::fn_2() && isset($var_12[$var_14]['themes'][self::fn_2()])) {
					$var_13->var_3 = array_merge(
						$var_12[$var_14]['themes'][self::fn_2()], 
						$var_13->var_3
					);
					
					if(isset($_GET['debug_request'])) Debug::message("Found template '$var_14' from main theme '" . self::fn_2() . "': " . var_export($var_12[$var_14]['themes'][self::fn_2()], true));
				}
				
				
				if(isset($var_12[$var_14]) && (array_keys($var_12[$var_14]) != array('themes'))) {
					$var_13->var_3 = array_merge(
						$var_12[$var_14], 
						$var_13->var_3
					);
					
					if(isset($_GET['debug_request'])) Debug::message("Found template '$var_14' from main template archive, containing the following items: " . var_export($var_12[$var_14], true));
					
					unset($var_13->var_3['themes']);
				}

				if($var_15) {
					$var_13->var_3['main'] = $var_13->var_3[$var_15];
					unset($var_13->var_3[$var_15]);
				}
			}

			if(isset($_GET['debug_request'])) Debug::message("Final template selections made: " . var_export($var_13->var_3, true));

		}

		if(!$var_13->var_3) user_error("None of these templates can be found in theme '"
			. self::fn_2() . "': ". implode(".ss, ", $var_11) . ".ss", var_16);
			
	}
	
	
	static function fn_7($var_11) {
		if(!is_array($var_11)) $var_11 = array($var_11);
	
		global $var_12;
		foreach($var_11 as $var_14) {
			if(strpos($var_14,'/') !== false) list($var_15, $var_14) = explode('/', $var_14, 2);
			if(isset($var_12[$var_14])) return true;
		}
		
		return false;
	}
	
	
	public static function fn_8($var_17, $var_18) {
		var_0::$var_19[$var_17] = $var_18;
	}
	
	
	static function fn_9($var_17) {
		return var_0::$var_19[$var_17];
	}
	
	protected static $var_19 = array(
		'rewriteHashlinks' => true,
	);
    
	protected static $var_20 = array();
	public static function fn_10() {
		if(var_0::$var_20) {
			return var_0::$var_20[sizeof(var_0::$var_20)-1];
		}
	}
	
	
	public function fn_11() {
		$var_13->var_4 = false;
		self::$var_19['rewriteHashlinks'] = false;
		return $var_13;
	}
	
	public function fn_12() {
		return $var_13->var_3;
	}
	
	
	public static function fn_13($var_21) {
		global $var_12;
		
		$var_22 = self::fn_14($var_21, 'Includes');
		if($var_22) return $var_22;
		
		$var_23 = self::fn_14($var_21, 'main');
		if($var_23) return $var_23;
		
		return false;
	}
	
	
	public static function fn_14($var_21, $var_24) {
		global $var_12;
		if(self::fn_2() && isset($var_12[$var_21]['themes'][self::fn_2()][$var_24])) {
			return $var_12[$var_21]['themes'][self::fn_2()][$var_24];
		} else if(isset($var_12[$var_21][$var_24])){
			return $var_12[$var_21][$var_24];
		} else {
			return false;
		}
	}
	
	
	public static function fn_15($var_21) {
		if(!class_0::fn_13($var_21)) {
			return null;
		}
		
		$var_7 = file_get_contents(class_0::fn_13($var_21));

		
		
		
		
		$var_7 = ereg_replace('<' . '% +_t\((\'([^\.\']*)\'|"([^\."]*)")(([^)]|\)[^ ]|\) +[^% ])*)\) +%' . '>', '<?= _t(\''. $var_21 . '.ss' . '.\\2\\3\'\\4) ?>', $var_7);

		
		
		if(substr($var_7, 0,3) == pack("CCC", 0xef, 0xbb, 0xbf)) {
			$var_7 = substr($var_7, 3);
		}

		return $var_7;
	}
	
	
	static private $var_25 = false;
	
	
	static function fn_16() {
		if (!self::$var_25) {
			$var_26 = dir(var_27);
			while (false !== ($var_28 = $var_26->read())) {
				if (strstr($var_28, '.cache')) { unlink(var_27.'/'.$var_28); }
			}
			self::$var_25 = true;
		}
	}
	
	
	public function var_30($var_31, $var_32 = null) {
		var_0::$var_20[] = $var_31;
		
		if (!$var_32) $var_32 = SS_Cache::factory('cacheblock');
		
		if(isset($var_13->var_3['main'])) {
			$var_14 = $var_13->var_3['main'];
		} else {
			$var_14 = $var_13->var_3[ reset($var_33 = array_keys($var_13->var_3)) ];
		}
		
		if(isset($_GET['debug_profile'])) Profiler::mark("SSViewer::process", " for $var_14");
		$var_34 = var_27 . "/.cache" . str_replace(array('\\','/',':'), '.', Director::makeRelative(realpath($var_14)));

		$var_35 = filemtime($var_14);

		if(!file_exists($var_34) || filemtime($var_34) < $var_35 || isset($_GET['flush'])) {
			if(isset($_GET['debug_profile'])) Profiler::mark("SSViewer::process - compile", " for $var_14");
			
			$var_7 = file_get_contents($var_14);
			$var_7 = class_0::parseTemplateContent($var_7, $var_14);
			
			$var_36 = fopen($var_34,'w');
			fwrite($var_36, $var_7);
			fclose($var_36);

			if(isset($_GET['debug_profile'])) Profiler::unmark("SSViewer::process - compile", " for $var_14");
		}
	
		
		if(isset($_GET['showtemplate']) && !Director::isLive()) {
			$var_37 = file($var_34);
			
			
			foreach($var_37 as $var_38 => $var_39) {
				
			}
			
		}
		
		
		
		foreach(array('Content', 'Layout') as $var_40) {
			if(isset($var_13->var_3[$var_40])) {
				$var_41 = new class_0($var_13->var_3[$var_40]);
				$var_31 = $var_31->customise(array(
					$var_40 => $var_41->process($var_31, $var_32)
				));
			}
		}
		
		$var_43 = array();
		$var_2 = "";
		$var_44 = array();
		

		$var_45 = $var_2;		
		$var_45 = Requirements::includeInHTML($var_14, $var_45);
		
		array_pop(var_0::$var_20);

		if(isset($_GET['debug_profile'])) Profiler::unmark("SSViewer::process", " for $var_14");
		
		
		if($var_13->var_4 && self::$var_19['rewriteHashlinks']) {
			if(strpos($var_45, '<base') !== false) {
				if(var_0::$var_19['rewriteHashlinks'] === 'php') { 
					$var_46 = "<?php  ?>"; 
				} else { 
					$var_46 = Director::makeRelative(Director::absoluteURL($_SERVER['REQUEST_URI'])); 
				}
				$var_45 = preg_replace('/(<a[^>]+href *= *)"
			}
		}

		return $output;
	}

	static function parseTemplateContent($content, $template="") {			
		
		
		if(substr($content, 0,3) == pack("CCC", 0xef, 0xbb, 0xbf)) {
			$content = substr($content, 3);
		}

		
		if(Director::isDev() && self::$source_file_comments && $template && stripos($content, "<?xml") === false) {
			
			if(stripos($content, "<html") !== false) {
				$content = preg_replace('/(<var_47[^>]*>)/var_48', "\\1<!-- template $var_14 -->", $var_7);
				$var_7 = preg_replace('/(<\/html[^>]*>)/i', "\\1<!-- end template $var_14 -->", $var_7);
			} else {
				$var_7 = "<!-- template $var_14 -->\n" . $var_7 . "\n<!-- end template $var_14 -->";
			}
		}
		
		while(true) {
			$var_49 = $var_7;
			
			
			if(Director::isDev() && self::$var_1) $var_50 = 'return "<!-- include " . SSViewer::getTemplateFile($matches[1]) . " -->\n" 
				. SSViewer::getTemplateContent($matches[1]) 
				. "\n<!-- end include " . SSViewer::getTemplateFile($matches[1]) . " -->";';
			else $var_50 = 'return SSViewer::getTemplateContent($matches[1]);';
			
			$var_7 = preg_replace_callback('/<' . '% include +([A-Za-z0-9_]+) +%' . '>/', create_function(
				'$matches', $var_50
				), $var_7);
			if($var_49 == $var_7) break;
		}
		
		
		$var_51 = array(
			'/<%--.*--%>/U' =>  '',
			'/\$Iteration/' =>  '<?= {dlr}key ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->obj("\\4",null,true)->XML_val("\\5",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->XML_val("\\4",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)}/' => '<?= {dlr}item->XML_val("\\1",array("\\2","\\3"),true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->obj("\\3",null,true)->XML_val("\\4",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->XML_val("\\3",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)}/' => '<?= {dlr}item->XML_val("\\1",array("\\2"),true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",null,true)->obj("\\2",null,true)->XML_val("\\3",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",null,true)->XML_val("\\2",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)}/' => '<?= {dlr}item->XML_val("\\1",null,true) ?>\\2',

			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\(([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1")->XML_val("\\2",array("\\3"),true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\(([^),]+), *([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1")->XML_val("\\2",array("\\3", "\\4"),true) ?>\\5',

			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->obj("\\4",null,true)->XML_val("\\5",null,true) ?>\\6',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->XML_val("\\4",null,true) ?>\\5',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",array("\\2","\\3"),true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->obj("\\3",null,true)->XML_val("\\4",null,true) ?>\\5',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->XML_val("\\3",null,true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",array("\\2"),true) ?>\\3',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",null,true)->obj("\\2",null,true)->XML_val("\\3",null,true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",null,true)->XML_val("\\2",null,true) ?>\\3',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",null,true) ?>\\2',
		);
		
		$var_7 = preg_replace(array_keys($var_51), array_values($var_51), $var_7);
		$var_7 = str_replace('{dlr}','$',$var_7);

		
		$var_7 = class_2::process($var_14, $var_7);

		
		$var_7 = ereg_replace('<!-- +pc +([A-Za-z0-9_(),]+) +-->', '<' . '% control \\1 %' . '>', $var_7);
		$var_7 = ereg_replace('<!-- +pc_end +-->', '<' . '% end_control %' . '>', $var_7);
		
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1")) foreach($loop as $key => $item) { ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? array_push($itemStack, $item); if(($loop = $item->obj("\\1")) && ($loop = $loop->obj("\\2"))) foreach($loop as $key => $item) { ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\(([^),]+)\\) +%' . '>', '<? array_push($itemStack, $item); if(($loop = $item->obj("\\1")) && ($loop = $loop->obj("\\2", array("\\3")))) foreach($loop as $key => $item) { ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([^),]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2"))) foreach($loop as $key => $item) { ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([^),]+), *([^),]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2","\\3"))) foreach($loop as $key => $item) { ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([^),]+), *([^),]+), *([^),]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2", "\\3", "\\4"))) foreach($loop as $key => $item) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +end_control +%' . '>', '<? } $item = array_pop($itemStack); ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +debug +%' . '>', '<? Debug::show($item) ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +debug +([A-Za-z0-9_]+) +%' . '>', '<? Debug::show($item->cachedCall("\\1")) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? if($item->obj("\\1",null,true)->hasValue("\\2")) {  ?>', $var_7);
		
		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+)\\) +%' . '>', '<? if($item->hasValue("\\1",array("\\2"))) {  ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1")) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) +%' . '>', '<? } else if($item->hasValue("\\1")) {  ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *\\|\\|? *([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1") || $item->hasValue("\\2")) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *\\|\\|? *([A-Za-z0-9_]+) +%' . '>', '<? else_if($item->hasValue("\\1") || $item->hasValue("\\2")) { ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *&&? *([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1") && $item->hasValue("\\2")) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *&&? *([A-Za-z0-9_]+) +%' . '>', '<? else_if($item->hasValue("\\1") && $item->hasValue("\\2")) { ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *==? *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? if($item->XML_val("\\1",null,true) == "\\2") {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *==? *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? } else if($item->XML_val("\\1",null,true) == "\\2") {  ?>', $var_7);
		
		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *!= *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? if($item->XML_val("\\1",null,true) != "\\2") {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *!= *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? } else if($item->XML_val("\\1",null,true) != "\\2") {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->cachedCall("\\1")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? $test = $item->obj("\\1",null,true)->cachedCall("\\2"); if((!is_object($test) && $test) || ($test && $test->exists())) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->obj("\\1",null,true)->cachedCall("\\2")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? $test = $item->obj("\\1",null,true)->obj("\\2",null,true)->cachedCall("\\3"); if((!is_object($test) && $test) || ($test && $test->exists())) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->obj("\\1",null,true)->obj("\\2",null,true)->cachedCall("\\3")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +else +%' . '>', '<? } else { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +end_if +%' . '>', '<? }  ?>', $var_7);

		
		
		ereg('.*[\/](.*)',$var_14,$var_52);
		
		
		
		
		
		$var_7 = ereg_replace('<' . '% +_t\((\'([^\.\']*)\'|"([^\."]*)")(([^)]|\)[^ ]|\) +[^% ])*)\) +%' . '>', '<?= _t(\''. $var_52[1] . '.\\2\\3\'\\4) ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +_t\((\'([^\']*)\'|"([^"]*)")(([^)]|\)[^ ]|\) +[^% ])*)\) +%' . '>', '<?= _t(\'\\2\\3\'\\4) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +sprintf\(_t\((\'([^\.\']*)\'|"([^\."]*)")(([^)]|\)[^ ]|\) +[^% ])*)\),\<\?= +([^\?]*) +\?\>) +%' . '>', '<?= sprintf(_t(\''. $var_52[1] . '.\\2\\3\'\\4),\\6) ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +sprintf\(_t\((\'([^\']*)\'|"([^"]*)")(([^)]|\)[^ ]|\) +[^% ])*)\),\<\?= +([^\?]*) +\?\>) +%' . '>', '<?= sprintf(_t(\'\\2\\3\'\\4),\\6) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +base_tag +%' . '>', '<?= SSViewer::get_base_tag($val); ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +current_page +%' . '>', '<?= $_SERVER[SCRIPT_URL] ?>', $var_7);
		
		
		$var_7 = preg_replace('/<% +require +([a-zA-Z]+)(?:\(([^),]+)\))? +%>/', '<? Requirements::\\1("\\2"); ?>', $var_7);
		$var_7 = preg_replace('/<% +require +([a-zA-Z]+)\(([^),]+), *([^),]+)\) +%>/', '<? Requirements::\\1("\\2", "\\3"); ?>', $var_7);
		
		
		$var_7 = ereg_replace('<!-- +if +([A-Za-z0-9_]+) +-->', '<? if($item->cachedCall("\\1")) { ?>', $var_7);
		$var_7 = ereg_replace('<!-- +else +-->', '<? } else { ?>', $var_7);
		$var_7 = ereg_replace('<!-- +if_end +-->', '<? }  ?>', $var_7);
			
		
		$var_7 = var_53('href *= *"
	
		
		$content = ereg_replace('<\?var_54([^>]+)\var_55?' . '>', '<

		
		$var_7 = str_replace('<?=',"\nSSVIEWER;\n\$val .= ", $var_7);
		$var_7 = str_replace('<?',"\nSSVIEWER;\n", $var_7);
		$var_7 = str_replace('?>',";\n \$val .= <<<SSVIEWER\n", $var_7);
		
		$var_45  = "<?php\n";
		$var_45 .= '$val .= <<<SSVIEWER' . "\n" . $var_7 . "\nSSVIEWER;\n"; 
		
		
		$var_45 = ereg_replace('<
	
		return $output;
	}

	
	public function templates() {
		return $this->chosenTemplates;
	}
	
	
	public function setTemplateFile($type, $file) {
		$this->chosenTemplates[$type] = $file;
	}
	
	
	static function get_base_tag($contentGeneratedSoFar) {
		$base = Director::absoluteBaseURL();
		
		
		if(preg_match('/<!var_56[^>]+var_57/var_48', $var_58)) {
			return "<base href=\"$var_59\" />";
		} else {
			return "<base href=\"$var_59\"><!--[if lte IE 6]></base><![endif]-->";
		}
	}
}


class var_8 var_60 var_0 {
	protected $var_7;
	
	public function fn_6($var_7) {
		$var_13->var_7 = $var_7;
	}
	
	public function process($var_31, $var_32 = null) {
		$var_14 = class_0::parseTemplateContent($var_13->var_7, "string sha1=".sha1($var_13->var_7));

		$var_61 = tempnam(var_27,"");
		$var_36 = fopen($var_61, 'w');
		fwrite($var_36, $var_14);
		fclose($var_36);

		if(isset($_GET['showtemplate']) && $_GET['showtemplate']) {
			$var_37 = file($var_61);
			
			
			foreach($var_37 as $var_38 => $var_39) {var_55
				
			}
			
		}

		$var_43 = array();
		$var_2 = "";
		$var_44 = array();
		
		$var_32 = SS_Cache::factory('cacheblock');
		
		unlink($var_61);
		

		return $var_2;
	}
}


var_99 var_65 {
 	
	static $var_62 = '/< % [ \t]+ (cached|cacheblock|uncached|end_cached|end_cacheblock|end_uncached) [ \t]+ ([^%]+ [ \t]+)? % >/xS';
	
	static $var_63 = '/^\s*
		
		(
			(?P<conditional> if | unless ) |                     
			(?P<property> (?P<identifier> \w+) \s*               
				( \( (?P<arguments> [^\)]*) \) )?
			) |
			(?P<sqstring> \' (\\\'|[^\'])+ \' ) |                
			(?P<dqstring> " (\\"|[^"])+ " )                      
		)
		
		(
			\s*(?P<comma>,)\s* |                                 
			(?P<fullstop>\.)                                     
		)?
	/xS';
	
	static function process($var_14, $var_7) {
		$var_64 = new class_2($var_14, $var_7, 0);
		$var_64->parse();
		return $var_64->fn_18();
	}
	
	var_83 fn_6($var_14, $var_7, $var_67) {
		$var_13->var_14 = $var_14;
		$var_13->var_7 = $var_7;
		$var_13->var_67 = $var_67;

		$var_13->var_68 = array();
	}

	var_83 fn_17($var_69) {
		
	}

	function parse() {
		$var_70 = 0;
		
		while (preg_match(self::$var_62, $var_13->var_7, $var_71, var_72, $var_13->var_67)) {
			$var_62 = $var_71[1][0];

			$var_73 = $var_71[0][1];
			$var_74 = $var_71[0][1] + strlen($var_71[0][0]);

			switch($var_62) {
				case 'cached':
				case 'uncached':
				case 'cacheblock':

					$var_75 = substr($var_13->var_7, $var_13->var_67, $var_73 - $var_13->var_67);
					$var_13->fn_17($var_75);
					$var_13->var_68[] = $var_75;

					if ($var_62 == 'cached' || $var_62 == 'cacheblock') {
						list($var_77, $var_78, $var_79) = $var_13->parseargs(@$var_71[2][0]);
						$var_64 = new class_3($var_13->var_14, $var_13->var_7, $var_74, $var_77, $var_78, $var_79);
					}
					var_82 {
						$var_64 = new class_2($var_13->var_14, $var_13->var_7, $var_74);
					}

					$var_64->parse();
					$var_13->var_68[] = $var_64;
					$var_13->var_67 = $var_64->var_67;
					break;

				case 'end_cached':
				case 'end_cacheblock':
				case 'end_uncached':
					$var_13->var_68[] = substr($var_13->var_7, $var_13->var_67, $var_73 - $var_13->var_67);
					$var_13->var_7 = null;

					$var_13->var_67 = $var_74;
					return $var_13;
			}
		}

		$var_13->var_68[] = substr($var_13->var_7, $var_13->var_67);
		$var_13->var_7 = null;
	}

	var_83 var_80($var_84) {
		preg_match_all(self::$var_63, $var_84, $var_71, var_85);

		$var_86 = array();
		$var_78 = null; $var_79 = null;

		$var_87 = '$item->';

		while (strlen($var_84) && preg_match(self::$var_63, $var_84, $var_88)) {

			$var_84 = substr($var_84, strlen($var_88[0]));

			
			if (@$var_88['conditional']) {
				$var_78 = $var_88['conditional'];
				continue;
			}

			
			if (@$var_88['property']) {
				
				$var_89 = $var_88['identifier'];
				$var_90 = array();

				
				if (@$var_88['arguments']) {
					foreach (explode(',', $var_88['arguments']) as $var_91) {
						$var_90[] = is_numeric($var_91) ? (string)$var_91 : '"'.$var_91.'"';
					}
				}

				$var_90 = empty($var_90) ? 'null' : 'array('.implode(',',$var_90).')';

				
				if (@$var_88['fullstop']) {
					$var_87 .= "obj('$var_89', $var_90, true)->";
				}
				
				var_82 {
					$var_92 = $var_87 . "XML_val('$var_89', $var_90, true)"; $var_87 = '$item->';

					
					if ($var_78) {
						$var_79 = $var_92;
						break;
					}
					
					var_82 $var_86[] = $var_92;
				}
			}

			
			var_82 if (@$var_88['sqstring']) $var_86[] = $var_88['sqstring'];
			else if (@$match['dqstring']) $var_86[] = $match['dqstring'];
		}

		var_93 ($var_78 && !$var_79) {
			throw new class_4();
		}

		var_94 array($var_86, $var_78, $var_79);
	}

	var_83 var_95() {
		$var_96 = array();

		foreach ($var_13->var_68 as $var_48 => $var_97) {
			if ($var_97 instanceof var_65)
				$var_96[] = $var_97->fn_18();
			else {
				$var_96[] = $var_97;
			}
		}

		var_94 var_98('', $var_96);
	}
}


var_99 var_81 extends var_65 {

	function var_10($var_14, $var_7, $var_67, $var_77, $var_78, $var_79) {
		$var_13->var_77 = $var_77;
		$var_13->var_78 = $var_78;
		$var_13->var_79 = $var_79;

		parent::fn_6($var_14, $var_7, $var_67);
	}

	function fn_17($var_69) {
		$var_100 = preg_match_all('/<'.'% +if +/', $var_69, $var_71);
		$var_101 = preg_match_all('/<'.'% +end_if +/', $var_69, $var_71);

		if ($var_100 != $var_101) throw new class_4('You can\'t have cached or uncached blocks within condition structures');

		$var_102 = preg_match_all('/<'.'% +control +/', $var_69, $var_71);
		$var_103 = preg_match_all('/<'.'% +end_control +/', $var_69, $var_71);

		if ($var_102 != $var_103) throw new class_4('You can\'t have cached or uncached blocks within control structures');
	}

	function fn_19() {
		if (empty($var_13->var_77)) return "''";
		return 'sha1(' . implode(".'_'.", $var_13->var_77) . ')';
	}

	function fn_18() {
		$var_96 = array();
		$var_104 = $var_13->fn_19();

		$var_79 = "";

		switch ($var_13->var_78) {
			case 'if':
				$var_79 = "{$var_13->var_79} && ";
				break;
			case 'unless':
				$var_79 = "!({$var_13->var_79}) && ";
				break;
		}

		

		foreach ($var_13->var_68 as $var_48 => $var_97) {
			if ($var_97 instanceof var_65)
				$var_96[] = $var_97->fn_18();
			else {
				
				
				$var_105 = "'".sha1($var_13->var_14 . $var_97)."_'.$var_104.'_$var_48'";

				
				$var_96[] = "<?\n".'if ('.$var_79.' ($partial = $cache->load('.$var_105.'))) $val .= $partial;'."\n";

				
				$var_96[] = "else {\n";
				$var_96[] = '$oldval = $val; $val = "";'."\n";
				$var_96[] = "\n?>" . $var_97 . "<?\n";
				$var_96[] = $var_79 . ' $cache->save($val); $val = $oldval . $val ;'."\n";
				$var_96[] = "}\n?>";
			}
		}

		return implode('', $var_96);
	}
}

function fn_20() {
	return "";
}

?>