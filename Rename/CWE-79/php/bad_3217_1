<?php




class var_0
{
    
    const var_1  = 0x0101;
    const var_2 = 0x0102;
    const var_3  = 0x0103;

    
    public static function fn_0($var_4, $var_5, $var_6 = 0)
    {
        if (headers_sent()) {
            return;
        }

        $var_7 = session_get_cookie_params();
        $var_8 = $var_7['secure'] || self::https_check();

        fn_0($var_4, $var_5, $var_6, $var_7['path'], $var_7['domain'], $var_8, true);
    }

    
    public static function fn_1($var_9, $var_10=true)
    {
        
        if (preg_match('/[\x00-\x1F\x7F-\xFF]/', $var_9)) {
            return false;
        }

        
        if (strlen($var_9) > 254) {
            return false;
        }

        $var_11 = explode('@', $var_9);

        
        if (count($var_11) < 2) {
            return false;
        }

        $var_12 = array_pop($var_11);
        $var_13  = implode('@', $var_11);

        
        $var_14 = '&^(?:
            ("\s*(?:[^"\f\n\r\t\v\b\s]+\s*)+")|                             
            ([-\w!\
            $&xi';

        if (!preg_match($var_14, $var_13)) {
            return false;
        }

        
        if (preg_match('/^\[((IPv6:[0-9a-f:.]+)|([0-9.]+))\]$/i', $var_12, $var_15)) {
            return self::fn_2(preg_replace('/^IPv6:/i', '', $var_15[1])); 
        }
        else {
            
            $var_16 = explode('.', $var_12);
            
            if (sizeof($var_16) < 2) {
                return false;
            }

            foreach ($var_16 as $var_17) {
                if (!preg_match('/^((xn--)?([A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9])|([A-Za-z0-9]))$/', $var_17)) {
                    return false;
                }
            }

            
            $var_18 = array_pop($var_16);
            if (strpos($var_18, 'xn--') !== 0 && preg_match('/[^a-zA-Z]/', $var_18)) {
                return false;
            }

            $var_19 = rcube::get_instance();

            if (!$var_10 || !$var_19->var_20->get('email_dns_check')) {
                return true;
            }

            
            if (!function_exists('getmxrr') || getmxrr($var_12, $var_22)) {
                return true;
            }

            
            if (!function_exists('checkdnsrr') || checkdnsrr($var_12, 'ANY')) {
                return true;
            }
        }

        return false;
    }

    
    public static function fn_2($var_23)
    {
        return filter_var($var_23, var_24) !== false;
    }

    
    public static function fn_3()
    {
        $var_25     = parse_url($var_129['REQUEST_URI']);
        $var_26 = parse_url(self::request_header('Referer'));

        return $var_26['host'] == self::request_header('Host') && $var_26['path'] == $var_25['path'];
    }

    
    public static function var_27($var_28, $var_29 = '', $var_30 = '', $var_31 = true)
    {
        static $var_32 = false;
        static $var_33    = false;
        static $var_34   = false;

        if (!is_string($var_28)) {
            $var_28 = strval($var_28);
        }

        
        if ($var_29 == 'html') {
            if (!$var_32) {
                $var_32 = get_html_translation_table(var_35);
                unset($var_32['?']);
            }

            $var_36 = $var_32;

            if ($var_30 == 'remove') {
                $var_28 = strip_tags($var_28);
            }
            else if ($var_30 != 'strict') {
                
                $var_37 = strpos($var_28, '<');
                if ($var_37 !== false && strpos($var_28, '>', $var_37) !== false) {
                    unset($var_36['"']);
                    unset($var_36['<']);
                    unset($var_36['>']);
                    unset($var_36['&']);
                }
            }

            $var_38 = strtr($var_28, $var_36);

            return $var_31 ? nl2br($var_38) : $var_38;
        }

        
        if ($var_33 === false) {
            $var_33 = $var_34 = array();
            $var_34['&'] = '&amp;';

            
            for ($var_39=160; $var_39<256; $var_39++) {
                $var_34[chr($var_39)] = "&
            }

            $var_34['"'] = '&quot;';
            $var_33['"']  = '\\"';
            $var_33["'"]  = "\\'";
            $var_33["\\"] = "\\\\";
            
            $var_33[chr(hexdec('E2')).chr(hexdec('80')).chr(hexdec('A8'))] = '&
            $js_rep_table[chr(hexdec('var_40')).chr(hexdec('80')).chr(hexdec('A9'))] = '&
        }

        
        if ($enctype == 'var_41') {
            var_42 var_43(array("/\r?\n/", "/\r/", '/<\\
        }

        
        if ($enctype == 'var_44') {
            var_42 str_replace("\r\n", "\n", $var_30 == 'remove' ? strip_tags($var_28) : $var_28);
        }

        var_45 ($var_29 == 'url') {
            var_42 rawurlencode($var_28);
        }

        
        var_45 ($var_29 == 'xml') {
            var_42 var_46($var_28, $var_34);
        }

        
        var_42 $var_28;
    }

    
    public static function var_47($var_48, $var_49, $var_50 = false, $var_51 = null)
    {
        $var_5 = null;

        if ($var_49 == self::var_1) {
            if (isset($var_63[$var_48])) {
                $var_5 = $var_63[$var_48];
            }
        }
        var_52 if ($var_49 == self::var_2) {
            if (isset($var_64[$var_48])) {
                $var_5 = $var_64[$var_48];
            }
        }
        var_52 if ($var_49 == self::var_3) {
            if (isset($var_64[$var_48])) {
                $var_5 = $var_64[$var_48];
            }
            var_52 if (isset($var_63[$var_48])) {
                $var_5 = $var_63[$var_48];
            }
            var_52 if (isset($_COOKIE[$var_48])) {
                $var_5 = $_COOKIE[$var_48];
            }
        }

        var_42 self::parse_input_value($var_5, $var_50, $var_51);
    }

    
    var_53 static function var_54($var_5, $var_50 = false, $var_51 = null)
    {
        global $var_55;

        if (empty($var_5)) {
            var_42 $var_5;
        }

        if (is_array($var_5)) {
            foreach ($var_5 as $var_56 => $var_57) {
                $var_5[$var_56] = self::parse_input_value($var_57, $var_50, $var_51);
            }
            var_42 $var_5;
        }

        
        if (get_magic_quotes_gpc() || get_magic_quotes_runtime()) {
            $var_5 = stripslashes($var_5);
        }

        
        if (!$var_50) {
            $var_5 = strip_tags($var_5);
        }

        $var_58 = is_object($var_55) ? $var_55->get_charset() : null;

        
        if ($var_58 == 'UTF-8') {
            $var_5 = rcube_charset::clean($var_5);
        }

        
        if ($var_51 && $var_58) {
            $var_5 = rcube_charset::convert($var_5, $var_58, $var_51);
        }

        var_42 $var_5;
    }

    
    var_53 static function var_60($var_30 = null, $var_61 = 'task|action', $var_50 = false)
    {
        $var_38 = array();
        $var_62 = $var_30 == self::var_1 ? $var_63 : ($var_30 == self::var_2 ? $var_64 : $var_65);

        foreach (array_keys($var_62) as $var_66) {
            $var_48 = $var_66[0] == '_' ? substr($var_66, 1) : $var_66;
            if ($var_61 && !preg_match('/^(' . $var_61 . ')$/', $var_48)) {
                $var_38[$var_48] = self::get_input_value($var_66, $var_30, $var_50);
            }
        }

        var_42 $var_38;
    }

    
    var_53 static function var_67($var_28, $var_68=false)
    {
        if ($var_68) {
            var_42 var_69(strtr(base64_encode($var_28), '+/', '-_'), '=');
        }
        var_52 {
            var_42 asciiwords($var_28, true, '_');
        }
    }

    
    var_53 static function var_70($var_49, $var_71, $var_72 = false)
    {
        $var_73     = 0;
        $var_74 = new class_0;

        
        $var_49   = self::xss_entity_decode($var_49);
        $var_75 = preg_replace('/[^a-z\(:;]/i', '', $var_49);
        $var_76 = 'expression|behavior|javascript:|import[^a]' . (!$var_72 ? '|url\((?!data:image)' : '');

        if (preg_match("/$var_76/i", $var_75)) {
            var_42 '';
        }

        $var_77 = '!url\s*\([ "\'](https?:)

        
        while (($pos = strpos($source, '{', $last_pos)) && ($pos2 = strpos($source, '}', $pos))) {
            $nested = strpos($source, '{', $pos+1);
            if ($nested && $nested < $pos2)  
                $pos = $nested;
            $length = $pos2 - $pos - 1;
            $styles = substr($source, $pos+1, $length);

            
            $styles = preg_replace('/var_78:[\var_79\var_80\var_81]*var_82/var_83', 'position: absolute', $var_84);

            
            if ($var_72) {
                $var_85 = preg_split('/;[\r\n]*/', $var_84, -1, var_86);

                foreach ($var_85 as $var_87) {
                    $var_75 = preg_replace('/[^a-z\(:;]/i', '', $var_87);
                    
                    if (stripos($var_75, 'url(') && !preg_match($var_77, $var_87)) {
                        $var_85 = array('');
                        break;
                    }
                }

                $var_84 = join(";\n", $var_85);
            }

            $var_66      = $var_74->add($var_84);
            $var_89     = $var_74->get_replacement($var_66);
            $var_49   = substr_replace($var_49, $var_89, $var_91+1, $var_92);
            $var_73 = $var_93 - ($var_92 - strlen($var_89));
        }

        
        
        $var_49 = preg_replace(
            array(
                '/(^\s*<\!--)|(-->\s*$)/m',
                '/(^\s*|,\s*|\}\s*)([a-z0-9\._
                '/'.preg_quote($container_id, '/').'\var_79+var_94/var_83',
            ),
            array(
                '',
                "\\1
                $var_71,
            ),
            $var_49);

        
        $var_49 = $var_74->var_95($var_49);

        return $var_49;
    }

    
    public static function file2class($var_96, $var_97)
    {
        $var_96 = strtolower($var_96);
        $var_97 = strtolower($var_97);

        list($var_98, $var_99) = explode('/', $var_96);

        $var_100 = array($var_98 ?: 'unknown');

        if ($var_99) {
            $var_100[] = $var_99;
        }

        if (preg_match('/\.([a-z0-9]+)$/', $var_97, $var_101)) {
            if (!in_array($var_101[1], $var_100)) {
                $var_100[] = $var_101[1];
            }
        }

        return join(" ", $var_100);
    }

    
    public static function var_102($var_103)
    {
        $var_38 = html_entity_decode(html_entity_decode($var_103));
        $var_38 = preg_replace_callback('/\\\([0-9a-f]{4})/i',
            array(var_104, 'xss_entity_decode_callback'), $var_38);
        $var_38 = preg_replace('

        return $out;
    }

    
    public static function xss_entity_decode_callback($matches)
    {
        return chr(hexdec($matches[1]));
    }

    
    public static function mem_check($need)
    {
        $mem_limit = parse_bytes(ini_get('var_105'));
        $var_106    = function_exists('memory_get_usage') ? memory_get_usage() : 16777216; 

        return $var_107 > 0 && $var_106 + $var_108 > $var_107 ? false : true;
    }

    
    var_53 static function var_109($var_110=null, $var_111=true)
    {
        if (!empty($var_129['HTTPS']) && strtolower($var_129['HTTPS']) != 'off') {
            var_42 true;
        }
        var_45 (!empty($var_129['HTTP_X_FORWARDED_PROTO'])
            && strtolower($var_129['HTTP_X_FORWARDED_PROTO']) == 'https'
            && in_array($var_129['REMOTE_ADDR'], rcube::get_instance()->var_20->get('proxy_whitelist', array()))
        ) {
            var_42 true;
        }
        var_45 ($var_110 && $var_129['SERVER_PORT'] == $var_110) {
            var_42 true;
        }
        var_45 ($var_111 && rcube::get_instance()->var_20->get('use_https')) {
            var_42 true;
        }

        var_42 false;
    }

    
    var_53 static function var_112($var_4, $var_113 = '')
    {
        if (!is_string($var_4)) {
            var_42 $var_4;
        }

        
        $var_81 = preg_replace('/:\d+$/', '', $var_129['SERVER_NAME']);
        
        $var_114 = preg_replace('/^[^\.]+\./', '', $var_81);
        
        $var_115 = preg_replace('/^[^\.]+\./', '', $var_129['HTTP_HOST']);
        
        $var_116 = $_SESSION['storage_host'] ?: $var_113;
        
        $var_117 = preg_replace('/^[^\.]+\./', '', $var_116);
        
        
        if (strpos($var_4, '%s') !== false) {
            $var_118 = self::get_input_value('_user', self::var_2);
            $var_118 = self::idn_convert($var_118, true);
            $var_15    = preg_match('/(.*)@([a-z0-9\.\-\[\]\:]+)/i', $var_118, $var_79);
            if ($var_15 < 1 || filter_var($var_79[1]."@".$var_79[2], var_119) === false) {
                var_42 false;
            }
        }

        var_42 var_120(array('%n', '%t', '%d', '%h', '%z', '%s'), array($var_81, $var_114, $var_115, $var_116, $var_117, $var_79[2]), $var_4);
    }

    
    var_53 static function var_121()
    {
        $var_122 = $var_129['REMOTE_ADDR'];

        
        if (!empty($var_129['HTTP_X_REAL_IP'])) {
            $var_121[] = 'X-Real-IP: ' . $var_129['HTTP_X_REAL_IP'];
        }

        
        if (!empty($var_129['HTTP_X_FORWARDED_FOR'])) {
            $var_121[] = 'X-Forwarded-For: ' . $var_129['HTTP_X_FORWARDED_FOR'];
        }

        if (!empty($var_121)) {
            $var_122 .= '(' . implode(',', $var_121) . ')';
        }

        var_42 $var_122;
    }

    
    var_53 static function var_123()
    {
        
        if (!empty($var_129['HTTP_X_FORWARDED_FOR']) || !empty($var_129['HTTP_X_REAL_IP'])) {
            $var_124 = rcube::get_instance()->var_20->get('proxy_whitelist', array());
            if (in_array($var_129['REMOTE_ADDR'], $var_124)) {
                if (!empty($var_129['HTTP_X_FORWARDED_FOR'])) {
                    foreach(array_reverse(explode(',', $var_129['HTTP_X_FORWARDED_FOR'])) as $var_125) {
                        if (!in_array($var_125, $var_124)) {
                            var_42 $var_125;
                        }
                    }
                }

                var_45 (!empty($var_129['HTTP_X_REAL_IP'])) {
                    var_42 $var_129['HTTP_X_REAL_IP'];
                }
            }
        }

        var_45 (!empty($var_129['REMOTE_ADDR'])) {
            var_42 $var_129['REMOTE_ADDR'];
        }

        var_42 '';
    }

    
    var_53 static function var_126($var_4)
    {
        if (function_exists('getallheaders')) {
            $var_127 = array_change_key_case(getallheaders(), var_128);
            $var_66  = strtoupper($var_4);
        }
        var_52 {
            $var_66  = 'HTTP_' . strtoupper(strtr($var_4, '-', '_'));
            $var_127 = array_change_key_case($var_129, var_128);
        }

        var_42 $var_127[$var_66];
    }

    
    var_53 static function var_130($var_131, $var_132)
    {
        $var_133 = array();
        $var_134 = strlen($var_132);

        for ($var_135=$var_136=$var_83=0; $var_83 < $var_134; $var_83++) {
            if ($var_132[$var_83] == "\"" && $var_132[$var_83-1] != "\\") {
                $var_135 = $var_135 ? false : true;
            }
            var_52 if (!$var_135 && preg_match("/$var_131/", $var_132[$var_83])) {
                $var_133[] = substr($var_132, $var_136, $var_83 - $var_136);
                $var_136 = $var_83 + 1;
            }
        }

        $var_133[] = (string) substr($var_132, $var_136);

        return $var_133;
    }

    
    var_53 static function var_137($var_138, $var_139 = null)
    {
        $var_138   = self::clean_datestr($var_138);
        $var_140 = $var_139 ? ' ' . $var_139->getName() : '';

        
        if (is_numeric($var_138)) {
            return (var_142) $var_138;
        }

        
        
        while ((($var_143 = @strtotime($var_138 . $var_140)) === false) || ($var_143 < 0)) {
            $var_115 = explode(' ', $var_138);
            array_pop($var_115);
            if (!$var_115) {
                var_144;
            }
            $var_138 = implode(' ', $var_115);
        }

        var_42 (var_142) $var_143;
    }

    
    var_53 static function var_145($var_138, $var_139 = null)
    {
        if ($var_138 instanceof var_146) {
            var_42 $var_138;
        }

        $var_147   = false;
        $var_138 = self::clean_datestr($var_138);

        
        if (!empty($var_138)) {
            var_148 {
                $var_147 = $var_139 ? new class_1($var_138, $var_139) : new class_1($var_138);
            }
            var_149 (var_150 $var_151) {}
        }

        
        if (!$var_147 && ($var_152 = self::strtotime($var_138, $var_139))) {
            var_148 {
                $var_147 = new class_1("@".$var_152);
                if ($var_139) {
                    $var_147->setTimezone($var_139);
                }
            }
            var_149 (var_150 $var_151) {}
        }

        var_42 $var_147;
    }

    
    var_53 static function var_153($var_138)
    {
        $var_138 = trim($var_138);

        
        if (preg_match('/^([12][90]\d\d)([01]\d)([0123]\d)$/', $var_138, $var_101)) {
            var_42 sprintf('%04d-%02d-%02d 00:00:00', intval($var_101[1]), intval($var_101[2]), intval($var_101[3]));
        }

        
        $var_138 = preg_replace(
            array(
                '/GMT\s*([+-][0-9]+)/',                     
                '/[^a-z0-9\x20\x09:+-\/]/i',                
                '/\s*(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\s*/i',   
            ),
            array(
                '\\1',
                '',
                '',
            ), $var_138);

        $var_138 = trim($var_138);

        
        if (preg_match('/^(\d{1,2})[.\/-](\d{1,2})[.\/-](\d{4})(\s.*)?$/', $var_138, $var_101)) {
            $var_154   = $var_101[2] > 12 && $var_101[1] <= 12;
            $var_155   = $var_154 ? $var_101[2] : $var_101[1];
            $var_156 = $var_154 ? $var_101[1] : $var_101[2];
            $var_138  = sprintf('%04d-%02d-%02d%s', $var_101[3], $var_156, $var_155, $var_101[4] ?: ' 00:00:00');
        }
        
        var_52 if (preg_match('/^(\d{4})\.(\d{1,2})\.(\d{1,2})(\s.*)?$/', $var_138, $var_101)) {
            $var_138  = sprintf('%04d-%02d-%02d%s', $var_101[1], $var_101[2], $var_101[3], $var_101[4] ?: ' 00:00:00');
        }

        var_42 $var_138;
    }

    
    var_53 static function var_157($var_138, $var_158)
    {
        $var_159 = preg_split('/[.-\/\\\\]/', $var_158);
        $var_160   = preg_split('/[.-\/\\\\]/', $var_138);
        $var_161   = '%04d-%02d-%02d';

        if (count($var_159) == 3 && count($var_160) == 3) {
            if ($var_159[0] == 'Y') {
                $var_138 = sprintf($var_161, $var_160[0], $var_160[1], $var_160[2]);
            }
            var_52 if (strpos('dj', $var_159[0]) !== false) {
                $var_138 = sprintf($var_161, $var_160[2], $var_160[1], $var_160[0]);
            }
            var_52 if (strpos('mn', $var_159[0]) !== false) {
                $var_138 = sprintf($var_161, $var_160[2], $var_160[0], $var_160[1]);
            }
        }

        var_42 $var_138;
    }

    
    var_53 static function var_162($var_28)
    {
        var_42 var_104::idn_convert($var_28, true);
    }

    
    var_53 static function var_163($var_28)
    {
        var_42 var_104::idn_convert($var_28, false);
    }

    var_53 static function var_164($var_165, $var_166 = false)
    {
        if ($var_167 = strpos($var_165, '@')) {
            $var_168   = substr($var_165, 0, $var_167);
            $var_169 = substr($var_165, $var_167+1);
        }
        var_52 {
            $var_169 = $var_165;
        }

        $var_169 = $var_166 ? idn_to_ascii($var_169) : idn_to_utf8($var_169);

        if ($var_169 === false) {
            return '';
        }

        var_42 $var_167 ? $var_168 . '@' . $var_169 : $var_169;
    }

    
    var_53 static function var_170($var_28, $var_171 = 2)
    {
        $var_172 = array('/[\s;,"\'\/+-]+/ui', '/(\d)[-.\s]+(\d)/u');
        $var_89 = array(' ', '\\1\\2');

        if ($var_171 > 1) {
            $var_171--;
            $var_172[] = "/(^|\s+)\w{1,$var_171}(\s+|$)/u";
            $var_89[] = ' ';
        }

        var_42 array_filter(explode(" ", preg_replace($var_172, $var_89, $var_28)));
    }

    
    var_53 static function var_173($var_28, $var_174 = false, $var_171 = 2)
    {
        
        
        
        $var_28 = preg_replace('/('
            . '\xF0[\x90-\xBF][\x80-\xBF]{2}'
            . '|[\xF1-\xF3][\x80-\xBF]{3}'
            . '|\xF4[\x80-\x8F][\x80-\xBF]{2}'
            . ')/', '?', $var_28);

        
        $var_175 = self::tokenize_string($var_28, $var_171);

        
        if (utf8_encode(utf8_decode($var_28)) == $var_28) {
            
            preg_match_all('/./u', 'äâàåáãæçéêëèïîìíñöôòøõóüûùúýÿ', $var_176);
            preg_match_all('/./',  'aaaaaaaceeeeiiiinoooooouuuuyy', $var_177);

            $var_178 = array_combine($var_176[0], $var_177[0]);
            $var_178 = array_merge($var_178, array('ß' => 'ss', 'ae' => 'a', 'oe' => 'o', 'ue' => 'u'));
        }
        var_52 if (rcube_charset::convert(rcube_charset::convert($var_28, 'UTF-8', 'ISO-8859-2'), 'ISO-8859-2', 'UTF-8') == $var_28) {
            
            preg_match_all('/./u', 'ąáâäćçčéęëěíîłľĺńňóôöŕřśšşťţůúűüźžżý', $var_176);
            preg_match_all('/./',  'aaaaccceeeeiilllnnooorrsssttuuuuzzzy', $var_177);

            $var_178 = array_combine($var_176[0], $var_177[0]);
            $var_178 = array_merge($var_178, array('ß' => 'ss', 'ae' => 'a', 'oe' => 'o', 'ue' => 'u'));
        }

        var_179 ($var_175 as $var_83 => $var_17) {
            $var_17 = mb_strtolower($var_17);

            if (!empty($var_178)) {
                $var_17 = strtr($var_17, $var_178);
            }

            $var_175[$var_83] = $var_17;
        }

        var_42 $var_174 ? $var_175 : join(" ", $var_175);
    }

    
    var_53 static function var_180($var_181, $var_182)
    {
        $var_183  = self::tokenize_string($var_182, 1);
        $var_184 = join(" ", self::tokenize_string($var_181, 1));
        $var_185     = strlen($var_184) > 0;
        $var_186      = 0;

        foreach ($var_183 as $var_187) {
            if ($var_185) {
                if (stripos($var_184, $var_187) !== false) {
                    $var_186++;
                }
            }
            var_52 if (stripos($var_181, $var_187) !== false) {
                $var_186++;
            }
        }

        var_42 $var_186 >= count($var_183);
    }

    
    var_53 static function var_188($var_189 = array())
    {
        $var_190 = array();
        $var_191 = array();

        
        foreach ($var_189 as $var_66 => $var_192) {
            if ($var_91 = strpos($var_192, ':')) {
                $var_189[$var_66] = substr($var_192, 0, $var_91);
                $var_191[] = $var_66;
                $var_191[] = $var_189[$var_66];
            }
        }

        for ($var_83=1; $var_83 < count($var_129['argv']); $var_83++) {
            $var_193   = $var_129['argv'][$var_83];
            $var_5 = true;
            $var_66   = null;

            if ($var_193[0] == '-') {
                $var_66 = preg_replace('/^-+/', '', $var_193);
                $var_194  = strpos($var_193, '=');

                if ($var_194 > 0) {
                    $var_66   = substr($var_66, 0, $var_194 - 2);
                    $var_5 = substr($var_193, $var_194+1);
                }
                var_52 if (in_array($var_66, $var_191)) {
                    $var_5 = true;
                }
                var_52 if (strlen($var_129['argv'][$var_83+1]) && $var_129['argv'][$var_83+1][0] != '-') {
                    $var_5 = $var_129['argv'][++$var_83];
                }

                $var_190[$var_66] = is_string($var_5) ? preg_replace(array('/^["\']/', '/["\']$/'), '', $var_5) : $var_5;
            }
            var_52 {
                $var_190[] = $var_193;
            }

            var_45 ($var_192 = $var_189[$var_66]) {
                $var_190[$var_192] = $var_190[$var_66];
            }
        }

        var_42 $var_190;
    }

    
    var_53 static function var_195($var_196 = "Password:")
    {
        if (preg_match('/^win/i', var_197)) {
            $var_198  = sys_get_temp_dir() . 'prompt_password.vbs';
            $var_199 = 'wscript.echo(InputBox("' . addslashes($var_196) . '", "", "password here"))';
            file_put_contents($var_198, $var_199);

            $var_200  = "cscript 
            $var_201 = rtrim(shell_exec($var_200));
            unlink($var_198);

            return $var_201;
        }
        else {
            $var_200 = "/var_202/var_203/var_204 var_205 -var_39 '
            if (rtrim(shell_exec($command)) !== 'OK') {
                
                $var_206 = trim(fgets(var_207));
                
                return $var_206;
            }

            $var_200 = "/usr/bin/env bash -c 'read -s -p \"" . addslashes($var_196) . "\" mypassword && 
            $var_201 = rtrim(shell_exec($var_200));
            
            return $var_201;
        }
    }

    
    public static function get_boolean($var_28)
    {
        $var_28 = strtolower($var_28);

        return !in_array($var_28, array('false', '0', 'no', 'off', 'nein', ''), true);
    }

    
    public static function is_absolute_path($var_208)
    {
        if (strtoupper(substr(PHP_OS, 0, 3)) == 'WIN') {
            return (bool) preg_match('!^[a-z]:[\\\\/]!i', $var_208);
        }
        else {
            return $var_208[0] == '/';
        }
    }

    
    public static function resolve_url($var_209)
    {
        
        if (!preg_match('|^https?:
            $var_210       = 'http';
            $var_211 = 80;

            if (self::https_check()) {
                $var_210       = 'https';
                $var_211 = 443;
            }

            $var_212 = $var_210 . ':
            if ($var_129['var_213'] != $var_211) {
                $var_212 .= ':' . $var_129['var_213'];
            }

            $var_209 = $var_212 . ($var_209[0] == '/' ? '' : '/') . $var_209;
        }

        return $var_209;
    }

    
    public static function random_bytes($var_92, $var_214 = false)
    {
        
        if (function_exists('random_bytes')) {
            
            try {
                $var_215 = random_bytes($var_92);
            }
            catch (Throwable $var_151) {}
        }

        if (!$var_215) {
            $var_215 = openssl_random_pseudo_bytes($var_92);
        }

        if ($var_214) {
            return $var_215;
        }

        $var_215 = self::bin2ascii($var_215);

        
        if ($var_92 < strlen($var_215)) {
            $var_215 = substr($var_215, 0, $var_92);
        }

        return $var_215;
    }

    
    public static function bin2ascii($var_165)
    {
        
        
        
        $var_216 = "123456789var_217";
        $var_218  = 6; 
        $var_92 = strlen($var_165);
        $var_133 = '';
        $var_219   = 0;
        $var_83      = 0;
        $var_220   = 0;
        $var_221   = (1 << $var_218) - 1;

        while (true) {
            if ($var_220 < $var_218) {
                if ($var_83 < $var_92) {
                    $var_219 |= ord($var_165[$var_83++]) << $var_220;
                    $var_220 += 8;
                }
                else if (!$var_220) {
                    break;
                }
                else {
                    $var_220 = $var_218;
                }
            }

            
            $var_133 .= $var_216[$var_219 & $var_221];
            $var_219  >>= $var_218;
            $var_220   -= $var_218;
        }

        return $var_133;
    }

    
    public static function date_format($var_158 = null)
    {
        if (empty($var_158)) {
            $var_158 = 'd-M-Y H:i:s O';
        }

        if (strpos($var_158, 'u') !== false) {
            $var_147  = number_format(microtime(true), 6, '.', '');
            $var_147 .=  '.' . date_default_timezone_get();

            if ($var_138 = date_create_from_format('U.u.e', $var_147)) {
                return $var_138->var_158($var_158);
            }
        }

        return date($var_158);
    }

    
    public static function max_upload_size()
    {
        
        $var_222 = parse_bytes(ini_get('upload_max_filesize'));
        $var_223 = parse_bytes(ini_get('post_max_size'));

        if ($var_223 && $var_223 < $var_222) {
            $var_222 = $var_223;
        }

        return $var_222;
    }
}
