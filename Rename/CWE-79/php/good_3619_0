<?php

































class class_0
{
    
    protected function fn_0()
    {
    }

    
    protected function fn_1()
    {
    }

    
    public static function fn_2( $var_0 = 'xhtml', $var_1 = array( 'html' => 'xhtml',
                                                                                  'json' => 'json',
                                                                                  'javascript' => 'json',
                                                                                  'xml' => 'xml',
                                                                                  'text' => 'text' ) )
    {
        $var_2 = array();

        if ( isset($_POST['http_accept']) )
            $var_2 = explode( ',', $_POST['http_accept'] );
        else if ( isset($_POST['HTTP_ACCEPT']) )
            $var_2 = explode( ',', $_POST['HTTP_ACCEPT'] );
        else if ( isset($_GET['http_accept']) )
            $var_2 = explode( ',', $_GET['http_accept'] );
        else if ( isset($_GET['HTTP_ACCEPT']) )
            $var_2 = explode( ',', $_GET['HTTP_ACCEPT'] );
        else if ( isset($_SERVER['HTTP_ACCEPT']) )
            $var_2 = explode( ',', $_SERVER['HTTP_ACCEPT'] );

        foreach( $var_2 as $var_3 )
        {
            foreach( $var_1 as $var_4 => $var_5 )
            {
                if ( strpos( $var_3, $var_4 ) !== false )
                {
                    $var_0 = $var_5;
                    break 2;
                }
            }
        }
        return $var_0;
    }

    
    public static function fn_3( $var_6, $var_7 = null )
    {
        if ( $var_7 === null )
            $var_7 = self::fn_2( );

        if ( $var_7 === 'xml' )
            return self::fn_7( $var_6 );
        else if ( $var_7 === 'json' )
            return json_encode( $var_6 );
        else
            return self::fn_4( $var_6 );
    }

    
    public static function fn_4( $var_8 )
    {
        if ( is_array( $var_8 ) )
            return implode(',', array_map( array('ezjscAjaxContent', 'textEncode'), array_filter( $var_8 ) ) );

        return htmlspecialchars( $var_8 );
    }

    
    public static function fn_5( $var_9, $var_10 = array(), $var_7 = 'json' )
    {
        if ( is_array( $var_9 ) )
        {
            $var_6 = array();
            foreach ( $var_9 as $var_11 )
            {
                $var_6[] = self::fn_6( $var_11, $var_10 );
            }
        }
        else
        {
            $var_6 = self::fn_6( $var_9, $var_10 );
        }

        if ( $var_7 === 'xml' )
            return self::fn_7( $var_6 );
        else if ( $var_7 === 'json' )
            return json_encode( $var_6 );
        else
            return $var_6;
    }

    
    public static function fn_6( $var_9, $var_10 = array() )
    {
        if ( !$var_9 )
        {
            return array();
        }
        else if ( $var_9 instanceof var_12)
        {
            $var_13          = $var_9->attribute( 'main_node' );
            $var_15 = $var_9;
        }
        else if ( $var_9 instanceof var_16 || $var_9 instanceof var_17 )
        {
            $var_13          = $var_9;
            $var_15 = $var_9->attribute( 'object' );
        }
        else if( isset( $var_10['fetchNodeFunction'] ) && method_exists( $var_9, $var_10['fetchNodeFunction'] ) )
        {
            
            $var_13 = call_user_func( array( $var_9, $var_10['fetchNodeFunction'] ) );
            if ( !$var_13 instanceof var_16 )
            {
                return '';
            }
            $var_15 = $var_13->attribute( 'object' );
        }
        else if ( is_array( $var_9 ) )
        {
            return $var_9; 
        }
        else
        {
            return ''; 
        }

        $var_18 = eZINI::instance( 'site.ini' );
        $var_10 = array_merge( array(
                            'dataMap' => array(), 
                            'fetchPath' => false, 
                            'fetchSection' => false, 
                            'fetchChildrenCount' => false,
                            'dataMapType' => array(), 
                            'loadImages' => false,
                            'imagePreGenerateSizes' => array('small') 
        ), $var_10 );

        if ( !isset( $var_10['imageSizes'] ) )
        {
            $var_19 = eZINI::instance( 'image.ini' );
            $var_10['imageSizes'] = $var_19->variable( 'AliasSettings', 'AliasList' );
        }

        if ( $var_10['imageSizes'] === null || !isset( $var_10['imageSizes'][0] ) )
            $var_10['imageSizes'] = array();

        if (  !isset( $var_10['imageDataTypes'] ) )
            $var_10['imageDataTypes'] = $var_18->variable( 'ImageDataTypeSettings', 'AvailableImageDataTypes' );

        $var_6                            	= array();
        $var_21                	= array();
        $var_6['name']                    	= htmlentities( $var_15->attribute( 'name' ), var_22, "UTF-8" );
        $var_6['contentobject_id']        	= $var_6['id'] = (int) $var_15->attribute( 'id' );
        $var_6['contentobject_remote_id'] 	= $var_15->attribute( 'remote_id' );
        $var_6['contentobject_state']     	= implode( ", ", $var_15->attribute( 'state_identifier_array' ) );
        $var_6['main_node_id']            	= (int)$var_15->attribute( 'main_node_id' );
        $var_6['version']                 	= (int)$var_15->attribute( 'current_version' );
        $var_6['modified']                	= $var_15->attribute( 'modified' );
        $var_6['published']               	= $var_15->attribute( 'published' );
        $var_6['section_id']              	= (int) $var_15->attribute( 'section_id' );
        $var_6['current_language']        	= $var_15->attribute( 'current_language' );
        $var_6['owner_id']                	= (int) $var_15->attribute( 'owner_id' );
        $var_6['class_id']                	= (int) $var_15->attribute( 'contentclass_id' );
        $var_6['class_name']              	= $var_15->attribute( 'class_name' );
        $var_6['path_identification_string'] 	= $var_13->attribute( 'path_identification_string' );
        $var_6['translations']            	= eZContentLanguage::decodeLanguageMask($var_15->attribute( 'language_mask' ), true);
        $var_6['can_edit']                	= $var_15->attribute( 'can_edit' );

        if ( isset( $var_10['formatDate'] ) )
        {
            $var_6['modified_date'] = self::fn_9( $var_15->attribute( 'modified' ), $var_10['formatDate'] );
            $var_6['published_date'] = self::fn_9( $var_15->attribute( 'published' ), $var_10['formatDate'] );
        }

        if ( isset( $var_10['fetchCreator'] ) )
        {
            $var_23 = $var_15->attribute( 'current' )->attribute('creator');
            if ( $var_23 instanceof var_12 )
            {
                $var_6['creator'] = array( 'id'   => $var_23->attribute( 'id' ),
                                         'name' => $var_23->attribute('name') );
            }
            else
            {
                $var_6['creator'] = array( 'id'   => $var_15->attribute( 'creator_id' ),
                                         'name' => null );
            }
        }

        if ( isset( $var_10['fetchClassIcon'] ) )
        {
            $var_24 = new class_1();
            $var_25 = eZTemplate::instance();

            $var_26 = $var_15->attribute( 'class_identifier' );

            $var_27 = array( array( array( 1, 'small' ) ) );
            $var_28 = array();

            $var_29 = 'class_icon';

            $var_24->modify(
                $var_25, $var_29, $var_27, '', '',
                $var_26, $var_28, array()
            );

            $var_6['class_icon'] = $var_26;
        }

        if ( isset( $var_10['fetchThumbPreview'] ) )
        {
            $var_31 = '';
            $var_32 = 0;
            $var_33 = 0;
            $var_34 = isset( $var_10['thumbDataType'] ) ? $var_10['thumbDataType'] : 'ezimage';
            $var_35 = isset( $var_10['thumbImageSize'] ) ? $var_10['thumbImageSize'] : 'small';

            foreach( $var_15->attribute( 'data_map' ) as $var_36 => $var_37 )
            {
                if ( $var_37->attribute( 'data_type_string' ) == $var_34
                        && $var_37->attribute( 'has_content' ) )
                {
                    $var_38 = $var_37->attribute( 'content' );

                    if ( $var_38->hasAttribute( $var_35 ) )
                        $var_40 = $var_38->attribute( $var_35 );
                    else
                        eZDebug::writeError( "Image alias does not exist: '{$var_35}', missing from image.ini?",
                            var_41 );

                    $var_31 = isset( $var_40['full_path'] ) ? $var_40['full_path'] : '';
                    $var_32 = isset( $var_40['width'] ) ? (int) $var_40['width'] : 0;
                    $var_33 = isset( $var_40['height'] ) ? (int) $var_40['height'] : 0;

                    if ( $var_31 !== '' )
                        eZURI::transformURI( $var_31, true );

                    break;
                }
            }

            $var_6['thumbnail_url'] = $var_31;
            $var_6['thumbnail_width'] = $var_32;
            $var_6['thumbnail_height'] = $var_33;
        }

        if ( $var_10['fetchSection'] )
        {
            $var_42 = eZSection::fetch( $var_6['section_id']  );
            if ( $var_42 instanceof var_43 )
            {
                $var_6['section'] = array(
                    'id'                         => $var_42->attribute('id'),
                    'name'                       => $var_42->attribute('name'),
                    'navigation_part_identifier' => $var_42->attribute('navigation_part_identifier'),
                    'locale'                     => $var_42->attribute('locale'),
                );
            }
            else
            {
                $var_6['section'] = null;
            }
        }

        if ( $var_13 )
        {
            
            if ( $var_13->hasAttribute( 'is_container' ) )
            {
                $var_6['class_identifier'] = $var_13->attribute( 'class_identifier' );
                $var_6['is_container']     = (int) $var_13->attribute( 'is_container' );
            }
            else
            {
                $var_44                   = $var_15->attribute( 'content_class' );
                $var_6['class_identifier'] = $var_44->attribute( 'identifier' );
                $var_6['is_container']     = (int) $var_44->attribute( 'is_container' );
            }

            $var_6['node_id']              = (int) $var_13->attribute( 'node_id' );
            $var_6['parent_node_id']       = (int) $var_13->attribute( 'parent_node_id' );
            $var_6['node_remote_id']       = $var_13->attribute( 'remote_id' );
            $var_6['url_alias']            = $var_13->attribute( 'url_alias' );
            $var_6['url']                  = $var_13->url();
            
            if ( $var_6['url'] === '' )
                $var_6['url'] = 'content/view/full/' . $var_13->attribute( 'node_id' );
            eZURI::transformURI( $var_6['url'] );

            $var_6['depth']                = (int) $var_13->attribute( 'depth' );
            $var_6['priority']             = (int) $var_13->attribute( 'priority' );
            $var_6['hidden_status_string'] = $var_13->attribute( 'hidden_status_string' );

            if ( $var_10['fetchPath'] )
            {
                $var_6['path'] = array();
                foreach ( $var_13->attribute( 'path' ) as $var_46 )
                {
                    $var_6['path'][] = self::fn_6( $var_46 );
                }
            }
            else
            {
                $var_6['path'] = false;
            }

            if ( $var_10['fetchChildrenCount'] )
            {
                $var_6['children_count'] = $var_6['is_container'] ? (int) $var_13->attribute( 'children_count' ) : 0;
            }
            else
            {
                $var_6['children_count'] = false;
            }
        }
        else
        {
            $var_44                   = $var_15->attribute( 'content_class' );
            $var_6['class_identifier'] = $var_44->attribute( 'identifier' );
            $var_6['is_container']     = (int) $var_44->attribute( 'is_container' );
        }

        $var_6['image_attributes'] = array();

        if ( is_array( $var_10['dataMap'] ) && is_array(  $var_10['dataMapType'] ) )
        {
            $var_47 = $var_15->attribute( 'data_map' );
            $var_48 = array_fill_keys(
                $var_18->variable( 'ContentSettings', 'DatatypeBlackListForExternal' ),
                true
            );
            foreach( $var_47 as $var_36 => $var_37 )
            {
                $var_49 = $var_37->attribute( 'data_type_string' );
                

                if ( !in_array( 'all' ,$var_10['dataMap'], true )
                   && !in_array( $var_36 ,$var_10['dataMap'], true )
                   && !in_array( $var_49, $var_10['dataMapType'], true )
                   && !( $var_10['loadImages'] && in_array( $var_49, $var_10['imageDataTypes'], true ) ) )
                {
                    continue;
                }

                $var_21[ $var_36 ]['id']         = $var_37->attribute( 'id' );
                $var_21[ $var_36 ]['type']       = $var_49;
                $var_21[ $var_36 ]['identifier'] = $var_36;
                if ( isset ( $var_48[$var_49] ) )
                    $var_21[ $var_36 ]['content'] = null;
                else
                    $var_21[ $var_36 ]['content'] = $var_37->toString();

                
                if ( in_array( $var_49, $var_10['imageDataTypes'], true) && $var_37->hasContent() )
                {
                    $var_52    = $var_37->attribute( 'content' );
                    $var_53 = array();
                    if ( $var_52 != null )
                    {
                        foreach( $var_10['imageSizes'] as $var_54 )
                        {
                            $var_53[ $var_54 ] = false;
                            if ( in_array( $var_54, $var_10['imagePreGenerateSizes'], true ) )
                            {
                                if ( $var_52->hasAttribute( $var_54 ) )
                                    $var_53[ $var_54 ] = $var_52->attribute( $var_54 );
                                else
                                    eZDebug::writeError( "Image alias does not exist: '$var_54', missing from image.ini?",
                                        var_41 );
                            }
                        }
                        $var_6['image_attributes'][] = $var_36;
                    }

                    if ( !isset( $var_53['original'] ) )
                        $var_53['original'] = $var_52->attribute( 'original' );

                    $var_21[ $var_36 ]['content'] = $var_53;
                }
            }
        }
        $var_6['data_map'] = $var_21;
        return $var_6;
    }

    
    public static function fn_7( $var_55, $var_56 = 'child' )
    {
        $var_57 = new class_2();
        $var_57->openMemory();
        $var_57->startDocument('1.0', 'UTF-8');
        $var_57->startElement('root');

        self::fn_8( $var_57, $var_55, $var_56 );

        $var_57->endElement();
        return $var_57->outputMemory( true );

    }

    
    protected static function fn_8( var_63 $var_57, $var_55, $var_56 = 'child' )
    {
        foreach( $var_55 as $var_36 => $var_64 )
        {
            if( is_array( $var_64 ) )
            {
               if ( is_numeric( $var_36 ) )
                   $var_57->startElement( $var_56 );
               else
                   $var_57->startElement( $var_36 );
                self::fn_8( $var_57, $var_64 );
                $var_57->endElement();
                continue;
            }
            if ( is_numeric( $var_36 ) )
            {
                $var_57->writeElement( $var_56, $var_64 );
            }
            else
            {
                $var_57->writeElement( $var_36, $var_64 );
            }
        }
    }

    
    public static function fn_9( $var_66, $var_7 )
    {
        $var_67 = null;

        $var_68 = eZLocale::instance();

        $var_69 = $var_68->getFormattingFunction( $var_7 );
        if ( $var_69 )
            $var_67 = $var_68->$var_69( $var_66 );

        return $var_67;
    }
}

?>
