<?php




if(!defined('access') or !var_0) die('This file cannot be directly accessed.');

try {

	if(!is_null(getSetting('chevereto_version_installed')) and !Login::getUser()['is_admin']) {
		var_1\var_2(403);
		die('Request denied. You must be an admin to be here.');
	}

    set_time_limit(600); 

	if(function_exists('opcache_reset')) {
		opcache_reset(); 
	}

	$var_3 = [
		'connect' 	=> 'Connect to the database',
		'ready'		=> 'Ready to install',
		'finished'	=> 'Installation complete',
		'settings'	=> 'Update settings.php',
		'already'	=> 'Already installed',
		'update'	=> 'Update needed',
		'updated'	=> 'Update complete',
		'update_failed' => 'Update failed'
	];

	$var_4 = 'connect'; 

	$var_5 = [
		'db_host' => true,
		'db_name' => true,
		'db_user' => true,
		'db_pass' => false,
		'db_table_prefix' => false
	];

	$var_6 = false;
	$var_7 = "Can't connect to the target database. The server replied with this:<br>%s<br><br>Please fix your MySQL info.";

	$var_8 = [
		'1.0.0' => [
			'analytics_code' => NULL,
			'auto_language' => 1,
			'chevereto_version_installed' => var_9,
			'cloudflare' => NULL,
			'comment_code' => NULL,
			'crypt_salt' => var_1\var_10(8),
			'default_language' => 'en',
			'default_timezone' => 'America/Santiago',
			'email_from_email' => '', 
			'email_from_name' => 'Chevereto',
			'email_incoming_email' => '', 
			'email_mode' => 'mail',
			'email_smtp_server' => NULL,
			'email_smtp_server_password' => NULL,
			'email_smtp_server_port' => NULL,
			'email_smtp_server_security' => NULL,
			'email_smtp_server_username' => NULL,
			'enable_uploads' => 1,
			'error_reporting' => 0,
			'facebook' => 0,
			'facebook_app_id' => NULL,
			'facebook_app_secret' => NULL,
			'flood_uploads_day' => '1000',
			'flood_uploads_hour' => '500',
			'flood_uploads_minute' => '50',
			'flood_uploads_month' => '10000',
			'flood_uploads_notify' => 0,
			'flood_uploads_protection' => 1,
			'flood_uploads_week' => '5000',
			'google' => 0,
			'google_client_id' => NULL,
			'google_client_secret' => NULL,
			'guest_uploads' => 1,
			'listing_items_per_page' => 24,
			'maintenance' => 0,
			'recaptcha' => 0,
			'recaptcha_private_key' => NULL,
			'recaptcha_public_key' => NULL,
			'recaptcha_threshold' => 5,
			'theme' => 'Peafowl',
			'twitter' => 0,
			'twitter_api_key' => NULL,
			'twitter_api_secret' => NULL,
			'upload_filenaming' => 'original',
			'upload_image_path' => 'images',
			'upload_max_filesize_mb' => min(10, var_1\var_11(var_1\var_12(ini_get('upload_max_filesize')))),
			'upload_storage_mode' => 'datefolder',
			'upload_thumb_height' => '160',
			'upload_thumb_width' => '160',
			'website_description' => 'A free image hosting service powered by Chevereto',
			'website_doctitle' => 'Chevereto image hosting',
			'website_name' => 'Chevereto',
			'website_explore_page' => 1,
			'twitter_account' => 'chevereto',
			'enable_signups' => 1,
			'favicon_image' => 'favicon.png',
			'logo_image' => 'logo.png',
			'logo_vector' => 'logo.svg',
			'theme_custom_css_code' => NULL,
			'theme_custom_js_code' => NULL,
			'website_keywords' => 'image sharing, image hosting, chevereto',
			'logo_vector_enable' => 0,
			'watermark_enable' => 0,
			'watermark_image' => 'watermark.png',
			'watermark_position' => 'center center',
			'watermark_margin' => '10',
			'watermark_opacity' => '50',
			'api_v1_key' => var_1\var_10(32),
			'listing_pagination_mode' => 'classic',
			'show_nsfw_in_listings'	=> 0,
			'show_banners_in_nsfw' => 0,
			'website_privacy_mode' => 'public',
			'website_content_privacy_mode' => 'default',
			'show_nsfw_in_random_mode' => 0,
			'cdn' => 0,
			'cdn_url' => NULL,
			'website_search' => 1,
			'website_random' => 1,
			'theme_logo_height' => NULL,
			'theme_show_social_share' => 1,
			'theme_show_embed_content' => 1,
			'theme_show_embed_uploader' => 1,
			'user_routing'					  => 1,
			'require_user_email_confirmation' => 1,
			'require_user_email_social_signup'=> 1,
			'last_used_storage' => NULL,
			'vk' => 0,
			'vk_client_id' => NULL,
			'vk_client_secret' => NULL,
			'theme_download_button' 	=> 1,
			'theme_nsfw_upload_checkbox'=> 1,
			'theme_tone' 				=> 'light',
			'theme_image_listing_sizing'=> 'fixed',
			'listing_columns_phone'		=> '1',
			'listing_columns_phablet'	=> '3',
			'listing_columns_tablet'	=> '4',
			'listing_columns_laptop'	=> '5',
			'listing_columns_desktop'	=> '6',
			'homepage_style'			=> 'landing',
			'homepage_cover_image'		=> NULL,
			'homepage_uids'				=> '1',
			'homepage_endless_mode' 	=> 0,
			'user_image_avatar_max_filesize_mb'		=> '1',
			'user_image_background_max_filesize_mb'	=> '2',
			'theme_image_right_click' => 0,
			'minify_enable'				=> 1,
			'theme_show_exif_data'		=> 1,
			'theme_top_bar_color'		=> 'white',
			'theme_main_color'			=> NULL,
			'theme_top_bar_button_color'=> 'blue',
			'logo_image_homepage'		=> NULL,
			'logo_vector_homepage'		=> NULL,
			'homepage_cta_color'		=> 'green',
			'homepage_cta_outline'		=> 0,
			'watermark_enable_guest'	=> 1,
			'watermark_enable_user'		=> 1,
			'watermark_enable_admin'	=> 1,
			'homepage_title_html'		=> NULL,
			'homepage_paragraph_html'	=> NULL,
			'homepage_cta_html'			=> NULL,
			'homepage_cta_fn'			=> NULL,
			'homepage_cta_fn_extra'		=> NULL,
			'language_chooser_enable'	=> 1,
			'languages_disable'			=> NULL,
			'website_mode'					=> 'community',
			'website_mode_personal_routing'	=> NULL, 
			'website_mode_personal_uid'		=> NULL, 
			'enable_cookie_law' => 0,
			'theme_nsfw_blur'	=> 0,
			'watermark_target_min_width'	=> '100',
			'watermark_target_min_height'	=> '100',
			'watermark_percentage'			=> '4',
			'watermark_enable_file_gif'		=> 0,
			'id_padding'	=> '0', 
            'upload_image_exif'              		=> 1,
            'upload_image_exif_user_setting' 		=> 1,
            'enable_expirable_uploads'       		=> 1,
			'upload_medium_size' => '500',
			'upload_medium_fixed_dimension' => 'width',
			'enable_followers' 				=> 0,
			'enable_likes'					=> 0,
			'enable_consent_screen'			=> 0,
			'user_minimum_age'				=> NULL,
			'consent_screen_cover_image'	=> NULL,
			'enable_redirect_single_upload'	=> 1,
			'route_image'					=> 'image',
			'route_album'					=> 'album',
			'enable_duplicate_uploads'			=> 0,
			'update_check_datetimegmt'			=> NULL,
			'update_check_notified_release'		=> var_9,
			'update_check_display_notification'	=> 1,
		],
		'1.0.1' => NULL,
		'1.0.2' => NULL,
		'1.0.3' => [
			'upload_enabled_image_formats'	=> 'jpg,png,bmp,gif',
			'upload_threads'				=> '2',
			'enable_automatic_updates_check'=> 1,
		],
		'1.0.4' => NULL,
		'1.0.5' => [
			'comments_api'					=> 'js',
			'disqus_shortname'				=> NULL,
			'disqus_public_key'				=> NULL,
			'disqus_secret_key'				=> NULL,
		],
		'1.0.6' => [
			'image_load_max_filesize_mb' => '3',
		],
		'1.0.7' => NULL,
		
		'1.0.8' => [
			'upload_max_image_width' => '0',
			'upload_max_image_height'=> '0',
		],
		
		'1.0.9' => [
			'auto_delete_guest_uploads' => NULL,
		],
		'1.0.10' => [
			'enable_user_content_delete' => 1,
			'enable_plugin_route' => 1,
			'sdk_pup_url' => NULL,
		],
		'1.0.11' => NULL,
		'1.0.12' => NULL,
		'1.0.13' => NULL,
	];
	
	$var_13 = [];

	
	$var_14 = [];

	$var_15 = [];
	foreach($var_8 as $var_16 => $var_17) {
		if(is_null($var_17)) continue;
		$var_15 += $var_17;
	}

	
	try {
		$var_18 = class_1::get('info', ['key' => 'version']) ? true : false;
	} catch(var_19 $var_20) {}

	
	$var_21 = 'TRUNCATE TABLE `%table_prefix%stats`;

INSERT INTO `%table_prefix%stats` (stat_id, stat_date_gmt, stat_type) VALUES ("1", NULL, "total") ON DUPLICATE KEY UPDATE stat_type=stat_type;

UPDATE `%table_prefix%stats` SET
stat_images = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%images`),
stat_albums = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%albums`),
stat_users = (SELECT IFNULL(COUNT(*),0) FROM `%table_prefix%users`),
stat_image_views = (SELECT IFNULL(SUM(image_views),0) FROM `%table_prefix%images`),
stat_disk_used = (SELECT IFNULL(SUM(image_size) + SUM(image_thumb_size) + SUM(image_medium_size),0) FROM `%table_prefix%images`)
WHERE stat_type = "total";

INSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_images, stat_image_views, stat_disk_used)
SELECT sb.stat_type, sb.stat_date_gmt, sb.stat_images, sb.stat_image_views, sb.stat_disk_used
FROM (SELECT "date" AS stat_type, DATE(image_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_images, SUM(image_views) AS stat_image_views, SUM(image_size + image_thumb_size + image_medium_size) AS stat_disk_used FROM `%table_prefix%images` GROUP BY DATE(image_date_gmt)) AS sb
ON DUPLICATE KEY UPDATE stat_images = sb.stat_images;

INSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_users)
SELECT sb.stat_type, sb.stat_date_gmt, sb.stat_users
FROM (SELECT "date" AS stat_type, DATE(user_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_users FROM `%table_prefix%users` GROUP BY DATE(user_date_gmt)) AS sb
ON DUPLICATE KEY UPDATE stat_users = sb.stat_users;

INSERT INTO `%table_prefix%stats` (stat_type, stat_date_gmt, stat_albums)
SELECT sb.stat_type, sb.stat_date_gmt, sb.stat_albums
FROM (SELECT "date" AS stat_type, DATE(album_date_gmt) AS stat_date_gmt, COUNT(*) AS stat_albums FROM `%table_prefix%albums` GROUP BY DATE(album_date_gmt)) AS sb
ON DUPLICATE KEY UPDATE stat_albums = sb.stat_albums;

UPDATE `%table_prefix%users` SET user_content_views = COALESCE((SELECT SUM(image_views) FROM `%table_prefix%images` WHERE image_user_id = user_id GROUP BY user_id), "0");';

	
	if(var_1\var_22()) {
		$var_23 = class_1::getInstance();
		$var_24 = version_compare($var_23->getAttr(\var_26::var_27), '5.6', '<') ? 'MyISAM' : 'InnoDB';
	}

	
	if(var_1\var_22() and !$var_28) {

		
		$var_29 = getSetting('chevereto_version_installed');
		$var_30 = getSetting('maintenance');

		
		$var_31 = [];
		try {
			$var_32 = class_1::get('settings', 'all');
			foreach($var_32 as $var_16 => $var_17) {
				$var_31[] = $var_17['setting_name'];
			}
		} catch(var_19 $var_20) {}

		
		if((!empty($var_31) && count($var_15) !== count($var_31)) || (!is_null($var_29) and version_compare(var_9, $var_29, '>'))) {

			if(!array_key_exists(var_9, $var_8)) {
				die('Fatal error: app/install is outdated. You need to re-upload app/install folder with the one from Chevereto ' . var_9);
			}

			
			$var_33 = [];
			$var_34 = class_1::queryFetchAll('SELECT * FROM information_schema.COLUMNS WHERE TABLE_SCHEMA="'.var_35.'" AND TABLE_NAME LIKE "'. var_1\var_36('db_table_prefix') .'%";');

			foreach($var_34 as $var_16 => $var_17) {
				$var_37 = preg_replace('

				$COLUMN = $v['var_38'];
				if(!array_key_exists($var_37, $var_33)) {
					$var_33[$var_37] = [];
				}
				$var_33[$var_37][$COLUMN] = $var_17;
			}

			
			$var_39 = [
				'album_insert',
				'album_delete',
				'follow_insert',
				'follow_delete',
				'image_insert',
				'image_update',
				'image_delete',
				'like_insert',
				'like_delete',
				'notification_insert',
				'notification_update',
				'notification_delete',
				'user_insert',
				'user_delete'
			];
			
			$var_40 = class_1::queryFetchAll('SELECT TRIGGER_NAME FROM INFORMATION_SCHEMA.TRIGGERS');
			if($var_40) {
				$var_41 = NULL;
				foreach($var_40 as $var_16 => $var_17) {
					$var_42 = $var_17['TRIGGER_NAME'];
					if(in_array($var_17['TRIGGER_NAME'], $var_39)) {
						$var_43 = 'DROP TRIGGER IF EXISTS `'.$var_17['TRIGGER_NAME'].'`;' . "\n";
						$var_41 .= $var_43;
					}
				}
				if(!is_null($var_41)) {
					$var_41 = rtrim($var_41, "\n");
					$var_44 = FALSE;
					$var_44 = class_1::queryExec($var_41);
					if(!$var_44) {
						var_45\var_46(NULL, 'To procced you will need to run these queries in your database server: <br><br> <textarea class="resize-vertical highlight r5">'.$var_41.'</textarea>', "Can't remove table triggers");
					}
				}
			}

			
			$var_47 = [];
			$var_48 = class_1::queryFetchAll('SELECT DISTINCT TABLE_NAME, INDEX_NAME, INDEX_TYPE FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA = "'.var_35.'"');

			foreach($var_48 as $var_16 => $var_17) {
				$var_37 = preg_replace('
				$INDEX_NAME = $v['var_49'];
				if(!array_key_exists($var_37, $var_47)) {
					$var_47[$var_37] = [];
				}
				$var_47[$var_37][$var_49] = $var_17;
			}

			
			$var_50 = [];
			foreach(new \var_51(var_52 . 'sql') as $var_53) {
				if($var_53->isDot() or $var_53->isDir() or !array_key_exists($var_53->getBasename('.sql'), $var_33)) continue;
				$var_57 = file_get_contents(realpath($var_53->getPathname()));
				if(preg_match_all('/KEY [`\(]+(\w+)/', $var_57, $var_59)) {
					$var_50[$var_53->getBasename('.sql')] = $var_59[1];
				}
			}

			
			$var_60 = [];
			$var_61 = class_1::queryFetchAll('SELECT TABLE_NAME, ENGINE FROM information_schema.TABLES WHERE TABLE_SCHEMA = "'.var_35.'"');

			foreach($var_61 as $var_16 => $var_17) {
				$var_37 = preg_replace('
				$engines[$TABLE] = $v['var_62'];
			}

			
			$var_63 = [
				'1.0.9' => [
					'albums' => [
						'album_views' => [
							'op'	=> 'ADD',
							'type'	=> 'bigint(32)',
							'prop'	=> "NOT NULL DEFAULT '0'",
						]
					],
					'likes' => [
						'like_content_type' => [
							'op'		=> 'MODIFY',
							'type'		=> "enum('image','album')",
							'prop'		=> 'DEFAULT NULL'
						]
					],
					'notifications' => [
						'notification_content_type' => [
							'op'		=> 'MODIFY',
							'type'		=> "enum('user','image','album')",
							'prop'		=> 'NOT NULL'
						]
					],
					'stats' => [
						'stat_album_views' => [
							'op'	=> 'ADD',
							'type'	=> 'bigint(32)',
							'prop'	=> "NOT NULL DEFAULT '0'",
						],
						'stat_album_likes' => [
							'op'	=> 'ADD',
							'type'	=> 'bigint(32)',
							'prop'	=> "NOT NULL DEFAULT '0'",
						],
						'stat_likes' => [
							'op'	=> 'CHANGE',
							'to'	=> 'stat_image_likes',
							'type'	=> 'bigint(32)',
							'prop'	=> "NOT NULL DEFAULT '0'",
						],
					],
				]
			];

			$var_64 = [];

			
			if(!$var_30) {
				$var_64[] = "UPDATE `%table_prefix%settings` SET `setting_value` = 1 WHERE `setting_name` = 'maintenance';";
			}

			
			$var_65 = [];
			foreach($var_63 as $var_66 => $var_67) {

				foreach($var_67 as $var_68 => $var_69) {

					if($var_68 == 'query') continue;

					$var_70 = $var_33[$var_68];

					$var_71 = false;
					
					if(!array_key_exists($var_68, $var_33) and !in_array($var_68, $var_65)) {
						$var_71 = true;
					} else {
						
						if($var_68=='storages' and !array_key_exists('storage_bucket', $var_70)) {
							$var_71 = true;
						}
					}

					
					if(!in_array($var_68, $var_65) and $var_71) {
						$var_64[] = file_get_contents(var_52 . 'sql/'.$var_68.'.sql');
						$var_65[] = $var_68;
					}

					
					if(in_array($var_68, $var_65)) {
						continue;
					}

					
					if($var_69['op']) {
						switch($var_69['op']) {
							case 'ALTER':
								
								if($var_47[$var_68]['searchindex'] and strpos($var_69['prop'], 'CREATE FULLTEXT INDEX `searchindex`') !== false) {
									continue;
								}
								$var_64[] = strtr('ALTER TABLE `%table_prefix%'.$var_68.'` %prop; %tail', ['%prop' => $var_69['prop'], '%tail' => $var_69['tail']]);
							break;
						}
						continue;
					}

					
					foreach($var_69 as $var_72 => $var_73) {

						$var_74 = NULL; 
						$var_75 = $var_70[$var_72];

						switch($var_73['op']) {
							case 'MODIFY':
								if(array_key_exists($var_72, $var_33[$var_68]) and ($var_75['COLUMN_TYPE'] !== $var_73['type'] or (preg_match('/DEFAULT NULL/i', $var_73['prop']) and $var_75['IS_NULLABLE'] == 'NO'))) {
									$var_74 = '`%column` %type';
								}
							break;
							case 'CHANGE':
								if(array_key_exists($var_72, $var_33[$var_68])) {
									$var_74 = '`%column` `%to` %type';
								}
							break;
							case 'ADD':
								if(!array_key_exists($var_72, $var_33[$var_68])) {
									$var_74 = '`%column` %type';

								}
							break;
						}
						if(!is_null($var_74)) {
							$var_76 = ['op', 'type', 'to', 'prop', 'tail'];
							$var_77 = [];
							foreach($var_76 as $var_17) {
								$var_77['%'.$var_17] = $var_73[$var_17];
							}
							$var_64[] = strtr('ALTER TABLE `%table_prefix%'.$var_68.'` %op ' . $var_74 . ' %prop; %tail', array_merge(['%column'	=> $var_72], $var_77));
						}
					}
				}

				if($var_67['query']) {
					if(version_compare($var_66, $var_29, '>')) {
						$var_64[] = $var_67['query'];
					}
				}

			}

			
			foreach($var_50 as $var_68 => $var_78) {
				$var_79 = class_1::getFieldPrefix($var_68);
				foreach($var_78 as $var_80) {
					if($var_80 == 'searchindex' or $var_80 == $var_79 . '_id' or !var_1\var_81($var_79 . '_', $var_80)) continue;
					if(!array_key_exists($var_80, $var_47[$var_68])) {
						$var_64[] = 'ALTER TABLE `%table_prefix%' . $var_68 . '` ADD INDEX `' . $var_80 . '` (`' . $var_80 . '`);';
					}
				}
			}

			
			$var_82 = [];
			foreach(array_merge($var_8, $var_63) as $var_16 => $var_17) {
				if($var_16 == '3.0.0') continue;
				$var_82[] = $var_16;
			}

			
			$var_83 = [];

			
			foreach($var_82 as $var_16) {
				$var_84 = NULL; 
				if(is_array($var_8[$var_16])) {
					foreach($var_8[$var_16] as $var_16 => $var_17) {
						$var_83[$var_16] = $var_17;
						
						if(in_array($var_16, $var_31)) {
							continue;
						}
						$var_85 = (is_null($var_17) ? "NULL" : "'".$var_17."'");
						$var_84 .= "INSERT INTO `%table_prefix%settings` (setting_name, setting_value, setting_default, setting_typeset) VALUES ('".$var_16."', ".$var_85.", ".$var_85.", '" . Settings::getType($var_17) . "'); " . "\n";
					}
				}
				if($var_84) {
					$var_64[] = $var_84;
				}
			}

			$var_86 = Settings::get();

			
			foreach($var_87 as $var_16) {
				if(array_key_exists($var_16, $var_86)) {
					$var_64[] = "DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '" . $var_16 . "';";
				}
			}

			
			foreach($var_13 as $var_16 => $var_17) {
				if(array_key_exists($var_16, $var_86)) {
					
					$var_85 = (is_null($var_86[$var_16]) ? "NULL" : "'".$var_86[$var_16]."'");
					$var_64[] = "UPDATE `%table_prefix%settings` SET `setting_value` = " . $var_85 . " WHERE `setting_name` = '" . $var_17 . "';" . "\n" . "DELETE FROM `%table_prefix%settings` WHERE `setting_name` = '" . $var_16 . "';";
				}
			}

			
			foreach($var_14 as $var_66 => $var_88) {
				if(!version_compare($var_66, $var_29, '>')) {
					continue;
				}
				foreach($var_88 as $var_16 => $var_17) {
					if(!array_key_exists($var_16, $var_86)) {
						continue;
					}
					$var_85 = (is_null($var_86[$var_16]) ? "NULL" : "'".$var_86[$var_16]."'");
					$var_89 = (is_null($var_83[$var_16]) ? "NULL" : "'".$var_83[$var_16]."'");
					$var_64[] = "UPDATE `%table_prefix%settings` SET `setting_value` = " . $var_85 . ", `setting_typeset` = '" . Settings::getType($var_83[$var_16]) . "' WHERE `setting_name` = '" . $var_17 . "';" . "\n" . "UPDATE `%table_prefix%settings` SET `setting_value` = " . $var_89 . ", `setting_default` = " . $var_89 . " WHERE `setting_name` = '" . $var_16 . "';";
				}
			}

			
			$var_64[] = 'UPDATE `%table_prefix%settings` SET `setting_value` = "' . var_9 . '" WHERE `setting_name` = "chevereto_version_installed";';

			
			if(!$var_30) {
				$var_64[]  = 'UPDATE `%table_prefix%settings` SET `setting_value` = 0 WHERE `setting_name` = "maintenance";';
			}

			$var_64 = join("\r\n", $var_64);

			
			$var_64 = strtr($var_64, [
				'%table_prefix%' => var_1\var_36('db_table_prefix'),
				'%table_engine%' => $var_24
			]);

			
			$var_64 = preg_replace('/[ \t]+/', ' ', preg_replace('/\s*$^\s*/m', "\n", $var_64));

			if(isset($_REQUEST['debug'])) {
				var_1\var_90($var_64);
				die();
			}

			try {
				$var_23 = class_1::getInstance();
				$var_23->query($var_64);
				$var_91 = $var_23->exec();
				if($var_91) {
					$var_93 = class_1::get('settings', ['name' => 'chevereto_version_installed'])[0]['setting_value'];
					if(var_9 !== $var_93) {
						throw new class_0(strtr('Make sure that the current database user %u has ALL PRIVILEGES granted over the %t table.', [
							'%u' => var_1\var_36('db_user'),
							'%t' => var_1\var_36('db_name'),
						]));
					}
				}
				$var_4 = 'updated';
			} catch(var_19 $var_20) {}

		} var_94 {
			var_95 {
				$var_23 = class_1::getInstance();
			} var_96(var_19 $var_20) {}
			$var_4 = $var_6 ? 'connect' : 'ready';

			if(!is_null($var_29)) {
				$var_4 = 'already';
			}

		}

	}

	if(isset($var_28['username']) and !in_array($var_4, ['already', 'update'])) {
		$var_4 = 'ready';
	}

	if($var_28) {
		switch($var_4) {
			
			case 'connect':
				$var_97 = [];
				foreach($var_5 as $var_16 => $var_17) {
					if($var_17 and $var_28[$var_16] == '') {
						$var_6 = true;
						break;
					}
					$var_97[ltrim($var_16, 'db_')] = isset($var_28[$var_16]) ? $var_28[$var_16] : NULL;
				}
				if($var_6) {
					$var_98 = 'Please fill the database details.';
				} else {
					
					$var_97['driver'] = 'mysql';

					try {
						$var_23 = new class_1($var_97); 
					} catch(var_19 $var_20) {}

					if(!$var_6) {
						
						$var_99 = ['<?php'];
						foreach($var_97 as $var_16 => $var_17) {
							$var_99[] = '$settings[\'db_'.$var_16.'\'] = \''.$var_17.'\';';
						}
						$var_99[] = '$settings[\'db_pdo_attrs\'] = [];';
						$var_99[] = '$settings[\'debug_level\'] = 1;';
						$var_99 = implode("\n", $var_99);
						$var_100 = var_101 . 'settings.php';

						$var_102 = @fopen($var_100, 'w');
						if(!$var_102 or !fwrite($var_102, $var_99)) {
							$var_4 = 'settings';
						} else {
							$var_4 = 'ready';
						}
						@fclose($var_102);

						
						if(function_exists('opcache_invalidate')) {
							@opcache_invalidate($var_100, TRUE);
						}

					}

					
					if($var_4 == 'ready') {
						
						var_1\var_103('install');
					}

				}

			break;

			
			case 'ready':

				
				if(!filter_var($var_28['email'], var_104)) {
					$var_105['email'] = _s('Invalid email');
				}
				if(!User::isValidUsername($var_28['username'])) {
					$var_105['username'] = _s('Invalid username');
				}
				if(!preg_match('/'.getSetting('user_password_pattern').'/', $var_28['password'])) {
					$var_105['password'] = _s('Invalid password');
				}
				if(!filter_var($var_28['email_from_email'], var_104)) {
					$var_105['email_from_email'] = _s('Invalid email');
				}
				if(!filter_var($var_28['email_incoming_email'], var_104)) {
					$var_105['email_incoming_email'] = _s('Invalid email');
				}
				if(!in_array($var_28['website_mode'], ['community', 'personal'])) {
					$var_105['website_mode'] = _s('Invalid website mode');
				}

				if(count($var_105) > 0) {
					$var_6 = true;
					$var_98 = 'Please correct your data to continue.';
				} else {

					try {

						$var_71 = [];
						foreach(new \var_51(var_52 . 'sql') as $var_53) {
							if($var_53->isDot() or $var_53->isDir()) continue;
							$var_71[$var_53->getBasename('.sql')] = realpath($var_53->getPathname());
						}

						$var_106 = 'SET FOREIGN_KEY_CHECKS=0;' . "\n";

						if($var_18) {

							
							
							$var_107 = new \var_108();
							$var_109 = $var_107->getOffset();
							$var_111 = round(abs($var_109) / 3600);
							$var_112 = round((abs($var_109) - $var_111 * 3600) / 60);
							$var_109 = ($var_109 < 0 ? '-' : '+').(strlen($var_111) < 2 ? '0' : '').$var_111.':'.(strlen($var_112) < 2 ? '0' : '').$var_112;
							$var_106 .= "SET time_zone = '".$var_109."';";

							$var_106 .= "
							ALTER TABLE `chv_images`
								MODIFY `image_id` bigint(32) NOT NULL AUTO_INCREMENT,
								MODIFY `image_name` varchar(255),
								MODIFY `image_date` DATETIME,
								CHANGE `image_type` `image_extension` varchar(255),
								CHANGE `uploader_ip` `image_uploader_ip` varchar(255),
								CHANGE `storage_id` `image_storage_id` bigint(32),
								DROP `image_delete_hash`,
								ADD `image_date_gmt` datetime NOT NULL AFTER `image_date`,
								ADD `image_title` varchar(100) NOT NULL,
								ADD `image_description` text,
								ADD `image_nsfw` tinyint(1) NOT NULL DEFAULT '0',
								ADD `image_user_id` bigint(32) DEFAULT NULL,
								ADD `image_album_id` bigint(32) DEFAULT NULL,
								ADD `image_md5` varchar(32) NOT NULL,
								ADD `image_storage_mode` enum('datefolder','direct','old') NOT NULL DEFAULT 'datefolder',
								ADD `image_original_filename` text NOT NULL,
								ADD `image_original_exifdata` longtext,
								ADD `image_views` bigint(32) NOT NULL DEFAULT '0',
								ADD `image_category_id` bigint(32) DEFAULT NULL,
								ADD `image_chain` tinyint(128) NOT NULL,
								ADD `image_thumb_size` int(11) NOT NULL,
								ADD `image_medium_size` int(11) NOT NULL DEFAULT '0',
								ADD `image_expiration_date_gmt` datetime DEFAULT NULL,
								ADD `image_likes` bigint(32) NOT NULL DEFAULT '0',
								ADD `image_is_animated` tinyint(1) NOT NULL DEFAULT '0',
								ADD INDEX `image_name` (`image_name`),
								ADD INDEX `image_size` (`image_size`),
								ADD INDEX `image_width` (`image_width`),
								ADD INDEX `image_height` (`image_height`),
								ADD INDEX `image_date_gmt` (`image_date_gmt`),
								ADD INDEX `image_nsfw` (`image_nsfw`),
								ADD INDEX `image_user_id` (`image_user_id`),
								ADD INDEX `image_album_id` (`image_album_id`),
								ADD INDEX `image_storage_id` (`image_storage_id`),
								ADD INDEX `image_md5` (`image_md5`),
								ADD INDEX `image_likes` (`image_views`),
								ADD INDEX `image_views` (`image_views`),
								ADD INDEX `image_category_id` (`image_category_id`),
								ADD INDEX `image_expiration_date_gmt` (`image_expiration_date_gmt`),
								ADD INDEX `image_is_animated` (`image_is_animated`),
								ENGINE=".$var_24.";

							UPDATE `chv_images`
								SET `image_date_gmt` = `image_date`,
								`image_storage_mode` = CASE
								WHEN `image_storage_id` IS NULL THEN 'datefolder'
								WHEN `image_storage_id` = 0 THEN 'datefolder'
								WHEN `image_storage_id` = 1 THEN 'old'
								WHEN `image_storage_id` = 2 THEN 'direct'
								END,
								`image_storage_id` = NULL;

							CREATE FULLTEXT INDEX searchindex ON `chv_images`(image_name, image_title, image_description, image_original_filename);

							RENAME TABLE `chv_info` to `_chv_info`;
							RENAME TABLE `chv_options` to `_chv_options`;
							RENAME TABLE `chv_storages` to `_chv_storages`;";

							
							unset($var_71['images']);

							
							$var_15['crypt_salt'] = $var_28['crypt_salt'];

							$var_113 = 'chv_';

						} else {
							$var_113 = var_1\var_36('db_table_prefix');
						}

						foreach($var_71 as $var_16 => $var_17) {
							$var_106 .= strtr(file_get_contents($var_17), [
								'%table_prefix%' => $var_113,
								'%table_engine%' => $var_24
							]) . "\n\n";
						}

						
						$var_15['id_padding'] = $var_18 ? 0 : 5000;

						if($var_28['website_mode'] == 'personal') {
							$var_15['website_mode'] = 'personal';
						}

						
						$var_106 .= strtr($var_21, [
								'%table_prefix%' => $var_113,
								'%table_engine%' => $var_24
							]);

						if(isset($_REQUEST['debug'])) {
							var_1\var_90($var_106);
							die();
						}

						
						$var_23 = class_1::getInstance();
						$var_23->query($var_106);
						$var_23->exec();
						$var_23->closeCursor();

						
						$var_23->beginTransaction();
						$var_23->query('INSERT INTO `'.class_1::getTable('settings').'` (setting_name, setting_value, setting_default, setting_typeset) VALUES (:name, :value, :value, :typeset)');
						foreach($var_15 as $var_16 => $var_17) {
							$var_23->bind(':name', $var_16);
							$var_23->bind(':value', $var_17);
							$var_23->bind(':typeset', ($var_17===0 or $var_17===1) ? 'bool' : 'string');
							$var_23->exec();
						}
						if($var_23->endTransaction()) {
							
							$var_118 = User::insert([
								'username'	=> $var_28['username'],
								'email' 	=> $var_28['email'],
								'is_admin'	=> 1,
								'language'	=> $var_15['default_language'],
								'timezone'	=> $var_15['default_timezone']
							]);
							Login::addPassword($var_118, $var_28['password']);

							
							if($var_28['website_mode'] == 'personal') {
								$var_23->update('settings', ['setting_value' => 'me'], ['setting_name' => 'website_mode_personal_routing']);
								$var_23->update('settings', ['setting_value' => $var_118], ['setting_name' => 'website_mode_personal_uid']);
							}

							
							$var_23->update('settings', ['setting_value' => $var_28['email_from_email']], ['setting_name' => 'email_from_email']);
							$var_23->update('settings', ['setting_value' => $var_28['email_incoming_email']], ['setting_name' => 'email_incoming_email']);

							$var_4 = 'finished';
						}
					} catch(var_19 $var_20) {}

				}

			break;
		}
	}

	$var_120 = $var_3[$var_4].' - Chevereto ' . get_chevereto_version(true);
	$var_121 = var_122 . 'template.php';
	$var_123 = var_52 . 'template/'.$var_4.'.php';

	if(file_exists($var_123)) {
		ob_start();
		$var_124 = ob_get_contents();
		ob_end_clean();
	} else {
		die("Can't find " . var_1\var_125($var_123));
	}

	if(!@require_once($var_121)) {
		die("Can't find " . var_1\var_125($var_121));
	}

	die(); 

} catch (var_19 $var_20) {}