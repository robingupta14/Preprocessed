<?php




class class_0
{
	
	protected $var_1;

	
	protected $var_2 = array();

	
	protected $var_3;

	
	protected $var_4;

	
	public $var_5;

	
	public $var_6;

	
	public function fn_0()
	{
		
		$var_7->var_5 = Spoon::get('template');
		$var_7->var_6 = Spoon::get('url');
		$var_7->var_3 = Spoon::get('header');

		
		$var_7->fn_1($var_7->var_6->fn_2());
		$var_7->fn_3($var_7->var_6->fn_4());

		
		foreach((array) $var_12 as $var_13 => $var_14) $var_7->var_2[$var_13] = $var_14;
	}

	
	public function fn_5($var_16 = null)
	{
		
		$var_7->var_3->fn_6();

		
		if($var_16 === null)
		{
			$var_16 = var_18 . '/layout/templates/' . $var_7->var_6->fn_4() . '.tpl';
		}

		$var_7->var_5->fn_5($var_16);
	}

	
	public function fn_7()
	{
		
		if(!var_19 && SpoonFile::exists(var_20 . '/js/minified.js'))
		{
			
			$var_7->var_3->addJS('minified.js', 'core', false);
		}

		
		else
		{
			
			$var_7->var_3->addJS('jquery/jquery.js', 'core');
			$var_7->var_3->addJS('jquery/jquery.ui.js', 'core');
			$var_7->var_3->addJS('jquery/jquery.ui.dialog.patch.js', 'core');
			$var_7->var_3->addJS('jquery/jquery.tools.js', 'core');
			$var_7->var_3->addJS('jquery/jquery.backend.js', 'core');
		}

		
		$var_7->var_3->addJS('utils.js', 'core', true);
		$var_7->var_3->addJS('backend.js', 'core', true);

		
		if(SpoonFile::exists(var_18 . '/js/' . $var_7->fn_2() . '.js'))
		{
			$var_7->var_3->addJS($var_7->fn_2() . '.js', null, true);
		}

		
		if(SpoonFile::exists(var_18 . '/js/' . $var_7->fn_4() . '.js'))
		{
			$var_7->var_3->addJS($var_7->fn_4() . '.js', null, true);
		}

		
		if(!var_19 && SpoonFile::exists(var_20 . '/layout/css/minified.css'))
		{
			$var_7->var_3->addCSS('minified.css', 'core');
		}

		
		else
		{
			$var_7->var_3->addCSS('reset.css', 'core');
			$var_7->var_3->addCSS('jquery_ui/fork/jquery_ui.css', 'core');
			$var_7->var_3->addCSS('debug.css', 'core');
			$var_7->var_3->addCSS('screen.css', 'core');
		}

		
		if(SpoonFile::exists(var_18 . '/layout/css/' . $var_7->fn_2() . '.css'))
		{
			$var_7->var_3->addCSS($var_7->fn_2() . '.css', null);
		}

		
		$var_23 = $var_7->fn_8('var', 'array');

		
		if($var_7->fn_8('report') !== null)
		{
			
			$var_7->var_5->assign('report', true);

			
			$var_26 = SpoonFilter::toCamelCase($var_7->fn_8('report'), '-');

			
			if(!empty($var_23)) $var_7->var_5->assign('reportMessage', vsprintf(BL::msg($var_26), $var_23));
			else $var_7->var_5->assign('reportMessage', BL::msg($var_26));

			
			if($var_7->fn_8('highlight')) $var_7->var_5->assign('highlight', $var_7->fn_8('highlight'));
		}

		
		if($var_7->fn_8('error') !== null)
		{
			
			$var_27 = SpoonFilter::toCamelCase($var_7->fn_8('error'), '-');

			
			if(!empty($var_23)) $var_7->var_5->assign('errorMessage', vsprintf(BL::err($var_27), $var_23));
			else $var_7->var_5->assign('errorMessage', BL::err($var_27));
		}
	}

	
	public function fn_4()
	{
		return $var_7->var_1;
	}

	
	public function fn_2()
	{
		return $var_7->var_4;
	}

	
	public function fn_8($var_13, $var_28 = 'string', $var_29 = null)
	{
		$var_13 = (string) $var_13;

		
		if(isset($var_7->var_2[$var_13]) && $var_7->var_2[$var_13] != '')
		{
			return SpoonFilter::getValue($var_7->var_2[$var_13], null, null, $var_28);
		}

		return $var_29;
	}

	
	protected function fn_6()
	{

	}

	
	public function fn_9($var_6)
	{
		SpoonHTTP::fn_9(str_replace('&amp;', '&', (string) $var_6));
	}

	
	private function fn_3($var_1)
	{
		$var_7->var_1 = (string) $var_1;
	}

	
	private function fn_1($var_4)
	{
		$var_7->var_4 = (string) $var_4;
	}
}


class class_1 extends var_0
{
	
	protected $var_30;

	
	public function fn_7()
	{
		parent::fn_7();
	}

	
	protected function fn_6()
	{
		parent::fn_6();
	}
}


class class_2 extends var_0
{
	
	protected $var_31;

	
	protected $var_32;

	
	protected function fn_6()
	{
		parent::fn_6();

		if($var_7->var_31) $var_7->var_31->fn_6($var_7->var_5);
	}
}


class class_3 extends var_0
{
	
	protected $var_33;

	
	protected $var_31;

	
	protected $var_34;

	
	protected $var_32;

	
	protected $var_35;

	
	protected function fn_6()
	{
		parent::fn_6();

		if($var_7->var_31) $var_7->var_31->fn_6($var_7->var_5);
	}
}


class class_4 extends var_0
{
	
	protected $var_34;

	
	protected $var_35;

	
	public function fn_7()
	{
		parent::fn_6();
	}
}


class class_5
{
	const var_36 = 200;
	const var_37 = 400;
	const var_38 = 403;
	const var_39 = 500;

	
	protected $var_1;

	
	protected $var_4;

	
	public function fn_0($var_1, $var_4)
	{
		$var_7->fn_1($var_4);
		$var_7->fn_3($var_1);
	}

	
	public function fn_7()
	{
		
	}

	
	public function fn_4()
	{
		return $var_7->var_1;
	}

	
	public function fn_2()
	{
		return $var_7->var_4;
	}

	
	public function fn_10($var_40, $var_41 = null, $var_42 = null)
	{
		
		$var_40 = (int) $var_40;
		if($var_42 !== null) $var_42 = (string) $var_42;

		
		$var_43 = array('code' => $var_40, 'data' => $var_41, 'message' => $var_42);

		
		SpoonHTTP::setHeadersByCode($var_40);
		SpoonHTTP::setHeaders('content-type: application/json');

		
		
		var_44;
	}

	
	protected function fn_3($var_1)
	{
		$var_7->var_1 = (string) $var_1;
	}

	
	protected function fn_1($var_4)
	{
		$var_7->var_4 = (string) $var_4;
	}
}


class class_6
{
	
	protected $var_45 = 'index';

	
	protected $var_46 = array();

	
	protected $var_47 = array();

	
	protected $var_4;

	
	protected $var_48 = array();

	
	protected $var_49 = array();

	
	public function fn_0($var_4)
	{
		$var_7->var_4 = (string) $var_4;

		
		if(SpoonFile::exists(var_50 . '/' . $var_7->fn_2() . '/engine/model.php'))
		{
		}

		
		$var_7->fn_11();
	}

	
	public function fn_12()
	{
		return $var_7->var_45;
	}

	
	public function fn_2()
	{
		return $var_7->var_4;
	}

	
	public function fn_13()
	{
		return $var_7->var_48;
	}

	
	public function fn_14()
	{
		return $var_7->var_49;
	}

	
	protected function fn_11()
	{
		
		$var_52 = (array) SpoonFile::getList(var_18 . '/actions', '/(.*).php/');

		
		foreach($var_52 as $var_53)
		{
			
			$var_1 = strtolower(str_replace('.php', '', $var_53));

			
			if(!in_array($var_1, $var_7->var_46)) $var_7->var_48[$var_53] = $var_1;
		}

		
		$var_54 = (array) SpoonFile::getList(var_18 . '/ajax', '/(.*).php/');

		
		foreach($var_54 as $var_53)
		{
			
			$var_1 = strtolower(str_replace('.php', '', $var_53));

			
			if(!in_array($var_1, $var_7->var_47)) $var_7->var_49[$var_53] = $var_1;
		}
	}
}


class class_7
{
	
	protected $var_1;

	
	protected $var_34;

	
	protected $var_4;

	
	public function fn_0($var_1, $var_4)
	{
		
		$var_7->fn_1($var_4);
		$var_7->fn_3($var_1);
	}

	
	protected function fn_15()
	{
		
		$var_55 = var_56 . '/cronjobs/' . $var_7->fn_16() . '.busy';

		
		SpoonFile::delete($var_55);
	}

	
	public function fn_7()
	{
		
		if(SpoonFile::exists(var_50 . '/' . $var_7->fn_2() . '/engine/model.php'))
		{
			
		}
	}

	
	public function fn_4()
	{
		return $var_7->var_1;
	}

	
	public function fn_16()
	{
		return strtolower($var_7->fn_2() . '_' . $var_7->fn_4());
	}

	
	public function fn_2()
	{
		return $var_7->var_4;
	}

	
	protected function fn_3($var_1)
	{
		$var_7->var_1 = (string) $var_1;
	}

	
	protected function fn_17()
	{
		
		if(var_19) return;

		
		$var_55 = var_56 . '/cronjobs/' . $var_7->fn_16() . '.busy';

		
		$var_58 = false;

		
		if(SpoonFile::exists($var_55))
		{
			$var_58 = true;

			
			$var_59 = (int) SpoonFile::getContent($var_55);

			
			if($var_59 > 9)
			{
				
				$var_60 = 'Backend' . SpoonFilter::toCamelCase($var_7->fn_2() . '_cronjob_' . $var_7->fn_4());

				
				throw new class_8('Cronjob (' . $var_60 . ') is still busy after 10 runs, check it out!');
			}
		}

		
		else $var_59 = 0;

		
		$var_59++;

		
		SpoonFile::setContent($var_55, $var_59, true, false);

		
		if($var_58) var_44;
	}

	
	protected function fn_1($var_4)
	{
		$var_7->var_4 = (string) $var_4;
	}
}


class class_9
{
	
	private $var_61 = 'left';

	
	protected $var_3;

	
	private $var_62;

	
	protected $var_63 = array();

	
	private $var_64;

	
	public $var_5;

	
	public function fn_0()
	{
		$var_7->var_5 = Spoon::get('template');
		$var_7->var_3 = Spoon::get('header');
	}

	
	protected function fn_5($var_16 = null)
	{
		if($var_16 !== null) $var_7->var_64 = (string) $var_16;
	}

	
	public function fn_18()
	{
		return $var_7->var_61;
	}

	
	public function fn_19()
	{
		return $var_7->var_62;
	}

	
	public function fn_20()
	{
		return $var_7->var_64;
	}

	
	public function fn_21()
	{
		foreach($var_7->var_63 as $var_63)
		{
			list($var_4, $var_1) = explode('/', $var_63);

			
			if(isset($var_4) && isset($var_1))
			{
				if(!BackendAuthentication::isAllowedAction($var_1, $var_4)) return false;
			}
		}

		return true;
	}

	
	protected function fn_22($var_61)
	{
		$var_65 = array('left', 'middle', 'right');
		$var_7->var_61 = SpoonFilter::getValue((string) $var_61, $var_65, 'left');
	}

	
	protected function fn_23($var_62)
	{
		$var_7->var_62 = (int) $var_62;
	}
}
