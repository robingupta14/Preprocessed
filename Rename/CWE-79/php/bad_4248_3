<?php






class class_0 extends var_0 implements
    var_1,
    var_2,
    var_3,
    var_4
{
    
    protected $var_5 = null;

    
    protected $var_6 = null;

    
    protected $var_7 = null;

    
    protected $var_8 = null;

    
    protected $var_9 = null;

    
    public static function fn_0($var_10, $var_11)
    {
        
        $var_12 = var_13\var_14::load($var_10, $var_11);
        
        if (!$var_12) {
            throw new class_2(
                'Wrong thread',
                var_13\var_16\var_17\var_15::var_18
            );
        }

        
        return $var_12;
    }

    
    public static function fn_1($var_19, $var_20)
    {
        if (empty($var_20)) {
            return;
        }
        
        foreach ($var_20 as $var_21) {
            if (!array_key_exists($var_21, $var_19)) {
                throw new class_2(
                    "There is no '{$var_21}' variable in arguments list",
                    var_13\var_16\var_17\var_15::var_22
                );
            }
        }
    }

    
    public function fn_2($var_23)
    {
        $var_24->var_6 = $var_23;
        $var_25 = parent::fn_2($var_23);
        $var_24->var_6 = null;

        return $var_25;
    }

    
    public function fn_3()
    {
        return $var_24->var_7;
    }

    
    public function fn_4(var_27 $var_7)
    {
        $var_24->var_7 = $var_7;
    }

    
    public function fn_5(var_28 $var_29)
    {
        $var_24->var_5 = $var_29;
    }

    
    public function fn_6()
    {
        return $var_24->var_5;
    }

    
    public function fn_7(var_31 $var_32)
    {
        $var_24->var_8 = $var_32;
    }

    
    public function fn_8()
    {
        return $var_24->var_8;
    }

    
    public function fn_9()
    {
        return $var_24->var_9;
    }

    
    public function fn_10(var_35 $var_29)
    {
        $var_24->var_9 = $var_29;
    }

    
    protected function fn_11()
    {
        parent::fn_11(array(
            'signature' => '',
            'trusted_signatures' => array(''),
            'event_prefix' => 'thread',
        ));
    }

    
    protected function fn_12()
    {
        return var_13\var_36\var_36::getAPI('\\Mibew\\API\\Interaction\\ChatInteraction');
    }

    
    protected function fn_13()
    {
        $var_38 = $var_24->fn_6()->getOperator();
        if (!$var_38) {
            throw new class_2(
                "Operator is not logged in!",
                var_13\var_16\var_17\var_15::var_40
            );
        }

        return $var_38;
    }

    
    protected function fn_14($var_23)
    {
        
        $var_10 = null;
        $var_41 = null;
        $var_42 = null;
        foreach ($var_23['functions'] as $var_43) {
            
            if (is_null($var_10)) {
                $var_10 = $var_43['arguments']['threadId'];
                $var_41 = $var_43['arguments']['token'];
                $var_42 = $var_43['arguments']['recipient'];
                continue;
            }
            
            $var_44 = $var_10 != $var_43['arguments']['threadId'];
            $var_45 = $var_41 != $var_43['arguments']['token'];
            if ($var_44 || $var_45) {
                throw new class_2(
                    'Various thread id or thread token in different functions in one package!',
                    var_13\var_16\var_17\var_15::var_46
                );
            }
            
            if ($var_42 !== $var_43['arguments']['recipient']) {
                throw new class_2(
                    'Various recipient in different functions in one package!',
                    var_13\var_16\var_17\var_15::var_47
                );
            }
        }
        
        if ($var_42 == 'agent' || $var_42 == 'both') {
            $var_24->addRequestToBuffer('thread_agent_' . $var_10, $var_23);
        }
        if ($var_42 == 'user' || $var_42 == 'both') {
            $var_24->addRequestToBuffer('thread_user_' . $var_10, $var_23);
        }

        return true;
    }

    
    protected function fn_15($var_43)
    {
        
        if (!array_key_exists('recipient', $var_43['arguments'])) {
            throw new class_2(
                "'recipient' argument is not set in function '{$var_43['function']}'!",
                var_13\var_16\var_17\var_15::var_49
            );
        }
        $var_42 = $var_43['arguments']['recipient'];
        
        if ($var_42 != 'agent' && $var_42 != 'both' && $var_42 != 'user') {
            throw new class_2(
                "Wrong recipient value '{$var_42}'! It should be one of 'agent', 'user', 'both'",
                var_13\var_16\var_17\var_15::var_50
            );
        }
    }

    
    protected function fn_16($var_43, \var_13\var_36\var_51 &$var_52)
    {
        
        
        if (!$var_24->fn_6()->getOperator()) {
            
            
            $var_53 = $var_52->getArgumentsList($var_43);
            $var_10 = $var_53['threadId'];
            
            
            
            if (!is_null($var_10)) {
                $var_55 = isset($_SESSION[SESSION_PREFIX . 'own_threads'])
                    && in_array($var_10, $_SESSION[SESSION_PREFIX . 'own_threads']);
                if (!$var_55) {
                    throw new class_3();
                }
            }
        }

        
        parent::fn_16($var_43, $var_52);
    }

    
    protected function fn_17($var_19)
    {
        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        
        self::fn_1($var_19, array('user', 'typed'));

        if (!$var_19['user']) {
            $var_38 = $var_24->fn_13();
            $var_12->checkForReassign($var_38);
        }

        $var_12->ping($var_19['user'], $var_19['typed']);

        
        $var_58 = false;
        if ($var_19['user']) {
            $var_58 = 'thread_user_' . $var_12->var_59;
        } else {
            if ($var_38['operatorid'] == $var_12->var_60) {
                $var_58 = 'thread_agent_' . $var_12->var_59;
            }
        }

        
        if ($var_58 !== false) {
            $var_61 = $var_24->getRequestsFromBuffer($var_58);
            if ($var_61 !== false) {
                $var_24->var_63 = array_merge($var_24->var_63, $var_61);
            }
        }

        
        if ($var_19['user']) {
            $var_64 = abs($var_12->var_65 - time()) < var_13\var_66::get('connection_timeout')
                && $var_12->var_67;
            
            $var_68 = $var_12->var_69 != var_13\var_14::var_70;
        } else {
            $var_64 = abs($var_12->var_71 - time()) < var_13\var_66::get('connection_timeout')
                && $var_12->var_72;
            
            $var_68 = ($var_38['operatorid'] == $var_12->var_60);
        }

        return array(
            'threadState' => $var_12->var_69,
            'threadAgentId' => $var_12->var_60,
            'typing' => $var_64,
            'canPost' => $var_68,
        );
    }

    
    protected function fn_18($var_19)
    {
        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        
        self::fn_1($var_19, array('user', 'lastId'));

        
        if (!$var_19['user']) {
            $var_24->fn_13();
        }

        
        $var_73 = $var_19['lastId'];
        $var_74 = array_map(
            'sanitize_message',
            $var_12->getMessages($var_19['user'], $var_73)
        );

        return array(
            'messages' => $var_74,
            'lastId' => $var_73,
        );
    }

    
    protected function fn_19($var_19)
    {
        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        
        self::fn_1($var_19, array('user', 'message'));

        
        if (!$var_19['user']) {
            $var_38 = $var_24->fn_13();
            
            $var_68 = ($var_38['operatorid'] == $var_12->var_60);
        } else {
            
            $var_68 = $var_12->var_69 != var_13\var_14::var_70;
        }

        if (!$var_68) {
            throw new class_2(
                "Cannot send",
                var_13\var_16\var_17\var_15::var_76
            );
        }

        
        $var_77 = $var_19['user'] ? var_13\var_14::var_78 : var_13\var_14::var_79;
        if ($var_19['user']) {
            $var_80 = array('name' => $var_12->var_81);
        } else {
            $var_80 = array(
                'name' => $var_12->var_82,
                'operator_id' => $var_38['operatorid'],
            );
        }

        
        $var_83 = $var_12->postMessage($var_77, $var_19['message'], $var_80);

        
        if ($var_19['user'] && $var_12->var_85 == 0) {
            $var_12->var_85 = $var_83;
            $var_12->save();
        }
    }

    
    protected function fn_20($var_19)
    {
        
        if (var_13\var_66::get('usercanchangename') != "1") {
            throw new class_2(
                'server: forbidden to change name',
                var_13\var_16\var_17\var_15::var_87
            );
        }

        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        
        self::fn_1($var_19, array('name'));

        
        $var_12->renameUser($var_19['name']);
        
        $var_89 = strtr(base64_encode($var_19['name']), '+/=', '-_,');
        setcookie(var_90, $var_89, time() + 31536000);
    }

    
    protected function fn_21($var_19)
    {
        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        
        self::fn_1($var_19, array('user'));

        
        if (!$var_19['user']) {
            $var_38 = $var_24->fn_13();
        }

        
        if ($var_19['user'] || $var_12->var_60 == $var_38['operatorid']) {
            $var_12->close($var_19['user']);
        }

        return array(
            'closed' => true,
        );
    }

    
    protected function fn_22($var_19)
    {
        $var_92 = visitor_from_request();

        
        $var_93 = $var_19['message'];
        $var_94 = $var_19['info'];
        $var_95 = $var_19['email'];
        $var_96 = $var_19['referrer'];

        
        $var_97 = 0;
        $var_98 = null;
        if (var_13\var_66::get('enablegroups') == '1') {
            if (preg_match("/^\d{1,8}$/", $var_19['groupId']) != 0) {
                $var_98 = group_by_id($var_19['groupId']);
                if ($var_98) {
                    $var_97 = (int)$var_19['groupId'];
                }
            }
        }

        if (var_13\var_66::get('usercanchangename') == "1" && !empty($var_19['name'])) {
            $var_99 = $var_19['name'];
            if ($var_99 != $var_92['name']) {
                $var_89 = strtr(base64_encode($var_99), '+/=', '-_,');
                setcookie(var_90, $var_89, time() + 31536000);
                $var_92['name'] = $var_99;
            }
        }

        
        if (!has_online_operators($var_97)) {
            
            $var_100 = setup_leavemessage(
                $var_92['name'],
                $var_95,
                $var_97,
                $var_94,
                $var_96
            );
            $var_101 = $var_100['leaveMessage'];
            $var_101['page'] += setup_logo($var_98);

            return array(
                'next' => 'leaveMessage',
                'options' => $var_101,
            );
        }

        
        $var_12 = chat_start_for_user(
            $var_97,
            false,
            $var_92['id'],
            $var_92['name'],
            $var_96,
            $var_94
        );

        
        if ($var_95) {
            $var_12->postMessage(
                var_13\var_14::var_102,
                getlocal('E-Mail: {0}', array($var_95), get_current_locale(), true)
            );
        }

        if ($var_93) {
            $var_83 = $var_12->postMessage(
                var_13\var_14::var_78,
                $var_93,
                array('name' => $var_92['name'])
            );
            $var_12->var_85 = $var_83;
            $var_12->save();
        }

        
        $var_100 = setup_chatview_for_user(
            $var_24->fn_3(),
            $var_24->fn_9()->getUrlGenerator(),
            $var_24->var_6,
            $var_12
        );
        $var_101 = $var_100['chat'];
        $var_101['page'] += setup_logo($var_98);

        return array(
            'next' => 'chat',
            'options' => $var_101,
        );
    }

    
    protected function fn_23($var_19)
    {
        
        if (var_13\var_66::get('enablecaptcha') == '1' && can_show_captcha()) {
            $var_104 = $var_19['captcha'];
            $var_105 = isset($_SESSION[SESSION_PREFIX . 'mibew_captcha'])
                ? $_SESSION[SESSION_PREFIX . 'mibew_captcha']
                : '';
            unset($_SESSION[SESSION_PREFIX . 'mibew_captcha']);
            if (empty($var_105) || empty($var_104) || $var_104 != $var_105) {
                throw new class_2(
                    getlocal('The letters you typed don\'t match the letters that were shown in the picture.'),
                    var_13\var_16\var_17\var_15::var_106
                );
            }
        }

        
        $var_95 = $var_19['email'];
        $var_107 = $var_19['name'];
        $var_108 = $var_19['message'];
        $var_94 = $var_19['info'];
        $var_96 = $var_19['referrer'];

        if (!var_13\var_109\var_110::isValidAddress($var_95)) {
            throw new class_2(
                wrong_field("Your email"),
                var_13\var_16\var_17\var_15::var_111
            );
        }

        
        $var_97 = 0;
        if (var_13\var_66::get('enablegroups') == '1') {
            if (preg_match("/^\d{1,8}$/", $var_19['groupId']) != 0) {
                $var_98 = group_by_id($var_19['groupId']);
                if ($var_98) {
                    $var_97 = (int)$var_19['groupId'];
                }
            }
        }

        
        $var_112 = get_remote_host();
        $var_113 = $_SERVER['HTTP_USER_AGENT'];
        $var_92 = visitor_from_request();

        
        $var_114 = var_13\var_66::get('left_messages_locale');
        if (!locale_is_available($var_114)) {
            $var_114 = get_home_locale();
        }

        
        $var_12 = new class_1();
        $var_12->var_115 = $var_97;
        $var_12->var_81 = $var_107;
        $var_12->var_116 = $var_112;
        $var_12->var_117 = $var_96;
        $var_12->var_118 = get_current_locale();
        $var_12->var_119 = $var_92['id'];
        $var_12->var_120 = $var_113;
        $var_12->var_69 = var_13\var_14::var_121;
        $var_12->var_122 = time();
        $var_12->save();

        
        if ($var_96) {
            $var_12->postMessage(
                var_13\var_14::var_102,
                getlocal('Visitor came from page {0}', array($var_96), get_current_locale(), true)
            );
        }
        if ($var_95) {
            $var_12->postMessage(
                var_13\var_14::var_102,
                getlocal('E-Mail: {0}', array($var_95), get_current_locale(), true)
            );
        }
        if ($var_94) {
            $var_12->postMessage(
                var_13\var_14::var_102,
                getlocal('Info: {0}', array($var_94), get_current_locale(), true)
            );
        }
        $var_12->postMessage(var_13\var_14::var_78, $var_108, array('name' => $var_107));

        
        $var_123 = get_group_email($var_97);

        if (empty($var_123)) {
            $var_123 = var_13\var_66::get('email');
        }

        
        if ($var_123) {
            
            $var_124 = var_13\var_109\var_125::loadByName('leave_message', $var_114);
            if (!$var_124) {
                trigger_error(
                    'Cannot send e-mail because "leave_message" mail template cannot be loaded.',
                    var_126
                );

                return;
            }

            $var_127 = $var_124->buildSubject(array($var_19['name']));
            $var_129 = $var_124->buildBody(array(
                $var_19['name'],
                $var_95,
                $var_108,
                ($var_94 ? $var_94 . "\n" : ""),
            ));

            
            $var_24->fn_8()->getMailer()->send(
                var_13\var_109\var_110::buildMessage($var_123, $var_95, $var_127, $var_129)
            );
        }
    }

    
    protected function fn_24($var_19)
    {
        
        $var_12 = self::fn_0($var_19['threadId'], $var_19['token']);

        $var_133 = false;
        if ($var_12->var_60) {
            $var_38 = operator_by_id($var_12->var_60);
            if ($var_38['vcavatar']) {
                $var_134 = $var_24->fn_9()->getUrlGenerator();
                $var_133 = $var_134->generate($var_38['vcavatar']);
            }
        }

        return array('imageLink' => $var_133);
    }
}
