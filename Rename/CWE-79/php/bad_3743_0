<?php



class class_0{
	
	public static function fn_0($var_0){
		$var_1 = var_2\var_3::prepare( 'SELECT * FROM *PREFIX*calendar_objects WHERE calendarid = ?' );
		$var_4 = $var_1->execute(array($var_0));

		$var_6 = array();
		while( $var_7 = $var_4->fetchRow()){
			$var_6[] = $var_7;
		}

		return $var_6;
	}

	
	public static function fn_1($var_0, $var_9, $var_10){
		$var_1 = var_2\var_3::prepare( 'SELECT * FROM *PREFIX*calendar_objects WHERE calendarid = ?'
		.' AND ((startdate >= ? AND startdate <= ? AND repeating = 0)'
		.' OR (enddate >= ? AND enddate <= ? AND repeating = 0)'
		.' OR (startdate <= ? AND repeating = 1))' );
		$var_9 = self::fn_12($var_9);
		$var_10 = self::fn_12($var_10);
		$var_4 = $var_1->execute(array($var_0,
					$var_9, $var_10,
					$var_9, $var_10,
					$var_10));

		$var_6 = array();
		while( $var_7 = $var_4->fetchRow()){
			$var_6[] = $var_7;
		}

		return $var_6;
	}

	
	public static function fn_2($var_0){
		$var_1 = var_2\var_3::prepare( 'SELECT * FROM *PREFIX*calendar_objects WHERE id = ?' );
		$var_4 = $var_1->execute(array($var_0));

		return $var_4->fetchRow();
	}

	
	public static function fn_3($var_11,$var_12){
		$var_1 = var_2\var_3::prepare( 'SELECT * FROM *PREFIX*calendar_objects WHERE calendarid = ? AND uri = ?' );
		$var_4 = $var_1->execute(array($var_11,$var_12));

		return $var_4->fetchRow();
	}

	
	public static function fn_4($var_0,$var_14){
		$var_15 = class_2::parse($var_14);
		OC_Calendar_App::loadCategoriesFromVCalendar($var_15);
		list($var_16,$var_17,$var_18,$var_19,$var_20,$var_21) = self::fn_11($var_15);

		if(is_null($var_21)){
			$var_15->setUID();
			$var_14 = $var_15->serialize();
		}

		$var_12 = 'owncloud-'.md5($var_14.rand().time()).'.ics';

		$var_1 = var_2\var_3::prepare( 'INSERT INTO *PREFIX*calendar_objects (calendarid,objecttype,startdate,enddate,repeating,summary,calendardata,uri,lastmodified) VALUES(?,?,?,?,?,?,?,?,?)' );
		$var_1->execute(array($var_0,$var_16,$var_17,$var_18,$var_20,$var_19,$var_14,$var_12,time()));
		$var_24 = var_2\var_3::insertid('*PREFIX*calendar_objects');

		OC_Calendar_Calendar::touchCalendar($var_0);

		return $var_24;
	}

	
	public static function fn_5($var_0,$var_12,$var_14){
		$var_15 = class_2::parse($var_14);
		list($var_16,$var_17,$var_18,$var_19,$var_20,$var_21) = self::fn_11($var_15);

		$var_1 = var_2\var_3::prepare( 'INSERT INTO *PREFIX*calendar_objects (calendarid,objecttype,startdate,enddate,repeating,summary,calendardata,uri,lastmodified) VALUES(?,?,?,?,?,?,?,?,?)' );
		$var_1->execute(array($var_0,$var_16,$var_17,$var_18,$var_20,$var_19,$var_14,$var_12,time()));
		$var_24 = var_2\var_3::insertid('*PREFIX*calendar_objects');

		OC_Calendar_Calendar::touchCalendar($var_0);

		return $var_24;
	}

	
	public static function fn_6($var_0, $var_14){
		$var_25 = self::fn_2($var_0);

		$var_15 = class_2::parse($var_14);
		OC_Calendar_App::loadCategoriesFromVCalendar($var_15);
		list($var_16,$var_17,$var_18,$var_19,$var_20,$var_21) = self::fn_11($var_15);

		$var_1 = var_2\var_3::prepare( 'UPDATE *PREFIX*calendar_objects SET objecttype=?,startdate=?,enddate=?,repeating=?,summary=?,calendardata=?, lastmodified = ? WHERE id = ?' );
		$var_1->execute(array($var_16,$var_17,$var_18,$var_20,$var_19,$var_14,time(),$var_0));

		OC_Calendar_Calendar::touchCalendar($var_25['calendarid']);

		return true;
	}

	
	public static function fn_7($var_11,$var_12,$var_14){
		$var_25 = self::fn_3($var_11,$var_12);

		$var_15 = class_2::parse($var_14);
		list($var_16,$var_17,$var_18,$var_19,$var_20,$var_21) = self::fn_11($var_15);

		$var_1 = var_2\var_3::prepare( 'UPDATE *PREFIX*calendar_objects SET objecttype=?,startdate=?,enddate=?,repeating=?,summary=?,calendardata=?, lastmodified = ? WHERE id = ?' );
		$var_1->execute(array($var_16,$var_17,$var_18,$var_20,$var_19,$var_14,time(),$var_25['id']));

		OC_Calendar_Calendar::touchCalendar($var_25['calendarid']);

		return true;
	}

	
	public static function fn_8($var_0){
		$var_25 = self::fn_2($var_0);
		$var_1 = var_2\var_3::prepare( 'DELETE FROM *PREFIX*calendar_objects WHERE id = ?' );
		$var_1->execute(array($var_0));
		OC_Calendar_Calendar::touchCalendar($var_25['calendarid']);

		return true;
	}

	
	public static function fn_9($var_11,$var_12){
		$var_1 = var_2\var_3::prepare( 'DELETE FROM *PREFIX*calendar_objects WHERE calendarid = ? AND uri=?' );
		$var_1->execute(array($var_11,$var_12));
		OC_Calendar_Calendar::touchCalendar($var_11);

		return true;
	}

	public static function fn_10($var_0, $var_26){
		$var_1 = var_2\var_3::prepare( 'UPDATE *PREFIX*calendar_objects SET calendarid=? WHERE id = ?' );
		$var_1->execute(array($var_26,$var_0));

		OC_Calendar_Calendar::touchCalendar($var_0);

		return true;
	}

	
	protected static function fn_11($var_15){
		$var_27 = array('',null,null,'',0,null);

		
		$var_28 = 0;
		$var_29 = null;
		foreach($var_15->var_28 as $var_30){
			if($var_30->var_31 == 'VEVENT'){
				$var_28++;
				$var_32 = true;

				foreach($var_30->var_28 as &$var_33){
					if($var_33->var_31 == 'RECURRENCE-ID'){
						$var_32 = false;
					}
				} unset($var_33);

				if($var_32){
					$var_29 = $var_30;
				}
			}
			elseif($var_30->var_31 == 'VTODO' || $var_30->var_31 == 'VJOURNAL'){
				$var_27[0] = $var_30->var_31;
				foreach($var_30->var_28 as &$var_33){
					if($var_33->var_31 == 'SUMMARY'){
						$var_27[3] = $var_33->var_34;
					}
					elseif($var_33->var_31 == 'UID'){
						$var_27[5] = $var_33->var_34;
					}
				};

				
				
				
				break;
			}
		}

		
		if(!is_null($var_29)){
			$var_27[0] = $var_29->var_31;
			foreach($var_29->var_28 as $var_30){
				if($var_30->var_31 == 'DTSTART'){
					$var_27[1] = self::fn_12($var_30->getDateTime());
				}
				elseif($var_30->var_31 == 'DTEND'){
					$var_27[2] = self::fn_12($var_30->getDateTime());
				}
				elseif($var_30->var_31 == 'SUMMARY'){
					$var_27[3] = $var_30->var_34;
				}
				elseif($var_30->var_31 == 'RRULE'){
					$var_27[4] = 1;
				}
				elseif($var_30->var_31 == 'UID'){
					$var_27[5] = $var_30->var_34;
				}
			}
		}

		
		if($var_28 > 1){
			$var_27[4] = 1;
		}
		return $var_27;
	}

	
	protected static function fn_12($var_36){
		return date('Y-m-d H:i', $var_36->format('U') - $var_36->getOffset());
	}

	public static function fn_13($var_39)
	{
		if ($var_39->var_40) {
			$var_41 = $var_39->var_40;
		}else{
			$var_41 = clone $var_39->var_42;
			
			$var_41->setDateTime(clone $var_41->getDateTime(), $var_41->getDateType());
			if ($var_39->var_45){
				$var_46 = strval($var_39->var_45);
				$var_47 = 0;
				if ($var_46[0] == '-'){
					$var_46 = substr($var_46, 1);
					$var_47 = 1;
				}
				if ($var_46[0] == '+'){
					$var_46 = substr($var_46, 1);
				}
				$var_48 = new class_1($var_46);
				$var_48->var_47 = $var_47;
				$var_41->getDateTime()->fn_4($var_48);
			}
		}
		return $var_41;
	}

	public static function fn_14($var_49)
	{
		return array(
			'doesnotrepeat' => $var_49->t('Does not repeat'),
			'daily'         => $var_49->t('Daily'),
			'weekly'        => $var_49->t('Weekly'),
			'weekday'       => $var_49->t('Every Weekday'),
			'biweekly'      => $var_49->t('Bi-Weekly'),
			'monthly'       => $var_49->t('Monthly'),
			'yearly'        => $var_49->t('Yearly')
		);
	}

	public static function fn_15($var_49)
	{
		return array(
			'never' => $var_49->t('never'),
			'count' => $var_49->t('by occurrences'),
			'date'  => $var_49->t('by date')
		);
	}

	public static function fn_16($var_49)
	{
		return array(
			'monthday' => $var_49->t('by monthday'),
			'weekday'  => $var_49->t('by weekday')
		);
	}

	public static function fn_17($var_49)
	{
		return array(
			'MO' => $var_49->t('Monday'),
			'TU' => $var_49->t('Tuesday'),
			'WE' => $var_49->t('Wednesday'),
			'TH' => $var_49->t('Thursday'),
			'FR' => $var_49->t('Friday'),
			'SA' => $var_49->t('Saturday'),
			'SU' => $var_49->t('Sunday')
		);
	}

	public static function fn_18($var_49)
	{
		return array(
			'auto' => $var_49->t('events week of month'),
			'1' => $var_49->t('first'),
			'2' => $var_49->t('second'),
			'3' => $var_49->t('third'),
			'4' => $var_49->t('fourth'),
			'5' => $var_49->t('fifth'),
			'-1' => $var_49->t('last')
		);
	}

	public static function fn_19(){
		$var_27 = array();
		foreach(range(1,366) as $var_51){
			$var_27[(string) $var_51] = (string) $var_51;
		}
		return $var_27;
	}

	public static function fn_20(){
		$var_27 = array();
		foreach(range(1,31) as $var_51){
			$var_27[(string) $var_51] = (string) $var_51;
		}
		return $var_27;
	}

	public static function fn_21($var_49){
		return array(
			'1'  => $var_49->t('January'),
			'2'  => $var_49->t('February'),
			'3'  => $var_49->t('March'),
			'4'  => $var_49->t('April'),
			'5'  => $var_49->t('May'),
			'6'  => $var_49->t('June'),
			'7'  => $var_49->t('July'),
			'8'  => $var_49->t('August'),
			'9'  => $var_49->t('September'),
			'10' => $var_49->t('October'),
			'11' => $var_49->t('November'),
			'12' => $var_49->t('December')
		);
	}

	public static function fn_22($var_49){
		return array(
			'bydate' => $var_49->t('by events date'),
			'byyearday' => $var_49->t('by yearday(s)'),
			'byweekno'  => $var_49->t('by weeknumber(s)'),
			'bydaymonth'  => $var_49->t('by day and month')
		);
	}

	public static function fn_23(){
		return range(1, 52);
	}

	public static function fn_24($var_52)
	{
		$var_53 = 0;
		$var_54 = array('title'=>'false', 'cal'=>'false', 'from'=>'false', 'fromtime'=>'false', 'to'=>'false', 'totime'=>'false', 'endbeforestart'=>'false');
		if($var_52['title'] == ''){
			$var_54['title'] = 'true';
			$var_53++;
		}

		$var_55 = substr($var_52['from'], 0, 2);
		$var_56 = substr($var_52['from'], 3, 2);
		$var_57 = substr($var_52['from'], 6, 4);
		if(!checkdate($var_56, $var_55, $var_57)){
			$var_54['from'] = 'true';
			$var_53++;
		}
		$var_58 = isset($var_52['allday']);
		if(!$var_58 && self::fn_25(urldecode($var_52['fromtime']))) {
			$var_54['fromtime'] = 'true';
			$var_53++;
		}

		$var_59 = substr($var_52['to'], 0, 2);
		$var_60 = substr($var_52['to'], 3, 2);
		$var_61 = substr($var_52['to'], 6, 4);
		if(!checkdate($var_60, $var_59, $var_61)){
			$var_54['to'] = 'true';
			$var_53++;
		}
		if($var_52['repeat'] != 'doesnotrepeat'){
			if(is_nan($var_52['interval']) && $var_52['interval'] != ''){
				$var_54['interval'] = 'true';
				$var_53++;
			}
			if(array_key_exists('repeat', $var_52) && !array_key_exists($var_52['repeat'], self::fn_14(var_62::$var_49))){
				$var_54['repeat'] = 'true';
				$var_53++;
			}
			if(array_key_exists('advanced_month_select', $var_52) && !array_key_exists($var_52['advanced_month_select'], self::fn_16(var_62::$var_49))){
				$var_54['advanced_month_select'] = 'true';
				$var_53++;
			}
			if(array_key_exists('advanced_year_select', $var_52) && !array_key_exists($var_52['advanced_year_select'], self::fn_22(var_62::$var_49))){
				$var_54['advanced_year_select'] = 'true';
				$var_53++;
			}
			if(array_key_exists('weekofmonthoptions', $var_52) && !array_key_exists($var_52['weekofmonthoptions'], self::fn_18(var_62::$var_49))){
				$var_54['weekofmonthoptions'] = 'true';
				$var_53++;
			}
			if($var_52['end'] != 'never'){
				if(!array_key_exists($var_52['end'], self::fn_15(var_62::$var_49))){
					$var_54['end'] = 'true';
					$var_53++;
				}
				if($var_52['end'] == 'count' && is_nan($var_52['byoccurrences'])){
					$var_54['byoccurrences'] = 'true';
					$var_53++;
				}
				if($var_52['end'] == 'date'){
					list($var_63, $var_64, $var_65) = explode('-', $var_52['bydate']);
					if(!checkdate($var_64, $var_63, $var_65)){
						$var_54['bydate'] = 'true';
						$var_53++;
					}
				}
			}
			if(array_key_exists('weeklyoptions', $var_52)){
				foreach($var_52['weeklyoptions'] as $var_66){
					if(!in_array($var_66, self::fn_17(var_62::$var_49))){
						$var_54['weeklyoptions'] = 'true';
						$var_53++;
					}
				}
			}
			if(array_key_exists('byyearday', $var_52)){
				foreach($var_52['byyearday'] as $var_66){
					if(!array_key_exists($var_66, self::fn_19())){
						$var_54['byyearday'] = 'true';
						$var_53++;
					}
				}
			}
			if(array_key_exists('weekofmonthoptions', $var_52)){
				if(is_nan((double)$var_52['weekofmonthoptions'])){
					$var_54['weekofmonthoptions'] = 'true';
					$var_53++;
				}
			}
			if(array_key_exists('bymonth', $var_52)){
				foreach($var_52['bymonth'] as $var_66){
					if(!in_array($var_66, self::fn_21(var_62::$var_49))){
						$var_54['bymonth'] = 'true';
						$var_53++;
					}
				}
			}
			if(array_key_exists('byweekno', $var_52)){
				foreach($var_52['byweekno'] as $var_66){
					if(!array_key_exists($var_66, self::fn_23())){
						$var_54['byweekno'] = 'true';
						$var_53++;
					}
				}
			}
			if(array_key_exists('bymonthday', $var_52)){
				foreach($var_52['bymonthday'] as $var_66){
					if(!array_key_exists($var_66, self::fn_20())){
						$var_54['bymonthday'] = 'true';
						$var_53++;
					}
				}
			}
		}
		if(!$var_58 && self::fn_25(urldecode($var_52['totime']))) {
			$var_54['totime'] = 'true';
			$var_53++;
		}
		if($var_59 < $var_55 && $var_56 == $var_60 && $var_57 == $var_61){
			$var_54['endbeforestart'] = 'true';
			$var_53++;
		}
		if($var_59 == $var_55 && $var_56 > $var_60 && $var_57 == $var_61){
			$var_54['endbeforestart'] = 'true';
			$var_53++;
		}
		if($var_59 == $var_55 && $var_56 == $var_60 && $var_57 > $var_61){
			$var_54['endbeforestart'] = 'true';
			$var_53++;
		}
		if(!$var_58 && $var_55 == $var_59 && $var_56 == $var_60 && $var_57 == $var_61){
			list($var_67, $var_68) = explode(':', $var_52['totime']);
			list($var_69, $var_70) = explode(':', $var_52['fromtime']);
			if($var_67 < $var_69){
				$var_54['endbeforestart'] = 'true';
				$var_53++;
			}
			if($var_67 == $var_69 && $var_68 < $var_70){
				$var_54['endbeforestart'] = 'true';
				$var_53++;
			}
		}
		if ($var_53)
		{
			return $var_54;
		}
		return false;
	}

	protected static function fn_25($var_71)
	{
		list($var_72, $var_73) = explode(':', $var_71);
		return empty($var_71)
			|| $var_72 < 0 || $var_72 > 24
			|| $var_73 < 0 || $var_73 > 60;
	}

	public static function fn_26($var_52)
	{
		$var_74 = new class_2('VCALENDAR');
		$var_74->fn_4('PRODID', 'ownCloud Calendar');
		$var_74->fn_4('VERSION', '2.0');

		$var_39 = new class_2('VEVENT');
		$var_74->fn_4($var_39);

		$var_39->setDateTime('CREATED', 'now', var_75::var_76);

		$var_39->setUID();
		return self::fn_27($var_52, $var_74);
	}

	public static function fn_27($var_52, $var_74)
	{
		$var_77 = $var_52["title"];
		$var_78 = $var_52["location"];
		$var_79 = $var_52["categories"];
		$var_58 = isset($var_52["allday"]);
		$var_80 = $var_52["from"];
		$var_81  = $var_52["to"];
		if (!$var_58){
			$var_82 = $var_52['fromtime'];
			$var_83 = $var_52['totime'];
		}
		$var_39 = $var_74->var_84;
		$var_85 = $var_52["description"];
		$var_86 = $var_52["repeat"];
		if($var_86 != 'doesnotrepeat'){
			$var_87 = '';
			$var_48 = $var_52['interval'];
			$var_10 = $var_52['end'];
			$var_88 = $var_52['byoccurrences'];
			switch($var_86){
				case 'daily':
					$var_87 .= 'FREQ=DAILY';
					break;
				case 'weekly':
					$var_87 .= 'FREQ=WEEKLY';
					if(array_key_exists('weeklyoptions', $var_52)){
						$var_89 = '';
						$var_90 = array_flip(self::fn_17(var_62::$var_49));
						foreach($var_52['weeklyoptions'] as $var_91){
							if($var_89 == ''){
								$var_89 .= $var_90[$var_91];
							}else{
								$var_89 .= ',' .$var_90[$var_91];
							}
						}
						$var_87 .= ';BYDAY=' . $var_89;
					}
					break;
				case 'weekday':
					$var_87 .= 'FREQ=WEEKLY';
					$var_87 .= ';BYDAY=MO,TU,WE,TH,FR';
					break;
				case 'biweekly':
					$var_87 .= 'FREQ=WEEKLY';
					$var_48 = $var_48 * 2;
					break;
				case 'monthly':
					$var_87 .= 'FREQ=MONTHLY';
					if($var_52['advanced_month_select'] == 'monthday'){
						break;
					}elseif($var_52['advanced_month_select'] == 'weekday'){
						if($var_52['weekofmonthoptions'] == 'auto'){
							list($var_92, $var_93, $var_94) = explode('-', $var_80);
							$var_95 = floor($var_92/7);
						}else{
							$var_95 = $var_52['weekofmonthoptions'];
						}
						$var_91 = array_flip(self::fn_17(var_62::$var_49));
						$var_89 = '';
						foreach($var_52['weeklyoptions'] as $var_96){
							if($var_89 == ''){
								$var_89 .= $var_95 . $var_91[$var_96];
							}else{
								$var_89 .= ',' . $var_95 . $var_91[$var_96];
							}
						}
						$var_87 .= ';BYDAY=' . $var_89;
					}
					break;
				case 'yearly':
					$var_87 .= 'FREQ=YEARLY';
					if($var_52['advanced_year_select'] == 'bydate'){
						
					}elseif($var_52['advanced_year_select'] == 'byyearday'){
						list($var_92, $var_93, $var_94) = explode('-', $var_80);
						$var_97 = date('z', mktime(0,0,0, $var_93, $var_92, $var_94)) + 1;
						if(array_key_exists('byyearday', $var_52)){
							foreach($var_52['byyearday'] as $var_98){
								$var_97 .= ',' . $var_98;
							}
						}
						$var_87 .= ';BYYEARDAY=' . $var_97;
					}elseif($var_52['advanced_year_select'] == 'byweekno'){
						list($var_92, $var_93, $var_94) = explode('-', $var_80);
						$var_87 .= ';BYDAY=' . strtoupper(substr(date('l', mktime(0,0,0, $var_93, $var_92, $var_94)), 0, 2));
						$var_99 = '';
						foreach($var_52['byweekno'] as $var_100){
							if($var_99 == ''){
								$var_99 = $var_100;
							}else{
								$var_99 .= ',' . $var_100;
							}
						}
						$var_87 .= ';BYWEEKNO=' . $var_99;
					}elseif($var_52['advanced_year_select'] == 'bydaymonth'){
						if(array_key_exists('weeklyoptions', $var_52)){
							$var_91 = array_flip(self::fn_17(var_62::$var_49));
							$var_89 = '';
							foreach($var_52['weeklyoptions'] as $var_96){
								if($var_89 == ''){
								      $var_89 .= $var_91[$var_96];
								}else{
								      $var_89 .= ',' . $var_91[$var_96];
								}
							}
							$var_87 .= ';BYDAY=' . $var_89;
						}
						if(array_key_exists('bymonth', $var_52)){
							$var_101 = array_flip(self::fn_21(var_62::$var_49));
							$var_102 = '';
							foreach($var_52['bymonth'] as $var_103){
								if($var_102 == ''){
								      $var_102 .= $var_101[$var_103];
								}else{
								      $var_102 .= ',' . $var_101[$var_103];
								}
							}
							$var_87 .= ';BYMONTH=' . $var_102;
							
						}
						if(array_key_exists('bymonthday', $var_52)){
							$var_104 = '';
							foreach($var_52['bymonthday'] as $var_105){
								if($var_104 == ''){
								      $var_104 .= $var_105;
								}else{
								      $var_104 .= ',' . $var_105;
								}
							}
							$var_87 .= ';BYMONTHDAY=' . $var_104;
							
						}
					}
					break;
				default:
					break;
			}
			if($var_48 != ''){
				$var_87 .= ';INTERVAL=' . $var_48;
			}
			if($var_10 == 'count'){
				$var_87 .= ';COUNT=' . $var_88;
			}
			if($var_10 == 'date'){
				list($var_63, $var_64, $var_65) = explode('-', $var_52['bydate']);
				$var_87 .= ';UNTIL=' . $var_65 . $var_64 . $var_63;
			}
			$var_39->setString('RRULE', $var_87);
			$var_86 = "true";
		}else{
			$var_86 = "false";
		}


		$var_39->setDateTime('LAST-MODIFIED', 'now', var_75::var_76);
		$var_39->setDateTime('DTSTAMP', 'now', var_75::var_76);
		$var_39->setString('SUMMARY', $var_77);

		if($var_58){
			$var_9 = new class_3($var_80);
			$var_10 = new class_3($var_81.' +1 day');
			$var_39->setDateTime('DTSTART', $var_9, var_75::var_107);
			$var_39->setDateTime('DTEND', $var_10, var_75::var_107);
		}else{
			$var_108 = var_2\var_109::getUserValue(var_2\var_110::getUser(), 'calendar', 'timezone', date_default_timezone_get());
			$var_108 = new class_4($var_108);
			$var_9 = new class_3($var_80.' '.$var_82, $var_108);
			$var_10 = new class_3($var_81.' '.$var_83, $var_108);
			$var_39->setDateTime('DTSTART', $var_9, var_75::var_111);
			$var_39->setDateTime('DTEND', $var_10, var_75::var_111);
		}
		unset($var_39->var_45);

		$var_39->setString('LOCATION', $var_78);
		$var_39->setString('DESCRIPTION', $var_85);
		$var_39->setString('CATEGORIES', $var_79);

		

		return $var_74;
	}

	public static function fn_28($var_0){
		$var_112 = self::fn_2($var_0);
		$var_113 = OC_Calendar_Calendar::fn_2($var_112['calendarid']);
		return $var_113['userid'];
	}
	
	public static function fn_29($var_0){
		$var_112 = self::fn_2($var_0);
		return $var_112['calendarid'];
	}
}
