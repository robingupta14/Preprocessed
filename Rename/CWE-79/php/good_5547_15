<?php


elgg_register_event_handler('init', 'system', 'file_init');


function fn_0() {

	
	elgg_register_library('elgg:file', elgg_get_plugins_path() . 'file/lib/file.php');

	
	$var_0 = new class_0('file', elgg_echo('file'), 'file/all');
	elgg_register_menu_item('site', $var_0);

	
	elgg_extend_view('css/elgg', 'file/css');

	
	elgg_extend_view('extensions/item', 'file/enclosure');

	
	elgg_extend_view('groups/tool_latest', 'file/group_module');

	
	elgg_register_page_handler('file', 'file_page_handler');

	
	elgg_register_widget_type('filerepo', elgg_echo("file"), elgg_echo("file:widget:description"));

	
	elgg_register_entity_url_handler('object', 'file', 'file_url_override');
	elgg_register_plugin_hook_handler('entity:icon:url', 'object', 'file_icon_url_override');

	
	register_notification_object('object', 'file', elgg_echo('file:newupload'));

	
	elgg_register_plugin_hook_handler('notify:entity:message', 'object', 'file_notify_message');

	
	add_group_tool_option('file', elgg_echo('groups:enablefiles'), true);

	
	elgg_register_entity_type('object', 'file');

	
	elgg_register_plugin_hook_handler('register', 'menu:owner_block', 'file_owner_block_menu');

	
	$var_1 = elgg_get_plugins_path() . 'file/actions/file';
	elgg_register_action("file/upload", "$var_1/upload.php");
	elgg_register_action("file/delete", "$var_1/delete.php");
	
	elgg_register_action("file/download", "$var_1/download.php");

	
	$var_0 = class_0::factory(array(
		'name' => 'file',
		'text' => elgg_echo('file'),
		'priority' => 10,
		'data' => array(
			'options' => array(
				'type' => 'object',
				'subtype' => 'file',
			),
		),
	));
	elgg_register_menu_item('embed', $var_0);

	$var_0 = class_0::factory(array(
		'name' => 'file_upload',
		'text' => elgg_echo('file:upload'),
		'priority' => 100,
		'data' => array(
			'view' => 'embed/file_upload/content',
		),
	));

	elgg_register_menu_item('embed', $var_0);
}


function fn_1($var_2) {

	if (!isset($var_2[0])) {
		$var_2[0] = 'all';
	}

	$var_3 = elgg_get_plugins_path() . 'file/pages/file';

	$var_4 = $var_2[0];
	switch ($var_4) {
		case 'owner':
			fn_2();
			break;
		case 'friends':
			fn_2();
			break;
		case 'read': 
			register_error(elgg_echo("changebookmark"));
			forward("file/view/{$var_2[1]}");
			break;
		case 'view':
			set_input('guid', $var_2[1]);
			break;
		case 'add':
			break;
		case 'edit':
			set_input('guid', $var_2[1]);
			break;
		case 'search':
			fn_2();
			break;
		case 'group':
			fn_2();
			break;
		case 'all':
			fn_2();
			break;
		case 'download':
			set_input('guid', $var_2[1]);
			break;
		default:
			return false;
	}
	return true;
}


function fn_2() {
	$var_5 = elgg_http_remove_url_query_element(current_page_url(), 'list_type');

	if (get_input('list_type', 'list') == 'list') {
		$var_6 = "gallery";
		$var_7 = elgg_view_icon('grid');
	} else {
		$var_6 = "list";
		$var_7 = elgg_view_icon('list');
	}

	if (substr_count($var_5, '?')) {
		$var_5 .= "&list_type=" . $var_6;
	} else {
		$var_5 .= "?list_type=" . $var_6;
	}


	elgg_register_menu_item('extras', array(
		'name' => 'file_list',
		'text' => $var_7,
		'href' => $var_5,
		'title' => elgg_echo("file:list:$var_6"),
		'priority' => 1000,
	));
}


function fn_3($var_8, $var_9, $var_10, $var_11) {
	$var_12 = $var_11['entity'];
	$var_13 = $var_11['to_entity'];
	$var_14 = $var_11['method'];
	if (($var_12 instanceof var_15) && ($var_12->getSubtype() == 'file')) {
		$var_17 = $var_12->var_18;
		$var_19 = $var_12->var_19;
		$var_20 = $var_12->getOwnerEntity();
		return elgg_echo('file:notification', array(
			$var_20->var_22,
			$var_19,
			$var_17,
			$var_12->getURL()
		));
	}
	return null;
}


function fn_4($var_8, $var_24, $var_25, $var_11) {
	if (elgg_instanceof($var_11['entity'], 'user')) {
		$var_5 = "file/owner/{$var_11['entity']->var_26}";
		$var_0 = new class_0('file', elgg_echo('file'), $var_5);
		$var_25[] = $var_0;
	} else {
		if ($var_11['entity']->var_27 != "no") {
			$var_5 = "file/group/{$var_11['entity']->var_28}/all";
			$var_0 = new class_0('file', elgg_echo('file:group'), $var_5);
			$var_25[] = $var_0;
		}
	}

	return $var_25;
}


function fn_5($var_29) {

	$var_30 = null;

	switch ($var_29) {
		case "application/msword":
		case "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
			$var_30 = "document";
			break;
		case "application/pdf":
			$var_30 = "document";
			break;
		case "application/ogg":
			$var_30 = "audio";
			break;
		default:
			if (substr_count($var_29, 'text/')) {
				$var_30 = "document";
			} elseif (substr_count($var_29, 'audio/')) {
				$var_30 = "audio";
			} elseif (substr_count($var_29, 'image/')) {
				$var_30 = "image";
			} elseif (substr_count($var_29, 'video/')) {
				$var_30 = "video";
			} elseif (substr_count($var_29, 'opendocument')) {
				$var_30 = "document";
			} else {
				$var_30 = "general";
			}
			break;
	}

	$var_11 = array('mime_type' => $var_29);
	return elgg_trigger_plugin_hook('simple_type', 'file', $var_11, $var_30);
}


function fn_6($var_29) {
	elgg_deprecated_notice('Use file_get_simple_type() instead of get_general_file_type()', 1.8);
	return fn_5($var_29);
}


function fn_7($var_31 = "", $var_32 = false) {

	$var_33 = $var_31;

	if ($var_32) {
		
		
		$var_34 = get_user_friends($var_31, "", 999999, 0);
		if ($var_34) {
			$var_35 = array();
			foreach ($var_34 as $var_36) {
				$var_35[] = $var_36->getGUID();
			}
		}
		$var_33 = $var_35;
	}

	elgg_register_tag_metadata_name('simpletype');
	$var_38 = array(
		'type' => 'object',
		'subtype' => 'file',
		'container_guids' => $var_33,
		'threshold' => 0,
		'limit' => 10,
		'tag_names' => array('simpletype')
	);
	$var_39 = elgg_get_tags($var_38);

	$var_11 = array(
		'friends' => $var_32,
		'types' => $var_39,
	);

	return elgg_view('file/typecloud', $var_11);
}

function fn_8($var_40 = "", $var_32 = false) {
	elgg_deprecated_notice('Use file_get_type_cloud instead of get_filetype_cloud', 1.8);
	return fn_7($var_40, $var_32);
}


function fn_9($var_12) {
	$var_19 = $var_12->var_19;
	$var_19 = elgg_get_friendly_title($var_19);
	return "file/view/" . $var_12->getGUID() . "/" . $var_19;
}


function fn_10($var_8, $var_24, $var_10, $var_11) {
	$var_41 = $var_11['entity'];
	$var_42 = $var_11['size'];
	if (elgg_instanceof($var_41, 'object', 'file')) {

		
		if ($var_41->var_43) {
			$var_44 = (int)$var_41->var_45;
			return "mod/file/thumbnail.php?file_guid=$var_41->var_28&size=$var_42&icontime=$var_44";
		}

		$var_46 = array(
			'application/excel' => 'excel',
			'application/msword' => 'word',
			'application/ogg' => 'music',
			'application/pdf' => 'pdf',
			'application/powerpoint' => 'ppt',
			'application/vnd.ms-excel' => 'excel',
			'application/vnd.ms-powerpoint' => 'ppt',
			'application/vnd.oasis.opendocument.text' => 'openoffice',
			'application/vnd.openxmlformats-officedocument.wordprocessingml.document' => 'word',
			'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' => 'excel',
			'application/vnd.openxmlformats-officedocument.presentationml.presentation' => 'ppt',
			'application/x-gzip' => 'archive',
			'application/x-rar-compressed' => 'archive',
			'application/x-stuffit' => 'archive',
			'application/zip' => 'archive',

			'text/directory' => 'vcard',
			'text/v-card' => 'vcard',

			'application' => 'application',
			'audio' => 'music',
			'text' => 'text',
			'video' => 'video',
		);

		$var_47 = $var_41->var_29;
		if ($var_47) {
			$var_48 = substr($var_47, 0, strpos($var_47, '/'));
		} else {
			$var_47 = 'none';
			$var_48 = 'none';
		}

		if (isset($var_46[$var_47])) {
			$var_24 = $var_46[$var_47];
		} elseif (isset($var_46[$var_48])) {
			$var_24 = $var_46[$var_48];
		} else {
			$var_24 = 'general';
		}

		if ($var_42 == 'large') {
			$var_49 = '_lrg';
		} else {
			$var_49 = '';
		}
		
		$var_5 = "mod/file/graphics/icons/{$var_24}{$var_49}.gif";
		$var_5 = elgg_trigger_plugin_hook('file:icon:url', 'override', $var_11, $var_5);
		return $var_5;
	}
}