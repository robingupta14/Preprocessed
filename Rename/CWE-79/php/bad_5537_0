<?php



class class_0 {
	private static $var_0=array();
	private static $var_1=array();

	
	public static function fn_0( $var_2, $var_3, $var_4 = array() ) {
		if( $var_2 != '' ) {
			$var_5 = OC_App::getAppPath($var_2);
			
			if( $var_5 && file_exists( $var_5.'/'.$var_3 )) {
				if(substr($var_3, -3) == 'php' || substr($var_3, -3) == 'css') {
					$var_6 =  var_7::$var_8 . '/?app=' . $var_2;
					$var_6 .= ($var_3!='index.php')?'&getfile=' . rawurlencode($var_3):'';
				}else{
					$var_6 =  OC_App::getAppWebPath($var_2) . '/' . $var_3;
				}
			}
			else{
				$var_6 =  var_7::$var_8 . '/' . $var_2 . '/' . $var_3;
			}
		}
		else{
			if( file_exists( var_7::$var_9 . '/core/'. $var_3 )) {
				$var_6 =  var_7::$var_8 . '/core/'.$var_3;
			}
			else{
				$var_6 =  var_7::$var_8 . '/'.$var_3;
			}
		}

		if (!empty($var_4)) {
			$var_6 .= '?';
			foreach($var_4 as $var_10 => $var_11) {
				$var_6 .= '&'.$var_10.'='.rawurlencode($var_11);
			}
		}

		return $var_6;
	}

	
	public static function fn_1( $var_2, $var_3, $var_4 = array() ) {
		$var_6 = self::fn_0( $var_2, $var_3, $var_4 );
		return self::fn_2($var_6);
	}

	
	public static function fn_2( $var_12 )
	{
		return OC_Request::serverProtocol(). ':
	}

	
	public static function linkToRemoteBase( $service ) {
		return self::linkTo( '', 'var_13.var_14') . '/' . $var_15;
	}

	
	public static function fn_3( $var_15, $var_16 = true ) {
		return self::fn_2(self::linkToRemoteBase($var_15)) . (($var_16 && $var_15[strlen($var_15)-1]!='/')?'/':'');
	}

	
	public static function fn_4($var_15, $var_16 = false) {
		return self::fn_1( '', 'public.php') . '?service=' . $var_15 . (($var_16 && $var_15[strlen($var_15)-1]!='/')?'/':'');
	}

	
	public static function fn_5( $var_2, $var_17 ) {
		
		$var_18=OC_Config::getValue( "theme" );

		
		if( file_exists( var_7::$var_9."/themes/$var_18/apps/$var_2/img/$var_17" )) {
			return var_7::$var_8."/themes/$var_18/apps/$var_2/img/$var_17";
		}elseif( file_exists(OC_App::getAppPath($var_2)."/img/$var_17" )) {
			return OC_App::getAppWebPath($var_2)."/img/$var_17";
		}elseif( !empty( $var_2 ) and file_exists( var_7::$var_9."/themes/$var_18/$var_2/img/$var_17" )) {
			return var_7::$var_8."/themes/$var_18/$var_2/img/$var_17";
		}elseif( !empty( $var_2 ) and file_exists( var_7::$var_9."/$var_2/img/$var_17" )) {
			return var_7::$var_8."/$var_2/img/$var_17";
		}elseif( file_exists( var_7::$var_9."/themes/$var_18/core/img/$var_17" )) {
			return var_7::$var_8."/themes/$var_18/core/img/$var_17";
		}elseif( file_exists( var_7::$var_9."/core/img/$var_17" )) {
			return var_7::$var_8."/core/img/$var_17";
		}else{
			echo('image not found: image:'.$var_17.' webroot:'.var_7::$var_8.' serverroot:'.var_7::$var_9);
			die();
		}
	}

	
	public static function fn_6( $var_19 ) {
		$var_20=array('application/xml'=>'code/xml');
		if(isset($var_20[$var_19])) {
			$var_19=$var_20[$var_19];
		}
		
		$var_19 = str_replace( "/", "-", $var_19 );

		
		if( $var_19 == "dir" ) {
			return var_7::$var_8."/core/img/filetypes/folder.png";
		}

		
		if( file_exists( var_7::$var_9."/core/img/filetypes/$var_19.png" )) {
			return var_7::$var_8."/core/img/filetypes/$var_19.png";
		}
		
		$var_19=substr($var_19,0,strpos($var_19,'-'));
		if( file_exists( var_7::$var_9."/core/img/filetypes/$var_19.png" )) {
			return var_7::$var_8."/core/img/filetypes/$var_19.png";
		}
		else{
			return var_7::$var_8."/core/img/filetypes/file.png";
		}
	}

	
	public static function fn_7( $var_21 ) {
		if( $var_21 < 1024 ) {
			return "$var_21 B";
		}
		$var_21 = round( $var_21 / 1024, 1 );
		if( $var_21 < 1024 ) {
			return "$var_21 kB";
		}
		$var_21 = round( $var_21 / 1024, 1 );
		if( $var_21 < 1024 ) {
			return "$var_21 MB";
		}

		
		$var_21 = round( $var_21 / 1024, 1 );
		return "$var_21 GB";
	}

	
	public static function fn_8( $var_22 ) {
		$var_22=strtolower($var_22);

		$var_23 = array(
			'b' => 1,
			'k' => 1024,
			'kb' => 1024,
			'mb' => 1048576,
			'm'  => 1048576,
			'gb' => 1073741824,
			'g'  => 1073741824,
			'tb' => 1099511627776,
			't'  => 1099511627776,
			'pb' => 1125899906842624,
			'p'  => 1125899906842624,
		);

		$var_21 = floatval($var_22);

		if (preg_match('
			$bytes *= $bytes_array[$matches[1]];
		}

		$bytes = round($bytes, 2);

		return $bytes;
	}

	
	static function chmodr($path, $filemode) {
		if (!is_dir($path))
			return chmod($path, $filemode);
		$dh = opendir($path);
		while (($file = readdir($dh)) !== false) {
			if($file != '.' && $file != '..') {
				$var_24 = $var_25.'/'.$var_3;
				if(is_link($var_24))
					return FALSE;
				elseif(!is_dir($var_24) && !@chmod($var_24, $var_26))
						return FALSE;
				elseif(!self::chmodr($var_24, $var_26))
					return FALSE;
			}
		}
		var_27($var_28);
		if(@chmod($var_25, $var_26))
			return TRUE;
		else
			return FALSE;
	}

	
	static function fn_9($var_29, $var_30) {
		if(is_dir($var_29)) {
			if(!is_dir($var_30)) {
				mkdir($var_30);
			}
			$var_31 = scandir($var_29);
			foreach ($var_31 as $var_3) {
				if ($var_3 != "." && $var_3 != "..") {
					self::fn_9("$var_29/$var_3", "$var_30/$var_3");
				}
			}
		}elseif(file_exists($var_29) && !OC_Filesystem::isFileBlacklisted($var_29)) {
			copy($var_29, $var_30);
		}
	}

	
	static function fn_10($var_32) {
		if(is_dir($var_32)) {
			$var_31=scandir($var_32);
			foreach($var_31 as $var_3) {
				if ($var_3 != "." && $var_3 != "..") {
					self::fn_10("$var_32/$var_3");
				}
			}
			rmdir($var_32);
		}elseif(file_exists($var_32)) {
			unlink($var_32);
		}
		if(file_exists($var_32)) {
			return false;
		}else{
			return true;
		}
	}

	
	static function fn_11($var_25) {
		$var_33=(strpos($var_25,':

		if (@is_dir($path)) {
			
			return "httpd/unix-directory";
		}

		if(strpos($path,'.')) {
			
			if(!self::$mimetypes || self::$mimetypes != include('var_0.list.var_14')) {
				self::$var_0=include('mimetypes.list.php');
			}
			$var_34=strtolower(strrchr(basename($var_25), "."));
			$var_34=substr($var_34,1);
			$var_35=(isset(self::$var_0[$var_34]))?self::$var_0[$var_34]:'application/octet-stream';
		}var_36{
			$var_35='application/octet-stream';
		}

		if($var_35=='application/octet-stream' and function_exists('finfo_open') and function_exists('finfo_file') and $var_37=finfo_open(var_38)) {
			$var_39 = @strtolower(finfo_file($var_37,$var_25));
			if($var_39) {
				$var_35=substr($var_39,0,strpos($var_39,';'));
			}
			finfo_close($var_37);
		}
		if (!$var_33 and $var_35=='application/octet-stream' && function_exists("mime_content_type")) {
			
			$var_35 = mime_content_type($var_25);
		}
		if (!$var_33 and $var_35=='application/octet-stream' && class_0::fn_16("file")) {
			
			
			$var_25=escapeshellarg($var_25);
			$var_40 = popen("file -i -b $var_25 2>/dev/null", "r");
			$var_41 = fgets($var_40);
			pclose($var_40);

			
			$var_35=substr($var_41,0,strrpos($var_41,' '));
			$var_35=substr($var_35,0,strrpos($var_35,"\n"));

			
			if (strpos($var_35, ';') !== false) {
				$var_35 = strstr($var_35, ';', true);
			}

		}
		return $var_35;
	}

	
	static function fn_12($var_42) {
		if(function_exists('finfo_open') and function_exists('finfo_file')) {
			$var_37=finfo_open(var_38);
			return finfo_buffer($var_37, $var_42);
		}else{
			$var_43=class_0::fn_13();
			$var_44=fopen($var_43,'wb');
			fwrite($var_44,$var_42,8024);
			fclose($var_44);
			$var_45=self::fn_11($var_43);
			unset($var_43);
			return $var_45;
		}
	}

	

	
	public static function fn_14($var_46, $var_47="") {
		$var_48 = $var_47;
		if(isset($_REQUEST[$var_46]) && !empty($_REQUEST[$var_46]))
			$var_48 = stripslashes(htmlspecialchars($_REQUEST[$var_46]));

		return $var_48;
	}

	
	public static function fn_15($var_46, $var_11, $var_47) {
		if((isset($_REQUEST[$var_46]) && $_REQUEST[$var_46]==$var_11) || (!isset($_REQUEST[$var_46]) && $var_11 == $var_47))
			
	}

	
	public static function fn_16($var_49, $var_25 = false) {
		
		if ($var_25 === false) {
			$var_25 = getenv("PATH");
		}
		
		if (!strncmp(var_50, "WIN", 3)) {
			
			$var_51 = array(".exe", ".com");
			$var_52 = "file_exists";
		} else {
			
			$var_51 = array("");
			$var_52 = "is_executable";
		}
		
		$var_53 = explode(var_54, $var_25);
		
		$var_55 = ini_get('open_basedir');
		if($var_55 != "none"){
			$var_56 = explode(var_54, $var_55);
			if(count($var_56) > 0 and $var_56[0]){
				
				
				$var_53 = $var_56;
			}
		}
		foreach($var_53 as $var_32){
			foreach($var_51 as $var_57){
				if($var_52("$var_32/$var_49".$var_57))
					return true;
			}
		}
		return false;
	}

	
	public static function fn_17($var_58,$var_59) {
		if(!$var_58 or !$var_59) {
			return false;
		}
		$var_60=0;
		while(!feof($var_58)) {
			$var_60+=fwrite($var_59,fread($var_58,8192));
		}
		return $var_60;
	}

	
	public static function fn_13($var_61='') {
		$var_3=get_temp_dir().'/'.md5(time().rand()).$var_61;
		$var_44=fopen($var_3,'w');
		fclose($var_44);
		self::$var_1[]=$var_3;
		return $var_3;
	}

	
	public static function fn_18() {
		$var_25=get_temp_dir().'/'.md5(time().rand());
		mkdir($var_25);
		self::$var_1[]=$var_25;
		return $var_25.'/';
	}

	
	public static function fn_19() {
		$var_62=get_temp_dir().'/oc-not-deleted';
		if(file_exists($var_62)) {
			$var_63=file($var_62);
			foreach($var_63 as $var_3) {
				self::fn_10($var_3);
			}
			unlink($var_62);
		}

		foreach(self::$var_1 as $var_3) {
			if(file_exists($var_3)) {
				if(!self::fn_10($var_3)) {
					file_put_contents($var_62, $var_3."\n", var_64);
				}
			}
		}
	}

	
	public static function fn_20($var_25, $var_65) {
		if($var_25==='/') {
			$var_25='';
		}
		if ($var_66 = strrpos($var_65, '.')) {
			$var_49 = substr($var_65, 0, $var_66);
			$var_57 = substr($var_65, $var_66);
		} else {
			$var_49 = $var_65;
			$var_57 = '';
		}

		$var_67 = $var_25 . '/' . $var_65;
		$var_68 = 2;
		while (OC_Filesystem::file_exists($var_67)) {
			$var_69 = $var_49 . ' (' . $var_68 . ')' . $var_57;
			$var_67 = $var_25 . '/' . $var_69;
			$var_68++;
		}

		return $var_67;
	}

	
	public static function fn_21($var_70, $var_71) {
		if($var_70 == null || $var_70 == '' || $var_71 == null || $var_71 == '') {
			return false;
		}
		$var_72 = realpath($var_70);
		$var_73 = realpath($var_71);
		if(($var_72 == false && substr_count($var_72, './') != 0) || ($var_73 == false && substr_count($var_73, './') != 0)) { 
			return false;
		}
		if($var_72 && $var_72 != '' && $var_73 && $var_73 != '') {
			if(substr($var_72, 0, strlen($var_73)) == $var_73) {
				return true;
			}
		}else{
			if(substr($var_70, 0, strlen($var_71)) == $var_71) {
				return true;
			}
		}
		
		return false;
	}

	
	public static function fn_22($var_74, $var_75 = var_76, $var_77 = 'UTF-8') {
		$var_75 = ($var_75 != var_78) ? var_76 : var_78;
		$var_79 = array();
		foreach ($var_74 as $var_10 => $var_11) {
			$var_79[mb_convert_case($var_10, $var_75, $var_77)] = $var_11;
		}
		return $var_79;
	}

	
	public static function fn_23($var_80, $var_81, $var_82, $var_83 = null, $var_77 = 'UTF-8') {
		$var_82 = intval($var_82);
		$var_83 = intval($var_83);
		$var_80 = mb_substr($var_80, 0, $var_82, $var_77) .
		          $var_81 .
		          mb_substr($var_80, $var_82+$var_83, mb_strlen($var_80, 'UTF-8')-$var_82, $var_77);

		return $var_80;
	}

	
	public static function fn_24($var_84, $var_85, $var_86, $var_77 = 'UTF-8', &$var_60 = null) {
		$var_87 = -1;
		$var_83 = mb_strlen($var_84, $var_77);
		while(($var_88 = mb_strrpos($var_86, $var_84, $var_87, $var_77)) !== false ) {
			$var_86 = class_0::fn_23($var_86, $var_85, $var_88, $var_83);
			$var_87 = $var_88 - mb_strlen($var_86, $var_77) - 1;
			$var_60++;
		}
		return $var_86;
	}

	
	public static function fn_25($var_89, $var_90, $var_91 = null) {
		$var_92 = new class_1($var_89);
		$var_93 = new class_2($var_92);

		while($var_93->valid()) {
			if (((isset($var_91) AND ($var_93->key() == $var_91)) OR (!isset($var_91))) AND ($var_93->current() == $var_90)) {
				return $var_92->key();
			}

			$var_93->next();
		}

		return false;
	}
}
