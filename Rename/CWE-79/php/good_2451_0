<?php


class class_0 extends var_0
{
    
    public function fn_0()
    {
        return '{{surveys_groups}}';
    }

    
    public function fn_1()
    {
        
        
        return array(
            array('name, sortorder, created_by, title', 'required'),
            array('sortorder, owner_id, parent_id, created_by', 'numerical', 'integerOnly'=>true),
            array('name', 'length', 'max'=>45),
            array('name', 'match', 'pattern'=> '/^[A-Za-z0-9_\.]+$/u','message'=> gT('Group name can contain only alphanumeric character, underscore or dot.')),
            array('title', 'length', 'max'=>100),
            array('description, created, modified', 'safe'),
            
            
            array('gsid, name, title, description, owner_id, parent_id, created, modified, created_by', 'safe', 'on'=>'search'),
        );
    }

    
    public function fn_2()
    {
        
        
        return array(
            'parentgroup' => array(self::var_1, 'SurveysGroups', array('parent_id' => 'gsid'), 'together' => true),
            'owner'       => array(self::var_1, 'User', 'owner_id', 'together' => true),
        );
    }

    
    public function fn_3()
    {
        return array(
            'gsid'        => gT('ID'),
            'name'        => gT('Name'),
            'title'       => gT('Title'),
            'description' => gT('Description'),
            'sortorder'   => gT('Sort order'),
            'owner_id'   => gT('Owner UID'),
            'parent_id'   => gT('Parent group'),
            'created'     => gT('Created on'),
            'modified'    => gT('Modified on'),
            'created_by'  => gT('Created by'),
        );
    }

    public function fn_4()
    {
        return array(

                array(
                    'id'=>'gsid',
                    'class'=>'CCheckBoxColumn',
                    'selectableRows' => '100',
                ),

                array(
                    'header' => gT('Survey group ID'),
                    'name' => 'gsid',
                    'value'=>'CHtml::link($data->gsid, Yii::app()->createUrl("admin/surveysgroups/sa/update/",array("id"=>$data->gsid)))',
                    'type'=>'raw',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Name'),
                    'name' => 'name',
                    'value'=>'CHtml::link($data->name, Yii::app()->createUrl("admin/surveysgroups/sa/update/",array("id"=>$data->gsid)))',
                    'type'=>'raw',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Title'),
                    'name' => 'title',
                    'value'=>'$data->title',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Description'),
                    'name' => 'description',
                    'value'=>'$data->description',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Parent group'),
                    'name' => 'parent',
                    'value'=>'$data->parentTitle',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Owner'),
                    'name' => 'owner',
                    'value'=>'!empty($data->owner) ? $data->owner->users_name : ""',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),

                array(
                    'header' => gT('Order'),
                    'name' => 'sortorder',
                    'value'=>'$data->sortorder',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),


                array(
                    'header' => gT('Actions'),
                    'name' => 'sortorder',
                    'type' => 'raw',
                    'value'=> '$data->buttons',
                    'headerHtmlOptions'=>array('class' => 'hidden-xs'),
                    'htmlOptions' => array('class' => 'hidden-xs'),
                ),

            );
    }

    
    public function fn_5()
    {
        

        $var_2 = new class_1;

        $var_2->var_3 = array('DISTINCT t.*');

        $var_2->compare('gsid', $var_5->var_6);
        $var_2->compare('name', $var_5->var_7, true);
        $var_2->compare('title', $var_5->var_8, true);
        $var_2->compare('description', $var_5->var_9, true);
        $var_2->compare('sortorder', $var_5->var_10);
        $var_2->compare('owner_id', $var_5->var_11);
        $var_2->compare('parent_id', $var_5->var_12);
        $var_2->compare('created', $var_5->var_13, true);
        $var_2->compare('modified', $var_5->var_14, true);
        $var_2->compare('created_by', $var_5->var_15);

        
        
        if (!Permission::fn_13()->hasGlobalPermission("surveys", 'read')) {
            $var_17 = new class_1;

            
            $var_17->mergeWith(array(
                'join'=>"LEFT JOIN {{surveys}} AS surveys ON (surveys.gsid = t.gsid)
                        LEFT JOIN {{permissions}} AS permissions ON (permissions.entity_id = surveys.sid AND permissions.permission='survey' AND permissions.entity='survey' AND permissions.uid='".Yii::app()->var_19->var_20."') ",
            ));

            $var_17->compare('t.owner_id', Yii::app()->var_19->var_20, false);
            $var_17->compare('surveys.owner_id', Yii::app()->var_19->var_20, false, 'OR');
            $var_17->compare('permissions.read_p', '1', false, 'OR');
            $var_17->compare('t.gsid', '1', false, 'OR');  
            $var_2->mergeWith($var_17, 'AND');
        }

        $var_21 = new class_2($var_5, array(
            'criteria'=>$var_2,
        ));

        $var_21->setTotalItemCount(count($var_21->getData()));

        return $var_21;
    }

    public function fn_6()
    {
        
        if (empty($var_5->var_12)) {
            return "";
        } else {
            return $var_5->var_24->var_8;
        }
    }

    
    public function fn_7()
    {
        $var_25 = Survey::fn_13()->countByAttributes(array("gsid"=>$var_5->var_6));
        return $var_25 > 0;
    }

    
    public function fn_8()
    {
        $var_25 = class_0::fn_13()->countByAttributes(array("parent_id"=>$var_5->var_6));
        return $var_25 > 0;
    }


    public function fn_9($var_28=false)
    {
        $var_29 = array();
        $var_30 = $var_5;
        while (!empty($var_30->var_12)){
            $var_30 =  class_0::fn_13()->findByPk($var_30->var_12);
            $var_29[] = ($var_28)?$var_30->var_6:$var_30;
        }

        return $var_29;
    }



    
    public function fn_10()
    {
        $var_32     = App()->createUrl("admin/surveysgroups/sa/delete", array("id"=>$var_5->var_6));
        $var_34 = App()->createUrl("admin/surveysgroups/sa/update", array("id"=>$var_5->var_6));
        $var_35 = App()->createUrl("admin/surveysgroups/sa/surveysettings", array("id"=>$var_5->var_6));
        $var_36         = '';

        if (!$var_5->var_6 != 1) {
            $var_36 .= '<a class="btn btn-default" href="'.$var_34.'" role="button" data-toggle="tooltip" title="'.gT('Edit survey group').'"><i class="fa fa-edit" ></i><span class="sr-only">'.gT('Edit survey group').'</span></a>';
        }
        $var_36 .= '<a class="btn btn-default" href="'.$var_35.'" role="button" data-toggle="tooltip" title="'.gT('Survey settings').'"><i class="fa fa-cog" ></i><span class="sr-only">'.gT('Survey settings').'</span></a>';
        if (!$var_5->var_37) {
            $var_36 .= '<a class="btn btn-default" href="
        }

        return $button;
    }

    public static function getSurveyGroupsList()
    {
        $aSurveyList = [];
        $criteria = new CDbCriteria;

        if (!Permission::model()->hasGlobalPermission("surveys", 'read')) {
            $var_2->compare('t.owner_id', Yii::app()->var_19->var_20, false);
            $var_2->compare('t.gsid', '1', false, 'OR');  
        }

        $var_38 = self::fn_13()->findAll($var_2);

        foreach ($var_38 as $var_40) {
            $var_41[$var_40->var_6] = $var_40->var_8;
        }

        return $var_41;
    }

    public function fn_11()
    {
        $var_42 = class_0::fn_13()->findAll();
        return count($var_42) + 1;
    }

    public function fn_12($var_6 = null)
    {
        if (!empty($var_6)){
            $var_42 = class_0::fn_13()->findAll('gsid != :gsid', array(':gsid' => $var_6));
        } else {
            $var_42 = class_0::fn_13()->findAll();
        }
        $var_43 = [
            '' => gT('No parent menu')
        ];


        foreach ($var_42 as $var_44) {
            

            $var_45 = $var_44->fn_9(true);

            if ( ! in_array( $var_5->var_6, $var_45  ) ) {
                $var_43[''.($var_44->var_6).''] = '('.$var_44->var_7.') '.$var_44->var_8;
            }
        }
        
        return $var_43;
    }

    
    public static function fn_13($var_47 = var_48)
    {
        
        $var_46 = parent::fn_13($var_47);
        return $var_46;
    }
}
