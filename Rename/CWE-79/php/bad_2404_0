<?php





















$var_0 = '';
$var_1 = '';


 function fn_0( $var_2 ) {
	$var_3 = explode( "\n", $var_2 );
	$var_4 = count( $var_3 );
	for( $var_5 = 0;$var_5 < $var_4;$var_5++ ) {
		$var_6 = 0;
		$var_7 = '';

		$var_8 = utf8_substr( $var_3[$var_5], $var_6, 1 );
		$var_9 = 0;
		while(( $var_8 == ' ' ) || ( $var_8 == "\t" ) ) {
			if( $var_8 == ' ' ) {
				$var_9++;
			} else {
				$var_9 += 4;
			}

			

			$var_6++;
			$var_8 = utf8_substr( $var_3[$var_5], $var_6, 1 );
		}

		for( $var_10 = 0;$var_10 < $var_9;$var_10++ ) {
			$var_7 .= '&
		}

		$lines[$i] = $prefix . utf8_substr( $lines[$i], $count );
	}
	return implode( "\n", $lines );
}


function string_no_break( $p_string ) {
	if( strpos( $p_string, ' ' ) !== false ) {
		return '<span class="nowrap">' . $var_2 . "</span>";
	} var_11 {
		return $var_2;
	}
}


function fn_1( $var_2, $var_12 = 100 ) {
	$var_13 = '';
	$var_14 = preg_split( '/(<pre[^>]*>.*?<\/pre>)/is', $var_2, -1, var_15 );
	if( isset( $var_14[1] ) ) {
		foreach( $var_14 as $var_16 ) {
			if( preg_match( '/(<pre[^>]*>.*?<\/pre>)/is', $var_16 ) ) {
				$var_16 = preg_replace( "/<br[^>]*?>/", '', $var_16 );

				
				
				$var_16 = preg_replace( '/&
				if( ON == config_get( 'var_17' ) ) {
					$var_13 .= preg_replace( '/([^\n]{' . $var_12 . ',}?[\s]+)(?!<\/pre>)/', "$1\n", $var_16 );
				} else {
					$var_13 .= $var_16;
				}
			} var_11 {
				$var_13 .= nl2br( $var_16 );
			}
		}
		return $var_13;
	} else {
		return nl2br( $var_2 );
	}
}


function fn_2( $var_2 ) {
	$var_18 = event_signal( 'EVENT_DISPLAY_TEXT', $var_2, true );
	return $var_18;
}


function fn_3( $var_2 ) {
	$var_18 = event_signal( 'EVENT_DISPLAY_TEXT', $var_2, false );
	return $var_18;
}


function fn_4( $var_2 ) {
	$var_18 = event_signal( 'EVENT_DISPLAY_FORMATTED', $var_2, true );
	return $var_18;
}


function fn_5( $var_2 ) {
	$var_18 = event_signal( 'EVENT_DISPLAY_FORMATTED', $var_2, false );
	return $var_18;
}


function fn_6( $var_2 ) {
	
	$var_19 = trim( $var_2 );

	$var_19 = event_signal( 'EVENT_DISPLAY_RSS', $var_19 );

	
	return fn_35( $var_19 );
}


function fn_7( $var_2 ) {
	return fn_15( $var_2 );
}


function fn_8( $var_2 ) {
	return event_signal( 'EVENT_DISPLAY_EMAIL', $var_2 );
}




function fn_9( $var_2 ) {
	return fn_35( $var_2 );
}


function fn_10( $var_2 ) {
	return fn_35( $var_2 );
}


function fn_11( $var_2 ) {
	return rawurlencode( $var_2 );
}


function fn_12( $var_20, $var_21 = false ) {
	$var_22 = strip_tags( urldecode( $var_20 ) );

	$var_23 = rtrim( config_get( 'path' ), '/' );
	$var_24 = rtrim( config_get( 'short_path' ), '/' );

	$var_25 = '(?:
function string_process_cvs_link( $p_string, $p_include_anchor = true ) {
	$t_cvs_web = config_get( 'var_26' );

	if( $var_27 ) {
		$var_28 = '[CVS] <a href="' . $var_29 . '\\1?rev=\\4" target="_new">\\1</a>\\5';
	} else {
		$var_28 = '[CVS] ' . $var_29 . '\\1?rev=\\4\\5';
	}

	return preg_replace( '/cvs:([^\.\s:,\?!<]+(\.[^\.\s:,\?!<]+)*)(:)?(\d\.[\d\.]+)?([\W\s])?/i', $var_28, $var_2 );
}

$var_30 = array();


function fn_13( $var_2, $var_27 = true, $var_31 = true, $var_32 = false ) {
	global $var_30;

	$var_33 = config_get( 'bug_link_tag' );

	
	if( '' == $var_33 || $var_2 == '' ) {
		return $var_2;
	}

	if( !isset( $var_30[$var_27][$var_31][$var_32] ) ) {
		if( $var_27 ) {
			$var_30[$var_27][$var_31][$var_32] = create_function( '$p_array', '
										if ( bug_exists( (int)$p_array[2] ) && access_has_bug_level( VIEWER, (int)$p_array[2] ) ) {
											return $p_array[1] . string_get_bug_view_link( (int)$p_array[2], null, ' . ( $var_31 ? 'true' : 'false' ) . ', ' . ( $var_32 ? 'true' : 'false' ) . ');
										} else {
											return $p_array[0];
										}
										' );
		} else {
			$var_30[$var_27][$var_31][$var_32] = create_function( '$p_array', '
										
										
										
										
										
										return $p_array[1] . string_get_bug_view_url_with_fqdn( (int)$p_array[2], null );
										' );
		}
	}

	$var_2 = preg_replace_callback( '/(^|[^\w&])' . preg_quote( $var_33, '/' ) . '(\d+)\b/', $var_30[$var_27][$var_31][$var_32], $var_2 );
	return $var_2;
}

$var_34 = array();


function fn_14( $var_2, $var_27 = true, $var_31 = true, $var_32 = false ) {
	global $var_34;
	$var_33 = config_get( 'bugnote_link_tag' );

	
	if( '' == $var_33 || $var_2 == '' ) {
		return $var_2;
	}

	if( !isset( $var_34[$var_27][$var_31][$var_32] ) ) {
		if( $var_27 ) {
			$var_34[$var_27][$var_31][$var_32] =
				create_function( '$p_array',
					'
					if ( bugnote_exists( (int)$p_array[2] ) ) {
						$t_bug_id = bugnote_get_field( (int)$p_array[2], \'bug_id\' );
						if ( bug_exists( $t_bug_id ) ) {
							$g_project_override = bug_get_field( $t_bug_id, \'project_id\' );
							if (   access_compare_level(
										user_get_access_level( auth_get_current_user_id(),
										bug_get_field( $t_bug_id, \'project_id\' ) ),
										config_get( \'private_bugnote_threshold\' )
								   )
								|| bugnote_get_field( (int)$p_array[2], \'reporter_id\' ) == auth_get_current_user_id()
								|| bugnote_get_field( (int)$p_array[2], \'view_state\' ) == VS_PUBLIC
							) {
								$g_project_override = null;
								return $p_array[1] .
									string_get_bugnote_view_link(
										$t_bug_id,
										(int)$p_array[2],
										null,
										' . ( $var_31 ? 'true' : 'false' ) . ', ' . ( $var_32 ? 'true' : 'false' ) . '
									);
							}
							$g_project_override = null;
						}
					}
					return $p_array[0];
					'
				);
		} else {
			$var_34[$var_27][$var_31][$var_32] =
				create_function(
					'$p_array',
					'
					
					
					
					
					
					$t_bug_id = bugnote_get_field( (int)$p_array[2], \'bug_id\' );
					if ( bug_exists( $t_bug_id ) ) {
						return $p_array[1] . string_get_bugnote_view_url_with_fqdn( $t_bug_id, (int)$p_array[2], null );
					} else {
						return $p_array[0];
					}
					'
				);
		}
	}
	$var_2 = preg_replace_callback( '/(^|[^\w])' . preg_quote( $var_33, '/' ) . '(\d+)\b/', $var_34[$var_27][$var_31][$var_32], $var_2 );
	return $var_2;
}


function var_35( $var_2 ) {
	static $var_36 = null;
	static $var_37 = null;
	static $var_38 = '/(<a[^>]*>.*?<\/a>)/is';

	if( !config_get( 'html_make_links' ) ) {
		return $var_2;
	}

	$var_39 = false;
	if( ini_get_bool( 'magic_quotes_sybase' ) && function_exists( 'ini_set' ) ) {
		$var_39 = true;
		ini_set( 'magic_quotes_sybase', false );
	}

	
	if ( is_null( $var_36 ) ) {
		
		
		
		$var_40 = '(?:https?|s?ftp|file|irc[6s]?|ssh|telnet|nntp|git|svn(?:\+ssh)?|cvs):\/\/';

		
		$var_41 = '%[[:digit:]A-Fa-f]{2}';

		
		$var_42       = '-_.,!~*\';\/?%^\\\\:@&={\|}+$
		$t_url_chars             = "(?:${t_url_hex}|[${t_url_valid_chars}\(\)\[\]])";
		$t_url_chars2            = "(?:${t_url_hex}|[${t_url_valid_chars}])";
		$t_url_chars_in_brackets = "(?:${t_url_hex}|[${t_url_valid_chars}\(\)])";
		$t_url_chars_in_parens   = "(?:${t_url_hex}|[${t_url_valid_chars}\[\]])";

		$t_url_part1 = "${t_url_chars}";
		$t_url_part2 = "(?:\(${t_url_chars_in_parens}*\)|\[${t_url_chars_in_brackets}*\]|${t_url_chars2})";

		$s_url_regex = "/(${t_url_protocol}(${t_url_part1}*?${t_url_part2}+))/su";

		
		$s_email_regex = substr_replace( email_regex_simple(), '(?:var_43:)?', 1, 0 );
	}

	
	$t_function = create_function( '$var_44', '
		$var_45 = \'href="\' . rtrim( $p_match[1], \'.\' ) . \'"\';
		return "<a ${t_url_href}>${p_match[1]}</a> [<a ${t_url_href} target=\"_blank\">^</a>]";
	' );
	$var_2 = preg_replace_callback( $var_36, $var_46, $var_2 );
	if( $var_39 ) {
		ini_set( 'magic_quotes_sybase', true );
	}

	
	
	
	
	$var_47 = preg_split( $var_38, $var_2, null, var_15 );
	$var_2 = '';
	foreach( $var_47 as $var_16 ) {
		if( preg_match( $var_38, $var_16 ) ) {
			$var_2 .= $var_16;
		} else {
			$var_2 .= preg_replace( $var_37, '<a href="mailto:\0">\0</a>', $var_16 );
		}
	}

	return $var_2;
}


function fn_15( $var_2 ) {
	
	
	$var_2 = preg_replace( '/<a\s[^\>]*href="mailto:([^\"]+)"[^\>]*>[^\<]*<\/a>/si', '\1', $var_2 );

	
	$var_2 = preg_replace( '/<a\s[^\>]*href="([^\"]+)"[^\>]*>[^\<]*<\/a>/si', '\1', $var_2 );
	return $var_2;
}


function fn_16( $var_2, $var_48 = true ) {
	global $var_1, $var_0;
	$var_49 = '';
	if( is_blank(( $var_48 ? $var_0 : $var_1 ) ) ) {
		$var_50 = config_get( $var_48 ? 'html_valid_tags' : 'html_valid_tags_single_line' );

		if( var_51 === $var_50 || is_blank( $var_50 ) ) {
			return $var_2;
		}

		$var_49 = explode( ',', $var_50 );
		foreach( $var_49 as $var_52 => $var_53 ) {
			if( !is_blank( $var_53 ) ) {
				$var_49[$var_52] = trim( $var_53 );
			}
		}
		$var_49 = implode( '|', $var_49 );
		if( $var_48 ) {
			$var_0 = $var_49;
		} else {
			$var_1 = $var_49;
		}
	} else {
		$var_49 = ( $var_48 ? $var_0 : $var_1 );
	}

	$var_2 = preg_replace( '/&lt;(' . $var_49 . ')\s*&gt;/ui', '<\\1>', $var_2 );
	$var_2 = preg_replace( '/&lt;\/(' . $var_49 . ')\s*&gt;/ui', '</\\1>', $var_2 );
	$var_2 = preg_replace( '/&lt;(' . $var_49 . ')\s*\/&gt;/ui', '<\\1 />', $var_2 );

	return $var_2;
}


function fn_17( $var_54, $var_55 = null ) {
	if ( $var_54 == 'view' ) {
		return 'bug_view_page.php';
	}

	if ( $var_54 == 'update' ) {
		return 'bug_update_page.php';
	}

	if ( $var_54 == 'report' ) {
		return 'bug_report_page.php';
	}

	trigger_error( var_56, var_57 );
}


function fn_18( $var_58, $var_55 = null, $var_31 = true, $var_32 = false ) {
	if( bug_exists( $var_58 ) ) {
		$var_59 = '<a href="';
		if( $var_32 ) {
			$var_59 .= config_get_global( 'path' );
		} else {
			$var_59 .= config_get_global( 'short_path' );
		}
		$var_59 .= fn_20( $var_58, $var_55 ) . '"';
		if( $var_31 ) {
			$var_60 = fn_10( bug_get_field( $var_58, 'summary' ) );
			$var_61 = fn_10( get_enum_element( 'status', bug_get_field( $var_58, 'status' ) ) );
			$var_59 .= ' title="[' . $var_61 . '] ' . $var_60 . '"';

			$var_62 = bug_get_field( $var_58, 'status' ) >= config_get( 'bug_resolved_status_threshold' );
			if( $var_62 ) {
				$var_59 .= ' class="resolved"';
			}
		}
		$var_59 .= '>' . bug_format_id( $var_58 ) . '</a>';
	} else {
		$var_59 = bug_format_id( $var_58 );
	}

	return $var_59;
}


function fn_19( $var_58, $var_63, $var_55 = null, $var_31 = true, $var_32 = false ) {
	$var_64 = (int)$var_58;

	if( bug_exists( $var_64 ) && bugnote_exists( $var_63 ) ) {
		$var_59 = '<a href="';
		if( $var_32 ) {
			$var_59 .= config_get_global( 'path' );
		} else {
			$var_59 .= config_get_global( 'short_path' );
		}

		$var_59 .= fn_21( $var_58, $var_63, $var_55 ) . '"';
		if( $var_31 ) {
			$var_65 = fn_10( user_get_name( bugnote_get_field( $var_63, 'reporter_id' ) ) );
			$var_66 = fn_10( date( config_get( 'normal_date_format' ), ( bugnote_get_field( $var_63, 'last_modified' ) ) ) );
			$var_59 .= ' title="' . bug_format_id( $var_64 ) . ': [' . $var_66 . '] ' . $var_65 . '"';
		}

		$var_59 .= '>' . bug_format_id( $var_64 ) . ':' . bugnote_format_id( $var_63 ) . '</a>';
	} else {
		$var_59 = bugnote_format_id( $var_64 ) . ':' . bugnote_format_id( $var_63 );
	}

	return $var_59;
}


function fn_20( $var_58 ) {
	return 'view.php?id=' . $var_58;
}


function fn_21( $var_58, $var_63 ) {
	return 'view.php?id=' . $var_58 . '
}


function string_get_bugnote_view_url_with_fqdn( $p_bug_id, $p_bugnote_id, $p_user_id = null ) {
	return config_get( 'var_67' ) . fn_20( $var_58, $var_55 ) . '
}


function string_get_bug_view_url_with_fqdn( $p_bug_id, $p_user_id = null ) {
	return config_get( 'var_67' ) . fn_20( $var_58, $var_55 );
}


function fn_22( $var_55 = null ) {
	return fn_17( 'view', $var_55 );
}


function fn_23( $var_58, $var_55 = null ) {
	$var_60 = fn_10( bug_get_field( $var_58, 'summary' ) );
	return '<a href="' . helper_mantis_url( fn_24( $var_58, $var_55 ) ) . '" title="' . $var_60 . '">' . bug_format_id( $var_58 ) . '</a>';
}


function fn_24( $var_58, $var_55 = null ) {
	return fn_25( $var_55 ) . '?bug_id=' . $var_58;
}


function fn_25( $var_55 = null ) {
	return fn_17( 'update', $var_55 );
}


function fn_26( $var_55 = null ) {
	return '<a href="' . helper_mantis_url( fn_27( $var_55 ) ) . '">' . lang_get( 'report_bug_link' ) . '</a>';
}


function fn_27( $var_55 = null ) {
	return fn_28( $var_55 );
}


function fn_28( $var_55 = null ) {
	return fn_17( 'report', $var_55 );
}


function fn_29( $var_55, $var_68 ) {
	$var_23 = config_get( 'path' );
	return $var_23 . "verify.php?id=" . fn_11( $var_55 ) . "&confirm_hash=" . fn_11( $var_68 );
}


function fn_30( $var_69 ) {
	return date( config_get( 'complete_date_format' ), $var_69 );
}


function fn_31( $var_2, $var_70 = null ) {
	if( $var_70 === null ) {
		$var_71 = config_get( 'max_dropdown_length' );
	} else {
		$var_71 = (int) $var_70;
	}

	if( ( $var_71 > 0 ) && ( utf8_strlen( $var_2 ) > $var_71 ) ) {
		$var_25 = '/([\s|.|,|\-|_|\/|\?]+)/';
		$var_72 = preg_split( $var_25, $var_2, -1, var_15 );

		$var_19 = '';
		$var_73 = $var_72[count( $var_72 ) - 1];
		$var_74 = strlen( $var_73 );

		if( count( $var_72 ) == 1 ) {
			$var_19 .= utf8_substr( $var_73, 0, $var_71 - 3 );
			$var_19 .= '...';
		} else {
			foreach( $var_72 as $var_75 ) {
				if(( utf8_strlen( $var_19 ) + utf8_strlen( $var_75 ) + $var_74 + 3 <= $var_71 ) || ( strpos( $var_75, '.,-/?' ) > 0 ) ) {
					$var_19 .= $var_75;
				} else {
					break;
				}
			}
			$var_19 .= '...' . $var_73;
		}
		return $var_19;
	} else {
		return $var_2;
	}
}


function fn_32( $var_2 ) {
	return preg_replace( '/ +/', ' ', trim( $var_2 ) );
}


function fn_33( $var_2 ) {
	$var_76 = array(
		'attachment_count' => 'attachments',
		'category_id' => 'category',
		'handler_id' => 'assigned_to',
		'id' => 'email_bug',
		'last_updated' => 'updated',
		'project_id' => 'email_project',
		'reporter_id' => 'reporter',
		'view_state' => 'view_status',
	);

	$var_19 = $var_2;
	if( isset( $var_76[$var_2] ) ) {
		$var_19 = $var_76[$var_2];
	}
	return lang_get_defaulted( $var_19 );
}


function fn_34( $var_2 ) {
	return htmlentities( $var_2, var_77, 'utf-8' );
}


function fn_35( $var_2 ) {
	
	
	
	return preg_replace( "/&amp;(
}


function string_prepare_header( $var_2 ) {
	$var_19= explode( "\var_78", $var_2, 2 );
	$var_19= explode( "\r", $var_19[0], 2 );
	return $var_19[0];
}


function fn_36( $var_2 ) {
	if(( strstr( $var_2, '<' ) !== false ) || ( strstr( $var_2, '>' ) !== false ) ) {
		return true;
	}

	return false;
}
