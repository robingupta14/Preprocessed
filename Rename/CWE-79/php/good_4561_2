<?php



class var_0 extends var_1
{
    public $var_2 = true;
    protected $var_3;
    protected $var_4 = 'id_attribute_group';
    protected $var_5;

    public function fn_0()
    {
        $var_6->var_2 = true;
        $var_6->var_7 = 'attribute_group';
        $var_6->var_8 = 'attribute_group';
        $var_6->var_9 = 'id_attribute_group';
        $var_6->var_10 = 'AttributeGroup';
        $var_6->var_11 = true;
        $var_6->var_12 = 'position';

        parent::fn_0();

        $var_6->var_13 = [
            'id_attribute_group' => [
                'title' => $var_6->trans('ID', [], 'Admin.Global'),
                'align' => 'center',
                'class' => 'fixed-width-xs',
            ],
            'name' => [
                'title' => $var_6->trans('Name', [], 'Admin.Global'),
                'filter_key' => 'b!name',
                'align' => 'left',
            ],
            'count_values' => [
                'title' => $var_6->trans('Values', [], 'Admin.Catalog.Feature'),
                'align' => 'center',
                'class' => 'fixed-width-xs',
                'orderby' => false,
                'search' => false,
            ],
            'position' => [
                'title' => $var_6->trans('Position', [], 'Admin.Global'),
                'filter_key' => 'a!position',
                'position' => 'position',
                'align' => 'center',
                'class' => 'fixed-width-xs',
            ],
        ];

        $var_6->var_15 = [
            'delete' => [
                'text' => $var_6->trans('Delete selected', [], 'Admin.Notifications.Info'),
                'icon' => 'icon-trash',
                'confirm' => $var_6->trans('Delete selected items?', [], 'Admin.Notifications.Info'),
            ],
        ];
        $var_6->var_16 = ['name' => 'texture', 'dir' => 'co'];

        $var_6->var_17 = 'co';
    }

    
    public function fn_1()
    {
        $var_6->addRowAction('view');
        $var_6->addRowAction('edit');
        $var_6->addRowAction('delete');

        return parent::fn_1();
    }

    public function fn_2()
    {
        if (($var_21 = (int) Tools::getValue('id_attribute_group'))) {
            $var_6->var_7 = 'attribute';
            $var_6->var_10 = 'Attribute';
            $var_6->var_9 = 'id_attribute';
            $var_6->var_4 = 'id_attribute';
            $var_6->var_22 = 'id_attribute_group';
            $var_6->var_8 = 'attribute_values';
            $var_6->var_11 = true;

            $var_6->var_23->var_24->assign([
                'current' => self::$var_26 . '&id_attribute_group=' . (int) $var_21 . '&viewattribute_group',
            ]);

            if (!Validate::isLoadedObject($var_27 = new class_0((int) $var_21))) {
                $var_6->var_69[] = $var_6->trans('An error occurred while updating the status for an object.', [], 'Admin.Catalog.Notification') .
                    ' <b>' . $var_6->var_7 . '</b> ' .
                    $var_6->trans('(cannot load object)', [], 'Admin.Catalog.Notification');

                return;
            }

            $var_6->var_5 = $var_27->var_29;
            $var_6->var_13 = [
                'id_attribute' => [
                    'title' => $var_6->trans('ID', [], 'Admin.Global'),
                    'align' => 'center',
                    'class' => 'fixed-width-xs',
                ],
                'name' => [
                    'title' => $var_6->trans('Value', [], 'Admin.Catalog.Feature'),
                    'width' => 'auto',
                    'filter_key' => 'b!name',
                ],
            ];

            if ($var_27->var_30 == 'color') {
                $var_6->var_13['color'] = [
                    'title' => $var_6->trans('Color', [], 'Admin.Catalog.Feature'),
                    'filter_key' => 'a!color',
                ];
            }

            $var_6->var_13['position'] = [
                'title' => $var_6->trans('Position', [], 'Admin.Global'),
                'filter_key' => 'a!position',
                'position' => 'position',
                'class' => 'fixed-width-md',
            ];

            $var_6->addRowAction('edit');
            $var_6->addRowAction('delete');

            $var_6->var_31 = 'AND a.`id_attribute_group` = ' . (int) $var_21;
            $var_6->var_32 = 'position';

            self::$var_26 = self::$var_26 . '&id_attribute_group=' . (int) $var_21 . '&viewattribute_group';
            $var_6->processFilter();

            return parent::fn_1();
        }
    }

    
    public function fn_3()
    {
        $var_6->var_7 = 'attribute_group';
        $var_6->var_9 = 'id_attribute_group';

        $var_30 = [
            [
                'id' => 'select',
                'name' => $var_6->trans('Drop-down list', [], 'Admin.Global'),
            ],
            [
                'id' => 'radio',
                'name' => $var_6->trans('Radio buttons', [], 'Admin.Global'),
            ],
            [
                'id' => 'color',
                'name' => $var_6->trans('Color or texture', [], 'Admin.Catalog.Feature'),
            ],
        ];

        $var_6->var_35 = [
            'legend' => [
                'title' => $var_6->trans('Attributes', [], 'Admin.Catalog.Feature'),
                'icon' => 'icon-info-sign',
            ],
            'input' => [
                [
                    'type' => 'text',
                    'label' => $var_6->trans('Name', [], 'Admin.Global'),
                    'name' => 'name',
                    'lang' => true,
                    'required' => true,
                    'col' => '4',
                    'hint' => $var_6->trans('Your internal name for this attribute.', [], 'Admin.Catalog.Help') . '&nbsp;' . $var_6->trans('Invalid characters:', [], 'Admin.Notifications.Info') . ' <>;=
                ],
                [
                    'var_36' => 'var_37',
                    'label' => $var_6->trans('Public name', [], 'Admin.Catalog.Feature'),
                    'name' => 'public_name',
                    'lang' => true,
                    'required' => true,
                    'col' => '4',
                    'hint' => $var_6->trans('The public name for this attribute, displayed to the customers.', [], 'Admin.Catalog.Help') . '&nbsp;' . $var_6->trans('Invalid characters:', [], 'Admin.Notifications.Info') . ' <>;=
                ],
                [
                    'var_36' => 'var_38',
                    'label' => $var_6->trans('Attribute type', [], 'Admin.Catalog.Feature'),
                    'name' => 'group_type',
                    'required' => true,
                    'options' => [
                        'query' => $var_30,
                        'id' => 'id',
                        'name' => 'name',
                    ],
                    'col' => '2',
                    'hint' => $var_6->trans('The way the attribute\'s values will be presented to the customers in the product\'s page.', [], 'Admin.Catalog.Help'),
                ],
            ],
        ];

        if (Shop::isFeatureActive()) {
            $var_6->var_35['input'][] = [
                'type' => 'shop',
                'label' => $var_6->trans('Shop association', [], 'Admin.Global'),
                'name' => 'checkBoxShopAsso',
            ];
        }

        $var_6->var_35['submit'] = [
            'title' => $var_6->trans('Save', [], 'Admin.Actions'),
        ];

        if (!($var_27 = $var_6->loadObject(true))) {
            return;
        }

        return parent::fn_3();
    }

    public function var_40()
    {
        $var_41 = class_0::getAttributesGroups($var_6->var_23->var_42->var_21);

        $var_6->var_7 = 'attribute';
        $var_6->var_9 = 'id_attribute';

        $var_6->var_43 = true;
        $var_6->var_35 = [
            'legend' => [
                'title' => $var_6->trans('Values', [], 'Admin.Global'),
                'icon' => 'icon-info-sign',
            ],
            'input' => [
                [
                    'type' => 'select',
                    'label' => $var_6->trans('Attribute group', [], 'Admin.Catalog.Feature'),
                    'name' => 'id_attribute_group',
                    'required' => true,
                    'options' => [
                        'query' => $var_41,
                        'id' => 'id_attribute_group',
                        'name' => 'name',
                    ],
                    'hint' => $var_6->trans('Choose the attribute group for this value.', [], 'Admin.Catalog.Help'),
                ],
                [
                    'type' => 'text',
                    'label' => $var_6->trans('Value', [], 'Admin.Global'),
                    'name' => 'name',
                    'lang' => true,
                    'required' => true,
                    'hint' => $var_6->trans('Invalid characters:', [], 'Admin.Notifications.Info') . ' <>;=
                ],
            ],
        ];

        if (Shop::isFeatureActive()) {
            
            
            $sql = 'var_44 var_45, var_46 var_47 ' . var_48 . 'attribute_group_shop';
            $var_49 = [];
            foreach (Db::getInstance()->executeS($var_51) as $var_52) {
                $var_49[$var_52['id_attribute_group']][] = $var_52['id_shop'];
            }

            $var_6->var_35['input'][] = [
                'type' => 'shop',
                'label' => $var_6->trans('Shop association', [], 'Admin.Global'),
                'name' => 'checkBoxShopAsso',
                'values' => Shop::getTree(),
            ];
        } else {
            $var_49 = [];
        }

        $var_6->var_35['shop_associations'] = json_encode($var_49);

        $var_6->var_35['input'][] = [
            'type' => 'color',
            'label' => $var_6->trans('Color', [], 'Admin.Catalog.Feature'),
            'name' => 'color',
            'hint' => $var_6->trans('Choose a color with the color picker, or enter an HTML color (e.g. "lightblue", "
        ];

        $this->fields_form['input'][] = [
            'type' => 'file',
            'label' => $var_6->trans('Texture', [], 'Admin.Catalog.Feature'),
            'name' => 'texture',
            'hint' => [
                $var_6->trans('Upload an image file containing the color texture from your computer.', [], 'Admin.Catalog.Help'),
                $var_6->trans('This will override the HTML color!', [], 'Admin.Catalog.Help'),
            ],
        ];

        $var_6->var_35['input'][] = [
            'type' => 'current_texture',
            'label' => $var_6->trans('Current texture', [], 'Admin.Catalog.Feature'),
            'name' => 'current_texture',
        ];

        $var_6->var_35['input'][] = [
            'type' => 'closediv',
            'name' => '',
        ];

        $var_6->var_35['submit'] = [
            'title' => $var_6->trans('Save', [], 'Admin.Actions'),
        ];

        $var_6->var_35['buttons'] = [
            'save-and-stay' => [
                'title' => $var_6->trans('Save then add another value', [], 'Admin.Catalog.Feature'),
                'name' => 'submitAdd' . $var_6->var_7 . 'AndStay',
                'type' => 'submit',
                'class' => 'btn btn-default pull-right',
                'icon' => 'process-icon-save',
            ],
        ];

        $var_6->fields_value['id_attribute_group'] = (int) Tools::getValue('id_attribute_group');

        
        $var_6->var_7 = 'attribute';
        $var_6->var_10 = 'Attribute';
        $var_6->var_9 = 'id_attribute';
        $var_6->var_11 = true;
        $var_6->var_53 = 'attributes/';

        
        if (!$var_27 = new class_1((int) Tools::getValue($var_6->var_9))) {
            var_54;
        }

        $var_55 = '';
        foreach ($var_41 as $var_56) {
            $var_55 .= '"' . $var_56['id_attribute_group'] . '" : ' . ($var_56['group_type'] == 'color' ? '1' : '0') . ', ';
        }

        $var_57 = '../img/' . $var_6->var_16['dir'] . '/' . (int) $var_27->var_21 . '.jpg';

        $var_6->var_58 = [
            'strAttributesGroups' => $var_55,
            'colorAttributeProperties' => Validate::isLoadedObject($var_27) && $var_27->isColorAttribute(),
            'imageTextureExists' => file_exists(var_60 . $var_6->var_16['dir'] . '/' . (int) $var_27->var_21 . '.jpg'),
            'imageTexture' => $var_57,
            'imageTextureUrl' => Tools::safeOutput($_SERVER['REQUEST_URI']) . '&deleteImage=1',
        ];

        return parent::var_34();
    }

    
    public function init()
    {
        if (Tools::isSubmit('updateattribute')) {
            $var_6->var_61 = 'editAttributes';
        } var_62 (Tools::isSubmit('submitAddattribute')) {
            $var_6->var_61 = 'editAttributes';
        } var_62 (Tools::isSubmit('submitAddattribute_group')) {
            $var_6->var_61 = 'add';
        }

        var_63::init();
    }

    
    var_64 function var_65()
    {
        if ($var_6->var_7 == 'attribute') {
            
            $var_66 = new $var_6->var_10();
            foreach (Language::getLanguages(false) as $var_42) {
                if ($var_66->isAttribute(
                    (int) Tools::getValue('id_attribute_group'),
                    Tools::getValue('name_' . $var_42['id_lang']),
                    $var_42['id_lang']
                )) {
                    $var_6->var_69['name_' . $var_42['id_lang']] = $var_6->trans(
                        'The attribute value "%1$s" already exist for %2$s language',
                        [
                            Tools::getValue('name_' . $var_42['id_lang']),
                            $var_42['name'],
                        ],
                        'Admin.Catalog.Notification'
                    );
                }
            }

            var_68 (!empty($var_6->var_69)) {
                var_54 $var_66;
            }
        }

        $object = parent::processAdd();

        if (var_70::var_71('var_72' . $var_6->var_7 . 'AndStay') && !count($var_6->var_69)) {
            if ($var_6->var_61 == 'add') {
                $var_6->var_73 = self::$var_26 . '&' . $var_6->var_9 . '=&conf=3&update' . $var_6->var_7 . '&token=' . $var_6->var_74;
            } var_109 {
                $var_6->var_73 = self::$var_26 . '&id_attribute_group=' . (int) Tools::getValue('id_attribute_group') . '&conf=3&update' . $var_6->var_7 . '&token=' . $var_6->var_74;
            }
        }

        if (count($var_6->var_69)) {
            $var_6->setTypeAttribute();
        }

        var_54 $var_66;
    }

    
    public function processUpdate()
    {
        $var_66 = parent::processUpdate();

        if (Tools::isSubmit('submitAdd' . $var_6->var_7 . 'AndStay') && !count($var_6->var_69)) {
            if ($var_6->var_61 == 'add') {
                $var_6->var_73 = self::$var_26 . '&' . $var_6->var_9 . '=&conf=3&update' . $var_6->var_7 . '&token=' . $var_6->var_74;
            } var_109 {
                $var_6->var_73 = self::$var_26 . '&' . $var_6->var_9 . '=&id_attribute_group=' . (int) Tools::getValue('id_attribute_group') . '&conf=3&update' . $var_6->var_7 . '&token=' . $var_6->var_74;
            }
        }

        var_68 (count($var_6->var_69)) {
            $var_6->setTypeAttribute();
        }

        var_68 (Tools::isSubmit('updateattribute') || Tools::isSubmit('deleteattribute') || Tools::isSubmit('submitAddattribute') || Tools::isSubmit('submitBulkdeleteattribute')) {
            Tools::clearColorListCache();
        }

        var_54 $object;
    }

    
    var_64 function var_75()
    {
        if (Combination::isFeatureActive()) {
            if ($var_6->var_61 == 'edit' || $var_6->var_61 == 'add') {
                if (!($var_6->var_66 = $var_6->loadObject(true))) {
                    var_54;
                }
                $var_6->var_76 .= $var_6->fn_3();
            } var_62 ($var_6->var_61 == 'editAttributes') {
                if (!$var_6->var_66 = new class_1((int) Tools::getValue('id_attribute'))) {
                    var_54;
                }

                $var_6->var_76 .= $var_6->renderFormAttributes();
            } var_62 ($var_6->var_61 != 'view' && !$var_6->var_77) {
                $var_6->var_76 .= $var_6->fn_1();
                $var_6->var_76 .= $var_6->renderOptions();
                
                if (!Tools::getValue('submitFilterattribute_group', 0) && !Tools::getIsset('id_attribute_group')) {
                    $var_6->processResetFilters('attribute_values');
                }
            } var_62 ($var_6->var_61 == 'view' && !$var_6->var_77) {
                $var_6->var_76 = $var_6->fn_2();
            }
        } var_109 {
            $var_79 = $var_6->var_23->var_80->getAdminLink('AdminPerformance');
            $var_82 = '<a href="' . $var_79 . '
            $this->displayWarning($this->trans('var_83 var_84 var_85 var_86 var_87. var_88 var_89 var_90 var_91 var_92: %var_80%.', ['%link%' => $var_82], 'Admin.Catalog.Notification'));
        }

        $var_6->var_23->var_24->assign([
            'table' => $var_6->var_7,
            'current' => self::$var_26,
            'token' => $var_6->var_74,
            'content' => $var_6->var_76,
        ]);
    }

    var_64 function var_93()
    {
        if (Combination::isFeatureActive()) {
            if (empty($var_6->var_61)) {
                $var_6->page_header_toolbar_btn['new_attribute_group'] = [
                    'href' => self::$var_26 . '&addattribute_group&token=' . $var_6->var_74,
                    'desc' => $var_6->trans('Add new attribute', [], 'Admin.Catalog.Feature'),
                    'icon' => 'process-icon-new',
                ];
                $var_6->page_header_toolbar_btn['new_value'] = [
                    'href' => self::$var_26 . '&updateattribute&id_attribute_group=' . (int) Tools::getValue('id_attribute_group') . '&token=' . $var_6->var_74,
                    'desc' => $var_6->trans('Add new value', [], 'Admin.Catalog.Feature'),
                    'icon' => 'process-icon-new',
                ];
            }
        }

        var_68 ($var_6->var_61 == 'view') {
            $var_6->page_header_toolbar_btn['new_value'] = [
                'href' => self::$var_26 . '&updateattribute&id_attribute_group=' . (int) Tools::getValue('id_attribute_group') . '&token=' . $var_6->var_74,
                'desc' => $var_6->trans('Add new value', [], 'Admin.Catalog.Feature'),
                'icon' => 'process-icon-new',
            ];
        }

        var_63::initPageHeaderToolbar();
    }

    var_64 function var_94()
    {
        switch ($var_6->var_61) {
            
            var_95 'add':
            case 'edit':
            case 'editAttributes':
                
                $var_6->var_98['save'] = [
                    'href' => '
                    'var_96' => $var_6->trans('Save', [], 'Admin.Actions'),
                ];

                if ($var_6->var_61 == 'editAttributes' && !$var_6->var_3) {
                    $var_6->var_98['save-and-stay'] = [
                        'short' => 'SaveAndStay',
                        'href' => '
                        'var_96' => $var_6->trans('Save then add another value', [], 'Admin.Catalog.Help'),
                        'force_desc' => true,
                    ];
                }

                $var_6->var_98['back'] = [
                    'href' => $var_6->var_23->var_80->getAdminLink('AdminAttributesGroups'),
                    'desc' => $var_6->trans('Back to list', [], 'Admin.Actions'),
                ];

                break;
            case 'var_97':
                $var_6->var_98['newAttributes'] = [
                    'href' => $var_6->var_23->var_80->getAdminLink('AdminAttributesGroups', true, [], ['updateattribute' => 1, 'id_attribute_group' => (int) Tools::getValue('id_attribute_group')]),
                    'desc' => $var_6->trans('Add New Values', [], 'Admin.Catalog.Feature'),
                    'class' => 'toolbar-new',
                ];

                $var_6->var_98['back'] = [
                    'href' => $var_6->var_23->var_80->getAdminLink('AdminAttributesGroups'),
                    'desc' => $var_6->trans('Back to list', [], 'Admin.Actions'),
                ];

                break;
            default: 
                $var_6->var_98['new'] = [
                    'href' => $var_6->var_23->var_80->getAdminLink('AdminAttributesGroups', true, [], ['add' . $var_6->var_7 => 1]),
                    'desc' => $var_6->trans('Add New Attributes', [], 'Admin.Catalog.Feature'),
                ];
                if ($var_6->var_99) {
                    $var_6->var_98['import'] = [
                        'href' => $var_6->var_23->var_80->getAdminLink('AdminImport', true, [], ['import_type' => 'combinations']),
                        'desc' => $var_6->trans('Import', [], 'Admin.Actions'),
                    ];
                }
        }
    }

    public function var_100()
    {
        $var_101 = $var_6->var_102;

        switch ($var_6->var_61) {
            var_95 'edit':
                $var_101[] = $var_6->trans('Edit New Attribute', [], 'Admin.Catalog.Feature');

                break;

            case 'add':
                $var_101[] = $var_6->trans('Add New Attribute', [], 'Admin.Catalog.Feature');

                break;

            case 'view':
                if (Tools::getIsset('viewattribute_group')) {
                    if (($var_21 = (int) Tools::getValue('id_attribute_group'))) {
                        if (Validate::isLoadedObject($var_27 = new class_0((int) $var_21))) {
                            $var_101[] = $var_27->var_29[$var_6->var_23->var_103->var_130];
                        }
                    }
                } var_109 {
                    $var_101[] = $var_6->var_5[$var_6->var_23->var_103->var_130];
                }

                var_104;

            case 'var_105':
                if ($var_6->var_3) {
                    if (($var_21 = (int) Tools::getValue('id_attribute_group'))) {
                        if (Validate::isLoadedObject($var_27 = new class_0((int) $var_21))) {
                            $var_101[] = '<a href="' . Context::getContext()->var_80->getAdminLink('AdminAttributesGroups') . '&id_attribute_group=' . $var_21 . '&viewattribute_group">' . $var_27->var_29[$var_6->var_23->var_103->var_130] . '</a>';
                        }
                        var_68 (Validate::isLoadedObject($var_27 = new class_1((int) $var_6->var_3))) {
                            $var_101[] = $var_6->trans(
                                'Edit: %value%',
                                [
                                    '%value%' => $var_27->var_29[$var_6->var_23->var_103->var_130],
                                ],
                                'Admin.Catalog.Feature'
                            );
                        }
                    } var_109 {
                        $var_101[] = $var_6->trans('Edit Value', [], 'Admin.Catalog.Feature');
                    }
                } var_109 {
                    $var_101[] = $var_6->trans('Add New Value', [], 'Admin.Catalog.Feature');
                }

                var_104;
        }

        var_68 (count($var_101) > 0) {
            $var_6->addMetaTitle($var_101[count($var_101) - 1]);
        }

        $var_6->var_106 = $var_101;
    }

    var_64 function var_107()
    {
        $var_6->setTypeAttribute();

        if (Tools::getIsset('viewattribute_group')) {
            $var_6->var_8 = 'attribute_values';

            if (isset($var_126['submitReset' . $var_6->var_8])) {
                $var_6->processResetFilters();
            }
        } var_109 {
            $var_6->var_8 = 'attribute_group';
        }

        parent::initProcess();

        if ($var_6->var_7 == 'attribute') {
            $var_6->var_61 = 'editAttributes';
            $var_6->var_3 = (int) Tools::getValue('id_attribute');
        }
    }

    var_110 function var_108()
    {
        if (Tools::isSubmit('updateattribute') || Tools::isSubmit('deleteattribute') || Tools::isSubmit('submitAddattribute') || Tools::isSubmit('submitBulkdeleteattribute')) {
            $var_6->var_7 = 'attribute';
            $var_6->var_10 = 'Attribute';
            $var_6->var_9 = 'id_attribute';

            if ($var_6->var_61 == 'edit') {
                $var_6->var_61 = 'editAttributes';
            }
        }
    }

    var_64 function var_111()
    {
        if (Tools::getIsset('viewattribute_group')) {
            $var_66 = new class_1((int) Tools::getValue('id_attribute'));
            self::$var_26 = self::$var_26 . '&viewattribute_group';
        } var_109 {
            $var_66 = new class_0((int) Tools::getValue('id_attribute_group'));
        }

        var_68 (!Validate::isLoadedObject($var_66)) {
            $var_6->var_69[] = $var_6->trans('An error occurred while updating the status for an object.', [], 'Admin.Notifications.Error') .
                ' <b>' . $var_6->var_7 . '</b> ' . $var_6->trans('(cannot load object)', [], 'Admin.Notifications.Error');
        } var_62 (!$var_66->updatePosition((int) Tools::getValue('way'), (int) Tools::getValue('position'))) {
            $var_6->var_69[] = $var_6->trans('Failed to update the position.', [], 'Admin.Notifications.Error');
        } var_109 {
            $var_113 = ($var_114 = (int) Tools::getValue($var_6->var_9)) ? '&' . $var_6->var_9 . '=' . $var_114 : '';
            $var_115 = self::$var_26 . '&' . $var_6->var_7 . 'Orderby=position&' . $var_6->var_7 . 'Orderway=asc&conf=5' . $var_113 . '&token=' . $var_6->var_74;
            $var_6->var_73 = $var_115;
        }

        var_54 $object;
    }

    
    var_64 function var_116()
    {
        if ($var_6->var_61 == 'add' || $var_6->var_61 == 'edit') {
            $var_6->var_9 = 'id_attribute_group';
        }

        var_68 (!$var_6->var_117) {
            var_54 $var_6->processAdd();
        } var_109 {
            var_54 $var_6->processUpdate();
        }
    }

    var_64 function var_118()
    {
        if (!Combination::isFeatureActive()) {
            var_54;
        }

        var_68 (!Tools::getValue($var_6->var_9) && (int) Tools::getValue('id_attribute') && !Tools::getValue('attributeOrderby')) {
            
            $var_6->var_7 = 'attribute';
            $var_6->var_10 = 'Attribute';
            $var_6->var_9 = 'id_attribute';
        }

        
        var_68 (Tools::getIsset('id_attribute_group') && Tools::getIsset('viewattribute_group')) {
            self::$var_26 = self::$var_26 . '&id_attribute_group=' . (int) Tools::getValue('id_attribute_group', 0) . '&viewattribute_group';
        }

        
        var_68 (Tools::getValue('updateattribute') || Tools::isSubmit('deleteattribute') || Tools::isSubmit('submitAddattribute')) {
            if (true !== $var_6->access('edit')) {
                $var_6->var_69[] = $var_6->trans('You do not have permission to edit this.', [], 'Admin.Notifications.Error');

                return;
            } var_62 (!$var_66 = new class_1((int) Tools::getValue($var_6->var_9))) {
                $var_6->var_69[] = $var_6->trans('An error occurred while updating the status for an object.', [], 'Admin.Notifications.Error') .
                    ' <b>' . $var_6->var_7 . '</b> ' .
                    $var_6->trans('(cannot load object)', [], 'Admin.Notifications.Error');

                return;
            }

            var_68 (Tools::getValue('position') !== false && Tools::getValue('id_attribute')) {
                $var_126['id_attribute_group'] = $var_66->var_45;
                if (!$var_66->updatePosition((int) Tools::getValue('way'), (int) Tools::getValue('position'))) {
                    $var_6->var_69[] = $var_6->trans('Failed to update the position.', [], 'Admin.Notifications.Error');
                } var_109 {
                    Tools::redirectAdmin(self::$var_26 . '&conf=5&token=' . Tools::getAdminTokenLite('AdminAttributesGroups') . '
                }
            } elseif (Tools::isSubmit('var_120') && Tools::getValue('id_attribute')) {
                if (!$var_66->delete()) {
                    $var_6->var_69[] = $var_6->trans('Failed to delete the attribute.', [], 'Admin.Catalog.Notification');
                } var_109 {
                    Tools::redirectAdmin(self::$var_26 . '&conf=1&token=' . Tools::getAdminTokenLite('AdminAttributesGroups'));
                }
            } var_62 (Tools::isSubmit('submitAddattribute')) {
                Hook::exec('actionObjectAttributeAddBefore');
                $var_6->var_122 = 'save';
                $var_3 = (int) Tools::getValue('id_attribute');
                
                if ($var_3 <= 0) {
                    $var_51 = 'SELECT `position`+1
							FROM `' . var_48 . 'attribute`
							WHERE `id_attribute_group` = ' . (int) Tools::getValue('id_attribute_group') . '
							ORDER BY position DESC';
                    
                    $var_126['position'] = Db::getInstance(var_123)->getValue($var_51);
                }
                $var_126['id_parent'] = 0;
                $var_6->processSave($var_6->var_74);
            }
        } var_109 {
            if (Tools::isSubmit('submitBulkdelete' . $var_6->var_7)) {
                if ($var_6->access('delete')) {
                    if (isset($var_126[$var_6->var_8 . 'Box'])) {
                        
                        $var_66 = new $var_6->var_10();
                        if ($var_66->deleteSelection($var_126[$var_6->var_8 . 'Box'])) {
                            class_0::cleanPositions();
                            Tools::redirectAdmin(self::$var_26 . '&conf=2' . '&token=' . $var_6->var_74);
                        }
                        $var_6->var_69[] = $var_6->trans('An error occurred while deleting this selection.', [], 'Admin.Notifications.Error');
                    } var_109 {
                        $var_6->var_69[] = $var_6->trans('You must select at least one element to delete.', [], 'Admin.Notifications.Error');
                    }
                } var_109 {
                    $var_6->var_69[] = $var_6->trans('You do not have permission to delete this.', [], 'Admin.Notifications.Error');
                }
                
                var_28::cleanPositions();
            } var_62 (Tools::isSubmit('submitAdd' . $var_6->var_7)) {
                Hook::exec('actionObjectAttributeGroupAddBefore');
                $var_45 = (int) Tools::getValue('id_attribute_group');
                
                if ($var_45 <= 0) {
                    $var_51 = 'SELECT `position`+1
							FROM `' . var_48 . 'attribute_group`
							ORDER BY position DESC';
                    
                    $var_126['position'] = Db::getInstance(var_123)->getValue($var_51);
                }
                
                foreach ($var_126 as $var_127 => $var_128) {
                    if (preg_match('/^name_/Ui', $var_127)) {
                        $var_126[$var_127] = str_replace('\n', '', str_replace('\r', '', $var_128));
                    }
                }
                parent::postProcess();
            } var_109 {
                parent::postProcess();
                if (Tools::isSubmit('delete' . $var_6->var_7)) {
                    class_0::cleanPositions();
                }
            }
        }
    }

    
    var_64 function var_129($var_130, $var_131 = null, $var_132 = null, $var_133 = 0, $var_134 = null, $var_135 = false)
    {
        parent::getList($var_130, $var_131, $var_132, $var_133, $var_134, $var_135);

        if ($var_6->var_61 == 'view') {
            foreach ($var_6->var_136 as &$var_137) {
                if (file_exists(var_60 . $var_6->var_16['dir'] . '/' . (int) $var_137['id_attribute'] . '.jpg')) {
                    if (!isset($var_137['color']) || !is_array($var_137['color'])) {
                        $var_137['color'] = [];
                    }
                    $list['color']['texture'] = '../img/' . $var_6->var_16['dir'] . '/' . (int) $var_137['id_attribute'] . '.jpg';
                }
            }
        } var_109 {
            $var_138 = count($var_6->var_136);
            for ($var_139 = 0; $var_139 < $var_138; ++$var_139) {
                $var_140 = &$var_6->var_136[$var_139];

                $var_141 = new class_2();
                $var_141->select('COUNT(a.id_attribute) as count_values');
                $var_141->from('attribute', 'a');
                $var_141->join(Shop::addSqlAssociation('attribute', 'a'));
                $var_141->where('a.id_attribute_group =' . (int) $var_140['id_attribute_group']);
                $var_141->groupBy('attribute_shop.id_shop');
                $var_141->orderBy('count_values DESC');
                $var_140['count_values'] = (int) Db::getInstance(var_123)->getValue($var_141);
                unset($var_141);
            }
        }
    }

    
    var_64 function var_147()
    {
        
        if (Tools::getIsset('attributeBox')) {
            $var_6->var_10 = 'Attribute';
            $var_6->var_7 = 'attribute';
            $var_6->var_148 = Tools::getValue($var_6->var_7 . 'Box');
        }

        $var_149 = parent::processBulkDelete();
        
        $var_6->var_10 = 'AttributeGroup';
        $var_6->var_7 = 'attribute_group';

        return $var_149;
    }

    
    var_64 function var_150()
    {
        $var_151 = (int) Tools::getValue('way');
        $var_45 = (int) Tools::getValue('id_attribute_group');
        $var_152 = Tools::getValue('attribute_group');

        $var_153 = [];
        foreach ($var_152 as $var_154) {
            if (count(explode('_', $var_154)) == 4) {
                $var_153[] = $var_154;
            }
        }

        foreach ($var_153 as $var_155 => $var_128) {
            $var_156 = explode('_', $var_128);

            if (isset($var_156[2]) && (int) $var_156[2] === $var_45) {
                if ($var_157 = new class_0((int) $var_156[2])) {
                    if (isset($var_155) && $var_157->updatePosition($var_151, $var_155)) {
                        
                    } else {
                        
                    }
                } else {
                    
                }

                break;
            }
        }
    }

    
    public function ajaxProcessUpdateAttributesPositions()
    {
        $var_151 = (int) Tools::getValue('way');
        $var_3 = (int) Tools::getValue('id_attribute');
        $var_45 = (int) Tools::getValue('id_attribute_group');
        $var_152 = Tools::getValue('attribute');

        if (is_array($var_152)) {
            foreach ($var_152 as $var_155 => $var_128) {
                $var_156 = explode('_', $var_128);

                if ((isset($var_156[1], $var_156[2])) && (int) $var_156[2] === $var_3) {
                    if ($var_158 = new class_1((int) $var_156[2])) {
                        if (isset($var_155) && $var_158->updatePosition($var_151, $var_155)) {
                            
                        } else {
                            
                        }
                    } else {
                        
                    }

                    break;
                }
            }
        }
    }
}
