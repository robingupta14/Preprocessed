<?php namespace var_0\var_1\var_2;



class class_0 extends var_3
{

    public $var_4 = 'rainlab_blog_posts';
    public $var_5 = ['@RainLab.Translate.Behaviors.TranslatableModel'];

    
    public $var_6 = [
        'title'   => 'required',
        'slug'    => ['required', 'regex:/^[a-z0-9\/\:_\-\*\[\]\+\?\|]*$/i', 'unique:rainlab_blog_posts'],
        'content' => 'required',
        'excerpt' => ''
    ];

    
    public $var_7 = [
        'title',
        'content',
        'content_html',
        'excerpt',
        'metadata',
        ['slug', 'index' => true]
    ];

    
    protected $var_8 = ['metadata'];

    
    protected $var_9 = ['published_at'];

    
    public static $var_10 = [
        'title asc'         => 'rainlab.blog::lang.sorting.title_asc',
        'title desc'        => 'rainlab.blog::lang.sorting.title_desc',
        'created_at asc'    => 'rainlab.blog::lang.sorting.created_asc',
        'created_at desc'   => 'rainlab.blog::lang.sorting.created_desc',
        'updated_at asc'    => 'rainlab.blog::lang.sorting.updated_asc',
        'updated_at desc'   => 'rainlab.blog::lang.sorting.updated_desc',
        'published_at asc'  => 'rainlab.blog::lang.sorting.published_asc',
        'published_at desc' => 'rainlab.blog::lang.sorting.published_desc',
        'random'            => 'rainlab.blog::lang.sorting.random'
    ];

    
    public $var_11 = [
        'user' => ['Backend\Models\User']
    ];

    public $var_12 = [
        'categories' => [
            'RainLab\Blog\Models\Category',
            'table' => 'rainlab_blog_posts_categories',
            'order' => 'name'
        ]
    ];

    public $var_13 = [
        'featured_images' => ['System\Models\File', 'order' => 'sort_order'],
        'content_images'  => ['System\Models\File']
    ];

    
    protected $var_14 = ['summary', 'has_summary'];

    public $var_15 = null;

    
    public function fn_0($var_16, $var_17 = null)
    {
        if (!isset($var_16->var_18, $var_16->var_19)) {
            return;
        }

        $var_20 = BackendAuth::getUser();

        if (!$var_20->hasAnyAccess(['rainlab.blog.access_publish'])) {
            $var_16->var_18->var_22 = true;
            $var_16->var_19->var_22 = true;
        }
        else {
            $var_16->var_18->var_22 = false;
            $var_16->var_19->var_22 = false;
        }
    }

    public function fn_1()
    {
        if ($var_23->var_18 && !$var_23->var_19) {
            throw new class_1([
               'published_at' => Lang::get('rainlab.blog::lang.post.published_validation')
            ]);
        }
    }

    public function fn_2()
    {
        if (empty($var_23->var_20)) {
            $var_20 = BackendAuth::getUser();
            if (!is_null($var_20)) {
                $var_23->var_20 = $var_20->var_24;
            }
        }
        $var_23->var_25 = self::fn_5($var_23->var_26);
    }

    
    public function fn_3($var_27, $var_28)
    {
        $var_29 = [
            'id'   => $var_23->var_24,
            'slug' => $var_23->var_30
        ];

        $var_29['category'] = $var_23->var_31->count() ? $var_23->var_31->first()->var_30 : null;

        
        if ($var_23->var_18) {
            $var_29['year']  = $var_23->var_19->format('Y');
            $var_29['month'] = $var_23->var_19->format('m');
            $var_29['day']   = $var_23->var_19->format('d');
        }

        return $var_23->var_35 = $var_28->pageUrl($var_27, $var_29);
    }

    
    public function fn_4(var_37 $var_20)
    {
        return ($var_23->var_38 == $var_20->var_24) || $var_20->hasAnyAccess(['rainlab.blog.access_other_posts']);
    }

    public static function fn_5($var_39, $var_15 = false)
    {
        $var_40 = Markdown::parse(trim($var_39));

        
        $var_20 = BackendAuth::getUser();
        if (!$var_20 || !$var_20->hasAccess('backend.allow_unsafe_markdown')) {
            $var_40 = Html::clean($var_40);
        }

        if ($var_15) {
            $var_40 = str_replace('<pre>', '<pre class="prettyprint">', $var_40);
        }

        $var_40 = var_0\var_1\var_42\var_43::instance()->processTags($var_40, $var_15);

        return $var_40;
    }

    
    
    

    public function fn_6($var_45)
    {
        return $var_45
            ->whereNotNull('published')
            ->where('published', true)
            ->whereNotNull('published_at')
            ->where('published_at', '<', var_48\var_48::now())
        ;
    }

    
    public function fn_7($var_45, $var_49)
    {
        
        extract(array_merge([
            'page'             => 1,
            'perPage'          => 30,
            'sort'             => 'created_at',
            'categories'       => null,
            'exceptCategories' => null,
            'category'         => null,
            'search'           => '',
            'published'        => true,
            'exceptPost'       => null
        ], $var_49));

        $var_50 = ['title', 'slug', 'excerpt', 'content'];

        if ($var_18) {
            $var_45->isPublished();
        }

        
        if ($var_52) {
            $var_53 = (is_array($var_52)) ? $var_52 : [$var_52];
            $var_54 = [];
            $var_55 = [];

            foreach ($var_53 as $var_52) {
                $var_52 = trim($var_52);

                if (is_numeric($var_52)) {
                    $var_54[] = $var_52;
                } else {
                    $var_55[] = $var_52;
                }
            }

            if (count($var_54)) {
                $var_45->whereNotIn('id', $var_54);
            }
            if (count($var_55)) {
                $var_45->whereNotIn('slug', $var_55);
            }
        }

        
        if (in_array($var_57, array_keys(static::$var_10))) {
            if ($var_57 == 'random') {
                $var_45->inRandomOrder();
            } else {
                @list($var_59, $var_60) = explode(' ', $var_57);

                if (is_null($var_60)) {
                    $var_60 = "desc";
                }

                $var_45->orderBy($var_59, $var_60);
            }
        }

        
        $var_62 = trim($var_62);
        if (strlen($var_62)) {
            $var_45->searchWhere($var_62, $var_50);
        }

        
        if ($var_31 !== null) {
            $var_31 = is_array($var_31) ? $var_31 : [$var_31];
            $var_45->whereHas('categories', function($var_65) use ($var_31) {
                $var_65->whereIn('id', $var_31);
            });
        }

        
        if (!empty($var_67)) {
            $var_67 = is_array($var_67) ? $var_67 : [$var_67];
            array_walk($var_67, 'trim');

            $var_45->whereDoesntHave('categories', function ($var_65) use ($var_67) {
                $var_65->whereIn('slug', $var_67);
            });
        }

        
        if ($var_69 !== null) {
            $var_69 = Category::find($var_69);

            $var_31 = $var_69->getAllChildrenAndSelf()->lists('id');
            $var_45->whereHas('categories', function($var_65) use ($var_31) {
                $var_65->whereIn('id', $var_31);
            });
        }

        return $var_45->paginate($var_73, $var_74);
    }

    
    public function fn_8($var_45, $var_31)
    {
        return $var_45->whereHas('categories', function($var_65) use ($var_31) {
            $var_65->whereIn('id', $var_31);
        });
    }

    
    
    

    
    public function fn_9()
    {
        $var_75 = '<!-- more -->';

        return (
            !!strlen(trim($var_23->var_76)) ||
            strpos($var_23->var_25, $var_75) !== false ||
            strlen(Html::strip($var_23->var_25)) > 600
        );
    }

    
    public function fn_10()
    {
        $var_76 = $var_23->var_76;
        if (strlen(trim($var_76))) {
            return $var_76;
        }

        $var_75 = '<!-- more -->';
        if (strpos($var_23->var_25, $var_75) !== false) {
            $var_77 = explode($var_75, $var_23->var_25);

            return array_get($var_77, 0);
        }

        return Html::limit($var_23->var_25, 600);
    }

    
    
    

    
    public function fn_11($var_45, $var_49 = [])
    {
        if (!is_array($var_49)) {
            $var_49 = ['direction' => $var_49];
        }

        extract(array_merge([
            'direction' => 'next',
            'attribute' => 'published_at'
        ], $var_49));

        $var_78 = in_array($var_79, ['previous', -1]);
        $var_80 = $var_78 ? 'asc' : 'desc';
        $var_81 = $var_78 ? '>' : '<';

        $var_45->where('id', '<>', $var_23->var_24);

        if (!is_null($var_23->$var_82)) {
            $var_45->where($var_82, $var_81, $var_23->$var_82);
        }

        return $var_45->orderBy($var_82, $var_80);
    }

    
    public function fn_12()
    {
        return self::isPublished()->applySibling()->first();
    }

    
    public function fn_13()
    {
        return self::isPublished()->applySibling(-1)->first();
    }

    
    
    

    
    public static function fn_14($var_84)
    {
        $var_40 = [];

        if ($var_84 == 'blog-post') {
            $var_85 = [];

            $var_86 = self::orderBy('title')->get();
            foreach ($var_86 as $var_88) {
                $var_85[$var_88->var_24] = $var_88->var_89;
            }

            $var_40 = [
                'references'   => $var_85,
                'nesting'      => false,
                'dynamicItems' => false
            ];
        }

        if ($var_84 == 'all-blog-posts') {
            $var_40 = [
                'dynamicItems' => true
            ];
        }

        if ($var_84 == 'category-blog-posts') {
            $var_85 = [];

            $var_31 = Category::orderBy('name')->get();
            foreach ($var_31 as $var_69) {
                $var_85[$var_69->var_24] = $var_69->var_90;
            }

            $var_40 = [
                'references'   => $var_85,
                'dynamicItems' => true
            ];
        }

        if ($var_40) {
            $var_91 = var_92\var_42\var_93::getActiveTheme();

            $var_94 = var_92\var_42\var_95::listInTheme($var_91, true);
            $var_96 = [];

            foreach ($var_94 as $var_74) {
                if (!$var_74->hasComponent('blogPost')) {
                    continue;
                }

                
                $var_98 = $var_74->getComponentProperties('blogPost');
                if (!isset($var_98['categoryPage']) || !preg_match('/{{\s*:/', $var_98['slug'])) {
                    continue;
                }

                $var_96[] = $var_74;
            }

            $var_40['cmsPages'] = $var_96;
        }

        return $var_40;
    }

    
    public static function fn_15($var_100, $var_35, $var_91)
    {
        $var_40 = null;

        if ($var_100->var_84 == 'blog-post') {
            if (!$var_100->var_101 || !$var_100->var_102) {
                return;
            }

            $var_69 = self::find($var_100->var_101);
            if (!$var_69) {
                return;
            }

            $var_36 = self::fn_16($var_100->var_102, $var_69, $var_91);
            if (!$var_36) {
                return;
            }

            $var_36 = Url::to($var_36);

            $var_40 = [];
            $var_40['url'] = $var_36;
            $var_40['isActive'] = $var_36 == $var_35;
            $var_40['mtime'] = $var_69->var_103;
        }
        elseif ($var_100->var_84 == 'all-blog-posts') {
            $var_40 = [
                'items' => []
            ];

            $var_86 = self::isPublished()
            ->orderBy('title')
            ->get();

            foreach ($var_86 as $var_88) {
                $var_104 = [
                    'title' => $var_88->var_89,
                    'url'   => self::fn_16($var_100->var_102, $var_88, $var_91),
                    'mtime' => $var_88->var_103
                ];

                $var_104['isActive'] = $var_104['url'] == $var_35;

                $var_40['items'][] = $var_104;
            }
        }
        elseif ($var_100->var_84 == 'category-blog-posts') {
            if (!$var_100->var_101 || !$var_100->var_102) {
                return;
            }

            $var_69 = Category::find($var_100->var_101);
            if (!$var_69) {
                return;
            }

            $var_40 = [
                'items' => []
            ];

            $var_45 = self::isPublished()
            ->orderBy('title');

            $var_31 = $var_69->getAllChildrenAndSelf()->lists('id');
            $var_45->whereHas('categories', function($var_65) use ($var_31) {
                $var_65->whereIn('id', $var_31);
            });

            $var_86 = $var_45->get();

            foreach ($var_86 as $var_88) {
                $var_104 = [
                    'title' => $var_88->var_89,
                    'url'   => self::fn_16($var_100->var_102, $var_88, $var_91),
                    'mtime' => $var_88->var_103
                ];

                $var_104['isActive'] = $var_104['url'] == $var_35;

                $var_40['items'][] = $var_104;
            }
        }

        return $var_40;
    }

    
    protected static function fn_16($var_105, $var_69, $var_91)
    {
        $var_74 = var_92\var_42\var_95::loadCached($var_91, $var_105);
        if (!$var_74) {
            return;
        }

        $var_98 = $var_74->getComponentProperties('blogPost');
        if (!isset($var_98['slug'])) {
            return;
        }

        
        if (!preg_match('/^\{\{([^\}]+)\}\}$/', $var_98['slug'], $var_106)) {
            return;
        }

        $var_107 = substr(trim($var_106[1]), 1);
        $var_29 = [
            $var_107 => $var_69->var_30,
            'year'  => $var_69->var_19->format('Y'),
            'month' => $var_69->var_19->format('m'),
            'day'   => $var_69->var_19->format('d')
        ];
        $var_35 = var_92\var_42\var_95::url($var_74->getBaseFileName(), $var_29);

        return $var_35;
    }
}
