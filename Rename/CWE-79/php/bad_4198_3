<?php

declare(strict_types=1);




class class_0 extends var_0
{
    
    protected $var_1 = 'platform::fields.upload';

    
    protected $var_2 = [
        'value'           => null,
        'multiple'        => true,
        'parallelUploads' => 10,
        'maxFileSize'     => null,
        'maxFiles'        => 9999,
        'acceptedFiles'   => null,
        'resizeQuality'   => 0.8,
        'resizeWidth'     => null,
        'resizeHeight'    => null,
        'media'           => false,
        'closeOnAdd'      => false,
    ];

    
    protected $var_3 = [
        'accept',
        'form',
        'formaction',
        'formenctype',
        'formmethod',
        'formnovalidate',
        'formtarget',
        'name',
        'multiple',
        'placeholder',
        'required',
        'value',
        'groups',
        'storage',
        'media',
        'closeOnAdd',
    ];

    
    public function fn_0()
    {

        
        $var_4->addBeforeRender(function () {
            $var_6 = $var_4->get('maxFileSize');

            $var_8 = var_9\var_10\var_11::maxFileUpload(var_9\var_10\var_11::var_12);

            if ($var_6 === null) {
                $var_4->set('maxFileSize', $var_8);

                return;
            }

            throw_if(
                $var_6 > $var_8,
                \var_14::var_15,
                'Cannot set the desired maximum file size. This contradicts the settings specified in .ini');
        });

        
        $var_4->addBeforeRender(function () {
            $var_16 = var_17\var_10\var_18::wrap($var_4->get('value'));

            if (! var_9\var_10\var_19::isIntArray($var_16)) {
                return;
            }

            
            $var_20 = var_9\var_21\var_22::model(var_9\var_23\var_24\var_23::var_15);

            $var_16 = $var_20::whereIn('id', $var_16)->orderBy('sort')->get()->toArray();

            $var_4->set('value', $var_16);
        });
    }
}
