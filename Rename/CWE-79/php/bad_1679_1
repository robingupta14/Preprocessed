<?php




class class_0 extends var_1
{
    
    static public $var_2 = array('mail','settings','addressbook','login','logout','utils','dummy');

    
    public $var_3;

    
    public $var_4    = '';
    public $var_5 = './';
    public $var_6  = '';

    private $var_7 = array();
    private $var_8    = array();


    const var_9          = -2;
    const var_10  = 1;
    const var_11     = 2;
    const var_12 = 3;


    
    static function fn_0($var_13 = '')
    {
        if (!self::$var_14 || !is_a(self::$var_14, 'rcmail')) {
            self::$var_14 = new class_0($var_13);
            
            self::$var_14->fn_1();
        }

        return self::$var_14;
    }

    
    protected function fn_1()
    {
        $var_16->init(self::var_18 | self::var_19);

        
        if (($var_20 = basename($_SERVER['SCRIPT_FILENAME'])) && $var_20 != 'index.php') {
            $var_16->var_6 = $var_20;
        }

        
        $var_16->var_21->load_plugins((array)$var_16->var_23->get('plugins', array()),
                                     array('filesystem_attachments', 'jqueryui'));

        
        $var_16->fn_2();

        
        $var_16->fn_3(new class_1($var_127['user_id']));

        
        $var_16->fn_4(rcube_utils::get_input_value('_task', var_28::var_29));
        $var_16->var_4 = asciiwords(rcube_utils::get_input_value('_action', var_28::var_29));

        
        if ($var_16->var_3 != 'utils') {
            
            
            
            if ($var_16->var_30 && $var_127['task'] != $var_16->var_3 && empty($var_16->var_4)) {
                $var_16->var_30->remove('page');

                
                $var_127['task'] = $var_16->var_3;
            }
        }

        
        if (!empty($_REQUEST['_remote'])) {
            $GLOBALS['OUTPUT'] = $var_16->fn_5();
        }
        else if ($_SERVER['REMOTE_ADDR']) {
            $GLOBALS['OUTPUT'] = $var_16->fn_6(!empty($_REQUEST['_framed']));
        }

        
        $var_16->var_21->init($var_16, $var_16->var_3);
    }

    
    public function fn_4($var_3)
    {
        $var_3 = asciiwords($var_3, true);

        if ($var_16->var_34 && $var_16->var_34->var_35)
            $var_3 = !$var_3 ? 'mail' : $var_3;
        else if (php_sapi_name() == 'cli')
            $var_3 = 'cli';
        else
            $var_3 = 'login';

        $var_16->var_3      = $var_3;
        $var_16->var_5 = $var_16->fn_7(array('task' => $var_16->var_3));

        if (!empty($_REQUEST['_framed'])) {
            $var_16->var_5 .= '&_framed=1';
        }

        if ($var_16->var_37) {
            $var_16->var_37->set_env('task', $var_16->var_3);
            $var_16->var_37->set_env('comm_path', $var_16->var_5);
        }
    }

    
    public function fn_3($var_34)
    {
        parent::fn_3($var_34);

        $var_39 = $var_16->language_prop($var_16->var_23->get('language', $var_127['language']));
        $var_127['language'] = $var_16->var_34->var_41 = $var_39;

        
        setlocale(var_42, $var_39 . '.utf8', $var_39 . '.UTF-8', 'en_US.utf8', 'en_US.UTF-8');

        
        if (var_43 < 50500 && in_array($var_39, array('tr_TR', 'ku', 'az_AZ'))) {
            setlocale(var_44, 'en_US.utf8', 'en_US.UTF-8');
        }
    }

    
    public function fn_8($var_46, $var_47 = false)
    {
        $var_48    = null;
        $var_49 = (array)$var_16->var_23->get('ldap_public');

        
        if ($var_46 == 'sql')
            $var_46 = '0';
        else if ($var_46 == -1) {
            $var_46 = $var_16->var_23->get('default_addressbook');
            $var_50 = true;
        }

        
        if (isset($var_16->var_7[$var_46]) && ($var_16->var_7[$var_46] instanceof var_51)) {
            $var_48 = $var_16->var_7[$var_46];
        }
        else if ($var_46 && $var_49[$var_46]) {
            $var_52   = $var_16->var_23->mail_domain($var_127['storage_host']);
            $var_48 = new class_2($var_49[$var_46], $var_16->var_23->get('ldap_debug'), $var_52);
        }
        else if ($var_46 === '0') {
            $var_48 = new class_3($var_16->var_54, $var_16->get_user_id());
        }
        else {
            $var_56 = $var_16->var_21->exec_hook('addressbook_get', array('id' => $var_46, 'writeable' => $var_47));

            
            if ($var_56['instance'] instanceof var_51) {
                $var_48 = $var_56['instance'];
            }
        }

        
        
        
        if ($var_48 && $var_50 && $var_48->var_58 && $var_47) {
            $var_48 = null;
        }

        
        
        if (!$var_48 && (!$var_46 || $var_50)) {
            $var_59 = reset($var_16->fn_9($var_47, !$var_50));
            if (!empty($var_59)) {
                $var_48 = $var_16->fn_8($var_59['id']);
                if ($var_48) {
                    $var_46 = $var_59['id'];
                }
            }
        }

        if (!$var_48) {
            
            if ($var_50) {
                return null;
            }

            self::raise_error(array(
                    'code'    => 700,
                    'file'    => var_61,
                    'line'    => var_62,
                    'message' => "Addressbook source ($var_46) not found!"
                ),
                true, true);
        }

        
        $var_16->var_7[$var_46] = $var_48;

        if ($var_47 && $var_48->var_58) {
            return null;
        }

        
        if ($var_63 = $var_16->var_23->get('addressbook_sort_col')) {
            $var_48->set_sort_order($var_63);
        }

        return $var_48;
    }

    
    public function fn_10($var_65)
    {
        foreach ($var_16->var_7 as $var_66 => $var_67) {
            if ($var_67 === $var_65) {
                return $var_66;
            }
        }
    }

    
    public function fn_9($var_47 = false, $var_68 = false)
    {
        $var_69   = (string) $var_16->var_23->get('address_book_type');
        $var_49  = (array) $var_16->var_23->get('ldap_public');
        $var_70 = (array) $var_16->var_23->get('autocomplete_addressbooks');
        $var_71         = array();

        
        if (!empty($var_69) && strtolower($var_69) != 'ldap') {
            if (!isset($var_16->var_7['0'])) {
                $var_16->var_7['0'] = new class_3($var_16->var_54, $var_16->get_user_id());
            }

            $var_71['0'] = array(
                'id'       => '0',
                'name'     => $var_16->gettext('personaladrbook'),
                'groups'   => $var_16->var_7['0']->var_73,
                'readonly' => $var_16->var_7['0']->var_58,
                'undelete' => $var_16->var_7['0']->var_74 && $var_16->var_23->get('undo_timeout'),
                'autocomplete' => in_array('sql', $var_70),
            );
        }

        if (!empty($var_49)) {
            foreach ($var_49 as $var_46 => $var_75) {
                
                if (empty($var_75) || !is_array($var_75)) {
                    continue;
                }

                $var_71[$var_46] = array(
                    'id'       => $var_46,
                    'name'     => html::quote($var_75['name']),
                    'groups'   => !empty($var_75['groups']) || !empty($var_75['group_filters']),
                    'readonly' => !$var_75['writable'],
                    'hidden'   => $var_75['hidden'],
                    'autocomplete' => in_array($var_46, $var_70)
                );
            }
        }

        $var_56 = $var_16->var_21->exec_hook('addressbooks_list', array('sources' => $var_71));
        $var_71   = $var_56['sources'];

        foreach ($var_71 as $var_76 => $var_77) {
            
            if (!is_object($var_16->var_7[$var_77['id']])) {
                $var_16->var_7[$var_77['id']] = $var_77;
            }
            
            if ($var_47 && $var_77['readonly']) {
                unset($var_71[$var_76]);
            }
            
            else if ($var_68 && $var_77['hidden']) {
                unset($var_71[$var_76]);
            }
        }

        return $var_71;
    }

    
    public function fn_11($var_78 = false, $var_79 = false)
    {
        $var_80 = array();

        if (!$var_79) {
            foreach ($var_16->var_23->get('compose_responses_static', array()) as $var_81) {
                if (empty($var_81['key'])) {
                    $var_81['key']    = substr(md5($var_81['name']), 0, 16);
                }

                $var_81['static'] = true;
                $var_81['class']  = 'readonly';

                $var_82 = $var_78 ? '0000-' . strtolower($var_81['name']) : $var_81['key'];
                $var_80[$var_82] = $var_81;
            }
        }

        foreach ($var_16->var_23->get('compose_responses', array()) as $var_81) {
            if (empty($var_81['key'])) {
                $var_81['key'] = substr(md5($var_81['name']), 0, 16);
            }

            $var_82 = $var_78 ? strtolower($var_81['name']) : $var_81['key'];
            $var_80[$var_82] = $var_81;
        }

        
        if ($var_78) {
            ksort($var_80, var_83);
        }

        return array_values($var_80);
    }

    
    public function fn_6($var_84 = false)
    {
        
        if (!($var_16->var_37 instanceof var_85)) {
            $var_16->var_37 = new class_4($var_16->var_3, $var_84);
        }

        
        $var_16->var_37->set_env('refresh_interval', $var_16->var_23->get('refresh_interval', 0));
        $var_16->var_37->set_env('session_lifetime', $var_16->var_23->get('session_lifetime', 0) * 60);

        if ($var_84) {
            $var_16->var_5 .= '&_framed=1';
            $var_16->var_37->set_env('framed', true);
        }

        $var_16->var_37->set_env('task', $var_16->var_3);
        $var_16->var_37->set_env('action', $var_16->var_4);
        $var_16->var_37->set_env('comm_path', $var_16->var_5);
        $var_16->var_37->set_charset(var_87);

        if ($var_16->var_34 && $var_16->var_34->var_35) {
            $var_16->var_37->set_env('user_id', $var_16->var_34->get_hash());
        }

        
        $var_16->var_37->set_env('compose_extwin', $var_16->var_23->get('compose_extwin',false));

        
        $var_16->var_37->add_label('loading', 'servererror', 'connerror', 'requesttimedout',
            'refreshing', 'windowopenerror', 'uploadingmany');

        return $var_16->var_37;
    }

    
    public function fn_5()
    {
        if (!($var_16->var_37 instanceof var_90)) {
            $var_16->var_37 = new class_5($var_16->var_3);
        }

        return $var_16->var_37;
    }

    
    public function fn_2()
    {
        parent::fn_2();

        
        if (!$var_127['user_id']) {
            $var_127['temp'] = true;
        }

        
        if ($var_127['temp'] && !empty($var_127['skin'])) {
            $var_16->var_23->set('skin', $var_127['skin']);
        }
    }

    
    function fn_12($var_92, $var_93, $var_94 = null, $var_95 = false)
    {
        $var_16->var_96 = null;

        if (empty($var_92)) {
            return false;
        }

        if ($var_95 && empty($var_97)) {
            $var_16->var_96 = self::var_12;
            return false;
        }

        $var_98    = $var_16->var_23->get('default_host');
        $var_99    = $var_16->var_23->get('default_port');
        $var_100 = $var_16->var_23->get('username_domain');
        $var_101        = $var_16->var_23->get('login_lc', 2);

        
        
        if (!$var_94 && !empty($var_98)) {
            if (is_array($var_98)) {
                list($var_102, $var_103) = each($var_98);
                $var_94 = is_numeric($var_102) ? $var_103 : $var_102;
            }
            else {
                $var_94 = $var_98;
            }

            $var_94 = rcube_utils::parse_host($var_94);
        }

        if (!$var_94) {
            $var_16->var_96 = self::var_11;
            return false;
        }

        
        $var_104 = parse_url($var_94);
        if ($var_104['host']) {
            $var_94 = $var_104['host'];
            $var_105  = (isset($var_104['scheme']) && in_array($var_104['scheme'], array('ssl','imaps','tls'))) ? $var_104['scheme'] : null;

            if (!empty($var_104['port']))
                $var_106 = $var_104['port'];
            else if ($var_105 && $var_105 != 'tls' && (!$var_99 || $var_99 == 143))
                $var_106 = 993;
        }

        if (!$var_106) {
            $var_106 = $var_99;
        }

        
        if (!empty($var_100)) {
            $var_52 = is_array($var_100) ? $var_100[$var_94] : $var_100;

            if ($var_52 = rcube_utils::parse_host((string)$var_52, $var_94)) {
                $var_107 = strpos($var_92, '@');

                
                if ($var_107 !== false && $var_16->var_23->get('username_domain_forced')) {
                    $var_92 = substr($var_92, 0, $var_107) . '@' . $var_52;
                }
                
                else if ($var_107 === false) {
                    $var_92 .= '@' . $var_52;
                }
            }
        }

        
        
        if ($var_101) {
            if ($var_101 == 2 || $var_101 === true) {
                $var_92 = mb_strtolower($var_92);
            }
            else if (strpos($var_92, '@')) {
                
                list($var_108, $var_52) = explode('@', $var_92);
                $var_92 = $var_108 . '@' . mb_strtolower($var_52);
            }
        }

        
        if (strpos($var_92, '@') && ($var_109 = class_1::email2user($var_92))) {
            $var_92 = $var_109;
        }

        
        
        $var_94     = rcube_utils::idn_to_ascii($var_94);
        $var_92 = rcube_utils::idn_to_ascii($var_92);

        
        if ($var_34 = class_1::query($var_92, $var_94)) {
            $var_92 = $var_34->var_284['username'];
        }

        $var_110 = $var_16->get_storage();

        
        if (!$var_110->connect($var_94, $var_92, $var_93, $var_106, $var_105)) {
            return false;
        }

        
        if (is_object($var_34)) {
            
            $var_34->touch();
        }
        
        else if ($var_16->var_23->get('auto_create_user')) {
            if ($var_114 = class_1::create($var_92, $var_94)) {
                $var_34 = $var_114;
            }
            else {
                self::raise_error(array(
                        'code'    => 620,
                        'file'    => var_61,
                        'line'    => var_62,
                        'message' => "Failed to create a user record. Maybe aborted by a plugin?"
                    ),
                    true, false);
            }
        }
        else {
            self::raise_error(array(
                    'code'    => 621,
                    'file'    => var_61,
                    'line'    => var_62,
                    'message' => "Access denied for new user $var_92. 'auto_create_user' is disabled"
                ),
                true, false);
        }

        
        if (is_object($var_34) && $var_34->var_35) {
            
            $var_16->fn_3($var_34);
            $var_16->set_storage_prop();

            
            $var_127['user_id']      = $var_34->var_35;
            $var_127['username']     = $var_34->var_284['username'];
            $var_127['storage_host'] = $var_94;
            $var_127['storage_port'] = $var_106;
            $var_127['storage_ssl']  = $var_105;
            $var_127['password']     = $var_16->encrypt($var_93);
            $var_127['login_time']   = time();

            if (isset($_REQUEST['_timezone']) && $_REQUEST['_timezone'] != '_default_') {
                $var_127['timezone'] = rcube_utils::get_input_value('_timezone', var_28::var_29);
            }

            
            $var_16->fn_14($var_34);

            
            $var_16->set_special_folders();

            
            $var_110->clear_cache('mailboxes', true);

            return true;
        }

        return false;
    }

    
    public function fn_13()
    {
        if ($var_16->var_96) {
            return $var_16->var_96;
        }

        if ($var_16->var_110 && $var_16->var_110->get_error_code() < -1) {
            return self::var_9;
        }
    }

    
    public function fn_15()
    {
        $var_98 = $var_16->var_23->get('default_host');
        $var_94         = null;

        if (is_array($var_98)) {
            $var_121 = rcube_utils::get_input_value('_host', var_28::var_122);
            $var_123 = rcube_utils::get_input_value('_user', var_28::var_122);

            list(, $var_52) = explode('@', $var_123);

            
            if ($var_98[$var_121] || in_array($var_121, array_values($var_98))) {
                $var_94 = $var_121;
            }
            
            else if (!empty($var_52)) {
                foreach ($var_98 as $var_124 => $var_125) {
                    if (is_array($var_125) && in_array_nocase($var_52, $var_125)) {
                        $var_94 = $var_124;
                        break;
                    }
                    else if (stripos($var_124, $var_52) !== false || stripos(strval($var_125), $var_52) !== false) {
                        $var_94 = is_numeric($var_124) ? $var_125 : $var_124;
                        break;
                    }
                }
            }

            
            if (empty($var_94)) {
                list($var_102, $var_103) = each($var_98);
                $var_94 = is_numeric($var_102) ? $var_103 : $var_102;
            }
        }
        else if (empty($var_98)) {
            $var_94 = rcube_utils::get_input_value('_host', var_28::var_122);
        }
        else {
            $var_94 = rcube_utils::parse_host($var_98);
        }

        return $var_94;
    }

    
    public function fn_16()
    {
        $var_16->var_21->exec_hook('session_destroy');

        $var_16->var_30->kill();
        $var_127 = array('language' => $var_16->var_34->var_41, 'temp' => true, 'skin' => $var_16->var_23->get('skin'));
        $var_16->var_34->reset();
    }

    
    public function fn_17()
    {
        $var_110        = $var_16->get_storage();
        $var_129 = $var_16->var_23->get('logout_expunge');
        $var_130   = $var_16->var_23->get('logout_purge');
        $var_131     = $var_16->var_23->get('trash_mbox');

        if ($var_130 && !empty($var_131)) {
            $var_110->clear_folder($var_131);
        }

        if ($var_129) {
            $var_110->expunge_folder('INBOX');
        }

        
        if (!empty($var_127['preferences'])) {
            $var_16->var_34->save_prefs(unserialize($var_127['preferences']));
        }
    }

    
    public function fn_7($var_135, $var_136 = false, $var_137 = false, $var_138 = false)
    {
        if (!is_array($var_135)) {
            if (strpos($var_135, 'http') === 0) {
                return $var_135;
            }

            $var_135 = array('_action' => @func_get_arg(0));
        }

        $var_139 = array();
        $var_3 = $var_135['_task'] ?: ($var_135['task'] ?: $var_16->var_3);
        $var_139['_task'] = $var_3;
        unset($var_135['task'], $var_135['_task']);

        $var_36  = $var_16->var_6;
        $var_140 = '?';

        foreach (array_merge($var_139, $var_135) as $var_102 => $var_103) {
            if ($var_103 !== '' && $var_103 !== null) {
                $var_141  = $var_102[0] == '_' ? $var_102 : '_'.$var_102;
                $var_36 .= $var_140.urlencode($var_141).'='.urlencode($var_103);
                $var_140 = '&';
            }
        }

        $var_142 = strval($_SERVER['REDIRECT_SCRIPT_URL'] ?: $_SERVER['SCRIPT_NAME']);
        $var_142 = preg_replace('![^/]+$!', '', $var_142);

        if ($var_138 && ($var_143 = $var_16->get_secure_url_token(true))) {
            
            $var_36 = $var_143 . '/' . $var_36;

            
            $var_142 = rtrim($var_142, '/');
            $var_142 = preg_replace('/\/[a-f0-9]{' . strlen($var_143) . '}$/', '', $var_142);

            
            $var_136 = true;
        }

        if ($var_136 || $var_137) {
            
            if ($var_142 == '') $var_142 = '/';
            $var_145 = $var_142;

            
            if ($var_137) {
                $var_145 = rcube_utils::resolve_url($var_145);
            }

            $var_145 = rtrim($var_145, '/') . '/';
        }
        else {
            $var_145 = './';
        }

        return $var_145 . $var_36;
    }

    
    public function fn_18()
    {
        parent::fn_18();

        foreach ($var_16->var_7 as $var_67) {
            if (is_object($var_67) && is_a($var_67, 'rcube_addressbook'))
                $var_67->close();
        }

        
        if ($var_16->var_23->get('devel_mode') || $var_16->var_23->get('performance_stats')) {
            
            setlocale(var_147, 'en_US.utf8', 'en_US.UTF-8', 'en_US', 'C');

            if (function_exists('memory_get_usage'))
                $var_148 = $var_16->fn_19(memory_get_usage());
            if (function_exists('memory_get_peak_usage'))
                $var_148 .= '/'.$var_16->fn_19(memory_get_peak_usage());

            $var_150 = $var_16->var_3 . ($var_16->var_4 ? '/'.$var_16->var_4 : '') . ($var_148 ? " [$var_148]" : '');

            if (defined('RCMAIL_START'))
                self::print_timer(var_151, $var_150);
            else
                self::console($var_150);
        }
    }

    
    public function fn_20($var_152 = var_28::var_122)
    {
        
        if (!$var_16->check_request($var_152)) {
            self::raise_error(array(
                'code' => 403, 'type' => 'php',
                'message' => "Request security check failed"), false, true);
        }

        
        if ($var_16->var_23->get('referer_check') && !rcube_utils::check_referer()) {
            self::raise_error(array(
                'code' => 403, 'type' => 'php',
                'message' => "Referer check failed"), true, true);
        }
    }

    
    public function fn_21($var_154)
    {
        if (is_array($var_154)) {
            foreach ($var_154 as $var_76 => $var_103) {
                $var_16->var_8[$var_76] = $var_103;
            }
        }
    }

    
    public function fn_22()
    {
        if (!empty($var_16->var_8[$var_16->var_4])) {
            return $var_16->var_8[$var_16->var_4];
        }

        return strtr($var_16->var_4, '-', '_') . '.inc';
    }

    
    private function fn_14($var_34)
    {
        $var_145     = $var_16->var_110->get_namespace('prefix');
        $var_156 = strlen($var_145);

        if (!$var_156) {
            return;
        }

        if ($var_16->var_23->get('namespace_fixed')) {
            return;
        }

        $var_157 = array();

        
        $var_158     = $var_16->var_110->get_namespace();
        $var_159 = array();

        foreach ($var_158 as $var_160) {
            if (!empty($var_160)) {
                foreach ($var_160 as $var_77) {
                    if (strlen($var_77[0])) {
                        $var_159[] = preg_quote($var_77[0], '/');
                    }
                }
            }
        }
        $var_159 = '/^('. implode('|', $var_159).')/';

        
        $var_161 = array('drafts_mbox', 'junk_mbox', 'sent_mbox', 'trash_mbox', 'archive_mbox');
        foreach ($var_161 as $var_162) {
            if ($var_163 = $var_16->var_23->get($var_162)) {
                if ($var_163 != 'INBOX' && !preg_match($var_159, $var_163)) {
                    $var_157[$var_162] = $var_145.$var_163;
                }
            }
        }

        if (($var_164 = $var_16->var_23->get('search_mods')) && !empty($var_164)) {
            $var_165 = array();
            foreach ($var_164 as $var_76 => $var_163) {
                if ($var_76 != 'INBOX' && $var_76 != '*' && !preg_match($var_159, $var_76)) {
                    $var_76 = $var_145.$var_76;
                }
                $var_165[$var_76] = $var_163;
            }

            $var_157['search_mods'] = $var_165;
        }

        if (($var_166 = $var_16->var_23->get('message_threading')) && !empty($var_166)) {
            $var_165 = array();
            foreach ($var_166 as $var_76 => $var_163) {
                if ($var_76 != 'INBOX' && !preg_match($var_159, $var_76)) {
                    $var_76 = $var_145.$var_76;
                }
                $var_165[$var_145.$var_76] = $var_163;
            }

            $var_157['message_threading'] = $var_165;
        }

        if ($var_167 = $var_16->var_23->get('collapsed_folders')) {
            $var_165     = explode('&&', $var_167);
            $var_168       = count($var_165);
            $var_169 = '';

            if ($var_168) {
                $var_165[0]        = substr($var_165[0], 1);
                $var_165[$var_168-1] = substr($var_165[$var_168-1], 0, -1);
            }

            foreach ($var_165 as $var_163) {
                if ($var_163 != 'INBOX' && !preg_match($var_159, $var_163)) {
                    $var_163 = $var_145.$var_163;
                }
                $var_169 .= '&'.$var_163.'&';
            }

            $var_157['collapsed_folders'] = $var_169;
        }

        $var_157['namespace_fixed'] = true;

        
        $var_34->save_prefs($var_157);
        $var_16->set_storage_prop();
    }

    
    public function fn_23($var_4)
    {
        $var_16->var_4 = $var_4;
        $var_16->var_37->set_env('action', $var_4);
    }

    
    public function fn_24($var_170)
    {
        foreach ((array) $var_170 as $var_171) {
            if ($var_16->var_23->get($var_171)) {
                $var_16->var_37->set_env($var_171, true);
            }
        }
    }

    
    public function fn_25()
    {
        
        try {
            $var_172   = new class_6($var_16->var_23->get('timezone'));
            $var_173 = new class_7('now', $var_172);
        }
        catch (var_174 $var_175) {}

        return $var_173->format('r');
    }

    
    public function fn_26($var_34 = null, $var_177 = false, $var_178 = 0)
    {
        if (!$var_16->var_23->get('log_logins')) {
            return;
        }

        
        if ($var_177) {
            $var_179 = sprintf('Failed login for %s from %s in session %s (error: %d)',
                $var_34, rcube_utils::remote_ip(), session_id(), $var_178);
        }
        
        else {
            $var_180 = $var_16->get_user_name();
            $var_182   = $var_16->get_user_id();

            if (!$var_182) {
                return;
            }

            $var_179 = sprintf('Successful login for %s (ID: %d) from %s in session %s',
                $var_180, $var_182, rcube_utils::remote_ip(), session_id());
        }

        
        self::write_log('userlogins', $var_179);
    }

    
    public function fn_27($var_183, $var_184, $var_185, $var_186)
    {
        $var_187 = new class_8($var_183);

        
        if (!$var_183['noheader']) {
            foreach ($var_185 as $var_188) {
                $var_187->add_header($var_188, $var_16->Q($var_16->gettext($var_188)));
            }
        }

        if (!is_array($var_184)) {
            $var_54 = $var_16->get_dbh();
            while ($var_184 && ($var_192 = $var_54->fetch_assoc($var_184))) {
                $var_187->add_row(array('id' => 'rcmrow' . rcube_utils::html_identifier($var_192[$var_186])));

                
                foreach ($var_185 as $var_188) {
                    $var_187->add($var_188, $var_16->Q($var_192[$var_188]));
                }
            }
        }
        else {
            foreach ($var_184 as $var_196) {
                $var_197 = !empty($var_196['class']) ? $var_196['class'] : null;
                if (!empty($var_183['rowclass']))
                    $var_197 = trim($var_197 . ' ' . $var_183['rowclass']);
                $var_198 = 'rcmrow' . rcube_utils::html_identifier($var_196[$var_186]);

                $var_187->add_row(array('id' => $var_198, 'class' => $var_197));

                
                foreach ($var_185 as $var_188) {
                    $var_103 = is_array($var_196[$var_188]) ? $var_196[$var_188][0] : $var_196[$var_188];
                    $var_187->add($var_188, empty($var_183['ishtml']) ? $var_16->Q($var_103) : $var_103);
                }
            }
        }

        return $var_187->show($var_183);
    }

    
    public function fn_28($var_173, $var_176 = null, $var_200 = true)
    {
        if (is_object($var_173) && is_a($var_173, 'DateTime')) {
            $var_201 = $var_173->format('U');
        }
        else {
            if (!empty($var_173)) {
                $var_201 = rcube_utils::strtotime($var_173);
            }

            if (empty($var_201)) {
                return '';
            }

            try {
                $var_173 = new class_7("@".$var_201);
            }
            catch (var_174 $var_175) {}
        }

        if ($var_200) {
            try {
                
                $var_202 = date_default_timezone_get();
                $var_172 = new class_6($var_16->var_23->get('timezone'));
                $var_173->setTimezone($var_172);
                date_default_timezone_set($var_172->getName());

                $var_201 = $var_173->format('U');
            }
            catch (var_174 $var_175) {}
        }

        
        if (!$var_176) {
            $var_205         = time();
            $var_206    = getdate($var_205);
            $var_207 = mktime(0, 0, 0, $var_206['mon'], $var_206['mday'], $var_206['year']);
            $var_208  = mktime(0, 0, 0, $var_206['mon'], $var_206['mday']-6, $var_206['year']);
            $var_209 = $var_16->var_23->get('prettydate');

            if ($var_209 && $var_201 > $var_207 && $var_201 <= $var_205) {
                $var_176 = $var_16->var_23->get('date_today', $var_16->var_23->get('time_format', 'H:i'));
                $var_210  = true;
            }
            else if ($var_209 && $var_201 > $var_208 && $var_201 <= $var_205) {
                $var_176 = $var_16->var_23->get('date_short', 'D H:i');
            }
            else {
                $var_176 = $var_16->var_23->get('date_long', 'Y-m-d H:i');
            }
        }

        
        if (preg_match('/%[a-z]+/i', $var_176)) {
            $var_176 = strftime($var_176, $var_201);
            if ($var_202) {
                date_default_timezone_set($var_202);
            }
            return $var_210 ? ($var_16->gettext('today') . ' ' . $var_176) : $var_176;
        }

        
        
        $var_211 = '';
        for ($var_212=0; $var_212<strlen($var_176); $var_212++) {
            if ($var_176[$var_212] == "\\") {  
                continue;
            }

            
            if ($var_176[$var_212] == ' ' || $var_176[$var_212-1] == "\\") {
                $var_211 .= $var_176[$var_212];
            }
            
            else if ($var_176[$var_212] == 'D') {
                $var_211 .= $var_16->gettext(strtolower(date('D', $var_201)));
            }
            
            else if ($var_176[$var_212] == 'l') {
                $var_211 .= $var_16->gettext(strtolower(date('l', $var_201)));
            }
            
            else if ($var_176[$var_212] == 'M') {
                $var_211 .= $var_16->gettext(strtolower(date('M', $var_201)));
            }
            
            else if ($var_176[$var_212] == 'F') {
                $var_211 .= $var_16->gettext('long'.strtolower(date('M', $var_201)));
            }
            else if ($var_176[$var_212] == 'x') {
                $var_211 .= strftime('%x %X', $var_201);
            }
            else {
                $var_211 .= date($var_176[$var_212], $var_201);
            }
        }

        if ($var_210) {
            $var_213 = $var_16->gettext('today');
            
            if (strpos($var_211, '$') !== false) {
                $var_211 = preg_replace('/\$/', $var_213, $var_211, 1);
            }
            else {
                $var_211 = $var_213 . ' ' . $var_211;
            }
        }

        if ($var_202) {
            date_default_timezone_set($var_202);
        }

        return $var_211;
    }

    
    public function fn_29($var_183)
    {
        static $var_214;

        $var_183 += array('maxlength' => 100, 'realnames' => false, 'unreadwrap' => ' (%s)');

        $var_0  = class_0::fn_0();
        $var_110 = $var_0->get_storage();

        
        $var_0->var_37->add_label('purgefolderconfirm', 'deletemessagesconfirm');

        $var_215 = $var_183['type'] ? $var_183['type'] : 'ul';
        unset($var_183['type']);

        if ($var_215 == 'ul' && !$var_183['id']) {
            $var_183['id'] = 'rcmboxlist';
        }

        if (empty($var_183['folder_name'])) {
            $var_183['folder_name'] = '*';
        }

        
        $var_216 = $var_110->get_folder();

        
        if (empty($var_214)) {
            
            $var_218 = $var_110->list_folders_subscribed(
                '', $var_183['folder_name'], $var_183['folder_filter']);
            $var_220 = $var_110->get_hierarchy_delimiter();
            $var_214 = array();

            foreach ($var_218 as $var_222) {
                $var_0->fn_30($var_214, $var_222, $var_220);
            }
        }

        
        $var_224 = $var_0->var_21->exec_hook('render_mailboxlist', array(
            'list'      => $var_214,
            'delimiter' => $var_220,
            'type'      => $var_215,
            'attribs'   => $var_183,
        ));

        $var_214 = $var_224['list'];
        $var_183      = $var_224['attribs'];

        if ($var_215 == 'select') {
            $var_183['is_escaped'] = true;
            $var_225 = new class_9($var_183);

            
            if ($var_183['noselection']) {
                $var_225->add(html::quote($var_0->gettext($var_183['noselection'])), '');
            }

            $var_0->fn_31($var_214, $var_216, $var_183['maxlength'], $var_225, $var_183['realnames']);
            $var_211 = $var_225->show($var_183['default']);
        }
        else {
            $var_227 = array();
            $var_228 = $var_0->fn_32($var_214, $var_216, $var_227, $var_183);

            if ($var_215 != 'js') {
                $var_211 = html::tag('ul', $var_183, $var_228, var_230::$var_231);

                $var_0->var_37->include_script('treelist.js');
                $var_0->var_37->add_gui_object('mailboxlist', $var_183['id']);
                $var_0->var_37->set_env('unreadwrap', $var_183['unreadwrap']);
                $var_0->var_37->set_env('collapsed_folders', (string)$var_0->var_23->get('collapsed_folders'));
            }

            $var_0->var_37->set_env('mailboxes', $var_227);

            
            
            $var_0->var_37->set_env('mailboxes_list', array_keys($var_227));
        }

        return $var_211;
    }

    
    public function fn_33($var_135 = array())
    {
        $var_234 = $var_16->var_23->get('show_real_foldernames');
        $var_135 += array('maxlength' => 100, 'realnames' => $var_234, 'is_escaped' => true);
        $var_214 = array();
        $var_110 = $var_16->get_storage();

        if (empty($var_135['folder_name'])) {
            $var_135['folder_name'] = '*';
        }

        if ($var_135['unsubscribed']) {
            $var_71 = $var_110->list_folders('', $var_135['folder_name'], $var_135['folder_filter'], $var_135['folder_rights']);
        }
        else {
            $var_71 = $var_110->list_folders_subscribed('', $var_135['folder_name'], $var_135['folder_filter'], $var_135['folder_rights']);
        }

        $var_220 = $var_110->get_hierarchy_delimiter();

        if (!empty($var_135['exceptions'])) {
            $var_71 = array_diff($var_71, (array) $var_135['exceptions']);
        }

        if (!empty($var_135['additional'])) {
            foreach ($var_135['additional'] as $var_236) {
                $var_237 = explode($var_220, $var_236);
                $var_222    = '';
                while (count($var_237)) {
                    $var_222 .= array_shift($var_237);

                    
                    if (!in_array($var_222, $var_71)) {
                        $var_71[] = $var_222;
                    }

                    $var_222 .= $var_220;
                }
            }
        }

        foreach ($var_71 as $var_222) {
            $var_16->fn_30($var_214, $var_222, $var_220);
        }

        $var_225 = new class_9($var_135);

        if ($var_135['noselection']) {
            $var_225->add(html::quote($var_135['noselection']), '');
        }

        $var_16->fn_31($var_214, $var_238, $var_135['maxlength'], $var_225, $var_135['realnames'], 0, $var_135);

        return $var_225;
    }

    
    public function fn_30(&$var_239, $var_222, $var_140 = '/', $var_240 = '')
    {
        
        $var_145 = '';
        if (!$var_240) {
            $var_241 = $var_222;
            $var_222 = $var_16->var_110->mod_folder($var_222);

            if ($var_241 != $var_222) {
                $var_145 = substr($var_241, 0, -strlen($var_222));
            }
        }

        $var_107 = strpos($var_222, $var_140);

        if ($var_107 !== false) {
            $var_243    = substr($var_222, $var_107+1);
            $var_244 = substr($var_222, 0, $var_107);

            
            if (!strlen($var_243)) {
                $var_245 = false;
            }
            else if (!isset($var_239[$var_244])) {
                $var_245 = true;
            }
            else {
                $var_245 = $var_239[$var_244]['virtual'];
            }
        }
        else {
            $var_243    = false;
            $var_244 = $var_222;
            $var_245       = false;
        }

        $var_240 .= $var_145 . $var_244;

        if (!isset($var_239[$var_244])) {
            $var_239[$var_244] = array(
                'id' => $var_240,
                'name' => rcube_charset::convert($var_244, 'UTF7-IMAP'),
                'virtual' => $var_245,
                'folders' => array());
        }
        else {
            $var_239[$var_244]['virtual'] = $var_245;
        }

        if (strlen($var_243)) {
            $var_16->fn_30($var_239[$var_244]['folders'], $var_243, $var_140, $var_240.$var_140);
        }
    }

    
    public function fn_32(&$var_239, &$var_216, &$var_246, $var_183, $var_247 = 0)
    {
        $var_248 = intval($var_183['maxlength']);
        $var_234 = (bool)$var_183['realnames'];
        $var_249 = $var_16->var_110->get_cache('messagecount');
        $var_167 = $var_16->var_23->get('collapsed_folders');
        $var_234 = $var_16->var_23->get('show_real_foldernames');

        $var_211 = '';
        foreach ($var_239 as $var_222) {
            $var_251        = null;
            $var_252 = $var_16->fn_34($var_222['id']);
            $var_254 = strpos($var_167, '&'.rawurlencode($var_222['id']).'&') !== false;
            $var_255       = $var_249 ? intval($var_249[$var_222['id']]['UNSEEN']) : 0;

            if ($var_252 && !$var_234) {
                $var_256 = $var_16->gettext($var_252);
            }
            else {
                $var_256 = $var_222['name'];

                
                if ($var_248 && $var_248 > 1) {
                    $var_257 = abbreviate_string($var_256, $var_248);
                    if ($var_257 != $var_256) {
                        $var_251 = $var_256;
                    }
                    $var_256 = $var_257;
                }
            }

            
            $var_258 = rcube_utils::html_identifier($var_222['id'], true);
            $var_259   = array('mailbox');

            
            if ($var_252) {
                $var_259[] = $var_252;
            }

            if ($var_222['id'] == $var_216) {
                $var_259[] = 'selected';
            }

            if ($var_222['virtual']) {
                $var_259[] = 'virtual';
            }
            else if ($var_255) {
                $var_259[] = 'unread';
            }

            $var_260 = $var_16->JQ($var_222['id']);
            $var_262 = $var_16->Q($var_256) . ($var_255 ? html::span('unreadcount', sprintf($var_183['unreadwrap'], $var_255)) : '');
            $var_263 = $var_222['virtual'] ? array() : array(
                'href' => $var_16->fn_7(array('_mbox' => $var_222['id'])),
                'onclick' => sprintf("return %s.command('list','%s',this,event)", var_264::var_265, $var_260),
                'rel' => $var_222['id'],
                'title' => $var_251,
            );

            $var_211 .= html::tag('li', array(
                'id' => "rcmli".$var_258,
                'class' => join(' ', $var_259),
                'noclose' => true),
                html::a($var_263, $var_262));

            if (!empty($var_222['folders'])) {
                $var_211 .= html::div('treetoggle ' . ($var_254 ? 'collapsed' : 'expanded'), '&nbsp;');
            }

            $var_246[$var_222['id']] = array(
                'id'      => $var_222['id'],
                'name'    => $var_256,
                'virtual' => $var_222['virtual'],
            );

            if (!empty($var_252)) {
                $var_246[$var_222['id']]['class'] = $var_252;
            }

            if (!empty($var_222['folders'])) {
                $var_211 .= html::tag('ul', array('style' => ($var_254 ? "display:none;" : null)),
                    $var_16->fn_32($var_222['folders'], $var_216, $var_246, $var_183, $var_247+1));
            }

            $var_211 .= "</li>\n";
        }

        return $var_211;
    }

    
    public function fn_31(&$var_239, &$var_216, $var_248, &$var_225, $var_234 = false, $var_247 = 0, $var_161 = array())
    {
        $var_211 = '';

        foreach ($var_239 as $var_222) {
            
            if (!empty($var_161['exceptions']) && in_array($var_222['id'], $var_161['exceptions'])) {
                continue;
            }

            
            if (!empty($var_161['skip_noinferiors'])) {
                $var_266 = $var_16->var_110->folder_attributes($var_222['id']);
                if ($var_266 && in_array('\\Noinferiors', $var_266)) {
                    continue;
                }
            }

            if (!$var_234 && ($var_252 = $var_16->fn_34($var_222['id']))) {
                $var_256 = $var_16->gettext($var_252);
            }
            else {
                $var_256 = $var_222['name'];

                
                if ($var_248 && $var_248 > 1) {
                    $var_256 = abbreviate_string($var_256, $var_248);
                }
            }

            $var_225->add(str_repeat('&nbsp;', $var_247*4) . html::quote($var_256), $var_222['id']);

            if (!empty($var_222['folders'])) {
                $var_211 .= $var_16->fn_31($var_222['folders'], $var_216, $var_248,
                    $var_225, $var_234, $var_247+1, $var_161);
            }
        }

        return $var_211;
    }

    
    public function fn_34($var_258)
    {
        if ($var_258 == 'INBOX') {
            return 'inbox';
        }

        
        foreach (array('sent', 'drafts', 'trash', 'junk') as $var_268)
        {
            if ($var_258 === $var_16->var_23->get($var_268.'_mbox')) {
                return $var_268;
            }
        }
    }

    
    public function fn_35($var_270, $var_271 = false)
    {
        $var_234 = $var_16->var_23->get('show_real_foldernames');

        if (!$var_234 && ($var_252 = $var_16->fn_34($var_270))) {
            return $var_16->gettext($var_252);
        }

        
        if ($var_271 && !$var_234) {
            $var_110   = $var_16->get_storage();
            $var_220 = $var_110->get_hierarchy_delimiter();
            $var_240      = explode($var_220, $var_270);
            $var_168     = count($var_240);

            if ($var_168 > 1) {
                for ($var_212 = 1; $var_212 < $var_168; $var_212++) {
                    $var_222 = implode($var_220, array_slice($var_240, 0, -$var_212));
                    if ($var_252 = $var_16->fn_34($var_222)) {
                        $var_270 = implode($var_220, array_slice($var_240, $var_168 - $var_212));
                        return $var_16->gettext($var_252) . $var_220 . rcube_charset::convert($var_270, 'UTF7-IMAP');
                    }
                }
            }
        }

        return rcube_charset::convert($var_270, 'UTF7-IMAP');
    }


    public function fn_36($var_240)
    {
        $var_272 = $var_16->var_23->get('protect_default_folders');
        $var_220       = $var_16->var_110->get_hierarchy_delimiter();
        $var_240            = explode($var_220, $var_240);
        $var_273          = array();

        foreach ($var_240 as $var_76 => $var_274) {
            $var_275 = implode($var_220, array_slice($var_240, 0, $var_76+1));
            if ($var_272 && $var_16->var_110->is_special_folder($var_275)) {
                unset($var_273);
                $var_273[] = $var_16->fn_35($var_275);
            }
            else {
                $var_273[] = rcube_charset::convert($var_274, 'UTF7-IMAP');
            }
        }

        return implode($var_220, $var_273);
    }


    public static function fn_37($var_183)
    {
        $var_0 = class_0::fn_0();

        if (!$var_183['id']) {
            $var_183['id'] = 'rcmquotadisplay';
        }

        $var_127['quota_display'] = !empty($var_183['display']) ? $var_183['display'] : 'text';

        $var_0->var_37->add_gui_object('quotadisplay', $var_183['id']);

        $var_277 = $var_0->fn_38($var_183);

        $var_0->var_37->add_script('rcmail.set_quota('.rcube_output::json_serialize($var_277).');', 'docready');

        return html::span($var_183, '&nbsp;');
    }


    public function fn_38($var_183 = null, $var_222 = null)
    {
        $var_277 = $var_16->var_110->get_quota($var_222);
        $var_277 = $var_16->var_21->exec_hook('quota', $var_277);

        $var_281 = (array) $var_277;
        $var_281['type']   = isset($var_127['quota_display']) ? $var_127['quota_display'] : '';
        $var_281['folder'] = $var_222 !== null && $var_222 !== '' ? $var_222 : 'INBOX';

        if ($var_277['total'] > 0) {
            if (!isset($var_277['percent'])) {
                $var_281['percent'] = min(100, round(($var_277['used']/max(1,$var_277['total']))*100));
            }

            $var_251 = sprintf('%s / %s (%.0f%%)',
                $var_16->fn_19($var_277['used'] * 1024), $var_16->fn_19($var_277['total'] * 1024),
                $var_281['percent']);

            $var_281['title'] = $var_251;

            if ($var_183['width']) {
                $var_281['width'] = $var_183['width'];
            }
            if ($var_183['height']) {
                $var_281['height'] = $var_183['height'];
            }

            
            if (($var_282 = count($var_281['all'])) > 1 || count($var_281['all'][key($var_281['all'])]) > 1) {
                $var_187 = new class_8(array('cols' => 3, 'class' => 'quota-info'));

                $var_187->add_header(null, self::Q($var_16->gettext('quotatype')));
                $var_187->add_header(null, self::Q($var_16->gettext('quotatotal')));
                $var_187->add_header(null, self::Q($var_16->gettext('quotaused')));

                foreach ($var_281['all'] as $var_283 => $var_284) {
                    if ($var_282 > 1 && $var_283) {
                        $var_187->add(array('colspan' => 3, 'class' => 'root'), self::Q($var_283));
                    }

                    if ($var_110 = $var_284['storage']) {
                        $var_285 = min(100, round(($var_110['used']/max(1,$var_110['total']))*100));

                        $var_187->add('name', self::Q($var_16->gettext('quotastorage')));
                        $var_187->add(null, $var_16->fn_19($var_110['total'] * 1024));
                        $var_187->add(null, sprintf('%s (%.0f%%)', $var_16->fn_19($var_110['used'] * 1024), $var_285));
                    }
                    if ($var_179 = $var_284['message']) {
                        $var_285 = min(100, round(($var_179['used']/max(1,$var_179['total']))*100));

                        $var_187->add('name', self::Q($var_16->gettext('quotamessage')));
                        $var_187->add(null, intval($var_179['total']));
                        $var_187->add(null, sprintf('%d (%.0f%%)', $var_179['used'], $var_285));
                    }
                }

                $var_281['table'] = $var_187->show();
            }
        }
        else {
            $var_286               = $var_16->var_23->get('quota_zero_as_unlimited');
            $var_281['title']   = $var_16->gettext($var_286 ? 'unlimited' : 'unknown');
            $var_281['percent'] = 0;
        }

        
        unset($var_281['abort']);
        if (empty($var_281['table'])) {
            unset($var_281['all']);
        }

        return $var_281;
    }

    
    public function fn_39($var_287 = null, $var_288 = null, $var_289 = '', $var_290 = array())
    {
        $var_291 = $var_16->var_110->get_error_code();
        $var_292 = $var_16->var_110->get_response_code();
        $var_294     = array();

        if ($var_292 == var_295::var_296) {
            $var_297 = 'errornoperm';
        }
        else if ($var_292 == var_295::var_298) {
            $var_297 = 'errorreadonly';
        }
        else if ($var_292 == var_295::var_299) {
            $var_297 = 'erroroverquota';
        }
        else if ($var_291 && ($var_300 = $var_16->var_110->get_error_str())) {
            
            if (stripos($var_300, 'Permission denied') !== false) {
                $var_297 = 'errornoperm';
            }
            
            
            else if (stripos($var_300, 'quot') !== false && preg_match('/exceed|over/i', $var_300)) {
                $var_297 = 'erroroverquota';
            }
            else {
                $var_297 = 'servererrormsg';
                $var_294  = array('msg' => $var_300);
            }
        }
        else if ($var_291 < 0) {
            $var_297 = 'storageerror';
        }
        else if ($var_287) {
            $var_297 = $var_287;
            $var_294  = $var_288;
            $var_290['prefix'] = false;
        }

        if ($var_297) {
            if ($var_289 && $var_16->text_exists($var_297 . $var_289)) {
                $var_297 .= $var_289;
            }

            $var_303 = $var_16->gettext(array('name' => $var_297, 'vars' => $var_294));

            if ($var_290['prefix'] && $var_287) {
                $var_303 = $var_16->gettext(array('name' => $var_287, 'vars' => $var_288)) . ' ' . $var_303;
            }

            $var_16->var_37->show_message($var_303, $var_290['type'] ?: 'error');
        }
    }

    
    public function fn_40($var_152 = '')
    {
        $var_224 = $var_16->var_21->exec_hook('html_editor', array('mode' => $var_152));

        if ($var_224['abort']) {
            return;
        }

        $var_305 = array($var_127['language']);

        if ($var_107 = strpos($var_127['language'], '_')) {
            $var_305[] = substr($var_127['language'], 0, $var_107);
        }

        foreach ($var_305 as $var_306) {
            if (file_exists(var_307 . 'program/js/tinymce/langs/'.$var_306.'.js')) {
                $var_39 = $var_306;
                break;
            }
        }

        if (empty($var_39)) {
            $var_39 = 'en';
        }

        $var_23 = array(
            'mode'       => $var_152,
            'lang'       => $var_39,
            'skin_path'  => $var_16->var_37->get_skin_path(),
            'spellcheck' => intval($var_16->var_23->get('enable_spellcheck')),
            'spelldict'  => intval($var_16->var_23->get('spellcheck_dictionary'))
        );

        $var_16->var_37->add_label('selectimage', 'addimage', 'selectmedia', 'addmedia');
        $var_16->var_37->set_env('editor_config', $var_23);
        $var_16->var_37->include_css('program/js/tinymce/roundcube/browser.css');
        $var_16->var_37->include_script('tinymce/tinymce.min.js');
        $var_16->var_37->include_script('editor.js');
    }

    
    public static function fn_41($var_230)
    {
        $var_310 = array(
            '8-)' => 'smiley-cool',
            ':-
            ':-*' => 'var_311-var_312',
            ':-X' => 'smiley-sealed',
            ':-P' => 'smiley-tongue-out',
            ':-@' => 'smiley-yell',
            ":'(" => 'smiley-cry',
            ':-(' => 'smiley-frown',
            ':-D' => 'smiley-laughing',
            ':-)' => 'smiley-smile',
            ':-S' => 'smiley-undecided',
            ':-$' => 'smiley-embarassed',
            'O:-)' => 'smiley-innocent',
            ':-|' => 'smiley-money-mouth',
            ':-O' => 'smiley-surprised',
            ';-)' => 'smiley-wink',
        );

        foreach ($var_310 as $var_76 => $var_313) {
            
            $var_314[]  = '/<img title="[a-z ]+" src="https?:\/\/[a-z0-9_.\/-]+\/tinymce\/plugins\/emoticons\/img\/'.$var_313.'.gif"[^>]+\/>/i';
            $var_315[] = $var_76;
        }

        return preg_replace($var_314, $var_315, $var_230);
    }

    
    public function fn_42()
    {
        $var_290 = array(
            'action' => $var_16->var_4,
            'name'   => rcube_utils::get_input_value('_progress', var_28::var_316),
        );

        if (function_exists('uploadprogress_get_info')) {
            $var_317 = uploadprogress_get_info($var_290['name']);

            if (!empty($var_317)) {
                $var_290['current'] = $var_317['bytes_uploaded'];
                $var_290['total']   = $var_317['bytes_total'];
            }
        }

        if (!isset($var_317) && filter_var(ini_get('apc.rfc1867'), var_318)
            && ini_get('apc.rfc1867_name')
        ) {
            $var_145 = ini_get('apc.rfc1867_prefix');
            $var_317 = apc_fetch($var_145 . $var_290['name']);

            if (!empty($var_317)) {
                $var_290['current'] = $var_317['current'];
                $var_290['total']   = $var_317['total'];
            }
        }

        if (!isset($var_317) && filter_var(ini_get('session.upload_progress.enabled'), var_318)
            && ini_get('session.upload_progress.name')
        ) {
            $var_102 = ini_get('session.upload_progress.prefix') . $var_290['name'];

            $var_290['total']   = $var_127[$var_102]['content_length'];
            $var_290['current'] = $var_127[$var_102]['bytes_processed'];
        }

        if (!empty($var_290['total'])) {
            $var_319 = $var_16->fn_19($var_290['total'], $var_320);
            switch ($var_320) {
            case 'GB':
                $var_321      = $var_290['current']/1073741824;
                $var_322 = sprintf($var_321 >= 10 ? "%d" : "%.1f", $var_321);
                break;
            case 'MB':
                $var_323      = $var_290['current']/1048576;
                $var_322 = sprintf($var_323 >= 10 ? "%d" : "%.1f", $var_323);
                break;
            case 'KB':
                $var_322 = round($var_290['current']/1024);
                break;
            case 'B':
            default:
                $var_322 = $var_290['current'];
                break;
            }

            $var_290['percent'] = round($var_290['current']/$var_290['total']*100);
            $var_290['text']    = $var_16->gettext(array(
                'name' => 'uploadprogress',
                'vars' => array(
                    'percent' => $var_290['percent'] . '%',
                    'current' => $var_322,
                    'total'   => $var_319
                )
            ));
        }

        $var_16->var_37->command('upload_progress_update', $var_290);
        $var_16->var_37->send();
    }

    
    public function fn_43($var_326 = null)
    {
        
        if ($var_327 = $var_16->var_23->get('upload_progress')) {
            if (function_exists('uploadprogress_get_info')) {
                $var_328 = 'UPLOAD_IDENTIFIER';
            }
            if (!$var_328 && filter_var(ini_get('apc.rfc1867'), var_318)) {
                $var_328 = ini_get('apc.rfc1867_name');
            }
            if (!$var_328 && filter_var(ini_get('session.upload_progress.enabled'), var_318)) {
                $var_328 = ini_get('session.upload_progress.name');
            }

            if ($var_328) {
                $var_16->var_37->set_env('upload_progress_name', $var_328);
                $var_16->var_37->set_env('upload_progress_time', (int) $var_327);
            }
        }

        
        $var_329 = parse_bytes(ini_get('upload_max_filesize'));
        $var_330 = parse_bytes(ini_get('post_max_size'));

        if ($var_330 && $var_330 < $var_329) {
            $var_329 = $var_330;
        }

        if ($var_326 && $var_326 < $var_329) {
            $var_329 = $var_326;
        }

        $var_16->var_37->set_env('max_filesize', $var_329);
        $var_329 = $var_16->fn_19($var_329);
        $var_16->var_37->set_env('filesizeerror', $var_16->gettext(array(
            'name' => 'filesizeerror', 'vars' => array('size' => $var_329))));

        return $var_329;
    }

    
    public function fn_44($var_313)
    {
        if (empty($var_313)) {
            return;
        }

        $var_313 = $var_16->var_21->exec_hook('attachment_display', $var_313);

        if ($var_313['status']) {
            if (empty($var_313['size'])) {
                $var_313['size'] = $var_313['data'] ? strlen($var_313['data']) : @filesize($var_313['path']);
            }

            
            if (!empty($_GET['_thumbnail'])) {
                $var_331       = $var_16->var_23->get('temp_dir');
                $var_332 = 80;
                $var_333       = $var_313['mimetype'];
                $var_334     = $var_313['id'] . ':' . $var_313['mimetype'] . ':' . $var_313['size'];
                $var_335 = $var_331 . '/' . md5($var_334 . ':' . $var_16->var_34->var_35 . ':' . $var_332);
                $var_336     = $var_335 . '.thumb';

                
                if (!is_file($var_336)) {
                    if (!$var_313['path']) {
                        $var_337 = $var_6 = $var_335 . '.tmp';
                        file_put_contents($var_337, $var_313['data']);
                    }
                    else {
                        $var_6 = $var_313['path'];
                    }

                    $var_338 = new class_10($var_6);
                    if ($var_339 = $var_338->resize($var_332, $var_336, true)) {
                        $var_333 = 'image/' . $var_339;

                        if ($var_337) {
                            unlink($var_337);
                        }
                    }
                }

                if (is_file($var_336)) {
                    
                    $var_16->var_37->future_expire_header(3600);
                    header('Content-Type: ' . $var_333);
                    header('Content-Length: ' . filesize($var_336));

                    readfile($var_336);
                    var_342;
                }
            }

            header('Content-Type: ' . $var_313['mimetype']);
            header('Content-Length: ' . $var_313['size']);

            if ($var_313['data']) {
                
            }
            else if ($var_313['path']) {
                readfile($var_313['path']);
            }
        }
    }

    
    public function fn_45()
    {
        static $var_17;

        if ($var_17) {
            return;
        }

        $var_17 = 1;

        if (($var_343 = (int)$var_16->var_23->get('autocomplete_threads')) > 0) {
            $var_344 = (array) $var_16->var_23->get('autocomplete_addressbooks', 'sql');
            if (count($var_344) > 1) {
                $var_16->var_37->set_env('autocomplete_threads', $var_343);
                $var_16->var_37->set_env('autocomplete_sources', $var_344);
            }
        }

        $var_16->var_37->set_env('autocomplete_max', (int)$var_16->var_23->get('autocomplete_max', 15));
        $var_16->var_37->set_env('autocomplete_min_length', $var_16->var_23->get('autocomplete_min_length'));
        $var_16->var_37->add_label('autocompletechars', 'autocompletemore');
    }

    
    public static function fn_46($var_345 = null)
    {
        $var_346 = array(
            'Andale Mono'   => '"Andale Mono",Times,monospace',
            'Arial'         => 'Arial,Helvetica,sans-serif',
            'Arial Black'   => '"Arial Black","Avant Garde",sans-serif',
            'Book Antiqua'  => '"Book Antiqua",Palatino,serif',
            'Courier New'   => '"Courier New",Courier,monospace',
            'Georgia'       => 'Georgia,Palatino,serif',
            'Helvetica'     => 'Helvetica,Arial,sans-serif',
            'Impact'        => 'Impact,Chicago,sans-serif',
            'Tahoma'        => 'Tahoma,Arial,Helvetica,sans-serif',
            'Terminal'      => 'Terminal,Monaco,monospace',
            'Times New Roman' => '"Times New Roman",Times,serif',
            'Trebuchet MS'  => '"Trebuchet MS",Geneva,sans-serif',
            'Verdana'       => 'Verdana,Geneva,sans-serif',
        );

        if ($var_345) {
            return $var_346[$var_345];
        }

        return $var_346;
    }

    
    public function fn_19($var_347, &$var_320 = null)
    {
        if ($var_347 >= 1073741824) {
            $var_320 = 'GB';
            $var_321   = $var_347/1073741824;
            $var_348  = sprintf($var_321 >= 10 ? "%d " : "%.1f ", $var_321) . $var_16->gettext($var_320);
        }
        else if ($var_347 >= 1048576) {
            $var_320 = 'MB';
            $var_323   = $var_347/1048576;
            $var_348  = sprintf($var_323 >= 10 ? "%d " : "%.1f ", $var_323) . $var_16->gettext($var_320);
        }
        else if ($var_347 >= 1024) {
            $var_320 = 'KB';
            $var_348  = sprintf("%d ",  round($var_347/1024)) . $var_16->gettext($var_320);
        }
        else {
            $var_320 = 'B';
            $var_348  = sprintf('%d ', $var_347) . $var_16->gettext($var_320);
        }

        return $var_348;
    }

    
    public function fn_47($var_349)
    {
        if (isset($var_349->d_parameters['size'])) {
            $var_350 = $var_16->fn_19((int)$var_349->d_parameters['size']);
        }
        else {
          $var_350 = $var_349->var_350;
          if ($var_349->var_351 == 'base64') {
            $var_350 = $var_350 / 1.33;
          }

          $var_350 = '~' . $var_16->fn_19($var_350);
        }

        return $var_350;
    }

    
    public static function fn_48($var_352 = null, $var_238 = null, &$var_353 = false)
    {
        
        

        $var_354  = $var_352 ?: rcube_utils::get_input_value('_uid', var_355);
        $var_356 = $var_238 ?: (string)rcube_utils::get_input_value('_mbox', var_355);

        
        if (is_array($var_354) && !isset($var_354[0])) {
            return $var_354;
        }

        $var_273 = array();

        
        if ($var_354 == '*' && is_object($var_127['search'][1]) && $var_127['search'][1]->var_357) {
            $var_353 = true;
            
            foreach ($var_127['search'][1]->var_358 as $var_359) {
                $var_238 = $var_359->get_parameters('MAILBOX');
                $var_273[$var_238] = $var_359->get();
            }
        }
        else {
            if (is_string($var_354))
                $var_354 = explode(',', $var_354);

            
            foreach ((array)$var_354 as $var_361) {
                list($var_361, $var_238) = explode('-', $var_361, 2);
                if (!strlen($var_238)) {
                    $var_238 = $var_356;
                }
                else {
                    $var_353 = true;
                }

                if ($var_361 == '*') {
                    $var_273[$var_238] = $var_361;
                }
                else {
                    $var_273[$var_238][] = $var_361;
                }
            }
        }

        return $var_273;
    }

    
    public function fn_49($var_270)
    {
        if (!strpos($var_270, '/')) {
            $var_270 = "program/resources/$var_270";
        }

        $var_362 = $var_16->var_23->get('assets_dir');

        if ($var_362) {
            $var_240 = slashify($var_362) . $var_270;
            if (@file_exists($var_240)) {
                $var_270 = $var_240;
            }
        }

        return file_get_contents($var_270, false);
    }


    

    public static function fn_50($var_270, $var_163, $var_363 = 0)
    {
        rcube_utils::fn_50($var_270, $var_163, $var_363);
    }

    public function fn_51()
    {
        return $var_16->fn_52();
    }

    public function fn_53()
    {
        return $var_16->storage_init();
    }

    
    public function fn_52()
    {
        $var_110 = $var_16->get_storage();

        if ($var_127['storage_host'] && !$var_110->is_connected()) {
            $var_94 = $var_127['storage_host'];
            $var_34 = $var_127['username'];
            $var_106 = $var_127['storage_port'];
            $var_105  = $var_127['storage_ssl'];
            $var_93 = $var_16->decrypt($var_127['password']);

            if (!$var_110->connect($var_94, $var_34, $var_93, $var_106, $var_105)) {
                if (is_object($var_16->var_37)) {
                    $var_16->var_37->show_message('storageerror', 'error');
                }
            }
            else {
                $var_16->set_storage_prop();
            }
        }

        return $var_110->is_connected();
    }
}
