<?php





class class_0
{
    
    const var_1 = 0;
    
    const var_2 = 1;
    
    const var_3 = 2;
    
    const var_4 = 3;
    
    const var_5 = 4;
    
    const var_6 = 5;
    
    const var_7 = 6;

    
    const var_8 = 0;
    
    const var_9 = 1;
    
    const var_10 = 2;
    
    const var_11 = 3;
    
    const var_12 = 4;

    
    const var_13 = 1;
    
    const var_14 = 2;
    
    const var_15 = 3;
    
    const var_16 = 4;
    
    const var_17 = 5;
    
    const var_18 = 6;
    
    const var_19 = 7;

    
    public $var_20;

    
    public $var_21;

    
    public $var_22;

    
    public $var_23;

    
    public $var_24;

    
    public $var_25;

    
    public $var_26;

    
    public $var_27;

    
    public $var_28;

    
    public $var_29;

    
    public $var_30;

    
    public $var_31;

    
    public $var_32;

    
    public $var_33;

    
    public $var_34;

    
    public $var_35;

    
    public $var_36;

    
    public $var_37;

    
    public $var_38;

    
    public $var_39;

    
    public $var_40;

    
    public $var_41;

    
    public $var_42;

    
    public $var_43;

    
    public $var_44;

    
    public static function fn_0($var_45)
    {
        
        $var_46 = new class_1();
        $var_46->fn_1($var_45);

        return $var_46;
    }

    
    public static function fn_2($var_20, $var_48 = null)
    {
        
        if (empty($var_20)) {
            return false;
        }

        
        $var_45 = Database::getInstance()->query(
            "SELECT * FROM {thread} WHERE threadid = :threadid",
            array(':threadid' => $var_20),
            array('return_rows' => var_50::var_51)
        );

        
        if (!$var_45) {
            return;
        }

        
        $var_46 = new class_1();
        $var_46->fn_1($var_45);

        
        if (!is_null($var_48)) {
            if ($var_46->var_24 != $var_48) {
                return false;
            }
        }

        return $var_46;
    }

    
    public static function fn_3($var_20)
    {
        
        $var_46 = self::fn_2($var_20);

        
        $var_52 = abs($var_46->var_41 - time()) > Settings::get('thread_lifetime');
        $var_53 = abs($var_46->var_36 - time()) > Settings::get('thread_lifetime');
        if (Settings::get('thread_lifetime') != 0 && $var_52 && $var_53) {
            unset($var_46);

            return false;
        }

        
        if ($var_46->var_22 == self::var_4 || $var_46->var_22 == self::var_6) {
            unset($var_46);

            return false;
        }

        
        if ($var_46->var_22 == self::var_2) {
            $var_46->var_25 = 0;
            $var_46->fn_4();
        }

        
        $var_46->fn_5(
            self::var_18,
            getlocal('Visitor joined chat again', null, $var_46->var_37, true)
        );

        return $var_46;
    }

    
    public static function fn_6()
    {
        if (Settings::get('thread_lifetime') == 0) {
            
            return;
        }

        
        $var_56 = new class_2('threads_close_old');

        if ($var_56->get()) {
            $var_49 = "SELECT * FROM {thread} "
                . "WHERE istate <> :state_closed "
                    . "AND istate <> :state_left "
                    
                    . "AND ABS(:now - dtmcreated) > :thread_lifetime "
                    
                    . "AND ( "
                        . "( "
                            
                            
                            . "lastpingagent <> 0 "
                            . "AND lastpinguser <> 0 "
                            . "AND ABS(:now - lastpinguser) > :thread_lifetime "
                            . "AND ABS(:now - lastpingagent) > :thread_lifetime "
                        . ") OR ( "
                            
                            
                            . "lastpingagent = 0 "
                            . "AND lastpinguser <> 0 "
                            . "AND ABS(:now - lastpinguser) > :thread_lifetime "
                        . ") OR ( "
                            
                            
                            . "lastpinguser = 0 "
                            . "AND lastpingagent <> 0 "
                            . "AND ABS(:now - lastpingagent) > :thread_lifetime "
                        . ") OR ( "
                            
                            
                            . "lastpinguser = 0 "
                            . "AND lastpingagent = 0 "
                        . ") "
                    . ")";

            
            $var_58 = time();
            $var_59 = Database::getInstance()->query(
                $var_49,
                array(
                    ':now' => $var_58,
                    ':state_closed' => self::var_4,
                    ':state_left' => self::var_6,
                    ':thread_lifetime' => Settings::get('thread_lifetime'),
                ),
                array('return_rows' => var_50::var_60)
            );

            
            if (count($var_59) > 0) {
                $var_61 = self::fn_11();
                foreach ($var_59 as $var_62) {
                    $var_46 = class_0::fn_0($var_62);
                    $var_46->var_21 = $var_61;
                    $var_46->var_30 = $var_58;
                    $var_46->var_31 = $var_58;
                    $var_46->var_22 = self::var_4;
                    $var_46->fn_4(false);
                    unset($var_46);
                }
            }

            
            $var_56->release();
        }
    }

    
    public static function fn_7($var_42)
    {
        if (Settings::get('max_connections_from_one_host') == 0) {
            return false;
        }

        $var_64 = Database::getInstance()->query(
            "SELECT COUNT(*) AS opened FROM {thread} WHERE remote = ? AND istate <> ? AND istate <> ?",
            array(
                $var_42,
                var_0::var_4,
                var_0::var_6,
            ),
            array('return_rows' => var_50::var_51)
        );

        if ($var_64 && isset($var_64['opened'])) {
            return $var_64['opened'] >= Settings::get('max_connections_from_one_host');
        }

        return false;
    }

    
    public function fn_8()
    {
        
        $var_65->var_20 = false;
        $var_65->var_39 = '';
        $var_65->var_33 = 0;
        $var_65->var_29 = time();
        $var_65->var_30 = time();
        $var_65->var_32 = 0;
        $var_65->var_31 = 0;
        $var_65->var_21 = 0;
        $var_65->var_22 = self::var_1;
        $var_65->var_23 = self::var_8;
        $var_65->var_24 = self::fn_18();
        $var_65->var_25 = 0;
        $var_65->var_36 = 0;
        $var_65->var_41 = 0;
        $var_65->var_40 = 0;
        $var_65->var_35 = 0;
        $var_65->var_27 = 0;
        $var_65->var_28 = 0;
        $var_65->var_26 = 0;
    }

    
    public function fn_9()
    {
        Database::getInstance()->query(
            "DELETE FROM {thread} WHERE threadid = :id LIMIT 1",
            array(':id' => $var_65->var_20)
        );

        $var_66 = array('id' => $var_65->var_20);
        var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_71, $var_66);
    }

    
    public function fn_10($var_72, $var_73)
    {
        
        
        
        $var_74 = false;
        
        $var_75 = 0;
        
        if ($var_72) {
            $var_75 = $var_65->var_36;
            $var_65->var_41 = time();
            $var_65->var_40 = $var_73 ? "1" : "0";
        } else {
            $var_75 = $var_65->var_41;
            $var_65->var_36 = time();
            $var_65->var_35 = $var_73 ? "1" : "0";
        }

        
        if ($var_65->var_22 == self::var_5 && $var_72) {
            $var_65->var_22 = self::var_1;
            $var_65->fn_4();
            return;
        }

        
        if ($var_75 > 0 && abs(time() - $var_75) > Settings::get('connection_timeout')) {
            
            if ($var_72) {
                
                
                $var_65->var_36 = 0;

                
                if ($var_65->var_22 == self::var_3) {
                    
                    $var_76 = getlocal(
                        'Your operator has connection issues. We have moved you to a priorty position in the queue. Sorry for keeping you waiting.',
                        null,
                        $var_65->var_37,
                        true
                    );
                    $var_65->fn_5(
                        self::var_17,
                        $var_76,
                        array('created' => $var_75 + Settings::get('connection_timeout'))
                    );

                    
                    $var_65->var_22 = self::var_2;
                    $var_65->var_25 = 0;

                    
                    
                    $var_74 = true;
                }
            } else {
                
                
                $var_65->var_41 = 0;

                
                if ($var_65->var_22 == self::var_3) {
                    $var_76 = getlocal(
                        'Visitor closed chat window',
                        null,
                        $var_65->var_37,
                        true
                    );
                    $var_65->fn_5(
                        self::var_15,
                        $var_76,
                        array('created' => $var_75 + Settings::get('connection_timeout'))
                    );
                }
            }
        }

        $var_65->fn_4($var_74);
    }

    
    public function fn_4($var_74 = true)
    {
        
        if ($var_74) {
            $var_65->var_21 = $var_65->fn_11();
            $var_65->var_30 = time();
        }

        $var_78 = Database::getInstance();
        if (!$var_65->var_20) {
            $var_78->query(
                ('INSERT INTO {thread} ('
                    . 'username, userid, agentname, agentid, '
                    . 'dtmcreated, dtmchatstarted, dtmmodified, dtmclosed, '
                    . 'lrevision, istate, invitationstate, ltoken, remote, '
                    . 'referer, nextagent, locale, lastpinguser, '
                    . 'lastpingagent, usertyping, agenttyping, '
                    . 'shownmessageid, useragent, messagecount, groupid'
                . ') VALUES ('
                    . ':user_name, :user_id, :agent_name, :agent_id, '
                    . ':created, :chat_started, :modified, :closed, '
                    . ':revision, :state, :invitation_state, :token, :remote, '
                    . ':referer, :next_agent, :locale, :last_ping_user, '
                    . ':last_ping_agent, :user_typing, :agent_typing, '
                    . ':shown_message_id, :user_agent, :message_count, :group_id '
                . ')'),
                array(
                    ':user_name' => $var_65->var_39,
                    ':user_id' => $var_65->var_38,
                    ':agent_name' => $var_65->var_34,
                    ':agent_id' => $var_65->var_33,
                    ':created' => $var_65->var_29,
                    ':chat_started' => $var_65->var_32,
                    ':modified' => $var_65->var_30,
                    ':closed' => $var_65->var_31,
                    ':revision' => $var_65->var_21,
                    ':state' => $var_65->var_22,
                    ':invitation_state' => $var_65->var_23,
                    ':token' => $var_65->var_24,
                    ':remote' => $var_65->var_42,
                    ':referer' => $var_65->var_43,
                    ':next_agent' => $var_65->var_25,
                    ':locale' => $var_65->var_37,
                    ':last_ping_user' => $var_65->var_41,
                    ':last_ping_agent' => $var_65->var_36,
                    ':user_typing' => $var_65->var_40,
                    ':agent_typing' => $var_65->var_35,
                    ':shown_message_id' => $var_65->var_27,
                    ':user_agent' => $var_65->var_44,
                    ':message_count' => $var_65->var_28,
                    ':group_id' => $var_65->var_26,
                )
            );
            $var_65->var_20 = $var_78->insertedId();

            $var_66 = array('thread' => $var_65);
            var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_80, $var_66);
        } else {
            
            $var_81 = class_0::fn_2($var_65->var_20);

            $var_78->query(
                ('UPDATE {thread} SET '
                    . 'username = :user_name, userid = :user_id, '
                    . 'agentname = :agent_name, agentid = :agent_id, '
                    . 'dtmcreated = :created, dtmchatstarted = :chat_started, '
                    . 'dtmmodified = :modified, dtmclosed = :closed, '
                    . 'lrevision = :revision, istate = :state, '
                    . 'invitationstate = :invitation_state, ltoken = :token, '
                    . 'remote = :remote, referer = :referer, '
                    . 'nextagent = :next_agent, locale = :locale, '
                    . 'lastpinguser = :last_ping_user, '
                    . 'lastpingagent = :last_ping_agent, '
                    . 'usertyping = :user_typing, agenttyping = :agent_typing, '
                    . 'shownmessageid = :shown_message_id, '
                    . 'useragent = :user_agent, messagecount = :message_count, '
                    . 'groupid = :group_id '
                . 'WHERE threadid = :thread_id'),
                array(
                    ':thread_id' => $var_65->var_20,
                    ':user_name' => $var_65->var_39,
                    ':user_id' => $var_65->var_38,
                    ':agent_name' => $var_65->var_34,
                    ':agent_id' => $var_65->var_33,
                    ':created' => $var_65->var_29,
                    ':chat_started' => $var_65->var_32,
                    ':modified' => $var_65->var_30,
                    ':closed' => $var_65->var_31,
                    ':revision' => $var_65->var_21,
                    ':state' => $var_65->var_22,
                    ':invitation_state' => $var_65->var_23,
                    ':token' => $var_65->var_24,
                    ':remote' => $var_65->var_42,
                    ':referer' => $var_65->var_43,
                    ':next_agent' => $var_65->var_25,
                    ':locale' => $var_65->var_37,
                    ':last_ping_user' => $var_65->var_41,
                    ':last_ping_agent' => $var_65->var_36,
                    ':user_typing' => $var_65->var_40,
                    ':agent_typing' => $var_65->var_35,
                    ':shown_message_id' => $var_65->var_27,
                    ':user_agent' => $var_65->var_44,
                    ':message_count' => $var_65->var_28,
                    ':group_id' => $var_65->var_26,
                )
            );

            $var_66 = array(
                'thread' => $var_65,
                'original_thread' => $var_81,
            );
            var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_82, $var_66);
        }
    }

    
    public function fn_12($var_83)
    {
        $var_84 = ($var_65->var_37 == get_home_locale())
            ? $var_83['vclocalename']
            : $var_83['vccommonname'];

        $var_85 = $var_65->var_25 == $var_83['operatorid']
            || $var_65->var_33 == $var_83['operatorid'];

        if ($var_65->var_22 == self::var_2 && $var_85) {
            
            if ($var_65->var_25 == $var_83['operatorid']) {
                $var_76 = getlocal(
                    "Operator <strong>{0}</strong> changed operator <strong>{1}</strong>",
                    array($var_84, $var_65->var_34),
                    $var_65->var_37,
                    true
                );
            } else {
                $var_76 = getlocal(
                    "Operator {0} is back",
                    array($var_84),
                    $var_65->var_37,
                    true
                );
            }

            
            $var_65->var_22 = self::var_3;
            $var_65->var_25 = 0;
            $var_65->var_33 = $var_83['operatorid'];
            $var_65->var_34 = $var_84;
            $var_65->fn_4();

            
            $var_65->fn_5(self::var_18, $var_76);
        }
    }

    
    public function fn_13($var_72, &$var_86)
    {
        $var_78 = Database::getInstance();

        
        $var_49 = "SELECT messageid AS id, ikind AS kind, dtmcreated AS created, "
                . " tname AS name, tmessage AS message, plugin, data "
            . "FROM {message} "
            . "WHERE threadid = :threadid AND messageid > :lastid "
                . ($var_72 ? "AND ikind <> " . self::var_15 : "")
            . " ORDER BY messageid";

        $var_87 = $var_78->query(
            $var_49,
            array(
                ':threadid' => $var_65->var_20,
                ':lastid' => $var_86,
            ),
            array('return_rows' => var_50::var_60)
        );

        foreach ($var_87 as $var_88 => $var_89) {
            
            if (!empty($var_87[$var_88]['data'])) {
                $var_87[$var_88]['data'] = unserialize(
                    $var_87[$var_88]['data']
                );
            } else {
                $var_87[$var_88]['data'] = array();
            }
        }

        
        $var_66 = array(
            'messages' => $var_87,
            'thread' => $var_65,
        );
        var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_90, $var_66);
        $var_91 = $var_66['messages'];

        
        foreach ($var_91 as $var_89) {
            if ($var_89['id'] > $var_86) {
                $var_86 = $var_89['id'];
            }
        }

        return $var_91;
    }

    
    public function fn_5($var_92, $var_93, $var_94 = array())
    {
        $var_95 = array(
            'thread' => $var_65,
            'message_kind' => $var_92,
            'message_body' => $var_93,
            'message_options' => (is_array($var_94) ? $var_94 : array()),
        );
        var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_96, $var_95);

        
        return $var_65->fn_14(
            $var_95['message_kind'],
            $var_95['message_body'],
            $var_95['message_options']
        );
    }

    
    public function fn_15($var_72)
    {
        
        if ($var_72) {
            $var_65->fn_5(
                self::var_18,
                getlocal(
                    "Visitor {0} left the chat",
                    array($var_65->var_39),
                    $var_65->var_37,
                    true
                )
            );
        } else {
            if ($var_65->var_22 == self::var_7) {
                $var_65->fn_5(
                    self::var_15,
                    getlocal(
                        'Operator canceled invitation',
                        null,
                        $var_65->var_37,
                        true
                    )
                );
            } else {
                $var_65->fn_5(
                    self::var_18,
                    getlocal(
                        "Operator {0} left the chat",
                        array($var_65->var_34),
                        $var_65->var_37,
                        true
                    )
                );
            }
        }

        
        $var_78 = Database::getInstance();

        list($var_98) = $var_78->query(
            ("SELECT COUNT(*) FROM {message} "
                . "WHERE {message}.threadid = :threadid AND ikind = :kind_user"),
            array(
                ':threadid' => $var_65->var_20,
                ':kind_user' => var_0::var_13,
            ),
            array(
                'return_rows' => var_50::var_51,
                'fetch_type' => var_50::var_99,
            )
        );

        
        if ($var_65->var_22 != self::var_4) {
            $var_65->var_22 = self::var_4;
            $var_65->var_31 = time();
            $var_65->var_28 = $var_98;
            $var_65->fn_4();

            $var_66 = array('thread' => $var_65);
            var_67\var_68\var_68::getInstance()->triggerEvent(var_67\var_68\var_70::var_100, $var_66);
        }
    }

    
    public function fn_16($var_83)
    {
        
        
        $var_101 = array(
            self::var_4,
            self::var_6,
            self::var_7,
        );
        if (in_array($var_65->var_22, $var_101)) {
            return false;
        }

        $var_102 = ($var_83['operatorid'] != $var_65->var_33)
            
            
            
            && ($var_65->var_22 == self::var_2 || $var_65->var_22 == self::var_3);

        
        
        
        $var_103 = ($var_65->var_22 == self::var_5)
            || ($var_65->var_22 == self::var_1);

        $var_104 = ($var_65->var_22 == self::var_2)
            && ($var_83['operatorid'] == $var_65->var_33);

        $var_93 = '';
        $var_84 = ($var_65->var_37 == get_home_locale())
            ? $var_83['vclocalename']
            : $var_83['vccommonname'];

        if ($var_102) {
            $var_93 = getlocal(
                "Operator <strong>{0}</strong> changed operator <strong>{1}</strong>",
                array($var_84, $var_65->var_34),
                $var_65->var_37,
                true
            );
        } elseif ($var_103) {
            $var_93 = getlocal(
                "Operator {0} joined the chat",
                array($var_84),
                $var_65->var_37,
                true
            );
        } elseif ($var_104) {
            $var_93 = getlocal(
                "Operator {0} is back",
                array($var_84),
                $var_65->var_37,
                true
            );
        }

        
        $var_65->var_22 = self::var_3;
        $var_65->var_25 = 0;
        $var_65->var_33 = $var_83['operatorid'];
        $var_65->var_34 = $var_84;
        if (empty($var_65->var_32)) {
            
            
            $var_65->var_32 = time();
        }
        $var_65->fn_4();

        
        if ($var_93) {
            $var_65->fn_5(self::var_18, $var_93);
        }

        return true;
    }

    
    public function fn_17($var_105)
    {
        
        if ($var_65->var_39 != $var_105) {
            
            $var_106 = $var_65->var_39;
            
            $var_65->var_39 = $var_105;
            $var_65->fn_4();

            
            $var_93 = getlocal(
                "The visitor changed their name <strong>{0}</strong> to <strong>{1}</strong>",
                array($var_106, $var_105),
                $var_65->var_37,
                true
            );
            $var_65->fn_5(self::var_18, $var_93);
        }
    }

    
    protected function fn_1($var_107)
    {
        $var_65->var_20 = (int)$var_107['threadid'];
        $var_65->var_39 = $var_107['username'];
        $var_65->var_38 = $var_107['userid'];
        $var_65->var_34 = $var_107['agentname'];
        $var_65->var_33 = (int)$var_107['agentid'];
        $var_65->var_29 = (int)$var_107['dtmcreated'];
        $var_65->var_32 = (int)$var_107['dtmchatstarted'];
        $var_65->var_30 = (int)$var_107['dtmmodified'];
        $var_65->var_31 = (int)$var_107['dtmclosed'];
        $var_65->var_21 = (int)$var_107['lrevision'];
        $var_65->var_22 = (int)$var_107['istate'];
        $var_65->var_23 = (int)$var_107['invitationstate'];
        $var_65->var_24 = (int)$var_107['ltoken'];
        $var_65->var_42 = $var_107['remote'];
        $var_65->var_43 = $var_107['referer'];
        $var_65->var_25 = (int)$var_107['nextagent'];
        $var_65->var_37 = $var_107['locale'];
        $var_65->var_41 = (int)$var_107['lastpinguser'];
        $var_65->var_36 = (int)$var_107['lastpingagent'];
        $var_65->var_40 = $var_107['usertyping'];
        $var_65->var_35 = $var_107['agenttyping'];
        $var_65->var_27 = (int)$var_107['shownmessageid'];
        $var_65->var_44 = $var_107['useragent'];
        $var_65->var_28 = $var_107['messagecount'];
        $var_65->var_26 = (int)$var_107['groupid'];
    }

    
    protected function fn_14($var_92, $var_93, $var_94 = array())
    {
        $var_78 = Database::getInstance();

        
        
        $var_94 += array(
            'name' => null,
            'operator_id' => 0,
            'created' => time(),
            'plugin' => '',
            'data' => array(),
        );

        
        $var_94['data'] = serialize((array) $var_94['data']);

        
        $var_49 = "INSERT INTO {message} ("
                . "threadid, ikind, tmessage, tname, agentid, "
                . "dtmcreated, plugin, data"
            . ") VALUES ("
                . ":threadid, :kind, :message, :name, :agentid, "
                . ":created, :plugin, :data"
            . ")";

        $var_108 = array(
            ':threadid' => $var_65->var_20,
            ':kind' => $var_92,
            ':message' => $var_93,
            ':name' => $var_94['name'],
            ':agentid' => $var_94['operator_id'],
            ':created' => $var_94['created'],
            ':plugin' => $var_94['plugin'],
            ':data' => $var_94['data'],
        );

        
        $var_78->query($var_49, $var_108);

        return $var_78->insertedId();
    }

    
    protected static function fn_11()
    {
        $var_78 = Database::getInstance();
        $var_78->query("UPDATE {revision} SET id=LAST_INSERT_ID(id+1)");
        $var_109 = $var_78->insertedId();

        return $var_109;
    }

    
    protected static function fn_18()
    {
        if (function_exists('openssl_random_pseudo_bytes')) {
            $var_110 = unpack('N', "\x0" . openssl_random_pseudo_bytes(3));
            $var_111 = $var_110[1];
        } else {
            $var_111 = mt_rand(99999, 99999999);
        }

        return $var_111;
    }
}
