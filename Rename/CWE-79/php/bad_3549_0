<?php

class var_0 extends var_1 {
	
	
	protected static $var_2 = true;
	
	
	static function fn_0($var_3) {
		self::$var_2 = $var_3;
	}
	
	
	static function fn_1() {
		return self::$var_2;
	}
	
	
	private $var_4 = array();
	
	
	protected $var_5 = true;
	
	
	protected static $var_6 = null;
	
	
	static function fn_3($var_7) {
		return new class_1($var_7);
	}
	
	
	static function fn_4($var_8) {
		self::$var_6 = $var_8;
	}
	
	
	static function fn_2() {
		return self::$var_6;
	}
	
	
	public function fn_5($var_9) {
		global $var_10;
		
		
		if (isset($_GET['flush']) && $_GET['flush'] == 'all') {
			if(Director::isDev() || Permission::check('ADMIN')) {
				self::fn_14();
			} else {
				Security::permissionFailure(null, 'Please log in as an administrator to flush the template cache.');
			}
		}
		
		if(substr((string) $var_9,-3) == '.ss') {
			$var_11->var_4['main'] = $var_9;
		} else {
			if(!is_array($var_9)) $var_9 = array($var_9);
			
			if(isset($_GET['debug_request'])) Debug::message("Selecting templates from the following list: " . implode(", ", $var_9));

			foreach($var_9 as $var_12) {
				
				if(strpos($var_12,'/') !== false) list($var_13, $var_12) = explode('/', $var_12, 2);
				else $var_13 = null;

				
				if(self::$var_6 && isset($var_10[$var_12]['themes'][self::$var_6])) {
					$var_11->var_4 = array_merge(
						$var_10[$var_12]['themes'][self::$var_6], 
						$var_11->var_4
					);
					
					if(isset($_GET['debug_request'])) Debug::message("Found template '$var_12' from main theme '" . self::$var_6 . "': " . var_export($var_10[$var_12]['themes'][self::$var_6], true));
				}
				
				
				if(isset($var_10[$var_12]) && (array_keys($var_10[$var_12]) != array('themes'))) {
					$var_11->var_4 = array_merge(
						$var_10[$var_12], 
						$var_11->var_4
					);
					
					if(isset($_GET['debug_request'])) Debug::message("Found template '$var_12' from main template archive, containing the following items: " . var_export($var_10[$var_12], true));
					
					unset($var_11->var_4['themes']);
				}

				if($var_13) {
					$var_11->var_4['main'] = $var_11->var_4[$var_13];
					unset($var_11->var_4[$var_13]);
				}
			}

			if(isset($_GET['debug_request'])) Debug::message("Final template selections made: " . var_export($var_11->var_4, true));

		}

		if(!$var_11->var_4) user_error("None of these templates can be found: ". implode(".ss, ", $var_9) . ".ss", var_14);

		parent::fn_5();
	}
	
	
	static function fn_6($var_9) {
		if(!is_array($var_9)) $var_9 = array($var_9);
	
		global $var_10;
		foreach($var_9 as $var_12) {
			if(strpos($var_12,'/') !== false) list($var_13, $var_12) = explode('/', $var_12, 2);
			if(isset($var_10[$var_12])) return true;
		}
		
		return false;
	}
	
	
	public static function fn_7($var_15, $var_16) {
		var_0::$var_17[$var_15] = $var_16;
	}
	protected static $var_17 = array(
		'rewriteHashlinks' => true,
	);
    
	protected static $var_18 = array();
	public static function fn_8() {
		if(var_0::$var_18) {
			return var_0::$var_18[sizeof(var_0::$var_18)-1];
		}
	}
	
	
	public function fn_9() {
		$var_11->var_5 = false;
		self::$var_17['rewriteHashlinks'] = false;
		return $var_11;
	}
	
	public function fn_10() {
		return $var_11->var_4;
	}
	
	
	public static function fn_11($var_19) {
		global $var_10;
		
		$var_20 = self::fn_12($var_19, 'Includes');
		if($var_20) return $var_20;
		
		$var_21 = self::fn_12($var_19, 'main');
		if($var_21) return $var_21;
		
		return false;
	}
	
	
	public static function fn_12($var_19, $var_22) {
		global $var_10;
		if(self::$var_6 && isset($var_10[$var_19]['themes'][self::$var_6][$var_22])) {
			return $var_10[$var_19]['themes'][self::$var_6][$var_22];
		} else if(isset($var_10[$var_19][$var_22])){
			return $var_10[$var_19][$var_22];
		} else {
			return false;
		}
	}
	
	
	public static function fn_13($var_19) {
		return file_get_contents(class_0::fn_11($var_19));
	}
	
	
	static private $var_23 = false;
	
	
	static function fn_14() {
		if (!self::$var_23) {
			$var_24 = dir(var_25);
			while (false !== ($var_26 = $var_24->read())) {
				if (strstr($var_26, '.cache')) { unlink(var_25.'/'.$var_26); }
			}
			self::$var_23 = true;
		}
	}
	
	
	public function var_28($var_29) {
		var_0::$var_18[] = $var_29;

		if(isset($var_11->var_4['main'])) {
			$var_12 = $var_11->var_4['main'];
		} else {
			$var_12 = $var_11->var_4[ reset($var_30 = array_keys($var_11->var_4)) ];
		}
		
		if(isset($_GET['debug_profile'])) Profiler::mark("SSViewer::process", " for $var_12");
		$var_31 = var_25 . "/.cache" . str_replace(array('\\','/',':'),'.',realpath($var_12));

		$var_32 = filemtime($var_12);

		if(!file_exists($var_31) || filemtime($var_31) < $var_32 || isset($_GET['flush'])) {
			if(isset($_GET['debug_profile'])) Profiler::mark("SSViewer::process - compile", " for $var_12");
			
			$var_7 = file_get_contents($var_12);
			$var_7 = class_0::parseTemplateContent($var_7, $var_12);
			
			$var_33 = fopen($var_31,'w');
			fwrite($var_33, $var_7);
			fclose($var_33);

			if(isset($_GET['debug_profile'])) Profiler::unmark("SSViewer::process - compile", " for $var_12");
		}
	
		
		if(isset($_GET['showtemplate']) && !Director::isLive()) {
			$var_34 = file($var_31);
			
			
			foreach($var_34 as $var_35 => $var_36) {
				
			}
			
		}
		
		
		foreach(array('Content', 'Layout') as $var_37) {
			if(isset($var_11->var_4[$var_37])) {
				$var_38 = new class_0($var_11->var_4[$var_37]);
				$var_29 = $var_29->customise(array(
					$var_37 => $var_38->process($var_29)
				));
			}
		}
		
		$var_40 = array();
		$var_3 = "";


		$var_41 = $var_3;		
		$var_41 = Requirements::includeInHTML($var_12, $var_41);
		
		array_pop(var_0::$var_18);

		if(isset($_GET['debug_profile'])) Profiler::unmark("SSViewer::process", " for $var_12");
		
		
		if(strpos($var_41, '<base') !== false) {
			if(var_0::$var_17['rewriteHashlinks'] === 'php') {
				$var_42 = "<?php  ?>";
			} else {
				$var_42 = Director::makeRelative(Director::absoluteURL($_SERVER['REQUEST_URI']));
			}
			$var_41 = preg_replace('/(<a[^>+]href *= *)"
		}

		return $output;
	}

	static function parseTemplateContent($content, $template="") {			
		

		if(Director::isDev() && self::$source_file_comments && $template && stripos($content, "<?xml") === false) {
			
			if(stripos($content, "<html") !== false) {
				$content = preg_replace('/(<var_43[^>]*>)/var_44', "\\1<!-- template $var_12 -->", $var_7);
				$var_7 = preg_replace('/(<\/html[^>]*>)/i', "\\1<!-- end template $var_12 -->", $var_7);
			} else {
				$var_7 = "<!-- template $var_12 -->\n" . $var_7 . "\n<!-- end template $var_12 -->";
			}
		}
		
		while(true) {
			$var_45 = $var_7;
			
			
			if(Director::isDev() && self::$var_2) $var_46 = 'return "<!-- include " . SSViewer::getTemplateFile($matches[1]) . " -->\n" 
				. SSViewer::getTemplateContent($matches[1]) 
				. "\n<!-- end include " . SSViewer::getTemplateFile($matches[1]) . " -->";';
			else $var_46 = 'return SSViewer::getTemplateContent($matches[1]);';
			
			$var_7 = preg_replace_callback('/<' . '% include +([A-Za-z0-9_]+) +%' . '>/', create_function(
				'$matches', $var_46
				), $var_7);
			if($var_45 == $var_7) break;
		}
		
		
		$var_47 = array(
			'/<%--.*--%>/U' =>  '',
			'/\$Iteration/' =>  '<?= {dlr}key ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->obj("\\4",null,true)->XML_val("\\5",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->XML_val("\\4",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)}/' => '<?= {dlr}item->XML_val("\\1",array("\\2","\\3"),true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->obj("\\3",null,true)->XML_val("\\4",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->XML_val("\\3",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)}/' => '<?= {dlr}item->XML_val("\\1",array("\\2"),true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",null,true)->obj("\\2",null,true)->XML_val("\\3",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)}/' => '<?= {dlr}item->obj("\\1",null,true)->XML_val("\\2",null,true) ?>',
			'/{\\$([A-Za-z_][A-Za-z0-9_]*)}/' => '<?= {dlr}item->XML_val("\\1",null,true) ?>\\2',

			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\(([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1")->XML_val("\\2",array("\\3"),true) ?>\\4',

			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->obj("\\4",null,true)->XML_val("\\5",null,true) ?>\\6',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2","\\3"),true)->XML_val("\\4",null,true) ?>\\5',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+), *([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",array("\\2","\\3"),true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->obj("\\3",null,true)->XML_val("\\4",null,true) ?>\\5',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",array("\\2"),true)->XML_val("\\3",null,true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\(([^),]+)\\)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",array("\\2"),true) ?>\\3',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",null,true)->obj("\\2",null,true)->XML_val("\\3",null,true) ?>\\4',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)\\.([A-Za-z0-9_]+)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->obj("\\1",null,true)->XML_val("\\2",null,true) ?>\\3',
			'/\\$([A-Za-z_][A-Za-z0-9_]*)([^A-Za-z0-9]|$)/' => '<?= {dlr}item->XML_val("\\1",null,true) ?>\\2',
		);
		
		$var_7 = preg_replace(array_keys($var_47), array_values($var_47), $var_7);
		$var_7 = str_replace('{dlr}','$',$var_7);

		
		$var_7 = ereg_replace('<!-- +pc +([A-Za-z0-9_(),]+) +-->', '<' . '% control \\1 %' . '>', $var_7);
		$var_7 = ereg_replace('<!-- +pc_end +-->', '<' . '% end_control %' . '>', $var_7);

		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1")) foreach($loop as $key => $item) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? array_push($itemStack, $item); if(($loop = $item->obj("\\1")) && ($loop = $loop->obj("\\2"))) foreach($loop as $key => $item) { ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+)\\) +%' . '>', '<? array_push($itemStack, $item); if(($loop = $item->obj("\\1")) && ($loop = $loop->obj("\\2", array("\\3")))) foreach($loop as $key => $item) { ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2"))) foreach($loop as $key => $item) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+), *([A-Za-z0-9_-]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2","\\3"))) foreach($loop as $key => $item) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +control +([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+), *([A-Za-z0-9_-]+), *([A-Za-z0-9_-]+)\\) +%' . '>', '<? array_push($itemStack, $item); if($loop = $item->obj("\\1", array("\\2", "\\3", "\\4"))) foreach($loop as $key => $item) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +end_control +%' . '>', '<? } $item = array_pop($itemStack); ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +debug +%' . '>', '<? Debug::show($item) ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +debug +([A-Za-z0-9_]+) +%' . '>', '<? Debug::show($item->cachedCall("\\1")) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? if($item->obj("\\1",null,true)->hasValue("\\2")) {  ?>', $var_7);
		
		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\(([A-Za-z0-9_-]+)\\) +%' . '>', '<? if($item->hasValue("\\1",array("\\2"))) {  ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1")) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) +%' . '>', '<? } else if($item->hasValue("\\1")) {  ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *\\|\\|? *([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1") || $item->hasValue("\\2")) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *\\|\\|? *([A-Za-z0-9_]+) +%' . '>', '<? else_if($item->hasValue("\\1") || $item->hasValue("\\2")) { ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *&&? *([A-Za-z0-9_]+) +%' . '>', '<? if($item->hasValue("\\1") && $item->hasValue("\\2")) { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *&&? *([A-Za-z0-9_]+) +%' . '>', '<? else_if($item->hasValue("\\1") && $item->hasValue("\\2")) { ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *==? *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? if($item->XML_val("\\1",null,true) == "\\2") {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *==? *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? } else if($item->XML_val("\\1",null,true) == "\\2") {  ?>', $var_7);
		
		
		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+) *!= *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? if($item->XML_val("\\1",null,true) != "\\2") {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) *!= *"?([A-Za-z0-9_-]+)"? +%' . '>', '<? } else if($item->XML_val("\\1",null,true) != "\\2") {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->cachedCall("\\1")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? $test = $item->obj("\\1",null,true)->cachedCall("\\2"); if((!is_object($test) && $test) || ($test && $test->exists())) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->obj("\\1",null,true)->cachedCall("\\2")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);

		$var_7 = ereg_replace('<' . '% +if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? $test = $item->obj("\\1",null,true)->obj("\\2",null,true)->cachedCall("\\3"); if((!is_object($test) && $test) || ($test && $test->exists())) {  ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +else_if +([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+)\\.([A-Za-z0-9_]+) +%' . '>', '<? } else if(($test = $item->obj("\\1",null,true)->obj("\\2",null,true)->cachedCall("\\3")) && ((!is_object($test) && $test) || ($test && $test->exists()) )) {  ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +else +%' . '>', '<? } else { ?>', $var_7);
		$var_7 = ereg_replace('<' . '% +end_if +%' . '>', '<? }  ?>', $var_7);

		
		
		ereg('.*[\/](.*)',$var_12,$var_48);
		
		
		$var_7 = ereg_replace('<' . '% +_t\((\'([^\.\']*)\'|"([^\."]*)")(([^)]|\)[^ ]|\) +[^% ])*)\) +%' . '>', '<?= _t(\''. $var_48[1] . '.\\2\\3\'\\4) ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +_t\((\'([^\']*)\'|"([^"]*)")(([^)]|\)[^ ]|\) +[^% ])*)\) +%' . '>', '<?= _t(\'\\2\\3\'\\4) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +sprintf\(_t\((\'([^\.\']*)\'|"([^\."]*)")(([^)]|\)[^ ]|\) +[^% ])*)\),\<\?= +([^\?]*) +\?\>) +%' . '>', '<?= sprintf(_t(\''. $var_48[1] . '.\\2\\3\'\\4),\\6) ?>', $var_7);
		
		$var_7 = ereg_replace('<' . '% +sprintf\(_t\((\'([^\']*)\'|"([^"]*)")(([^)]|\)[^ ]|\) +[^% ])*)\),\<\?= +([^\?]*) +\?\>) +%' . '>', '<?= sprintf(_t(\'\\2\\3\'\\4),\\6) ?>', $var_7);

		
		$var_7 = ereg_replace('<' . '% +base_tag +%' . '>', '<base href="<?= Director::absoluteBaseURL(); ?>" />', $var_7);

		$var_7 = ereg_replace('<' . '% +current_page +%' . '>', '<?= $_SERVER[SCRIPT_URL] ?>', $var_7);
		
		
		preg_match_all('/<% require ([a-zA-Z]+)\(([^\)]+)\) %>/', $var_7, $var_49);
		$var_7 = preg_replace('/<% require .* %>/', null, $var_7);
		
		
		$var_7 = ereg_replace('<!-- +if +([A-Za-z0-9_]+) +-->', '<? if($item->cachedCall("\\1")) { ?>', $var_7);
		$var_7 = ereg_replace('<!-- +else +-->', '<? } else { ?>', $var_7);
		$var_7 = ereg_replace('<!-- +if_end +-->', '<? }  ?>', $var_7);
			
		
		$var_7 = var_50('href *= *"
	
		
		$content = ereg_replace('<\?var_51([^>]+)\var_52?' . '>', '<

		
		$var_7 = str_replace('<?=',"\nSSVIEWER;\n\$val .= ", $var_7);
		$var_7 = str_replace('<?',"\nSSVIEWER;\n", $var_7);
		$var_7 = str_replace('?>',";\n \$val .= <<<SSVIEWER\n", $var_7);
		
		$var_41  = "<?php\n";
		for($var_44 = 0; $var_44 < count($var_49[0]); $var_44++) {
			$var_41 .= 'Requirements::' . $var_49[1][$var_44] . '(\'' . $var_49[2][$var_44] . "');\n";
		}
		$var_41 .= '$val .= <<<SSVIEWER' . "\n" . $var_7 . "\nSSVIEWER;\n"; 
		
		
		$var_41 = ereg_replace('<
	
		return $output;
	}

	
	public function templates() {
		return $this->chosenTemplates;
	}
	
	
	public function setTemplateFile($type, $file) {
		$this->chosenTemplates[$type] = $file;
	}
}


class SSViewer_FromString extends SSViewer {
	protected $content;
	
	public function __construct($content) {
		$this->content = $content;
	}
	
	public function process($item) {
		$template = SSViewer::parseTemplateContent($this->content);

		$tmpFile = tempnam(TEMP_FOLDER,"");
		$fh = fopen($tmpFile, 'var_53');
		var_54($var_33, $var_12);
		var_55($var_33);

		if(isset($_GET['showtemplate']) && $_GET['showtemplate']) {
			$var_34 = file($var_56);
			
			
			foreach($var_34 as $var_35 => $var_36) {var_52
				
			}
			
		}

		$var_40 = array();
		$var_3 = "";

		unlink($var_56);
		

		return $var_3;
	}
}
	

function supressOutput() {
	return "";
}

?>
