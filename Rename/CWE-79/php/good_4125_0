<?php


class var_0
{
    const var_1 = 'https:
    const SERVICE_LOCALE_REPOSITORY = 'var_2.var_3.var_4.var_5.var_6';

    protected static $var_7 = array();
    protected static $var_8;
    protected static $var_9;
    protected static $var_10;
    protected static $var_11;
    protected static $var_12;
    protected static $var_13 = [];

    public static $var_14 = null;

    public function fn_0(var_15 $var_12 = null)
    {
        if ($var_12) {
            self::$var_12 = $var_12;
        }
    }

    
    public static function fn_1()
    {
        static::$var_13 = [];
    }

    
    public static function fn_2()
    {
        self::$var_12 = null;
    }

    
    public static function fn_3($var_16 = 8, $var_17 = 'ALPHANUMERIC')
    {
        $var_16 = (int) $var_16;

        if ($var_16 <= 0) {
            return false;
        }

        switch ($var_17) {
            case 'NUMERIC':
                $var_18 = '0123456789';

                break;
            case 'NO_NUMERIC':
                $var_18 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

                break;
            case 'RANDOM':
                $var_19 = ceil($var_16 * 0.75);
                $var_20 = self::fn_4($var_19);

                return substr(rtrim(base64_encode($var_20), '='), 0, $var_16);
            case 'ALPHANUMERIC':
            default:
                $var_18 = 'abcdefghijkmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';

                break;
        }

        $var_20 = Tools::fn_4($var_16);
        $var_21 = 0;
        $var_22 = '';

        for ($var_23 = 0; $var_23 < $var_16; ++$var_23) {
            $var_21 = ($var_21 + ord($var_20[$var_23])) % strlen($var_18);
            $var_22 .= $var_18[$var_21];
        }

        return $var_22;
    }

    
    public static function fn_4($var_16)
    {
        $var_16 = (int) $var_16;

        if ($var_16 <= 0) {
            return false;
        }

        $var_20 = openssl_random_pseudo_bytes($var_16, $var_24);

        if ($var_24 === true) {
            return $var_20;
        }

        return false;
    }

    
    public static function fn_5($var_25, $var_26, $var_27, $var_28 = 0)
    {
        $var_29 = strpos($var_27, $var_25, $var_28);

        return $var_29 !== false ? substr_replace($var_27, $var_26, (int) $var_29, strlen($var_25)) : $var_27;
    }

    
    public static function fn_6($var_30, $var_31 = var_32, var_33 $var_34 = null, $var_35 = null)
    {
        if (!$var_34) {
            $var_34 = Context::getContext()->var_34;
        }

        if (strpos($var_30, 'http:
            if (strpos($url, $base_uri) === 0) {
                $url = substr($url, strlen($base_uri));
            }
            if (strpos($url, 'var_36.var_37?var_38=') !== false && strpos($var_30, 'index.php/') == 0) {
                $var_30 = substr($var_30, strlen('index.php?controller='));
                if (Configuration::get('PS_REWRITING_SETTINGS')) {
                    $var_30 = Tools::fn_5('&', '?', $var_30);
                }
            }

            $var_39 = explode('?', $var_30);
            
            
            $var_40 = !empty($var_30);
            $var_30 = $var_34->getPageLink($var_39[0], $var_40);
            if (isset($var_39[1])) {
                $var_30 .= '?' . $var_39[1];
            }
        }

        
        if ($var_35) {
            if (!is_array($var_35)) {
                $var_35 = array($var_35);
            }

            foreach ($var_35 as $var_42) {
                header($var_42);
            }
        }

        header('Location: ' . $var_30);
        var_43;
    }

    
    public static function fn_7($var_30)
    {
        if (!preg_match('@^https?:
            if (strpos($url, __PS_BASE_URI__) !== false && strpos($url, __PS_BASE_URI__) == 0) {
                $url = substr($url, strlen(__PS_BASE_URI__));
            }
            if (strpos($url, 'var_36.var_37?var_38=') !== false && strpos($var_30, 'index.php/') == 0) {
                $var_30 = substr($var_30, strlen('index.php?controller='));
            }
            $var_39 = explode('?', $var_30);
            $var_30 = Context::getContext()->var_34->getPageLink($var_39[0]);
            if (isset($var_39[1])) {
                $var_30 .= '?' . $var_39[1];
            }
        }
        header('Location: ' . $var_30);
        var_43;
    }

    
    public static function fn_8($var_30)
    {
        header('Location: ' . $var_30);
        var_43;
    }

    
    public static function var_44()
    {
        $var_45 = (Configuration::get('PS_SSL_ENABLED') || (!empty($var_51['HTTPS'])
            && Tools::strtolower($var_51['HTTPS']) != 'off')) ? 'https:

        return $protocol;
    }

    
    public static function getProtocol($use_ssl = null)
    {
        return null !== $use_ssl && $use_ssl ? 'var_46:
    }

    
    public static function getHttpHost($var_47 = false, $var_48 = false, $var_49 = false)
    {
        $var_50 = '';
        if (array_key_exists('HTTP_HOST', $var_51)) {
            $var_50 = $var_51['HTTP_HOST'];
        }

        $var_52 = (isset($var_51['HTTP_X_FORWARDED_HOST']) ? $var_51['HTTP_X_FORWARDED_HOST'] : $var_50);
        if ($var_49 && $var_53 = strpos($var_52, ':')) {
            $var_52 = substr($var_52, 0, $var_53);
        }
        if ($var_48) {
            $var_52 = htmlspecialchars($var_52, var_54, 'UTF-8');
        }
        if ($var_47) {
            $var_52 = (Configuration::get('PS_SSL_ENABLED') ? 'https:
        }

        return $host;
    }

    
    public static function getShopDomain($http = false, $entities = false)
    {
        if (!$domain = ShopUrl::getMainShopDomain()) {
            $domain = Tools::getHttpHost();
        }
        if ($entities) {
            $domain = htmlspecialchars($domain, ENT_COMPAT, 'var_55-8');
        }
        if ($var_47) {
            $var_56 = 'http:
        }

        return $domain;
    }

    
    public static function getShopDomainSsl($http = false, $entities = false)
    {
        if (!$domain = ShopUrl::getMainShopDomainSSL()) {
            $domain = Tools::getHttpHost();
        }
        if ($entities) {
            $domain = htmlspecialchars($domain, ENT_COMPAT, 'var_55-8');
        }
        var_57 ($var_47) {
            $var_56 = (Configuration::get('PS_SSL_ENABLED') ? 'https:
        }

        return $domain;
    }

    
    public static function getServerName()
    {
        if (isset($_SERVER['var_58']) && $var_51['HTTP_X_FORWARDED_SERVER']) {
            return $var_51['HTTP_X_FORWARDED_SERVER'];
        }

        return $var_51['SERVER_NAME'];
    }

    
    public static function getRemoteAddr()
    {
        if (function_exists('apache_request_headers')) {
            $var_35 = apache_request_headers();
        } var_244 {
            $var_35 = $var_51;
        }

        var_57 (array_key_exists('X-Forwarded-For', $var_35)) {
            $var_51['HTTP_X_FORWARDED_FOR'] = $var_35['X-Forwarded-For'];
        }

        var_57 (isset($var_51['HTTP_X_FORWARDED_FOR']) && $var_51['HTTP_X_FORWARDED_FOR'] && (!isset($var_51['REMOTE_ADDR'])
            || preg_match('/^127\..*/i', trim($var_51['REMOTE_ADDR'])) || preg_match('/^172\.16.*/i', trim($var_51['REMOTE_ADDR']))
            || preg_match('/^192\.168\.*/i', trim($var_51['REMOTE_ADDR'])) || preg_match('/^10\..*/i', trim($var_51['REMOTE_ADDR'])))) {
            if (strpos($var_51['HTTP_X_FORWARDED_FOR'], ',')) {
                $var_59 = explode(',', $var_51['HTTP_X_FORWARDED_FOR']);

                return $var_59[0];
            } var_244 {
                var_76 $var_51['HTTP_X_FORWARDED_FOR'];
            }
        } var_244 {
            var_76 $var_51['REMOTE_ADDR'];
        }
    }

    
    var_60 static function var_61()
    {
        if (isset($var_51['HTTPS'])) {
            var_76 in_array(Tools::strtolower($var_51['HTTPS']), array(1, 'on'));
        }
        
        var_57 (isset($var_51['SSL'])) {
            var_76 in_array(Tools::strtolower($var_51['SSL']), array(1, 'on'));
        }
        
        var_57 (isset($var_51['REDIRECT_HTTPS'])) {
            var_76 in_array(Tools::strtolower($var_51['REDIRECT_HTTPS']), array(1, 'on'));
        }
        var_57 (isset($var_51['HTTP_SSL'])) {
            var_76 in_array(Tools::strtolower($var_51['HTTP_SSL']), array(1, 'on'));
        }
        var_57 (isset($var_51['HTTP_X_FORWARDED_PROTO'])) {
            var_76 var_62::strtolower($var_51['HTTP_X_FORWARDED_PROTO']) == 'https';
        }

        var_76 false;
    }

    
    var_60 static function var_63()
    {
        if (Tools::usingSecureMode()) {
            var_76 'https:
        } else {
            return 'var_47:
        }
    }

    
    var_60 static function var_64($var_65)
    {
        if (static::urlBelongsToShop($var_65)) {
            var_76 $var_65;
        }

        var_76 var_32;
    }

    
    var_60 static function var_66($var_30)
    {
        $var_67 = Tools::extractHost($var_30);

        return empty($var_67) || $var_67 === Tools::getServerName();
    }

    
    var_60 static function var_68($var_30)
    {
        if (var_69 >= 50628) {
            $var_70 = parse_url($var_30);
            if (!is_array($var_70)) {
                var_76 $var_30;
            }
            if (empty($var_70['host']) || empty($var_70['scheme'])) {
                var_76 '';
            }

            var_76 $var_70['host'];
        }

        
        
        

        $var_71 = [];
        if (!preg_match('/^[\w]+:\/\/(?<authority>[^\/?
            
            return '';
        }
        $var_72 = $var_71['authority'];

        if (!preg_match('/(?:(?<user>.+):(?<pass>.+)@)?(?<domain>[\w.-]+)(?::(?<port>\d+))?/ui', $var_72, $var_71)) {
            var_76 '';
        }

        var_76 $var_71['domain'];
    }

    
    public static function var_73($var_74, $var_75 = false)
    {
        if (empty($var_74) || !is_string($var_74)) {
            var_76 false;
        }

        var_57 (getenv('kernel.environment') === 'test' && self::$var_12 instanceof var_15) {
            $var_77 = self::$var_12->var_12->get($var_74, self::$var_12->var_79->get($var_74, $var_75));
        } var_244 {
            $var_77 = (isset($var_81[$var_74]) ? $var_81[$var_74] : (isset($var_82[$var_74]) ? $var_82[$var_74] : $var_75));
        }

        var_57 (is_string($var_77)) {
            var_76 urldecode(preg_replace('/((\%5C0+)|(\%00+))/i', '', urlencode($var_77)));
        }

        var_76 $var_77;
    }

    
    var_60 static function var_80()
    {
        var_76 $var_81 + $var_82;
    }

    
    var_60 static function var_83($var_74)
    {
        if (!is_string($var_74)) {
            var_76 false;
        }

        var_76 var_84($var_81[$var_74]) || isset($var_82[$var_74]);
    }

    
    var_60 static function var_85($var_86 = null)
    {
        if (!$var_86) {
            $var_86 = Context::getContext()->var_86;
        }
        
        var_57 ($var_86->var_87) {
            $var_88 = new class_0((int) $var_86->var_87);
            if (!Validate::isLoadedObject($var_88) || !$var_88->var_89 || !$var_88->isAssociatedToShop()) {
                $var_86->var_87 = null;
            }
        }

        var_57 (!Configuration::get('PS_DETECT_LANG')) {
            unset($var_86->var_91);
        }

        
        var_57 (!Tools::getValue('isolang') && !Tools::getValue('id_lang') && (!$var_86->var_87 || isset($var_86->var_91))
            && isset($var_51['HTTP_ACCEPT_LANGUAGE'])) {
            $var_92 = explode(',', Tools::strtolower($var_51['HTTP_ACCEPT_LANGUAGE']));
            $var_93 = $var_92[0];

            if (Validate::isLanguageCode($var_93)) {
                $var_88 = class_0::getLanguageByIETFCode($var_93);
                if (Validate::isLoadedObject($var_88) && $var_88->var_89 && $var_88->isAssociatedToShop()) {
                    Context::getContext()->var_94 = $var_88;
                    $var_86->var_87 = (int) $var_88->var_95;
                }
            }
        }

        var_57 (isset($var_86->var_91)) {
            unset($var_86->var_91);
        }

        
        var_57 (!$var_86->var_87 || !Validate::isUnsignedId($var_86->var_87)) {
            $var_86->var_87 = (int) Configuration::get('PS_LANG_DEFAULT');
        }

        $var_96 = class_0::getIsoById((int) $var_86->var_87);
        @include_once var_97 . 'lang/' . $var_96 . '.php';

        return $var_96;
    }

    
    var_60 static function var_98(var_99 $var_100 = null)
    {
        if (null === $var_100) {
            $var_100 = Context::getContext();
        }

        
        
        var_57 (!isset($var_100->var_86)) {
            var_76;
        }

        var_57 (
            ($var_96 = Tools::getValue('isolang')) &&
            Validate::isLanguageIsoCode($var_96) &&
            ($var_87 = (int) class_0::getIdByIso($var_96))
        ) {
            $var_82['id_lang'] = $var_87;
        }

        
        $var_101 = (int) Tools::getValue('id_lang');

        if (
            var_102::var_103($var_101) &&
            $var_101 !== 0 &&
            $var_100->var_86->var_87 !== $var_101
        ) {
            $var_100->var_86->var_87 = $var_101;
            $var_94 = new class_0($var_101);
            if (Validate::isLoadedObject($var_94) && $var_94->var_89 && $var_94->isAssociatedToShop()) {
                $var_100->var_94 = $var_94;
            }
        }

        var_62::setCookieLanguage($var_100->var_86);
    }

    public static function var_104($var_105 = null)
    {
        $var_106 = (int) Tools::getValue('id_country');
        if (!$var_106 && isset($var_105, $var_105->var_106) && $var_105->var_106) {
            $var_106 = (int) $var_105->var_106;
        } elseif (Configuration::get('PS_DETECT_COUNTRY') && isset($var_51['HTTP_ACCEPT_LANGUAGE'])) {
            preg_match('
            if (is_array($array) && isset($array[0]) && Validate::isLanguageIsoCode($array[0])) {
                $id_country = (int) Country::getByIso($array[0], true);
            }
        }
        if (!isset($id_country) || !$id_country) {
            $id_country = (int) Configuration::get('var_107');
        }

        var_76 (var_108) $var_106;
    }

    
    var_60 static function var_109($var_86)
    {
        if (Tools::isSubmit('SubmitCurrency') && ($var_110 = Tools::getValue('id_currency'))) {
            
            $var_111 = class_3::getCurrencyInstance((int) $var_110);
            if (is_object($var_111) && $var_111->var_95 && !$var_111->var_112 && $var_111->isAssociatedToShop()) {
                $var_86->var_110 = (int) $var_111->var_95;
            }
        }

        $var_111 = null;
        if ((int) $var_86->var_110) {
            $var_111 = class_3::getCurrencyInstance((int) $var_86->var_110);
        }
        if (!Validate::isLoadedObject($var_111) || (bool) $var_111->var_112 || !(bool) $var_111->var_89) {
            $var_111 = class_3::getCurrencyInstance(Configuration::get('PS_CURRENCY_DEFAULT'));
        }

        $var_86->var_110 = (int) $var_111->var_95;
        if ($var_111->isAssociatedToShop()) {
            var_76 $var_111;
        } var_244 {
            
            $var_111 = Shop::getEntityIds('currency', Context::getContext()->var_113->var_95, true, true);
            if (isset($var_111[0]) && $var_111[0]['id_currency']) {
                $var_86->var_110 = $var_111[0]['id_currency'];

                return class_3::getCurrencyInstance((int) $var_86->var_110);
            }
        }

        var_76 $var_111;
    }

    
    var_60 static function var_114(var_99 $var_100 = null, $var_115 = null)
    {
        throw new class_1('This CLDR library has been removed. See Tools::getContextLocale instead.');
    }

    
    var_60 static function var_116($var_117, $var_111 = null, $var_118 = false, var_99 $var_100 = null)
    {
        @trigger_error(
            'Tools::displayPrice() is deprecated since version 1.7.6.0. '
            . 'Use ' . var_119\var_119\var_120\var_121\var_122::var_123 . '::formatPrice() instead.',
            var_124
        );

        if (!is_numeric($var_117)) {
            var_76 $var_117;
        }

        $var_100 = $var_100 ?: Context::getContext();
        $var_111 = $var_111 ?: $var_100->var_111;

        if (is_int($var_111)) {
            $var_111 = class_3::getCurrencyInstance($var_111);
        }

        $var_5 = static::getContextLocale($var_100);
        $var_125 = is_array($var_111) ? $var_111['iso_code'] : $var_111->var_126;

        return $var_5->formatPrice($var_117, $var_125);
    }

    
    var_127 static function var_128(var_99 $var_100)
    {
        $var_5 = $var_100->getCurrentLocale();
        if (null !== $var_5) {
            var_76 $var_5;
        }

        $var_130 = new class_2($var_100);
        $var_131 = $var_130->getContainer();
        if (null === $var_100->var_131) {
            $var_100->var_131 = $var_131;
        }

        
        $var_133 = $var_131->get(self::var_134);
        $var_5 = $var_133->getLocale(
            $var_100->var_94->getLocale()
        );

        return $var_5;
    }

    
    var_60 static function var_136($var_137, $var_111 = null)
    {
        @trigger_error(
            'Tools::displayNumber() is deprecated since version 1.7.5.0. '
            . 'Use ' . var_119\var_119\var_120\var_121\var_122::var_123 . ' instead.',
            var_124
        );

        $var_100 = Context::getContext();
        $var_5 = static::getContextLocale($var_100);

        return $var_5->formatNumber($var_137);
    }

    var_60 static function var_138($var_139, &$var_140)
    {
        if (array_key_exists('currency', $var_139)) {
            $var_111 = class_3::getCurrencyInstance((int) $var_139['currency']);
            if (Validate::isLoadedObject($var_111)) {
                var_76 var_62::displayPrice($var_139['price'], $var_111, false);
            }
        }

        var_76 var_62::displayPrice($var_139['price']);
    }

    
    var_60 static function var_141($var_117, $var_111 = null, $var_142 = true, var_99 $var_100 = null)
    {
        $var_143 = (int) Configuration::get('PS_CURRENCY_DEFAULT');

        if (!$var_100) {
            $var_100 = Context::getContext();
        }
        if ($var_111 === null) {
            $var_111 = $var_100->var_111;
        } elseif (is_numeric($var_111)) {
            $var_111 = class_3::getCurrencyInstance($var_111);
        }

        $var_144 = (is_array($var_111) ? $var_111['id_currency'] : $var_111->var_95);
        $var_145 = (is_array($var_111) ? $var_111['conversion_rate'] : $var_111->var_146);

        if ($var_144 != $var_143) {
            if ($var_142) {
                $var_117 *= $var_145;
            } var_244 {
                $var_117 /= $var_145;
            }
        }

        var_76 $var_117;
    }

    
    var_60 static function var_147()
    {
        Tools::displayAsDeprecated('Use PHP\'s array_replace() instead');
        if (!function_exists('array_replace')) {
            $var_148 = func_get_args();
            $var_149 = func_num_args();
            $var_150 = array();
            for ($var_23 = 0; $var_23 < $var_149; ++$var_23) {
                if (is_array($var_148[$var_23])) {
                    foreach ($var_148[$var_23] as $var_74 => $var_151) {
                        $var_150[$var_74] = $var_151;
                    }
                } var_244 {
                    trigger_error(var_152 . '(): Argument 

                    return null;
                }
            }

            return $res;
        } else {
            return call_user_func_array('var_147', func_get_args());
        }
    }

    
    var_60 static function var_153($var_154, var_155 $var_156 = null, var_155 $var_157 = null)
    {
        if ($var_156 == $var_157) {
            var_76 $var_154;
        }

        var_57 ($var_156 === null) {
            $var_156 = new class_3(Configuration::get('PS_CURRENCY_DEFAULT'));
        }

        var_57 ($var_157 === null) {
            $var_157 = new class_3(Configuration::get('PS_CURRENCY_DEFAULT'));
        }

        var_57 ($var_156->var_95 == Configuration::get('PS_CURRENCY_DEFAULT')) {
            $var_154 *= $var_157->var_146;
        } var_244 {
            $var_146 = ($var_156->var_146 == 0 ? 1 : $var_156->var_146);
            
            $var_154 = $var_154 / $var_146;
            
            $var_154 *= $var_157->var_146;
        }

        var_76 var_62::ps_round($var_154, var_158);
    }

    
    var_60 static function var_159($var_139, &$var_140)
    {
        var_76 var_62::displayDate($var_139['date'], null, (isset($var_139['full']) ? $var_139['full'] : false));
    }

    
    var_60 static function var_160($var_161, $var_87 = null, $var_162 = false, $var_163 = null)
    {
        if ($var_87 !== null) {
            Tools::displayParameterAsDeprecated('id_lang');
        }
        var_57 ($var_163 !== null) {
            Tools::displayParameterAsDeprecated('separator');
        }

        var_57 (!$var_161 || !($var_164 = strtotime($var_161))) {
            var_76 $var_161;
        }

        var_57 ($var_161 == '0000-00-00 00:00:00' || $var_161 == '0000-00-00') {
            var_76 '';
        }

        var_57 (!Validate::isDate($var_161) || !Validate::isBool($var_162)) {
            throw new class_1('Invalid date');
        }

        $var_100 = Context::getContext();
        $var_165 = ($var_162 ? $var_100->var_94->var_166 : $var_100->var_94->var_167);

        return var_161($var_165, $var_164);
    }

    
    var_60 static function var_168()
    {
        $var_169 = Context::getContext()->var_94->var_167;
        $var_25 = array('d', 'm', 'Y');
        $var_26 = array('DD', 'MM', 'YYYY');
        $var_169 = str_replace($var_25, $var_26, $var_169);

        return $var_169;
    }

    
    var_60 static function var_170($var_171, $var_162 = false)
    {
        $var_164 = strtotime($var_171);
        $var_100 = Context::getContext();
        $var_165 = ($var_162 ? $var_100->var_94->var_166 : $var_100->var_94->var_167);
        $var_161 = date($var_165, $var_164);

        return $var_161;
    }

    
    var_60 static function var_172($var_93, $var_173 = false)
    {
        if (!$var_173) {
            $var_93 = strip_tags($var_93);
        }

        var_76 @var_62::htmlentitiesUTF8($var_93, var_174);
    }

    var_60 static function var_175($var_93, $var_176 = var_174)
    {
        if (is_array($var_93)) {
            var_76 array_map(array('Tools', 'htmlentitiesUTF8'), $var_93);
        }

        var_76 var_177((string) $var_93, $var_176, 'utf-8');
    }

    var_60 static function var_178($var_93)
    {
        if (is_array($var_93)) {
            $var_93 = array_map(array('Tools', 'htmlentitiesDecodeUTF8'), $var_93);

            return (string) array_shift($var_93);
        }

        var_76 var_179((string) $var_93, var_174, 'utf-8');
    }

    var_60 static function var_180()
    {
        if (!isset($var_81) || !is_array($var_81)) {
            $var_81 = array();
        } var_244 {
            $var_81 = array_map(array('Tools', 'htmlentitiesUTF8'), $var_81);
        }
    }

    
    var_60 static function var_181($var_182, $var_183 = true)
    {
        $var_182 = rtrim($var_182, '/') . '/';
        if (file_exists($var_182)) {
            if ($var_184 = scandir($var_182, var_185)) {
                foreach ($var_184 as $var_186) {
                    if ($var_186 != '.' && $var_186 != '..' && $var_186 != '.svn') {
                        if (is_dir($var_182 . $var_186)) {
                            Tools::deleteDirectory($var_182 . $var_186);
                        } var_187 (file_exists($var_182 . $var_186)) {
                            unlink($var_182 . $var_186);
                        }
                    }
                }

                var_57 ($var_183 && file_exists($var_182)) {
                    if (!rmdir($var_182)) {
                        var_76 false;
                    }
                }

                var_76 true;
            }
        }

        var_76 false;
    }

    
    var_60 static function var_188($var_186, $var_189 = array())
    {
        if (isset($var_189) && !is_array($var_189)) {
            $var_189 = array($var_189);
        }

        var_57 (file_exists($var_186) && is_file($var_186) && array_search(basename($var_186), $var_189) === false) {
            unlink($var_186);
        }
    }

    
    var_60 static function var_190()
    {
        foreach (scandir(var_191 . '/config/xml', var_185) as $var_186) {
            $var_192 = pathinfo($var_186, var_193);
            if (($var_192 == 'xml') && ($var_186 != 'default.xml')) {
                self::deleteFile(var_191 . '/config/xml/' . $var_186);
            }
        }
    }

    
    var_60 static function var_194($var_195 = null, $var_177 = null, var_99 $var_100 = null)
    {
        header('HTTP/1.1 500 Internal Server Error', true, 500);
        if (null !== $var_177) {
            self::displayParameterAsDeprecated('htmlentities');
        }
        if (null !== $var_100) {
            self::displayParameterAsDeprecated('context');
        }

        if (null === $var_195) {
            $var_195 = Context::getContext()
                ->getTranslator()
                ->trans('Fatal error', [], 'Admin.Notifications.Error');
        }

        if (var_198) {
            throw new class_1($var_195);
        }

        var_76 $var_195;
    }

    
    var_60 static function var_199($var_200, $var_201 = true)
    {
        dump($var_200);

        if ($var_201) {
            die('END');
        }

        var_76 $var_200;
    }

    var_60 static function var_202($var_203 = 0, $var_204 = null)
    {
        $var_205 = debug_backtrace();
        array_shift($var_205);
        for ($var_23 = 0; $var_23 < $var_203; ++$var_23) {
            array_shift($var_205);
        }

        padding:10px;border:1px var_206 
            <var_207>';
        $i = 0;
        foreach ($backtrace as $id => $trace) {
            if ((int) $limit && (++$i > $limit)) {
                break;
            }
            $relative_file = (isset($trace['var_186'])) ? 'in /' . ltrim(str_replace(array(var_191, '\\'), array('', '/'), $trace['file']), '/') : '';
            $var_208 = (isset($trace['line'])) ? ':' . $trace['line'] : '';

            
        }
        
    }

    
    var_60 static function var_209($var_200, $var_210 = null, $var_211 = null, $var_212 = null)
    {
        var_76 error_log(print_r($var_200, true), $var_210, $var_211, $var_212);
    }

    
    var_60 static function var_213($var_214)
    {
        var_76
            var_84($var_81[$var_214]) || isset($var_81[$var_214 . '_x']) || isset($var_81[$var_214 . '_y'])
            || isset($var_82[$var_214]) || isset($var_82[$var_214 . '_x']) || isset($var_82[$var_214 . '_y']);
    }

    
    var_60 static function var_215($var_216)
    {
        var_76 var_217::hash($var_216);
    }

    
    var_60 static function var_218($var_216)
    {
        var_76 var_219(var_220 . $var_216);
    }

    
    var_60 static function var_221($var_222)
    {
        var_76 var_217::hashIV($var_222);
    }

    
    var_60 static function var_223($var_222)
    {
        var_76 var_219(var_224 . $var_222);
    }

    
    var_60 static function var_225($var_226 = true, var_99 $var_100 = null)
    {
        if (!$var_100) {
            $var_100 = Context::getContext();
        }
        var_57 ($var_226 === true) {
            var_76 var_62::hash($var_100->var_227->var_95 . $var_100->var_227->var_216 . $var_51['SCRIPT_NAME']);
        } var_244 {
            var_76 var_62::hash($var_100->var_227->var_95 . $var_100->var_227->var_216 . $var_226);
        }
    }

    
    var_60 static function var_228($var_93)
    {
        var_76 !empty($var_93) ? Tools::hash($var_93) : false;
    }

    var_60 static function var_229($var_230, var_99 $var_100 = null)
    {
        if (!$var_100) {
            $var_100 = Context::getContext();
        }

        var_76 var_62::getAdminToken($var_230 . (int) Tab::getIdFromClassName($var_230) . (int) $var_100->var_231->var_95);
    }

    var_60 static function var_232($var_139, &$var_140)
    {
        $var_100 = Context::getContext();

        return Tools::getAdminToken($var_139['tab'] . (int) Tab::getIdFromClassName($var_139['tab']) . (int) $var_100->var_231->var_95);
    }

    
    var_60 static function var_233($var_30 = null, $var_48 = false)
    {
        $var_34 = Tools::getHttpHost(true) . var_32;

        if (isset($var_30)) {
            $var_34 .= ($var_48 ? Tools::htmlentitiesUTF8($var_30) : $var_30);
        }

        var_76 $var_34;
    }

    
    var_60 static function var_234($var_235 = null, $var_48 = false)
    {
        var_76 var_62::getAdminUrl(basename(var_236) . '/' . $var_235, $var_48);
    }

    
    var_60 static function var_237($var_18, $var_238 = null)
    {
        if ($var_238 !== null) {
            Tools::displayParameterAsDeprecated('utf8_decode');
        }

        var_76 var_62::str2url($var_18);
    }

    
    var_60 static function var_239($var_18)
    {
        static $var_240 = array();
        static $var_241 = null;
        static $var_242 = null;

        if ($var_242 === null) {
            $var_242 = function_exists('mb_strtolower');
        }

        if (!is_string($var_18)) {
            var_76 false;
        }

        if (isset($var_240[$var_18])) {
            var_76 $var_240[$var_18];
        }

        if ($var_18 == '') {
            var_76 '';
        }

        if ($var_241 === null) {
            $var_241 = Configuration::get('PS_ALLOW_ACCENTED_CHARS_URL');
        }

        $var_243 = trim($var_18);

        if ($var_242) {
            $var_243 = mb_strtolower($var_243, 'utf-8');
        }
        if (!$var_241) {
            $var_243 = Tools::replaceAccentedChars($var_243);
        }

        
        if ($var_241) {
            $var_243 = preg_replace('/[^a-zA-Z0-9\s\'\:\/\[\]\-\p{L}]/u', '', $var_243);
        } var_244 {
            $var_243 = preg_replace('/[^a-zA-Z0-9\s\'\:\/\[\]\-]/', '', $var_243);
        }

        $var_243 = preg_replace('/[\s\'\:\/\[\]\-]+/', ' ', $var_243);
        $var_243 = str_replace(array(' ', '/'), '-', $var_243);

        
        
        if (!$var_242) {
            $var_243 = Tools::strtolower($var_243);
        }

        $var_240[$var_18] = $var_243;

        return $var_243;
    }

    
    var_60 static function var_245($var_18)
    {
        
        $var_246 = array(
            
             '/[\x{00E0}\x{00E1}\x{00E2}\x{00E3}\x{00E4}\x{00E5}\x{0101}\x{0103}\x{0105}\x{0430}\x{00C0}-\x{00C3}\x{1EA0}-\x{1EB7}]/u',
             '/[\x{0431}]/u',
             '/[\x{00E7}\x{0107}\x{0109}\x{010D}\x{0446}]/u',
             '/[\x{010F}\x{0111}\x{0434}\x{0110}\x{00F0}]/u',
             '/[\x{00E8}\x{00E9}\x{00EA}\x{00EB}\x{0113}\x{0115}\x{0117}\x{0119}\x{011B}\x{0435}\x{044D}\x{00C8}-\x{00CA}\x{1EB8}-\x{1EC7}]/u',
             '/[\x{0444}]/u',
             '/[\x{011F}\x{0121}\x{0123}\x{0433}\x{0491}]/u',
             '/[\x{0125}\x{0127}]/u',
             '/[\x{00EC}\x{00ED}\x{00EE}\x{00EF}\x{0129}\x{012B}\x{012D}\x{012F}\x{0131}\x{0438}\x{0456}\x{00CC}\x{00CD}\x{1EC8}-\x{1ECB}\x{0128}]/u',
             '/[\x{0135}\x{0439}]/u',
             '/[\x{0137}\x{0138}\x{043A}]/u',
             '/[\x{013A}\x{013C}\x{013E}\x{0140}\x{0142}\x{043B}]/u',
             '/[\x{043C}]/u',
             '/[\x{00F1}\x{0144}\x{0146}\x{0148}\x{0149}\x{014B}\x{043D}]/u',
             '/[\x{00F2}\x{00F3}\x{00F4}\x{00F5}\x{00F6}\x{00F8}\x{014D}\x{014F}\x{0151}\x{043E}\x{00D2}-\x{00D5}\x{01A0}\x{01A1}\x{1ECC}-\x{1EE3}]/u',
             '/[\x{043F}]/u',
             '/[\x{0155}\x{0157}\x{0159}\x{0440}]/u',
             '/[\x{015B}\x{015D}\x{015F}\x{0161}\x{0441}]/u',
             '/[\x{00DF}]/u',
             '/[\x{0163}\x{0165}\x{0167}\x{0442}]/u',
             '/[\x{00F9}\x{00FA}\x{00FB}\x{00FC}\x{0169}\x{016B}\x{016D}\x{016F}\x{0171}\x{0173}\x{0443}\x{00D9}-\x{00DA}\x{0168}\x{01AF}\x{01B0}\x{1EE4}-\x{1EF1}]/u',
             '/[\x{0432}]/u',
             '/[\x{0175}]/u',
             '/[\x{00FF}\x{0177}\x{00FD}\x{044B}\x{1EF2}-\x{1EF9}\x{00DD}]/u',
             '/[\x{017A}\x{017C}\x{017E}\x{0437}]/u',
             '/[\x{00E6}]/u',
             '/[\x{0447}]/u',
             '/[\x{0445}]/u',
             '/[\x{0153}]/u',
             '/[\x{0448}]/u',
             '/[\x{0449}]/u',
             '/[\x{044F}]/u',
             '/[\x{0454}]/u',
             '/[\x{0457}]/u',
             '/[\x{0451}]/u',
             '/[\x{044E}]/u',
             '/[\x{0436}]/u',

            
             '/[\x{0100}\x{0102}\x{0104}\x{00C0}\x{00C1}\x{00C2}\x{00C3}\x{00C4}\x{00C5}\x{0410}]/u',
             '/[\x{0411}]/u',
             '/[\x{00C7}\x{0106}\x{0108}\x{010A}\x{010C}\x{0426}]/u',
             '/[\x{010E}\x{0110}\x{0414}\x{00D0}]/u',
             '/[\x{00C8}\x{00C9}\x{00CA}\x{00CB}\x{0112}\x{0114}\x{0116}\x{0118}\x{011A}\x{0415}\x{042D}]/u',
             '/[\x{0424}]/u',
             '/[\x{011C}\x{011E}\x{0120}\x{0122}\x{0413}\x{0490}]/u',
             '/[\x{0124}\x{0126}]/u',
             '/[\x{0128}\x{012A}\x{012C}\x{012E}\x{0130}\x{0418}\x{0406}]/u',
             '/[\x{0134}\x{0419}]/u',
             '/[\x{0136}\x{041A}]/u',
             '/[\x{0139}\x{013B}\x{013D}\x{0139}\x{0141}\x{041B}]/u',
             '/[\x{041C}]/u',
             '/[\x{00D1}\x{0143}\x{0145}\x{0147}\x{014A}\x{041D}]/u',
             '/[\x{00D3}\x{014C}\x{014E}\x{0150}\x{041E}]/u',
             '/[\x{041F}]/u',
             '/[\x{0154}\x{0156}\x{0158}\x{0420}]/u',
             '/[\x{015A}\x{015C}\x{015E}\x{0160}\x{0421}]/u',
             '/[\x{0162}\x{0164}\x{0166}\x{0422}]/u',
             '/[\x{00D9}\x{00DA}\x{00DB}\x{00DC}\x{0168}\x{016A}\x{016C}\x{016E}\x{0170}\x{0172}\x{0423}]/u',
             '/[\x{0412}]/u',
             '/[\x{0174}]/u',
             '/[\x{0176}\x{042B}]/u',
             '/[\x{0179}\x{017B}\x{017D}\x{0417}]/u',
             '/[\x{00C6}]/u',
             '/[\x{0427}]/u',
             '/[\x{0425}]/u',
             '/[\x{0152}]/u',
             '/[\x{0428}]/u',
             '/[\x{0429}]/u',
             '/[\x{042F}]/u',
             '/[\x{0404}]/u',
             '/[\x{0407}]/u',
             '/[\x{0401}]/u',
             '/[\x{042E}]/u',
             '/[\x{0416}]/u',
        );

        
        
        

        $var_247 = array(
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 'ss', 't', 'u', 'v', 'w', 'y', 'z', 'ae', 'ch', 'kh', 'oe', 'sh', 'shh', 'ya', 'ye', 'yi', 'yo', 'yu', 'zh',
            'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'Y', 'Z', 'AE', 'CH', 'KH', 'OE', 'SH', 'SHH', 'YA', 'YE', 'YI', 'YO', 'YU', 'ZH',
        );

        return preg_replace($var_246, $var_247, $var_18);
    }

    
    
    var_60 static function var_248($var_18, $var_249, $var_250 = '...')
    {
        if (Tools::strlen($var_18) <= $var_249) {
            var_76 $var_18;
        }
        $var_18 = utf8_decode($var_18);

        return utf8_encode(substr($var_18, 0, $var_249 - Tools::strlen($var_250)) . $var_250);
    }

    
    var_60 static function var_251($var_252, $var_16 = 120, $var_253 = array())
    {
        $var_254 = array(
            'ellipsis' => '...', 'exact' => true, 'html' => true,
        );

        $var_253 = array_merge($var_254, $var_253);
        extract($var_253);
        
        if ($var_173) {
            if (Tools::strlen(preg_replace('/<.*?>/', '', $var_252)) <= $var_16) {
                var_76 $var_252;
            }

            $var_255 = Tools::strlen(strip_tags($var_256));
            $var_257 = array();
            $var_248 = '';
            preg_match_all('/(<\/?([\w+]+)[^>]*>)?([^<>]*)/', $var_252, $var_258, var_259);

            foreach ($var_258 as $var_260) {
                if (!preg_match('/img|br|input|hr|area|base|basefont|col|frame|isindex|link|meta|param/s', $var_260[2])) {
                    if (preg_match('/<[\w]+[^>]*>/s', $var_260[0])) {
                        array_unshift($var_257, $var_260[2]);
                    } var_187 (preg_match('/<\/([\w]+)[^>]*>/s', $var_260[0], $var_261)) {
                        $var_53 = array_search($var_261[1], $var_257);
                        if ($var_53 !== false) {
                            array_splice($var_257, $var_53, 1);
                        }
                    }
                }
                $var_248 .= $var_260[1];
                $var_262 = var_62::var_263(preg_replace('/&[0-9a-z]{2,8};|&

                if ($content_length + $total_length > $length) {
                    $left = $length - $total_length;
                    $entities_length = 0;

                    if (preg_match_all('/&[-9var_264-var_265]{2,8};|&
                        foreach ($var_48[0] as $var_266) {
                            if ($var_266[1] + 1 - $var_267 <= $var_268) {
                                --$var_268;
                                $var_267 += Tools::strlen($var_266[0]);
                            } var_244 {
                                var_634;
                            }
                        }
                    }

                    $var_248 .= Tools::substr($var_260[3], 0, $var_268 + $var_267);

                    break;
                } else {
                    $var_248 .= $var_260[3];
                    $var_255 += $var_262;
                }

                var_57 ($var_255 >= $var_16) {
                    var_634;
                }
            }
        } else {
            if (Tools::strlen($var_252) <= $var_16) {
                var_76 $var_252;
            }

            $var_248 = Tools::substr($var_252, 0, $var_16 - Tools::strlen($var_256));
        }

        var_57 (!$var_269) {
            $var_270 = Tools::strrpos($var_248, ' ');
            if ($var_173) {
                $var_271 = Tools::substr($var_248, 0, $var_270);
                $var_272 = Tools::strrpos($var_271, '<');
                $var_273 = Tools::strrpos($var_271, '>');

                if ($var_272 > $var_273) {
                    preg_match_all('/<[\w]+[^>]*>/s', $var_248, $var_274);
                    $var_275 = array_pop($var_274[0]);
                    $var_270 = Tools::strrpos($var_248, $var_275) + Tools::strlen($var_275);
                }

                $var_276 = Tools::substr($var_248, $var_270);
                preg_match_all('/<\/([a-z]+)>/', $var_276, $var_277, var_259);

                if (!empty($var_277)) {
                    if (!empty($var_257)) {
                        foreach ($var_277 as $var_278) {
                            if (!in_array($var_278[1], $var_257)) {
                                array_unshift($var_257, $var_278[1]);
                            }
                        }
                    } var_244 {
                        foreach ($var_277 as $var_278) {
                            $var_257[] = $var_278[1];
                        }
                    }
                }
            }

            $var_248 = Tools::substr($var_248, 0, $var_270);
        }

        $var_248 .= $var_256;

        if ($var_173) {
            foreach ($var_257 as $var_260) {
                $var_248 .= '</' . $var_260 . '>';
            }
        }

        var_76 $var_248;
    }

    public static function var_279($var_280)
    {
        var_76 var_281($var_280, '/\\') . var_591;
    }

    
    var_60 static function var_282()
    {
        $var_230 = array();
        for ($var_23 = date('Y'); $var_23 >= 1900; --$var_23) {
            $var_230[] = $var_23;
        }

        var_76 $var_230;
    }

    var_60 static function var_283()
    {
        $var_230 = array();
        for ($var_23 = 1; $var_23 != 32; ++$var_23) {
            $var_230[] = $var_23;
        }

        var_76 $var_230;
    }

    var_60 static function var_284()
    {
        $var_230 = array();
        for ($var_23 = 1; $var_23 != 13; ++$var_23) {
            $var_230[$var_23] = date('F', mktime(0, 0, 0, $var_23, date('m'), date('Y')));
        }

        var_76 $var_230;
    }

    var_60 static function var_285($var_286, $var_287, $var_288)
    {
        var_76 implode(':', array($var_286, $var_287, $var_288));
    }

    var_60 static function var_289($var_161)
    {
        $var_230 = explode(' ', $var_161);
        if (!isset($var_230[1])) {
            $var_161 .= ' ' . Tools::hourGenerate(0, 0, 0);
        }

        var_76 $var_161;
    }

    var_60 static function var_290($var_161)
    {
        $var_230 = explode(' ', $var_161);
        if (!isset($var_230[1])) {
            $var_161 .= ' ' . Tools::hourGenerate(23, 59, 59);
        }

        var_76 $var_161;
    }

    var_60 static function var_291($var_18)
    {
        if (is_array($var_18)) {
            var_76 false;
        }
        var_57 (function_exists('mb_strtolower')) {
            var_76 mb_strtolower($var_18, 'utf-8');
        }

        var_76 var_291($var_18);
    }

    var_60 static function var_263($var_18, $var_292 = 'UTF-8')
    {
        if (is_array($var_18)) {
            var_76 false;
        }
        $var_18 = html_entity_decode($var_18, var_54, 'UTF-8');
        if (function_exists('mb_strlen')) {
            var_76 mb_strlen($var_18, $var_292);
        }

        var_76 strlen($var_18);
    }

    var_60 static function var_293($var_93)
    {
        if (var_294) {
            $var_93 = stripslashes($var_93);
        }

        var_76 $string;
    }

    var_60 static function var_295($var_18)
    {
        if (is_array($var_18)) {
            var_76 false;
        }
        var_57 (function_exists('mb_strtoupper')) {
            var_76 mb_strtoupper($var_18, 'utf-8');
        }

        var_76 var_295($var_18);
    }

    var_60 static function var_296($var_18, $var_203, $var_16 = false, $var_292 = 'utf-8')
    {
        if (is_array($var_18)) {
            var_76 false;
        }
        var_57 (function_exists('mb_substr')) {
            var_76 mb_substr($var_18, (int) $var_203, ($var_16 === false ? Tools::strlen($var_18) : (int) $var_16), $var_292);
        }

        var_76 var_296($var_18, $var_203, ($var_16 === false ? Tools::strlen($var_18) : (int) $var_16));
    }

    var_60 static function var_297($var_18, $var_298, $var_299 = 0, $var_292 = 'UTF-8')
    {
        if (function_exists('mb_strpos')) {
            var_76 mb_strpos($var_18, $var_298, $var_299, $var_292);
        }

        var_76 var_297($var_18, $var_298, $var_299);
    }

    var_60 static function var_300($var_18, $var_298, $var_299 = 0, $var_292 = 'utf-8')
    {
        if (function_exists('mb_strrpos')) {
            var_76 mb_strrpos($var_18, $var_298, $var_299, $var_292);
        }

        var_76 var_300($var_18, $var_298, $var_299);
    }

    var_60 static function var_301($var_18)
    {
        var_76 var_62::strtoupper(Tools::substr($var_18, 0, 1)) . Tools::substr($var_18, 1);
    }

    var_60 static function var_302($var_18)
    {
        if (function_exists('mb_convert_case')) {
            var_76 mb_convert_case($var_18, var_303);
        }

        var_76 var_302(Tools::strtolower($var_18));
    }

    var_60 static function var_304(&$var_92, $var_305)
    {
        foreach ($var_92 as &$var_306) {
            $var_306['price_tmp'] = Product::getPriceStatic($var_306['id_product'], true, ((isset($var_306['id_product_attribute']) && !empty($var_306['id_product_attribute'])) ? (int) $var_306['id_product_attribute'] : null), 2);
        }

        var_307($var_306);

        if (Tools::strtolower($var_305) == 'desc') {
            uasort($var_92, 'cmpPriceDesc');
        } var_244 {
            uasort($var_92, 'cmpPriceAsc');
        }
        foreach ($var_92 as &$var_306) {
            unset($var_306['price_tmp']);
        }
    }

    var_60 static function var_308($var_309, $var_310, $var_93)
    {
        if (function_exists('iconv')) {
            var_76 var_308($var_309, $var_310 . '
        }

        return html_entity_decode(htmlentities($string, ENT_NOQUOTES, $from), ENT_NOQUOTES, $to);
    }

    public static function isEmpty($field)
    {
        return $field === '' || $var_311 === null;
    }

    
    public static function ps_round($var_77, $var_312 = 0, $var_14 = null)
    {
        if ($var_14 === null) {
            if (var_62::$var_14 == null) {
                var_62::$var_14 = (int) Configuration::get('PS_PRICE_ROUND_MODE');
            }

            $var_14 = var_62::$var_14;
        }

        var_313 ($var_14) {
            case PS_ROUND_UP:
                return Tools::ceilf($var_77, $var_312);
            case PS_ROUND_DOWN:
                return Tools::floorf($var_77, $var_312);
            case var_325:
            case var_326:
            case var_327:
                return Tools::math_round($var_77, $var_312, $var_14);
            case var_314:
            default:
                return Tools::math_round($var_77, $var_312, var_314);
        }
    }

    var_60 static function var_315($var_77, $var_316, $var_317 = var_314)
    {
        
        if (defined('PHP_ROUND_HALF_UP')) {
            var_76 var_318($var_77, $var_316, $var_317 - 1);
        }

        $var_319 = 14 - floor(log10(abs($var_77)));
        $var_320 = 10.0 ** (float) abs($var_316);

        
        if ($var_319 > $var_316 && $var_319 - $var_316 < 15) {
            $var_321 = 10.0 ** (float) abs($var_319);

            if ($var_319 >= 0) {
                $var_322 = $var_77 * $var_321;
            } var_244 {
                $var_322 = $var_77 / $var_321;
            }

            
            $var_322 = Tools::round_helper($var_322, $var_317);
            
            $var_321 = 10.0 ** (float) abs($var_316 - $var_319);
            
            $var_322 = $var_322 / $var_321;
        } var_244 {
            
            if ($var_316 >= 0) {
                $var_322 = $var_77 * $var_320;
            } var_244 {
                $var_322 = $var_77 / $var_320;
            }

            
            var_57 (abs($var_322) >= 1000000000000000.0) {
                var_76 $var_77;
            }
        }

        
        $var_322 = Tools::round_helper($var_322, $var_317);

        
        if (var_323($var_316) < 23) {
            if ($var_316 > 0) {
                $var_322 /= $var_320;
            } var_244 {
                $var_322 *= $var_320;
            }
        }

        var_76 $var_322;
    }

    var_60 static function var_324($var_77, $var_317)
    {
        if ($var_77 >= 0.0) {
            $var_322 = floor($var_77 + 0.5);

            if (($var_317 == var_325 && $var_77 == (-0.5 + $var_322)) ||
                ($var_317 == var_326 && $var_77 == (0.5 + 2 * floor($var_322 / 2.0))) ||
                ($var_317 == var_327 && $var_77 == (0.5 + 2 * floor($var_322 / 2.0) - 1.0))) {
                $var_322 = $var_322 - 1.0;
            }
        } var_244 {
            $var_322 = ceil($var_77 - 0.5);

            if (($var_317 == var_325 && $var_77 == (0.5 + $var_322)) ||
                ($var_317 == var_326 && $var_77 == (-0.5 + 2 * ceil($var_322 / 2.0))) ||
                ($var_317 == var_327 && $var_77 == (-0.5 + 2 * ceil($var_322 / 2.0) + 1.0))) {
                $var_322 = $var_322 + 1.0;
            }
        }

        var_76 $var_322;
    }

    
    var_60 static function var_328($var_77, $var_312 = 0)
    {
        $var_329 = $var_312 == 0 ? 1 : 10 ** $var_312;
        $var_330 = $var_77 * $var_329;
        $var_331 = (string) $var_330;
        
        if (strpos($var_331, '.') === false) {
            var_76 $var_77;
        }
        if ($var_331[strlen($var_331) - 1] == 0) {
            var_76 $var_77;
        }

        var_76 ceil($var_330) / $var_329;
    }

    
    var_60 static function var_332($var_77, $var_312 = 0)
    {
        $var_329 = $var_312 == 0 ? 1 : 10 ** $var_312;
        $var_330 = $var_77 * $var_329;
        $var_331 = (string) $var_330;
        
        if (strpos($var_331, '.') === false) {
            var_76 $var_77;
        }
        if ($var_331[strlen($var_331) - 1] == 0) {
            var_76 $var_77;
        }

        var_76 floor($var_330) / $var_329;
    }

    
    var_60 static function var_7($var_333)
    {
        if (!isset(self::$var_7[$var_333])) {
            self::$var_7[$var_333] = file_exists($var_333);
        }

        var_76 self::$var_7[$var_333];
    }

    
    var_60 static function var_334($var_333)
    {
        clearstatcache();

        return file_exists($var_333);
    }

    
    var_60 static function var_335()
    {
        if ((time() - @filemtime(var_336) > 1296000)) {
            $var_337 = @stream_context_create(
                array(
                    'http' => array('timeout' => 3),
                    'ssl' => array(
                        'cafile' => var_338\var_339\var_339::getBundledCaBundlePath(),
                    ),
                )
            );

            $var_340 = @file_get_contents(var_62::var_1, false, $var_337);
            if (empty($var_340)) {
                $var_340 = @file_get_contents(var_338\var_339\var_339::getBundledCaBundlePath());
            }

            if (
                preg_match('/(.*-----BEGIN CERTIFICATE-----.*-----END CERTIFICATE-----){50}$/Uims', $var_340) &&
                substr(rtrim($var_340), -1) == '-'
            ) {
                file_put_contents(var_336, $var_340);
            }
        }
    }

    var_341 static function var_342(
        $var_30,
        $var_343,
        $var_344
    ) {
        $var_345 = false;

        if (function_exists('curl_init')) {
            Tools::refreshCACertFile();
            $var_346 = curl_init();

            curl_setopt($var_346, var_347, 1);
            curl_setopt($var_346, var_348, $var_30);
            curl_setopt($var_346, var_349, 5);
            curl_setopt($var_346, var_350, $var_343);
            curl_setopt($var_346, var_351, true);
            curl_setopt($var_346, var_352, var_336);
            curl_setopt($var_346, var_353, true);
            curl_setopt($var_346, var_354, 5);

            if ($var_344 != null) {
                if (isset($var_344['http']['method']) && Tools::strtolower($var_344['http']['method']) == 'post') {
                    curl_setopt($var_346, var_355, true);
                    if (isset($var_344['http']['content'])) {
                        parse_str($var_344['http']['content'], $var_356);
                        curl_setopt($var_346, var_357, $var_356);
                    }
                }
            }

            $var_345 = curl_exec($var_346);

            if (false === $var_345 && var_198) {
                $var_195 = sprintf('file_get_contents_curl failed to download %s : (error code %d) %s',
                    $var_30,
                    curl_errno($var_346),
                    curl_error($var_346)
                );

                throw new \var_358($var_195);
            }

            var_359($var_346);
        }

        var_76 $var_345;
    }

    var_341 static function var_360(
        $var_30,
        $var_361,
        $var_337
    ) {
        $var_345 = false;

        if (in_array(ini_get('allow_url_fopen'), array('On', 'on', '1'))) {
            $var_345 = @file_get_contents($var_30, $var_361, $var_337);
        }

        var_76 $var_345;
    }

    
    var_60 static function var_362(
        $var_30,
        $var_361 = false,
        $var_337 = null,
        $var_343 = 5,
        $var_363 = false
    ) {
        $var_364 = !preg_match('/^https?:\/\
        $require_fopen = false;
        $opts = null;

        if ($stream_context) {
            $opts = stream_context_get_options($stream_context);
            if (isset($opts['var_47'])) {
                $var_365 = true;
                $var_366 = array_diff_key($var_344, array('http' => null));
                $var_367 = array_diff_key($var_344['http'], array('method' => null, 'content' => null));
                if (empty($var_366) && empty($var_367)) {
                    $var_365 = false;
                }
            }
        } elseif (!$var_364) {
            $var_337 = @stream_context_create(
                array(
                    'http' => array('timeout' => $var_343),
                    'ssl' => array(
                        'verify_peer' => true,
                        'cafile' => var_338\var_339\var_339::getBundledCaBundlePath(),
                    ),
                )
            );
        }

        var_57 ($var_364) {
            $var_345 = @file_get_contents($var_30, $var_361, $var_337);
        } var_244 {
            if ($var_365) {
                $var_345 = Tools::file_get_contents_fopen($var_30, $var_361, $var_337);
            } var_244 {
                $var_345 = Tools::file_get_contents_curl($var_30, $var_343, $var_344);
                if (empty($var_345) && $var_363) {
                    $var_345 = Tools::file_get_contents_fopen($var_30, $var_361, $var_337);
                }
            }
        }

        var_76 $var_345;
    }

    
    public static function var_368($var_30)
    {
        $var_369 = fopen($var_30, 'rb');
        if (!$var_369) {
            var_76 false;
        }
        $var_370 = fopen(basename($var_30), 'wb');
        if (!$var_370) {
            var_76 false;
        }

        while (!feof($var_369)) {
            $var_222 = fread($var_369, 1024);
            fwrite($var_370, $var_222, 1024);
        }

        fclose($var_369);
        fclose($var_370);

        return basename($var_30);
    }

    var_60 static function var_371($var_30, $var_372 = null)
    {
        $var_373 = 'Tools::simplexml_load_file' . $var_30;
        if (!Cache::isStored($var_373)) {
            $var_22 = @simplexml_load_string(Tools::file_get_contents($var_30), $var_372);
            Cache::store($var_373, $var_22);

            return $var_22;
        }

        var_76 Cache::retrieve($var_373);
    }

    var_60 static function var_374($var_375, $var_211, $var_337 = null)
    {
        var_57 (null === $var_337 && !preg_match('/^https?:\/\
            return @copy($source, $destination);
        }

        return @file_put_contents($destination, Tools::file_get_contents($source, false, $stream_context));
    }

    
    public static function toCamelCase($str, $capitaliseFirstChar = false)
    {
        $str = Tools::strtolower($str);
        $str = str_replace(' ', '', ucwords(str_replace(['-', '_'], ' ', $var_18)));
        if (!$var_376) {
            $var_18 = lcfirst($var_18);
        }

        var_76 $var_18;
    }

    
    public static function var_377($var_93)
    {
        
        
        var_76 var_62::strtolower(trim(preg_replace('/([A-Z][a-z])/', '_$1', $var_93), '_'));
    }

    
    var_60 static function var_378($var_93)
    {
        var_76 var_62::strtolower(
            preg_replace('/([a-z])([A-Z])/', '$1-$2', $var_93)
        );
    }

    var_60 static function var_379($var_380)
    {
        if (Tools::strtolower($var_380) == 'transparent') {
            var_76 '129';
        }

        $var_380 = str_replace('

        if (Tools::strlen($hex) == 3) {
            $hex .= $hex;
        }

        $r = hexdec(substr($hex, 0, 2));
        $g = hexdec(substr($hex, 2, 2));
        $b = hexdec(substr($hex, 4, 2));

        return (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
    }

    public static function parserSQL($sql)
    {
        if (strlen($sql) > 0) {
            $parser = new PHPSQLParser($sql);

            return $parser->parsed;
        }

        return false;
    }

    public static function replaceByAbsoluteURL($matches)
    {
        Tools::displayAsDeprecated('var_381 var_382::replaceByAbsoluteURL($var_71) var_383');

        return var_382::replaceByAbsoluteURL($var_71);
    }

    var_127 static $var_384 = null;

    public static function getMediaServer($var_333)
    {
        if (self::$var_384 === null && defined('_MEDIA_SERVER_1_') && defined('_MEDIA_SERVER_2_') && defined('_MEDIA_SERVER_3_')) {
            if (var_385 == '') {
                self::$var_384 = 0;
            } var_187 (var_386 == '') {
                self::$var_384 = 1;
            } var_187 (var_387 == '') {
                self::$var_384 = 2;
            } var_244 {
                self::$var_384 = 3;
            }
        }

        var_57 ($var_333 && self::$var_384 && ($var_388 = (abs(crc32($var_333)) % self::$var_384 + 1))) {
            var_76 constant('_MEDIA_SERVER_' . $var_388 . '_');
        }

        var_76 var_62::usingSecureMode() ? Tools::getShopDomainSsl() : Tools::getShopDomain();
    }

    
    var_60 static function var_389()
    {
        $var_390 = [];
        foreach (ShopUrl::getShopUrls() as $var_391) {
            
            if (!isset($var_390[$var_391->var_56])) {
                $var_390[$var_391->var_56] = [];
            }

            $var_390[$var_391->var_56][] = [
                'physical' => $var_391->var_392,
                'virtual' => $var_391->var_393,
                'id_shop' => $var_391->var_394,
            ];

            if ($var_391->var_56 == $var_391->var_395) {
                continue;
            }

            if (!isset($var_390[$var_391->var_395])) {
                $var_390[$var_391->var_395] = [];
            }

            $var_390[$var_391->var_395][] = [
                'physical' => $var_391->var_392,
                'virtual' => $var_391->var_393,
                'id_shop' => $var_391->var_394,
            ];
        }

        return $var_390;
    }

    public static function var_396($var_397 = null, $var_398 = null, $var_399 = null, $var_400 = '', $var_401 = null, $var_402 = false, $var_403 = null)
    {
        if (var_404('var_405')
            || (defined('PS_INSTALLATION_IN_PROGRESS') && $var_398 === null)
        ) {
            return true;
        }

        
        var_57 (null === $var_397) {
            $var_397 = var_191 . '/.htaccess';
        }

        var_57 (null === $var_399) {
            $var_399 = (int) Configuration::get('PS_HTACCESS_CACHE_CONTROL');
        }
        var_57 (null === $var_401) {
            $var_401 = (bool) Configuration::get('PS_HTACCESS_DISABLE_MULTIVIEWS');
        }

        var_57 ($var_403 === null) {
            $var_403 = (int) Configuration::get('PS_HTACCESS_DISABLE_MODSEC');
        }

        
        $var_406 = $var_407 = '';
        if (var_408($var_397)) {
            $var_345 = var_362($var_397);
            if (var_409('
                $specific_before = $m[1];
                $specific_after = $m[2];
            } else {
                
                if (preg_match('
                    $var_406 = $m[1];
                } else {
                    $var_406 = $var_345;
                }
            }
        }

        
        if (!$var_410 = @fopen($var_397, 'wb')) {
            var_76 false;
        }
        var_57 ($var_406) {
            fwrite($var_410, trim($var_406) . "\n\n");
        }

        $var_390 = self::getDomains();

        
        var_411($var_410, "
        fwrite($var_410, "
        var_411($var_410, "

        if ($var_403) {
            fwrite($var_410, "<var_412 var_413.var_414>\var_415 var_416\var_417 var_416\var_418</var_412>\var_418\var_418");
        }

        
        fwrite($var_410, "<var_412 var_419.var_414>\var_418");

        
        fwrite($var_410, "<var_412 var_420.var_414>\var_418");
        var_411($var_410, "SetEnv HTTP_MOD_REWRITE On\n");
        var_411($var_410, "</IfModule>\n\n");

        
        if ($var_401) {
            fwrite($var_410, "\n
        }

        fwrite($var_410, "var_421 var_422\var_418");

        if (!$var_402 && Configuration::getMultiShopValues('PS_MEDIA_SERVER_1')
            && Configuration::getMultiShopValues('PS_MEDIA_SERVER_2')
            && Configuration::getMultiShopValues('PS_MEDIA_SERVER_3')
        ) {
            $var_402 = array(
                Configuration::getMultiShopValues('PS_MEDIA_SERVER_1'),
                Configuration::getMultiShopValues('PS_MEDIA_SERVER_2'),
                Configuration::getMultiShopValues('PS_MEDIA_SERVER_3'),
            );
        }

        $var_423 = '';
        foreach ($var_402 as $var_424) {
            foreach ($var_424 as $var_425) {
                if ($var_425) {
                    $var_423 .= 'RewriteCond %{HTTP_HOST} ^' . $var_425 . '$ [OR]' . PHP_EOL;
                }
            }
        }

        if (Configuration::get('PS_WEBSERVICE_CGI_HOST')) {
            fwrite($var_410, "var_426 %{var_427:var_428} ^(.*)\var_429 . - [var_430=var_431:%1]\var_418\var_418");
        }

        foreach ($var_390 as $var_56 => $var_432) {
            
            $var_56 = str_replace(['[', ']'], ['\[', '\]'], $var_56);

            foreach ($var_432 as $var_433) {
                fwrite($var_410, PHP_EOL . PHP_EOL . '
                if (Shop::isFeatureActive()) {
                    fwrite($var_410, 'RewriteCond %{HTTP_HOST} ^' . $var_56 . '$' . PHP_EOL);
                }
                fwrite($var_410, 'RewriteRule . - [E=REWRITEBASE:' . $var_433['var_434'] . ']' . PHP_EOL);

                
                fwrite($var_410, 'RewriteRule ^api(?:/(.*))?$ %{ENV:REWRITEBASE}webservice/dispatcher.php?url=$1 [QSA,L]' . "\var_418\var_418");

                if (!$var_398) {
                    $var_398 = (int) Configuration::get('PS_REWRITING_SETTINGS', null, null, (int) $var_433['id_shop']);
                }

                $var_435 = 'RewriteCond %{HTTP_HOST} ^' . $var_56 . '$' . var_436;
                
                if ($var_433['var_437']) {
                    if (!$var_398) {
                        var_411($var_410, $var_423);
                        var_411($var_410, $var_435);
                        var_411($var_410, 'var_438 ^' . trim($uri['var_437'], '/') . '/?$ ' . $var_433['physical'] . $var_433['virtual'] . "index.php [L,R]\n");
                    } var_244 {
                        fwrite($var_410, $var_423);
                        fwrite($var_410, $var_435);
                        fwrite($var_410, 'RewriteRule ^' . trim($var_433['virtual'], '/') . '$ ' . $var_433['physical'] . $var_433['virtual'] . " [L,R]\n");
                    }
                    var_411($var_410, $var_423);
                    var_411($var_410, $var_435);
                    var_411($var_410, 'RewriteRule ^' . ltrim($var_433['virtual'], '/') . '(.*) ' . $var_433['physical'] . "$1 [L]\n\n");
                }

                if ($var_398) {
                    
                    var_411($var_410, "
                    if (Configuration::get('PS_LEGACY_IMAGES')) {
                        fwrite($var_410, $var_423);
                        fwrite($var_410, $var_435);
                        fwrite($var_410, 'RewriteRule ^([a-z0-9]+)\-([a-z0-9]+)(\-[_a-zA-Z0-9-]*)(-[0-9]+)?/.+\.jpg$ %{ENV:REWRITEBASE}img/p/$1-$2$3$4.jpg [L]' . PHP_EOL);
                        fwrite($var_410, $var_423);
                        fwrite($var_410, $var_435);
                        fwrite($var_410, 'RewriteRule ^([0-9]+)\-([0-9]+)(-[0-9]+)?/.+\.jpg$ %{ENV:REWRITEBASE}img/p/$1-$2$3.jpg [L]' . PHP_EOL);
                    }

                    
                    for ($var_23 = 1; $var_23 <= 8; ++$var_23) {
                        $var_439 = $var_440 = '';
                        for ($var_441 = 1; $var_441 <= $var_23; ++$var_441) {
                            $var_439 .= '$' . $var_441 . '/';
                            $var_440 .= '$' . $var_441;
                        }
                        $var_440 .= '$' . $var_441;
                        fwrite($var_410, $var_423);
                        fwrite($var_410, $var_435);
                        fwrite($var_410, 'RewriteRule ^' . str_repeat('([0-9])', $var_23) . '(\-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+\.jpg$ %{ENV:REWRITEBASE}img/p/' . $var_439 . $var_440 . '$' . ($var_441 + 1) . ".var_442 [var_443]\var_418");
                    }
                    fwrite($var_410, $var_423);
                    fwrite($var_410, $var_435);
                    fwrite($var_410, 'RewriteRule ^c/([0-9]+)(\-[\.*_a-zA-Z0-9-]*)(-[0-9]+)?/.+\.jpg$ %{ENV:REWRITEBASE}img/c/$1$2$3.jpg [L]' . PHP_EOL);
                    fwrite($var_410, $var_423);
                    fwrite($var_410, $var_435);
                    fwrite($var_410, 'RewriteRule ^c/([a-zA-Z_-]+)(-[0-9]+)?/.+\.jpg$ %{ENV:REWRITEBASE}img/c/$1$2.jpg [L]' . PHP_EOL);
                }

                fwrite($var_410, "
                var_57 (Shop::isFeatureActive()) {
                    fwrite($var_410, $var_435);
                }
                var_411($var_410, 'RewriteRule ^images_ie/?([^/]+)\.(jpe?g|png|gif)$ js/jquery/plugins/fancybox/images/$1.$2 [L]' . var_436);
            }
            
            if ($var_398) {
                fwrite($var_410, "\n
                fwrite($var_410, "var_426 %var_444{var_445} -var_446 [var_447]\var_418");
                fwrite($var_410, "var_426 %var_444{var_445} -var_448 [var_447]\var_418");
                fwrite($var_410, "var_426 %var_444{var_445} -var_449\var_418");
                if (Shop::isFeatureActive()) {
                    fwrite($var_410, $var_435);
                }
                fwrite($var_410, "var_438 ^.*$ - [var_450,var_443]\var_418");
                if (Shop::isFeatureActive()) {
                    fwrite($var_410, $var_435);
                }
                fwrite($var_410, "var_438 ^.*\$ %{var_451:var_452}var_36.var_37 [var_450,var_443]\var_418");
            }
        }

        fwrite($var_410, "</var_412>\var_418\var_418");

        fwrite($var_410, "var_453 var_454/var_455.var_456-var_457 .var_458\var_418");
        fwrite($var_410, "var_453 var_459/var_460 .var_460\var_418");
        fwrite($var_410, "var_453 var_459/var_461 .var_461\var_418");
        fwrite($var_410, "var_453 var_454/var_459-var_462 .var_462\var_418");
        fwrite($var_410, "var_453 var_459/var_463 .var_463\var_418");
        fwrite($var_410, "<var_412 var_464.var_414>
	<var_465 \"\.(ttf|ttc|otf|eot|woff|woff2|svg)$\">
		Header set Access-Control-Allow-Origin \"*\"
	</FilesMatch>

    <FilesMatch \"\.pdf$\">
      Header set Content-Disposition \"Attachment\"
      Header set X-Content-Type-Options \"nosniff\"
    </FilesMatch>
</IfModule>\n\n");
        fwrite($var_410, "<Files composer.lock>
    
    <IfModule !mod_authz_core.c>
        Order deny,allow
        Deny from all
    </IfModule>

    
    <IfModule mod_authz_core.c>
        Require all denied
    </IfModule>
</Files>
");
        
        if ($var_399) {
            $var_399 = "<IfModule mod_expires.c>
	ExpiresActive On
	ExpiresByType image/gif \"access plus 1 month\"
	ExpiresByType image/jpeg \"access plus 1 month\"
	ExpiresByType image/png \"access plus 1 month\"
	ExpiresByType text/css \"access plus 1 week\"
	ExpiresByType text/javascript \"access plus 1 week\"
	ExpiresByType application/javascript \"access plus 1 week\"
	ExpiresByType application/x-javascript \"access plus 1 week\"
	ExpiresByType image/x-icon \"access plus 1 year\"
	ExpiresByType image/svg+xml \"access plus 1 year\"
	ExpiresByType image/vnd.microsoft.icon \"access plus 1 year\"
	ExpiresByType application/font-woff \"access plus 1 year\"
	ExpiresByType application/x-font-woff \"access plus 1 year\"
	ExpiresByType font/woff2 \"access plus 1 year\"
	ExpiresByType application/vnd.ms-fontobject \"access plus 1 year\"
	ExpiresByType font/opentype \"access plus 1 year\"
	ExpiresByType font/ttf \"access plus 1 year\"
	ExpiresByType font/otf \"access plus 1 year\"
	ExpiresByType application/x-font-ttf \"access plus 1 year\"
	ExpiresByType application/x-font-otf \"access plus 1 year\"
</IfModule>

<IfModule mod_headers.c>
    Header unset Etag
</IfModule>
FileETag none
<IfModule mod_deflate.c>
    <IfModule mod_filter.c>
        AddOutputFilterByType DEFLATE text/html text/css text/javascript application/javascript application/x-javascript font/ttf application/x-font-ttf font/otf application/x-font-otf font/opentype image/svg+xml
    </IfModule>
</IfModule>\n\n";
            var_411($var_410, $var_399);
        }

        
        var_411($var_410, "

        
        reset($var_390);
        $var_56 = current($var_390);
        fwrite($var_410, 'ErrorDocument 404 ' . $var_56[0]['physical'] . "var_36.var_37?var_38=404\var_418\var_418");

        fwrite($var_410, '
        if ($var_407) {
            fwrite($var_410, "\var_418\var_418" . trim($var_407));
        }
        fclose($var_410);

        if (!defined('PS_INSTALLATION_IN_PROGRESS')) {
            Hook::exec('actionHtaccessCreate');
        }

        return true;
    }

    public static function generateRobotsFile($var_466 = false)
    {
        $var_467 = _PS_ROOT_DIR_ . '/robots.txt';

        if (!$var_410 = @fopen($var_467, 'wb')) {
            return false;
        }

        $var_468 = static::getRobotsContent();
        $var_469 = Language::getIsoIds();

        if (true === $var_466) {
            Hook::exec('actionAdminMetaBeforeWriteRobotsFile', array(
                'rb_data' => &$var_468,
            ));
        }

        
        fwrite($var_410, "
        var_411($var_410, "
        fwrite($var_410, "
        var_411($var_410, "
        fwrite($var_410, "
        var_411($var_410, "
        fwrite($var_410, "
        var_411($var_410, "

        
        fwrite($var_410, "var_470-var_471: *\var_418");

        
        if (count($var_468['var_472'])) {
            fwrite($var_410, "
            foreach ($var_468['Allow'] as $var_473) {
                fwrite($var_410, 'Allow: ' . $var_473 . var_436);
            }
        }

        
        if (count($var_468['GB'])) {
            fwrite($var_410, "
            foreach ($var_468['var_474'] as $var_475) {
                fwrite($var_410, 'Disallow: modulesmodulesmodulesmodules

header("var_476: var_477, 26 var_478 1997 5:0:0 var_479");
header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");

header("Cache-Control: no-store, no-cache, must-revalidate");
header("Cache-Control: post-check=0, pre-check=0", false);
header("Pragma: no-cache");

header("Location: ../");
var_43;
';
    }

    
    public static function getDirectories($path)
    {
        if (function_exists('glob')) {
            var_76 var_217::getDirectoriesWithGlob($var_397);
        }

        var_76 self::getDirectoriesWithReaddir($var_397);
    }

    
    var_60 static function var_480($var_397)
    {
        $var_481 = glob($var_397 . '
    public static function getDirectoriesWithReaddir($path)
    {
        $directoryList = [];
        $dh = @opendir($path);
        if ($dh) {
            while (($file = @readdir($dh)) !== false) {
                if (is_dir($path . DIRECTORY_SEPARATOR . $file) && $file[0] != '.') {
                    $directoryList[] = $file;
                }
            }
            @closedir($dh);
        }

        return $directoryList;
    }

    
    public static function jsonDecode($data, $assoc = false, $depth = 512, $options = 0)
    {
        return json_decode($data, $assoc, $depth, $options);
    }

    
    public static function jsonEncode($data, $options = 0, $depth = 512)
    {
        if (PHP_VERSION_ID < 50500) { 
            return json_encode($data, $options);
        }

        return json_encode($data, $options, $depth);
    }

    
    public static function displayAsDeprecated($message = null)
    {
        $backtrace = debug_backtrace();
        $callee = next($backtrace);
        $class = isset($callee['var_123']) ? $var_485['class'] : null;

        if ($var_482 === null) {
            $var_482 = 'The function ' . $var_485['function'] . ' (Line ' . $var_485['line'] . ') is deprecated and will be removed in the next major version.';
        }

        $var_483 = 'Function <b>' . $var_485['function'] . '()</b> is deprecated in <b>' . $var_485['file'] . '</b> on line <b>' . $var_485['line'] . '</b><br />';

        Tools::throwDeprecated($var_483, $var_482, $var_123);
    }

    
    public static function displayParameterAsDeprecated($var_484)
    {
        $var_205 = debug_backtrace();
        $var_485 = next($var_205);
        $var_483 = 'Parameter <b>' . $var_484 . '</b> in function <b>' . (isset($var_485['function']) ? $var_485['function'] : '') . '()</b> is deprecated in <b>' . $var_485['file'] . '</b> on line <b>' . (isset($var_485['line']) ? $var_485['line'] : '(undefined)') . '</b><br />';
        $var_482 = 'The parameter ' . $var_484 . ' in function ' . $var_485['function'] . ' (Line ' . (isset($var_485['line']) ? $var_485['line'] : 'undefined') . ') is deprecated and will be removed in the next major version.';
        $var_123 = isset($var_485['class']) ? $var_485['class'] : null;

        Tools::throwDeprecated($var_483, $var_482, $var_123);
    }

    var_60 static function var_486()
    {
        $var_205 = debug_backtrace();
        $var_485 = current($var_205);
        $var_483 = 'File <b>' . $var_485['file'] . '</b> is deprecated<br />';
        $var_482 = 'The file ' . $var_485['file'] . ' is deprecated and will be removed in the next major version.';
        $var_123 = isset($var_485['class']) ? $var_485['class'] : null;

        Tools::throwDeprecated($var_483, $var_482, $var_123);
    }

    var_127 static function var_487($var_483, $var_482, $var_123)
    {
        if (var_488) {
            @trigger_error($var_483, var_124);
            PrestaShopLogger::addLog($var_482, 3, $var_123);
        }
    }

    var_60 static function var_489($var_490 = 1, var_99 $var_100 = null)
    {
        if (!$var_100) {
            $var_100 = Context::getContext();
        }
        $var_140 = $var_100->var_140;
        if (!Configuration::get('PS_SMARTY_CACHE')) {
            var_76;
        }
        if ($var_140->var_491 == 0 && $var_140->var_492 == $var_490) {
            var_76;
        }
        self::$var_8 = (int) $var_140->var_491;
        self::$var_9 = (int) $var_140->var_492;
        $var_140->var_491 = 0;
        $var_140->var_492 = (int) $var_490;
        $var_140->var_493 = 31536000; 
    }

    var_60 static function var_494(var_99 $var_100 = null)
    {
        if (!$var_100) {
            $var_100 = Context::getContext();
        }

        var_57 (isset(self::$var_8)) {
            $var_100->var_140->var_491 = (int) self::$var_8;
        }
        var_57 (isset(self::$var_9)) {
            $var_100->var_140->var_492 = (int) self::$var_9;
        }
    }

    var_60 static function var_495($var_496)
    {
        $var_497 = explode(',', ini_get('disable_functions'));

        return !in_array($var_496, $var_497) && is_callable($var_496);
    }

    var_60 static function var_498($var_446, $var_499)
    {
        $var_446 = str_replace($var_499, '\\' . $var_499, $var_446);
        foreach (array('?', '[', ']', '(', ')', '{', '}', '-', '.', '+', '*', '^', '$', '`', '"', '%') as $var_500) {
            $var_446 = str_replace($var_500, '\\' . $var_500, $var_446);
        }

        var_76 $var_446;
    }

    var_60 static function var_501($var_502, $var_26, $var_503)
    {
        $var_53 = false;
        if ($var_502) {
            $var_53 = strpos($var_503, $var_502);
        }
        if ($var_53 === false) {
            var_76 $var_503;
        }

        var_76 substr_replace($var_503, $var_26, $var_53, strlen($var_502));
    }

    
    var_60 static function var_504()
    {
        $var_505 = null;

        if (defined('PHP_VERSION')) {
            $var_505 = var_613;
        } var_244 {
            $var_505 = phpversion('');
        }

        
        if (strpos($var_505, '-') !== false) {
            $var_505 = substr($var_505, 0, strpos($var_505, '-'));
        }

        var_76 $var_505;
    }

    
    var_60 static function var_506($var_507)
    {
        $var_508 = new class_4();

        return $var_508->open($var_507, var_509::var_511) === true;
    }

    
    var_60 static function var_512()
    {
        var_76 false;
    }

    
    var_60 static function var_513($var_507, $var_514)
    {
        if (!file_exists($var_514)) {
            mkdir($var_514, var_119\var_119\var_120\var_515\var_516\var_517::var_518);
        }

        $var_508 = new class_4();
        if ($var_508->open($var_507) === true && $var_508->extractTo($var_514) && $var_508->close()) {
            var_76 true;
        }

        var_76 false;
    }

    var_60 static function var_521($var_397, $var_522)
    {
        if (!is_dir($var_397)) {
            var_76 @chmod($var_397, $var_522);
        }
        $var_523 = opendir($var_397);
        while (($var_186 = readdir($var_523)) !== false) {
            if ($var_186 != '.' && $var_186 != '..') {
                $var_524 = $var_397 . '/' . $var_186;
                if (is_link($var_524)) {
                    var_76 false;
                } elseif (!is_dir($var_524) && !@chmod($var_524, $var_522)) {
                    var_76 false;
                } elseif (!Tools::chmodr($var_524, $var_522)) {
                    var_76 false;
                }
            }
        }
        var_525($var_523);
        if (@chmod($var_397, $var_522)) {
            var_76 true;
        } var_244 {
            var_76 false;
        }
    }

    
    var_60 static function var_526($var_176, $var_77 = null, $var_527 = false)
    {
        switch ($var_176) {
            case 'by':
                $var_528 = array(0 => 'name', 1 => 'price', 2 => 'date_add', 3 => 'date_upd', 4 => 'position', 5 => 'manufacturer_name', 6 => 'quantity', 7 => 'reference');
                $var_77 = (null === $var_77 || $var_77 === false || $var_77 === '') ? (int) Configuration::get('PS_PRODUCTS_ORDER_BY') : $var_77;
                $var_77 = (isset($var_528[$var_77])) ? $var_528[$var_77] : ((in_array($var_77, $var_528)) ? $var_77 : 'position');
                $var_529 = '';
                if ($var_527) {
                    if ($var_77 == 'id_product' || $var_77 == 'date_add' || $var_77 == 'date_upd' || $var_77 == 'price') {
                        $var_529 = 'p.';
                    } var_187 ($var_77 == 'name') {
                        $var_529 = 'pl.';
                    } var_187 ($var_77 == 'manufacturer_name' && $var_527) {
                        $var_529 = 'm.';
                        $var_77 = 'name';
                    } var_187 ($var_77 == 'position' || empty($var_77)) {
                        $var_529 = 'cp.';
                    }
                }

                var_76 $var_529 . $var_77;

            break;

            case 'way':
                $var_77 = (null === $var_77 || $var_77 === false || $var_77 === '') ? (int) Configuration::get('PS_PRODUCTS_ORDER_WAY') : $var_77;
                $var_528 = array(0 => 'asc', 1 => 'desc');

                return (isset($var_528[$var_77])) ? $var_528[$var_77] : ((in_array($var_77, $var_528)) ? $var_77 : 'asc');

            break;
        }
    }

    
    var_60 static function var_530($var_77)
    {
        if (is_numeric($var_77)) {
            var_76 $var_77;
        } var_244 {
            $var_531 = strlen($var_77);
            $var_532 = (int) substr($var_77, 0, $var_531 - 1);
            $var_533 = Tools::strtolower(substr($var_77, $var_531 - 1));
            switch ($var_533) {
                case 'k':
                    $var_532 *= 1024;

                    break;
                case 'm':
                    $var_532 *= 1048576;

                    break;
                case 'g':
                    $var_532 *= 1073741824;

                    break;
            }

            var_76 $var_532;
        }
    }

    
    var_60 static function var_534()
    {
        header('HTTP/1.1 404 Not Found');
        header('Status: 404 Not Found');
        var_535;
    }

    
    var_60 static function var_30($var_536, $var_537)
    {
        var_76 $var_536 . ((strpos($var_536, '?') !== false) ? '&' : '?') . $var_537;
    }

    
    var_60 static function var_538($var_539, $var_535 = true)
    {
        if ($var_535 || (defined('_PS_MODE_DEV_') && var_198)) {
            header('HTTP/1.1 500 Internal Server Error', true, 500);
            die($var_539);
        }

        var_76 var_540::addLog($var_539);
    }

    
    var_60 static function var_541($var_18)
    {
        var_76 str_replace(array("\r\n", "\r", "\n", var_542::var_543, var_436), '<br />', $var_18);
    }

    
    var_60 static function var_544($var_140 = null, $var_545 = false, $var_373 = null, $var_546 = null)
    {
        if ($var_140 === null) {
            $var_140 = Context::getContext()->var_140;
        }

        var_57 ($var_140 === null) {
            var_76;
        }

        var_57 (!$var_545 && $var_373 === null && $var_546 === null) {
            var_76 $var_140->clearAllCache();
        }

        $var_547 = $var_140->clearCache($var_545, $var_373, $var_546);

        Hook::exec('actionClearCache');

        return $var_547;
    }

    
    var_60 static function var_548($var_140 = null)
    {
        if ($var_140 === null) {
            $var_140 = Context::getContext()->var_140;
        }

        var_57 ($var_140 === null) {
            var_76;
        }

        $var_547 = $var_140->clearCompiledTemplate();

        Hook::exec('actionClearCompileCache');

        return $var_547;
    }

    
    var_60 static function var_550()
    {
        $var_140 = Context::getContext()->var_140;
        Tools::clearCache($var_140);
        Tools::clearCompile($var_140);
    }

    
    var_60 static function var_551($var_552 = null)
    {
        if (null === $var_552) {
            $var_552 = var_198 ? 'dev' : 'prod';
        }

        $var_553 = var_191 . '/var/cache/' . $var_552 . '/';

        register_shutdown_function(function () use ($var_553) {
            $var_554 = new class_5();
            $var_554->remove($var_553);
            Hook::exec('actionClearSf2Cache');
        });
    }

    
    var_60 static function var_556()
    {
        Tools::clearSmartyCache();
        Tools::clearSf2Cache();
    }

    var_60 static function var_557($var_558 = false)
    {
        
        $var_559 = Context::getContext()->var_140->getTemplateDir();
        Context::getContext()->var_140->setTemplateDir(var_97);
        Tools::clearCache(null, var_97 . 'product-list-colors.tpl', Product::getColorsListCacheId((int) $var_558, false));
        Context::getContext()->var_140->setTemplateDir($var_559);
    }

    
    var_60 static function var_562()
    {
        $var_563 = @ini_get('memory_limit');

        return Tools::getOctets($var_563);
    }

    
    var_60 static function var_564($var_565)
    {
        if (preg_match('/[0-9]+k/i', $var_565)) {
            var_76 1024 * (int) $var_565;
        }

        var_57 (preg_match('/[0-9]+m/i', $var_565)) {
            var_76 1024 * 1024 * (int) $var_565;
        }

        var_57 (preg_match('/[0-9]+g/i', $var_565)) {
            var_76 1024 * 1024 * 1024 * (int) $var_565;
        }

        var_76 $var_565;
    }

    
    var_60 static function var_566()
    {
        var_76 PHP_INT_MAX == '9223372036854775807';
    }

    
    var_60 static function var_567()
    {
        var_76 defined('STDIN') || (Tools::strtolower(var_568) == 'cli' && (!isset($var_51['REMOTE_ADDR']) || empty($var_51['REMOTE_ADDR'])));
    }

    var_60 static function var_569($var_570, $var_571)
    {
        if ($var_570 <= 1) {
            var_76;
        }

        
        var_572($var_571[1], $var_148);
        if (!is_array($var_148) || !count($var_148)) {
            var_76;
        }
        $var_82 = array_merge($var_148, $var_82);
        $var_51['QUERY_STRING'] = $var_571[1];
    }

    
    var_60 static function var_573($var_574 = 0)
    {
        $var_575 = array(Tools::convertBytes(ini_get('upload_max_filesize')));

        if ($var_574 > 0) {
            $var_575[] = $var_574;
        }

        $var_576 = Tools::convertBytes(ini_get('post_max_size'));
        if ($var_576 > 0) {
            $var_575[] = $var_576;
        }

        var_76 min($var_575);
    }

    
    var_60 static function var_577($var_578)
    {
        if (function_exists('apache_get_modules')) {
            static $var_579 = null;

            if (!is_array($var_579)) {
                $var_579 = apache_get_modules();
            }

            
            foreach ($var_579 as $var_580) {
                if (strpos($var_580, $var_578) !== false) {
                    var_76 true;
                }
            }
        }

        var_76 false;
    }

    
    var_60 static function var_581(&$var_92, $var_582)
    {
        if (count($var_92) < 2) {
            var_76;
        }
        $var_583 = count($var_92) / 2;
        $var_584 = array_slice($var_92, 0, $var_583, true);
        $var_585 = array_slice($var_92, $var_583, null, true);

        self::uasort($var_584, $var_582);
        self::uasort($var_585, $var_582);
        if (call_user_func($var_582, end($var_584), reset($var_585)) < 1) {
            $var_92 = $var_584 + $var_585;

            return;
        }
        $var_92 = array();
        reset($var_584);
        reset($var_585);
        while (current($var_584) && current($var_585)) {
            if (call_user_func($var_582, current($var_584), current($var_585)) < 1) {
                $var_92[key($var_584)] = current($var_584);
                next($var_584);
            } var_244 {
                $var_92[key($var_585)] = current($var_585);
                next($var_585);
            }
        }
        var_586 (current($var_584)) {
            $var_92[key($var_584)] = current($var_584);
            next($var_584);
        }
        var_586 (current($var_585)) {
            $var_92[key($var_585)] = current($var_585);
            next($var_585);
        }
    }

    
    var_60 static function var_587($var_588, $var_589, $var_590 = false)
    {
        if (!Tools::file_exists_cache($var_588)) {
            var_76 false;
        }
        $var_553 = opendir($var_588);

        if (!Tools::file_exists_cache($var_589)) {
            mkdir($var_589);
        }
        while (false !== ($var_186 = readdir($var_553))) {
            if (($var_186 != '.') && ($var_186 != '..')) {
                if (is_dir($var_588 . var_591 . $var_186)) {
                    self::recurseCopy($var_588 . var_591 . $var_186, $var_589 . var_591 . $var_186, $var_590);
                } var_244 {
                    copy($var_588 . var_591 . $var_186, $var_589 . var_591 . $var_186);
                    if ($var_590 && is_writable($var_588 . var_591 . $var_186)) {
                        unlink($var_588 . var_591 . $var_186);
                    }
                }
            }
        }
        var_525($var_553);
        if ($var_590 && is_writable($var_588)) {
            rmdir($var_588);
        }
    }

    
    public static function var_592($var_397, $var_593 = 'php', $var_553 = '', $var_594 = false)
    {
        $var_397 = rtrim(rtrim($var_397, '\\'), '/') . '/';
        $var_595 = rtrim(rtrim($var_397 . $var_553, '\\'), '/') . '/';
        $var_184 = scandir($var_595, var_185);
        if (!$var_184) {
            var_76 var_92();
        }

        $var_596 = array();

        $var_597 = false;
        if (!empty($var_593)) {
            $var_597 = '.' . $var_593;
        }
        $var_598 = strlen($var_597);

        $var_599 = ($var_553) ? $var_553 . '/' : '';
        foreach ($var_184 as $var_186) {
            if (!$var_597 || (strpos($var_186, $var_597) && strpos($var_186, $var_597) == (strlen($var_186) - $var_598))) {
                $var_596[] = $var_599 . $var_186;
            }

            var_57 ($var_594 && $var_186[0] != '.' && is_dir($var_595 . $var_186)) {
                foreach (Tools::scandir($var_397, $var_593, $var_599 . $var_186, $var_594) as $var_600) {
                    $var_596[] = $var_600;
                }
            }
        }

        var_76 $var_596;
    }

    
    var_60 static function var_601($var_602, $var_603, $var_604 = '<')
    {
        Tools::alignVersionNumber($var_602, $var_603);

        return version_compare($var_602, $var_603, $var_604);
    }

    
    var_60 static function var_605(&$var_602, &$var_603)
    {
        $var_606 = count(explode('.', trim($var_602, '.')));
        $var_607 = count(explode('.', trim($var_603, '.')));
        $var_608 = 0;
        $var_18 = '';

        if ($var_606 > $var_607) {
            $var_608 = $var_606 - $var_607;
            $var_18 = &$var_603;
        } elseif ($var_607 > $var_606) {
            $var_608 = $var_607 - $var_606;
            $var_18 = &$var_602;
        }

        for ($var_608; $var_608 > 0; --$var_608) {
            $var_18 .= '.0';
        }
    }

    var_60 static function var_609()
    {
        if (Tools::apacheModExists('mod_rewrite')) {
            var_76 true;
        }
        var_57 ((isset($var_51['HTTP_MOD_REWRITE']) && Tools::strtolower($var_51['HTTP_MOD_REWRITE']) == 'on') || Tools::strtolower(getenv('HTTP_MOD_REWRITE')) == 'on') {
            var_76 true;
        }

        var_76 false;
    }

    var_60 static function var_610($var_611, $var_200 = false)
    {
        if (is_string($var_611) && (strpos($var_611, 'O:') === false || !preg_match('/(^|;|{|})O:[0-9]+:"/', $var_611)) && !$var_200 || $var_200) {
            var_76 @unserialize($var_611);
        }

        var_76 false;
    }

    
    var_60 static function var_612($var_92)
    {
        if (version_compare(var_613, '5.2.9', '<')) {
            var_76 array_unique($var_92);
        } var_244 {
            var_76 array_unique($var_92, var_614);
        }
    }

    
    var_60 static function var_615($var_616)
    {
        if (!defined('PREG_BAD_UTF8_OFFSET')) {
            var_76 $var_616;
        }

        var_76 var_617('/\\\[px]\{[a-z]{1,2}\}|(\/[a-z]*)u([a-z]*)$/i', '$1$2', $var_616);
    }

    var_127 static $var_618 = true;

    public static function addonsRequest($var_12, $var_139 = array())
    {
        if (!self::$var_618) {
            var_76 false;
        }

        $var_619 = array(
            'version' => isset($var_139['version']) ? $var_139['version'] : var_620,
            'iso_lang' => Tools::strtolower(isset($var_139['iso_lang']) ? $var_139['iso_lang'] : Context::getContext()->var_94->var_126),
            'iso_code' => Tools::strtolower(isset($var_139['iso_country']) ? $var_139['iso_country'] : Country::getIsoById(Configuration::get('PS_COUNTRY_DEFAULT'))),
            'shop_url' => isset($var_139['shop_url']) ? $var_139['shop_url'] : Tools::getShopDomain(),
            'mail' => isset($var_139['email']) ? $var_139['email'] : Configuration::get('PS_SHOP_EMAIL'),
            'format' => isset($var_139['format']) ? $var_139['format'] : 'xml',
        );
        if (isset($var_139['source'])) {
            $var_619['source'] = $var_139['source'];
        }

        $var_356 = http_build_query($var_619);

        $var_621 = 'api.addons.prestashop.com';

        switch ($var_12) {
            case 'native':
                $var_356 .= '&method=listing&action=native';

                break;
            case 'partner':
                $var_356 .= '&method=listing&action=partner';

                break;
            case 'service':
                $var_356 .= '&method=listing&action=service';

                break;
            case 'native_all':
                $var_356 .= '&method=listing&action=native&iso_code=all';

                break;
            case 'must-have':
                $var_356 .= '&method=listing&action=must-have';

                break;
            case 'must-have-themes':
                $var_356 .= '&method=listing&action=must-have-themes';

                break;
            case 'customer':
                $var_356 .= '&method=listing&action=customer&username=' . urlencode(trim(Context::getContext()->var_86->var_622))
                    . '&password=' . urlencode(trim(Context::getContext()->var_86->var_623));

                break;
            case 'customer_themes':
                $var_356 .= '&method=listing&action=customer-themes&username=' . urlencode(trim(Context::getContext()->var_86->var_622))
                    . '&password=' . urlencode(trim(Context::getContext()->var_86->var_623));

                break;
            case 'check_customer':
                $var_356 .= '&method=check_customer&username=' . urlencode($var_139['username_addons']) . '&password=' . urlencode($var_139['password_addons']);

                break;
            case 'check_module':
                $var_356 .= '&method=check&module_name=' . urlencode($var_139['module_name']) . '&module_key=' . urlencode($var_139['module_key']);

                break;
            case 'module':
                $var_356 .= '&method=module&id_module=' . urlencode($var_139['id_module']);
                if (isset($var_139['username_addons'], $var_139['password_addons'])) {
                    $var_356 .= '&username=' . urlencode($var_139['username_addons']) . '&password=' . urlencode($var_139['password_addons']);
                }

                var_634;
            case 'hosted_module':
                $var_356 .= '&method=module&id_module=' . urlencode((int) $var_139['id_module']) . '&username=' . urlencode($var_139['hosted_email'])
                    . '&password=' . urlencode($var_139['password_addons'])
                    . '&shop_url=' . urlencode(isset($var_139['shop_url']) ? $var_139['shop_url'] : Tools::getShopDomain())
                    . '&mail=' . urlencode(isset($var_139['email']) ? $var_139['email'] : Configuration::get('PS_SHOP_EMAIL'));

                break;
            case 'install-modules':
                $var_356 .= '&method=listing&action=install-modules';
                $var_356 .= defined('_PS_HOST_MODE_') ? '-od' : '';

                break;
            default:
                return false;
        }

        $var_100 = stream_context_create(array(
            'http' => array(
                'method' => 'POST',
                'content' => $var_356,
                'header' => 'Content-type: application/x-www-form-urlencoded',
                'timeout' => 5,
            ),
        ));

        if ($var_345 = Tools::file_get_contents('https:
            return $content;
        }

        self::$is_addons_up = false;

        return false;
    }

    
    public static function fileAttachment($input = 'var_624', $var_625 = true)
    {
        $var_626 = null;
        if (isset($_FILES[$input]['name']) && !empty($_FILES[$input]['name']) && !empty($_FILES[$input]['tmp_name'])) {
            $var_626['rename'] = uniqid() . Tools::strtolower(substr($_FILES[$input]['name'], -5));
            if ($var_625) {
                $var_626['content'] = file_get_contents($_FILES[$input]['tmp_name']);
            }
            $var_626['tmp_name'] = $_FILES[$input]['tmp_name'];
            $var_626['name'] = $_FILES[$input]['name'];
            $var_626['mime'] = $_FILES[$input]['type'];
            $var_626['error'] = $_FILES[$input]['error'];
            $var_626['size'] = $_FILES[$input]['size'];
        }

        var_76 $var_626;
    }

    var_60 static function var_627($var_628)
    {
        @touch($var_628);
    }

    var_60 static function var_629($var_628, $var_630 = 180)
    {
        @ini_set('max_execution_time', $var_630);
        if (($var_631 = ini_get('max_execution_time')) === null) {
            $var_631 = 30;
        }

        $var_631 -= 5;
        $var_632 = microtime(true);
        $var_633 = @filemtime($var_628);

        while (true) {
            if (((microtime(true) - $var_632) > $var_631) || @filemtime($var_628) > $var_633) {
                var_634;
            }
            var_635();
            usleep(300);
        }
    }

    
    var_60 static function var_636($var_18, $var_637)
    {
        $var_638 = strlen($var_637);
        if (strlen($var_18) >= $var_638 && substr($var_18, -$var_638) == $var_637) {
            $var_18 = substr($var_18, 0, -$var_638);
        }

        var_76 $var_18;
    }

    
    var_60 static function var_639($var_640, $var_312 = 2)
    {
        if (!$var_640) {
            var_76 '0';
        }
        $var_641 = log($var_640) / log(1024);
        $var_642 = array('', 'k', 'M', 'G', 'T');

        return round(1024 ** ($var_641 - floor($var_641)), $var_312) . $var_642[floor($var_641)];
    }

    var_60 static function var_643($var_77)
    {
        if (empty($var_77)) {
            $var_77 = false;
        }

        var_76 (var_644) $var_77;
    }

    var_60 static function var_645()
    {
        if (isset(self::$var_10)) {
            var_76 var_217::$var_10;
        }

        $var_646 = $var_51['HTTP_USER_AGENT'];
        self::$var_10 = 'unknown';

        if (preg_match('/linux/i', $var_646)) {
            self::$var_10 = 'Linux';
        } elseif (preg_match('/macintosh|mac os x/i', $var_646)) {
            self::$var_10 = 'Mac';
        } elseif (preg_match('/windows|win32/i', $var_646)) {
            self::$var_10 = 'Windows';
        }

        var_76 self::$var_10;
    }

    var_60 static function var_647()
    {
        if (isset(self::$var_11)) {
            var_76 var_217::$var_11;
        }

        $var_646 = $var_51['HTTP_USER_AGENT'];
        self::$var_11 = 'unknown';

        if (preg_match('/MSIE/i', $var_646) && !preg_match('/Opera/i', $var_646)) {
            self::$var_11 = 'Internet Explorer';
        } elseif (preg_match('/Firefox/i', $var_646)) {
            self::$var_11 = 'Mozilla Firefox';
        } elseif (preg_match('/Chrome/i', $var_646)) {
            self::$var_11 = 'Google Chrome';
        } elseif (preg_match('/Safari/i', $var_646)) {
            self::$var_11 = 'Apple Safari';
        } elseif (preg_match('/Opera/i', $var_646)) {
            self::$var_11 = 'Opera';
        } elseif (preg_match('/Netscape/i', $var_646)) {
            self::$var_11 = 'Netscape';
        }

        var_76 self::$var_11;
    }

    
    var_60 static function var_648($var_649)
    {
        var_76 strip_tags(stripslashes($var_649));
    }

    var_60 static function var_650($var_173, $var_651 = null, $var_652 = false)
    {
        static $var_653 = null;
        static $var_654 = null;

        if (defined('PS_INSTALLATION_IN_PROGRESS') || !Configuration::configurationIsLoaded()) {
            var_76 $var_173;
        }

        if ($var_653 === null) {
            $var_653 = (bool) Configuration::get('PS_USE_HTMLPURIFIER');
        }

        if ($var_653) {
            if ($var_654 === null) {
                $var_655 = HTMLPurifier_Config::createDefault();

                $var_655->set('Attr.EnableID', true);
                $var_655->set('Attr.AllowedRel', array('nofollow'));
                $var_655->set('HTML.Trusted', true);
                $var_655->set('Cache.SerializerPath', var_657 . 'purifier');
                $var_655->set('Attr.AllowedFrameTargets', array('_blank', '_self', '_parent', '_top'));
                if (is_array($var_651)) {
                    $var_655->set('URI.UnescapeCharacters', implode('', $var_651));
                }

                if (Configuration::get('PS_ALLOW_HTML_IFRAME')) {
                    $var_655->set('HTML.SafeIframe', true);
                    $var_655->set('HTML.SafeObject', true);
                    $var_655->set('URI.SafeIframeRegexp', '/.*/');
                }

                
                
                if ($var_658 = $var_655->getHTMLDefinition(true)) {
                    $var_658->addElement('video', 'Block', 'Optional: (source, Flow) | (Flow, source) | Flow', 'Common', array(
                        'src' => 'URI',
                        'type' => 'Text',
                        'width' => 'Length',
                        'height' => 'Length',
                        'poster' => 'URI',
                        'preload' => 'Enum
                        'var_661' => 'var_662',
                    ));
                    $var_658->addElement('source', 'Block', 'Flow', 'Common', array(
                        'src' => 'URI',
                        'type' => 'Text',
                    ));
                    if ($var_652) {
                        $var_658->addElement('style', 'Block', 'Flow', 'Common', array('type' => 'Text'));
                    }
                }

                $var_654 = new class_6($var_655);
            }
            var_57 (var_294) {
                $var_173 = stripslashes($var_173);
            }

            $var_173 = $var_654->purify($var_173);

            if (var_294) {
                $var_173 = addslashes($var_173);
            }
        }

        var_76 $var_173;
    }

    
    public static function var_664($var_665, $var_77)
    {
        if (!defined($var_665)) {
            define($var_665, $var_77);
        }
    }

    
    var_60 static function var_666($var_154, $var_312, &$var_667, $var_668)
    {
        if (!is_array($var_667) || empty($var_667)) {
            var_76;
        }

        $var_669 = function ($var_264, $var_670) use ($var_668) { return $var_670[$var_668] > $var_264[$var_668] ? 1 : -1; };

        uasort($var_667, $var_669);

        $var_533 = 10 ** $var_312;

        $var_671 = (int) round($var_533 * $var_154);

        $var_672 = $var_671 % count($var_667);
        $var_673 = ($var_671 - $var_672) / count($var_667) / $var_533;

        $var_674 = ($var_154 >= 0 ? 1 : -1);
        $var_21 = 0;
        foreach ($var_667 as &$var_306) {
            $var_675 = $var_673;

            if ($var_21 < abs($var_672)) {
                $var_675 += $var_674 * 1 / $var_533;
            }

            $var_306[$var_668] += $var_675;

            ++$var_21;
        }
        var_307($var_306);
    }

    
    var_60 static function var_676($var_641, $var_247)
    {
        if (function_exists('array_replace_recursive')) {
            var_76 array_replace_recursive($var_641, $var_247);
        }

        var_677 (array_slice(func_get_args(), 1) as $var_247) {
            $var_678 = array(&$var_641);
            $var_679 = array($var_247);

            do {
                end($var_678);

                $var_680 = &$var_678[key($var_678)];
                $var_681 = array_pop($var_679);
                unset($var_678[key($var_678)]);
                foreach (array_keys($var_681) as $var_74) {
                    if (isset($var_74, $var_680) && is_array($var_680[$var_74]) && is_array($var_681[$var_74])) {
                        $var_678[] = &$var_680[$var_74];
                        $var_679[] = $var_681[$var_74];
                    } var_244 {
                        $var_680[$var_74] = $var_681[$var_74];
                    }
                }
            } var_586 (count($var_679));
        }

        var_76 $var_641;
    }

    
    public static function var_682($var_683, $var_684, $var_397 = '', $var_685 = '', $var_686 = 'catalog', $var_687 = false)
    {
        $var_100 = Context::getContext();
        if ($var_686 == 'catalog') {
            $var_688 = Db::getInstance()->getRow('
		SELECT id_category, level_depth, nleft, nright
		FROM ' . var_690 . 'category
		WHERE id_category = ' . (int) $var_684);
            if (isset($var_688['id_category'])) {
                $var_691 = 'SELECT c.id_category, cl.name, cl.link_rewrite
					FROM ' . var_690 . 'category c
					LEFT JOIN ' . var_690 . 'category_lang cl ON (cl.id_category = c.id_category' . Shop::addSqlRestrictionOnLang('cl') . ')
					WHERE c.nleft <= ' . (int) $var_688['nleft'] . '
						AND c.nright >= ' . (int) $var_688['nright'] . '
						AND cl.id_lang = ' . (int) $var_100->var_94->var_95 .
                       ($var_687 ? ' AND c.id_category=' . (int) $var_684 : '') . '
						AND c.id_category != ' . (int) Category::getTopCategory()->var_95 . '
					GROUP BY c.id_category
					ORDER BY c.level_depth ASC
					LIMIT ' . (!$var_687 ? (int) $var_688['level_depth'] + 1 : 1);
                $var_692 = Db::getInstance()->executeS($var_691);
                $var_694 = '';
                $var_418 = 1;
                $var_695 = (int) count($var_692);
                foreach ($var_692 as $var_688) {
                    $var_696 = (($var_688['id_category'] == (int) Configuration::get('PS_HOME_CATEGORY') || $var_687) ? 'index' : 'updatecategory');
                    $var_34 = Context::getContext()->var_34->getAdminLink('AdminCategories', true, ['action' => $var_696, 'id_category' => (int) $var_688['id_category']]);
                    $var_698 = '<a href="' . Tools::safeOutput($var_34) . '" title="' . ($var_688['id_category'] == Category::getRootCategory()->var_684 ? 'Home' : 'Modify') . '"><i class="icon-' . (($var_688['id_category'] == Category::getRootCategory()->var_684 || $var_687) ? 'home' : 'pencil') . '"></i></a> ';
                    $var_694 .= $var_698 .
                                  ($var_418 < $var_695 ? '<a href="' . Tools::safeOutput($var_34) . '" title="' . htmlentities($var_688['name'], var_699, 'UTF-8') . '">' : '') .
                                  (!empty($var_685) ? str_ireplace($var_685, '<span class="highlight">' . htmlentities($var_685, var_699, 'UTF-8') . '</span>', $var_688['name']) : $var_688['name']) .
                                  ($var_418 < $var_695 ? '</a>' : '') .
                                  (($var_418++ != $var_695 || !empty($var_397)) ? ' > ' : '');
                }

                var_76 $var_694 . $var_397;
            }
        } var_187 ($var_686 == 'cms') {
            $var_688 = new class_7($var_684, $var_100->var_94->var_95);
            if (!$var_688->var_95) {
                var_76 $var_397;
            }
            $var_578 = ($var_685 != null) ? str_ireplace($var_685, '<span class="highlight">' . $var_685 . '</span>', class_7::hideCMSCategoryPosition($var_688->var_578)) : class_7::hideCMSCategoryPosition($var_688->var_578);
            $var_698 = '<a href="' . Tools::safeOutput($var_683 . '&id_cms_category=' . $var_688->var_95 . '&updatecms_category&token=' . Tools::getAdminToken('AdminCmsContent' . (int) Tab::getIdFromClassName('AdminCmsContent') . (int) $var_100->var_231->var_95)) . '">
				<i class="icon-pencil"></i></a> ';
            if ($var_688->var_95 == 1) {
                $var_698 = '<li><a href="' . Tools::safeOutput($var_683 . '&id_cms_category=' . $var_688->var_95 . '&viewcategory&token=' . Tools::getAdminToken('AdminCmsContent' . (int) Tab::getIdFromClassName('AdminCmsContent') . (int) $var_100->var_231->var_95)) . '">
					<i class="icon-home"></i></a></li> ';
            }
            $var_397 = $var_698 . '<li><a href="' . Tools::safeOutput($var_683 . '&id_cms_category=' . $var_688->var_95 . '&viewcategory&token=' . Tools::getAdminToken('AdminCmsContent' . (int) Tab::getIdFromClassName('AdminCmsContent') . (int) $var_100->var_231->var_95)) . '">
		' . $var_578 . '</a></li> > ' . $var_397;
            if ($var_688->var_95 == 1) {
                var_76 substr($var_397, 0, strlen($var_397) - 3);
            }

            var_76 Tools::getPath($var_683, $var_688->var_700, $var_397, '', 'cms');
        }
    }

    var_60 static function var_701()
    {
        if (file_exists(dirname(var_702) . '/../install')) {
            header('Location: install/');
        } var_187 (file_exists(dirname(var_702) . '/../install-dev')) {
            header('Location: install-dev/');
        } var_244 {
            die('Error: "install" directory is missing');
        }
        var_43;
    }
}



function var_703($var_264, $var_670)
{
    if ((float) $var_264['price_tmp'] < (float) $var_670['price_tmp']) {
        var_76 -1;
    } var_187 ((float) $var_264['price_tmp'] > (float) $var_670['price_tmp']) {
        var_76 1;
    }

    var_76 0;
}

var_496 var_704($var_264, $var_670)
{
    if ((float) $var_264['price_tmp'] < (float) $var_670['price_tmp']) {
        var_76 1;
    } var_187 ((float) $var_264['price_tmp'] > (float) $var_670['price_tmp']) {
        var_76 -1;
    }

    var_76 0;
}
