<?php

class class_0 extends var_0 {

	
	function fn_0() {
		$var_1 = array(
			'The little brown fox jumped over the lazy cow.' => 'The little brown fox...',
			'<p>This is some text in a paragraph.</p>' => '<p>This is some text...'
		);
		
		foreach($var_1 as $var_2 => $var_3) {
			$var_4 = new class_1('Test');
			$var_4->setValue($var_2);
			$var_6->assertEquals($var_3, $var_4->LimitCharacters());
		}
	}
	
	
	function fn_1() {
		$var_1 = array(
			
			'The little brown fox jumped over the lazy cow.' => 'The little brown...',
			' This text has white space around the ends ' => 'This text has...',
		
			
			'Two words' => 'Two words',	
			'One' => 'One',	
			'' => '',	
			
			
			'<p>Text inside a paragraph tag should also work</p>' => 'Text inside a...',
			'<p><span>Text nested inside another tag should also work</span></p>' => 'Text nested inside...',
			'<p>Two words</p>' => 'Two words'
		);
		
		foreach($var_1 as $var_2 => $var_3) {
			$var_4 = new class_1('Test');
			$var_4->setValue($var_2);
			$var_6->assertEquals($var_3, $var_4->LimitWordCount(3));
		}
	}

	
	function fn_2() {
		$var_1 = array(
			'<p>Stuff & stuff</p>' => 'Stuff &amp;...',
			"Stuff\nBlah Blah Blah" => "Stuff<br />Blah Blah...",
			"Stuff<Blah Blah" => "Stuff&lt;Blah Blah",
			"Stuff>Blah Blah" => "Stuff&gt;Blah Blah"
		);
		
		foreach($var_1 as $var_2 => $var_3) {
			$var_4 = new class_1('Test');
			$var_4->setValue($var_2);
			$var_6->assertEquals($var_3, $var_4->LimitWordCountXML(3));
		}
	}
	
	
	function fn_3() {
		$var_1 = array(
			'' => '',
			'First sentence.' => 'First sentence.',
			'First sentence. Second sentence' => 'First sentence. Second sentence.',
			'<p>First sentence.</p>' => 'First sentence.',
			'<p>First sentence. Second sentence. Third sentence</p>' => 'First sentence. Second sentence.',
			'<p>First sentence. <em>Second sentence</em>. Third sentence</p>' => 'First sentence. Second sentence.',
			'<p>First sentence. <em class="dummyClass">Second sentence</em>. Third sentence</p>' => 'First sentence. Second sentence.'
		);
		
		foreach($var_1 as $var_2 => $var_3) {
			$var_4 = new class_1('Test');
			$var_4->setValue($var_2);
			$var_6->assertEquals($var_3, $var_4->LimitSentences(2));
		}
	}
	
	
	function fn_4() {
		$var_1 = array(
			'This text has multiple sentences. Big Summary uses this to split sentences up.' => 'This text has multiple...',
			'This text does not have multiple sentences' => 'This text does not...',
			'Very short' => 'Very short',
			'' => ''
		);
		
		foreach($var_1 as $var_2 => $var_3) {
			$var_4 = DBField::create('Text', $var_2);
			$var_6->assertEquals($var_3, $var_4->BigSummary(4));
		}
	}
	
	function fn_5() {
		$var_13 = '<p>This is some text. It is a test</p>';
		$var_14 = 'test';
		
		$var_15 = '<p>This is some test text. Test test what if you have multiple keywords.</p>';
		$var_16 = 'some test';
		
		$var_17 = '<p>A dog ate a cat while looking at a Foobar</p>';
		$var_18 = 'a';
		$var_19 = 'ate';

		$var_4 = DBField::create('Text', $var_13, 'Text');
		
		$var_6->assertEquals(
			'... text. It is a <span class="highlight">test</span>...',
			$var_4->ContextSummary(20, $var_14)
		);

		$var_4->setValue($var_15);
		
		$var_6->assertEquals(
			'This is <span class="highlight">some</span> <span class="highlight">test</span> text. <span class="highlight">test</span> <span class="highlight">test</span> what if you have...',
			$var_4->ContextSummary(50, $var_16)
		);
		
		$var_4->setValue($var_17);
		
		
		$var_6->assertEquals(
			'A dog ate a cat while looking at a Foobar',
			$var_4->ContextSummary(100, $var_18)
		);
		
		
		$var_6->assertEquals(
			'A dog <span class="highlight">ate</span> a cat while looking at a Foobar',
			$var_4->ContextSummary(100, $var_19)
		);
		
	}	
}