<?php
App::uses('AppHelper', 'View/Helper');





    class class_0 extends var_0 {
        var $var_1 = array('Html');

        private $var_2;

        private function fn_0() {
            $var_4->var_2 = array(
                'link' => array('type' => 'url', 'url' => '$1', 'text' => '$1'),
                'thread' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/threads/view/$1', 'text' => ' Thread $1'),
                'event' => array('type' => 'url', 'url' => h(Configure::read('MISP.baseurl')). '/events/view/$1', 'text' => ' Event $1'),
                'code' => array('type' => 'replace', 'text' => '<pre>$1</pre>'),
                'quote' => array('type' => 'replace', 'text' => '<div class="quote">$1</div>')
            );
        }


        public function fn_1($var_5) {
            $var_4->fn_0();
            foreach ($var_4->var_2 as $var_6 => $var_7) {
                $var_8 = $var_4->fn_2($var_5, $var_6);
                
                if (!$var_8) return 'Malformed syntax.';
            }
            return $var_5;
        }

        private function fn_2(&$var_5, $var_6) {
            $var_10 = preg_match('%\[' . $var_6 . '\]%isU', $var_5, $var_11, var_12);
            $var_13 = preg_match('%\[/' . $var_6 . '\]%isU', $var_5, $var_14, var_12);
            $var_15 = strlen($var_6) + 2;
            $var_16 = $var_15 + 1;
            if ((count($var_10) !== count($var_13))) return false;
            $var_17 = array();
            $var_18 = array();
            foreach ($var_11 as $var_19) {
                $var_18[$var_19[1]] = 'open';
            }
            foreach ($var_14 as $var_20) {
                $var_18[$var_20[1]] = 'close';
            }
            foreach ($var_11 as $var_19) {
                $var_21 = 1;
                foreach ($var_18 as $var_22 => $var_23) {
                    if ($var_19[1] == $var_22) continue;
                    if ($var_23 == 'close') $var_21--;
                    else $var_21++;
                    if ($var_21 == 0) {
                        $var_17[] = array($var_19[1], $var_22);
                        continue 2;
                    }
                }
            }
            foreach ($var_17 as $var_24) {
                $var_25 = substr($var_5, 0, $var_24[0]);
                if ($var_4->var_2[$var_6]['type'] == 'url') {
                    $var_26 = substr($var_5, $var_24[0] + $var_15, $var_24[1] - ($var_24[0] + $var_15));
                    if (empty($var_26)) {
                        $var_7 = '';
                    } else {
                        if (!is_numeric($var_26) && ($var_6 == 'event' || $var_6 == 'thread')) {
                            $var_7 = '%MALFORMED URL%';
                        } else {
                            if (filter_var(str_replace('$1', $var_26, $var_4->var_2[$var_6]['url']), var_27)) {
                                if (substr($var_26, 0, 7) === 'http:
                                    $replacement = $this->Html->link(
                                        str_replace('$1', $var_26, $var_4->var_2[$var_6]['text']),
                                        str_replace('$1', $var_26, $var_4->var_2[$var_6]['url'])
                                    );
                                } else {
                                    $var_7 = '%MALFORMED URL%';
                                }
                            } var_28 {
                                $var_7 = '%MALFORMED URL%';
                            }
                        }
                    }
                } var_28 {
                    $var_26 = substr($var_5, $var_24[0] + $var_15, $var_24[1] - ($var_24[0] + $var_15));
                    if (empty($var_26)) {
                        $var_7 = '';
                    } else {
                        $var_7 = str_replace('$1', $var_26, $var_4->var_2[$var_6]['text']);
                    }
                }
                $var_25 .= $var_7;
                $var_25 .= substr($var_5, $var_24[1] + $var_16, strlen($var_5));
                $var_5 = $var_25;
            }
            return true;
        }
    }
