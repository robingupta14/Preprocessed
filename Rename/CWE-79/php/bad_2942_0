<?php

abstract class var_0
{
    
    public $var_1 = false;

    
    public $var_2 = false;

    
    protected $var_3 = null;

    
    public $var_4 = null;

    
    public $var_5 = null;

    
    protected $var_6 = null;

    
    public $var_7 = '';

    
    public $var_8 = '';

    
    public $var_9;

    
    public $var_10 = var_11::var_12;

    
    public $var_13 = '';

    
    public $var_14 = '';

    
    public $var_15 = '';

    
    public $var_16 = false;

    
    protected $var_17;

    
    protected $var_18 = null;

    
    protected $var_19;

    
    public $var_20 = true;

    
    public $var_21 = true;

    
    public $var_22 = array();

    
    protected $var_23 = array();

    
    public $var_24;

    
    public $var_25;

    
    protected $var_26;

    
    protected $var_27;

    
    public $var_28 = 0;

    
    public $var_29 = false;

    
    public $var_30;

    
    public $var_31;

    
    public $var_32;

    
    public $var_33;

    
    public $var_34 = 0;

    
    protected $var_35;

    
    public $var_36;

    
    public $var_37;

    
    public $var_38;

    
    protected $var_39 = '

    
    protected $_foregroundColor = '

    
    var_16 $var_40;

    
    public $var_41;

    
    protected $var_42;

    
    protected $var_43;

    
    protected $var_44;

    
    protected $var_45;

    
    public $var_46;

    
    public $var_47;

    
    protected $var_48;

    
    public function fn_0(var_49 $var_50, $var_51 = null)
    {
        $var_52->var_37 = $var_50->var_37;
        list($var_52->var_39, $var_52->var_53) = $var_50->colors();

        if (!is_null($var_51)) {
            $var_52->fn_1($var_51);
        }
    }

    
    public function fn_2()
    {
        try {
            $var_56 = $GLOBALS['injector']->getInstance('Horde_History')
                ->getHistory('kronolith:' . $var_52->var_37 . ':' . $var_52->var_4);
            $var_59 = $GLOBALS['registry']->getAuth();
            foreach ($var_56 as $var_61) {
                switch ($var_61['action']) {
                case 'add':
                    $var_52->var_30 = new class_0($var_61['ts']);
                    if ($var_59 != $var_61['who']) {
                        $var_52->var_31 = sprintf(_("by %s"), Kronolith::getUserName($var_61['who']));
                    } else {
                        $var_52->var_31 = _("by me");
                    }
                    break;

                case 'modify':
                    if ($var_52->var_32 &&
                        $var_52->var_32->timestamp() >= $var_61['ts']) {
                        break;
                    }
                    $var_52->var_32 = new class_0($var_61['ts']);
                    if ($var_59 != $var_61['who']) {
                        $var_52->var_33 = sprintf(_("by %s"), Kronolith::getUserName($var_61['who']));
                    } else {
                        $var_52->var_33 = _("by me");
                    }
                    break;
                }
            }
        } catch (var_64 $var_65) {}
    }

    
    public function fn_3($var_66, $var_67)
    {
        switch ($var_66) {
        case 'id':
            if (substr($var_67, 0, 10) == 'kronolith:') {
                $var_67 = substr($var_67, 10);
            }
            
        case 'creator':
        case 'geoLocation':
        case 'indent':
        case 'originalStart':
        case 'originalEnd':
        case 'overlap':
        case 'rowspan':
        case 'span':
        case 'tags':
            $var_52->{'_' . $var_66} = $var_67;
            return;
        }
        $var_68 = debug_backtrace();
        trigger_error('Undefined property via __set(): ' . $var_66
                      . ' in ' . $var_68[0]['file']
                      . ' on line ' . $var_68[0]['line'],
                      var_69);
    }

    
    public function fn_4($var_66)
    {
        switch ($var_66) {
        case 'id':
        case 'indent':
        case 'overlap':
        case 'rowspan':
        case 'span':
            return $var_52->{'_' . $var_66};
        case 'creator':
            if (empty($var_52->var_6)) {
                $var_52->var_6 = $GLOBALS['registry']->getAuth();
            }
            return $var_52->var_6;
            break;
        case 'originalStart':
            if (empty($var_52->var_26)) {
                $var_52->var_26 = $var_52->var_24;
            }
            return $var_52->var_26;
            break;
        case 'originalEnd':
            if (empty($var_52->var_27)) {
                $var_52->var_27 = $var_52->var_24;
            }
            return $var_52->var_27;
            break;
        case 'tags':
            if (!isset($var_52->var_18)) {
                $var_52->fn_5(Kronolith::getTagger()->getTags($var_52->var_4, var_72::var_73));
            }
            return $var_52->var_18;
        case 'geoLocation':
            if (!isset($var_52->var_19)) {
                try {
                    $var_52->var_19 = $GLOBALS['injector']->getInstance('Kronolith_Geo')->fn_6($var_52->var_75);
                } catch (var_76 $var_65) {}
            }
            return $var_52->var_19;
        }

        $var_68 = debug_backtrace();
        trigger_error('Undefined property via __set(): ' . $var_66
                      . ' in ' . $var_68[0]['file']
                      . ' on line ' . $var_68[0]['line'],
                      var_69);
        return null;
    }

    
    public function fn_7()
    {
        return Kronolith::fn_7(str_replace('Kronolith_Event_', '', get_class($var_52)), $var_52->var_37);
    }

    
    public function fn_8()
    {
        if ($GLOBALS['calendar_manager']->getEntry(var_11::var_80, $var_52->var_37) !== false) {
            return $GLOBALS['calendar_manager']->getEntry(var_11::var_80, $var_52->var_37)->share();
        }
        throw new class_2('Share not found');
    }

    
    public function fn_9($var_83, $var_84 = null)
    {
        if ($var_84 === null) {
            $var_84 = $GLOBALS['registry']->getAuth();
        }
        try {
            $var_81 = $var_52->fn_8();
        } catch (var_85 $var_65) {}
        return $var_81->fn_9($var_84, $var_83, $var_52->var_86);
    }

    
    public function fn_10()
    {
        if (!$var_52->var_1) {
            throw new class_2('Event not yet initialized');
        }

        
        $var_88 = array();
        $var_89 = $GLOBALS['injector']->getInstance('Horde_Lock');
        $var_90 = array();
        
        
        if ($var_52->var_10 != var_11::var_91) {
            foreach (array_keys($var_52->fn_11()) as $var_75) {
                
                $var_93 = Kronolith::fn_7('Resource')->getResource($var_75);
                $var_95 = $var_93->get('calendar');
                if ($var_95 == $var_52->var_37) {
                    continue;
                }
                Kronolith::fn_7('Resource')->open($var_95);

                
                if ($var_93->get('response_type') == var_98::var_99) {
                    $var_100 = 'calendar/' . $var_95;
                    $var_90[$var_93->getId()] = $var_89->setLock($GLOBALS['registry']->getAuth(), 'kronolith', $var_100, 5, var_102::var_103);
                    $var_104 = true;
                } else {
                    $var_104 = false;
                }
                if ($var_104 && !$var_90[$var_93->getId()]) {
                    
                    
                    
                    throw new class_1(sprintf(_("The resource \"%s\" was locked. Please try again."), $var_93->get('name')));
                } else {
                    $var_105 = $var_93->getResponse($var_52);
                }

                
                if ($var_105 == var_11::var_107) {
                    $var_88[] = $var_93;
                } elseif ($var_104) {
                    $var_89->clearLock($var_90[$var_93->getId()]);
                }

                if ($var_105 == var_11::var_109 && $var_52->var_4) {
                    $var_110 = Kronolith::fn_7('Resource');
                    $var_111 = $var_110->getByUID($var_52->var_4, array($var_93->get('calendar')));
                    $var_110->deleteEvent($var_111, true, true);
                }

                
                $var_52->fn_12($var_93, $var_105);
            }
        } else {
            
            
            foreach (array_keys($var_52->fn_11()) as $var_75) {
                $var_93 = Kronolith::fn_7('Resource')->getResource($var_75);
                $var_95 = $var_93->get('calendar');
                if ($var_95 == $var_52->var_37) {
                    continue;
                }
                try {
                    Kronolith::fn_7('Resource')->open($var_95);
                    $var_93->addEvent($var_52);
                } catch (var_85 $var_65) {}
            }
        }

        
        $var_116 = $var_52->fn_7()->saveEvent($var_52);

        
        foreach ($var_88 as $var_93) {
            $var_93->addEvent($var_52);
            if ($var_93->get('response_type') == var_98::var_99) {
                $var_89->clearLock($var_90[$var_93->getId()]);
            }
        }

        $var_118 = $GLOBALS['injector']->getInstance('Horde_Alarm');
        if ($var_34 = $var_52->fn_13(new class_0($_SERVER['REQUEST_TIME']))) {
            $var_118->set($var_34);
            if ($var_52->var_35) {
                $var_118->snooze($var_52->var_4, $GLOBALS['registry']->getAuth(), $var_52->var_35);
            }
        } else {
            $var_118->delete($var_52->var_4);
        }

        return $var_116;
    }

    
    public function fn_1($var_123)
    {
    }

    
    public function fn_14($var_37)
    {
        $var_125 = Horde_Icalendar::newComponent('vevent', $var_37);
        $var_126 = $var_37->getAttribute('VERSION') == '1.0';
        $var_128 = array();

        
        
        
        if ($var_52->fn_15()) {
            switch ($var_52->var_41->getRecurType()) {
            case var_131::var_132:
            case var_131::var_133:
            case var_131::var_134:
                if (!$var_52->var_9) {
                    $var_52->var_9 = date_default_timezone_get();
                }
            }
        }

        if ($var_52->fn_16()) {
            $var_125->setAttribute('DTSTART', $var_52->var_24, array('VALUE' => 'DATE'));
            $var_125->setAttribute('DTEND', $var_52->var_25, array('VALUE' => 'DATE'));
            $var_125->setAttribute('X-FUNAMBOL-ALLDAY', 1);
        } else {
            $var_52->fn_17(true);
            $var_138 = array();
            if ($var_52->var_9) {
                try {
                    if (!$var_52->var_46) {
                        $var_139 = $GLOBALS['injector']->getInstance('Horde_Timezone');
                        $var_128[] = $var_139->getZone($var_52->var_9)->toVtimezone();
                    }
                    $var_138['TZID'] = $var_52->var_9;
                } catch (var_64 $var_65) {}
            }

            $var_125->setAttribute('DTSTART', clone $var_52->var_24, $var_138);
            $var_125->setAttribute('DTEND', clone $var_52->var_25, $var_138);
        }

        $var_125->setAttribute('DTSTAMP', $_SERVER['REQUEST_TIME']);
        $var_125->setAttribute('UID', $var_52->var_4);

        
        $var_30 = $var_32 = null;
        try {
            $var_142 = $GLOBALS['injector']->getInstance('Horde_History');
            $var_30 = $var_142->getActionTimestamp(
                'kronolith:' . $var_52->var_37 . ':' . $var_52->var_4, 'add');
            $var_32 = $var_142->getActionTimestamp(
                'kronolith:' . $var_52->var_37 . ':' . $var_52->var_4, 'modify');
            
            if ($var_30 == 0) {
                $var_30 = null;
            }
            if ($var_32 == 0) {
                $var_32 = null;
            }
        } catch (var_85 $var_65) {}
        if (!empty($var_30)) {
            $var_125->setAttribute($var_126 ? 'DCREATED' : 'CREATED', $var_30);
            if (empty($var_32)) {
                $var_32 = $var_30;
            }
        }
        if (!empty($var_32)) {
            $var_125->setAttribute('LAST-MODIFIED', $var_32);
        }

        $var_125->setAttribute('SUMMARY', $var_52->fn_18());

        
        if (count($var_52->var_22)) {
            $var_66 = Kronolith::getUserName($var_52->var_86);
            $var_145 = Kronolith::getUserEmail($var_52->var_86);
            $var_138 = array();
            if ($var_126) {
                $var_146 = new class_4($var_145);
                if (!empty($var_66)) {
                    $var_146->var_147 = $var_66;
                }
                $var_145 = strval($var_146);
            } else {
                if (!empty($var_66)) {
                    $var_138['CN'] = $var_66;
                }
                if (!empty($var_145)) {
                    $var_145 = 'mailto:' . $var_145;
                }
            }
            $var_125->setAttribute('ORGANIZER', $var_145, $var_138);
        }
        if (!$var_52->fn_19()) {
            if (!empty($var_52->var_14)) {
                $var_125->setAttribute('DESCRIPTION', $var_52->var_14);
            }

            
            if ($var_52->var_149) {
                $var_125->setAttribute('CATEGORIES', '', array(), true, array_values($var_52->var_149));
            }

            
            if (!empty($var_52->var_8)) {
                $var_125->setAttribute('LOCATION', $var_52->var_8);
            }
            if ($var_52->var_150) {
                $var_125->setAttribute('GEO', array('latitude' => $var_52->var_150['lat'], 'longitude' => $var_52->var_150['lon']));
            }

            
            if (!empty($var_52->var_15)) {
                $var_125->setAttribute('URL', $var_52->var_15);
            }
        }
        $var_125->setAttribute('CLASS', $var_52->var_16 ? 'PRIVATE' : 'PUBLIC');

        
        switch ($var_52->var_10) {
        case var_11::var_151:
            
            
            $var_125->setAttribute('STATUS', 'FREE');
            $var_125->setAttribute('TRANSP', $var_126 ? 1 : 'TRANSPARENT');
            break;
        case var_11::var_152:
            $var_125->setAttribute('STATUS', 'TENTATIVE');
            $var_125->setAttribute('TRANSP', $var_126 ? 0 : 'OPAQUE');
            break;
        case var_11::var_12:
            $var_125->setAttribute('STATUS', 'CONFIRMED');
            $var_125->setAttribute('TRANSP', $var_126 ? 0 : 'OPAQUE');
            break;
        case var_11::var_91:
            if ($var_126) {
                $var_125->setAttribute('STATUS', 'DECLINED');
                $var_125->setAttribute('TRANSP', 1);
            } else {
                $var_125->setAttribute('STATUS', 'CANCELLED');
                $var_125->setAttribute('TRANSP', 'TRANSPARENT');
            }
            break;
        }

        
        foreach ($var_52->var_22 as $var_145 => $var_10) {
            $var_138 = array();
            switch ($var_10['attendance']) {
            case var_11::var_153:
                if ($var_126) {
                    $var_138['EXPECT'] = 'REQUIRE';
                } else {
                    $var_138['ROLE'] = 'REQ-PARTICIPANT';
                }
                break;

            case var_11::var_154:
                if ($var_126) {
                    $var_138['EXPECT'] = 'REQUEST';
                } else {
                    $var_138['ROLE'] = 'OPT-PARTICIPANT';
                }
                break;

            case var_11::var_155:
                if ($var_126) {
                    $var_138['EXPECT'] = 'FYI';
                } else {
                    $var_138['ROLE'] = 'NON-PARTICIPANT';
                }
                break;
            }

            switch ($var_10['response']) {
            case var_11::var_156:
                if ($var_126) {
                    $var_138['STATUS'] = 'NEEDS ACTION';
                    $var_138['RSVP'] = 'YES';
                } else {
                    $var_138['PARTSTAT'] = 'NEEDS-ACTION';
                    $var_138['RSVP'] = 'TRUE';
                }
                break;

            case var_11::var_107:
                if ($var_126) {
                    $var_138['STATUS'] = 'ACCEPTED';
                } else {
                    $var_138['PARTSTAT'] = 'ACCEPTED';
                }
                break;

            case var_11::var_109:
                if ($var_126) {
                    $var_138['STATUS'] = 'DECLINED';
                } else {
                    $var_138['PARTSTAT'] = 'DECLINED';
                }
                break;

            case var_11::var_157:
                if ($var_126) {
                    $var_138['STATUS'] = 'TENTATIVE';
                } else {
                    $var_138['PARTSTAT'] = 'TENTATIVE';
                }
                break;
            }

            if (strpos($var_145, '@') === false) {
                $var_145 = '';
            }
            if ($var_126) {
                if (empty($var_145)) {
                    if (!empty($var_10['name'])) {
                        $var_145 = $var_10['name'];
                    }
                } else {
                    $var_146 = new class_4($var_145);
                    if (!empty($var_10['name'])) {
                        $var_146->var_147 = $var_10['name'];
                    }
                    $var_145 = strval($var_146);
                }
            } else {
                if (!empty($var_10['name'])) {
                    $var_138['CN'] = $var_10['name'];
                }
                if (!empty($var_145)) {
                    $var_145 = 'mailto:' . $var_145;
                }
            }

            $var_125->setAttribute('ATTENDEE', $var_145, $var_138);
        }

        
        if (!empty($var_52->var_34)) {
            if ($var_126) {
                $var_34 = new class_0($var_52->var_24);
                $var_34->var_158 -= $var_52->var_34;
                $var_125->setAttribute('AALARM', $var_34);
            } else {
                $var_159 = Horde_Icalendar::newComponent('valarm', $var_125);
                $var_159->setAttribute('ACTION', 'DISPLAY');
                $var_159->setAttribute('DESCRIPTION', $var_52->fn_18());
                $var_159->setAttribute(
                    'TRIGGER;VALUE=DURATION',
                    ($var_52->var_34 > 0 ? '-' : '') . 'PT' . abs($var_52->var_34) . 'M'
                );
                $var_125->addComponent($var_159);
            }
            $var_118 = $GLOBALS['injector']->getInstance('Horde_Alarm');
            if ($var_118->fn_20($var_52->var_4, $GLOBALS['registry']->getAuth()) &&
                $var_118->isSnoozed($var_52->var_4, $GLOBALS['registry']->getAuth())) {
                $var_125->setAttribute('X-MOZ-LASTACK', new class_0($_SERVER['REQUEST_TIME']));
                $var_34 = $var_118->get($var_52->var_4, $GLOBALS['registry']->getAuth());
                if (!empty($var_34['snooze'])) {
                    $var_34['snooze']->fn_17(date_default_timezone_get());
                    $var_125->setAttribute('X-MOZ-SNOOZE-TIME', $var_34['snooze']);
                }
            }
        }

        
        if ($var_52->fn_15()) {
            if ($var_126) {
                $var_163 = $var_52->var_41->toRRule10($var_37);
            } else {
                $var_163 = $var_52->var_41->toRRule20($var_37);
            }
            if (!empty($var_163)) {
                $var_125->setAttribute('RRULE', $var_163);
            }

            
            
            
            
            
            
            $var_166 = $var_52->var_41->getExceptions();
            $var_168 = new class_5();
            $var_168->var_46 = $var_52->var_4;
            $var_169 = $var_52->fn_7()->search($var_168);
            foreach ($var_169 as $var_170) {
                foreach ($var_170 as $var_171) {
                    
                    
                    
                    if (!$var_126) {
                        $var_171->var_4 = $var_52->var_4;
                    }
                    $var_172 = $var_171->fn_14($var_37);

                    
                    if (count($var_172) > 2 ||
                        (count($var_172) > 1 &&
                         !($var_172[0] instanceof var_173) &&
                         !($var_172[1] instanceof var_173))) {
                        throw new class_1(_("Unable to parse event."));
                    }
                    $var_172 = array_pop($var_172);
                    
                    if (!$var_52->fn_16()) {
                        $var_171->fn_17(true);
                    }
                    if (!$var_126) {
                        $var_172->setAttribute('RECURRENCE-ID', $var_171->var_47);
                    } else {
                        $var_125->setAttribute('EXDATE', array($var_171->var_47), array('VALUE' => 'DATE'));
                    }
                    $var_174 = $var_171->var_47->format('Ymd');
                    $var_176 = array_search($var_174, $var_166);
                    if ($var_176 !== false) {
                        unset($var_166[$var_176]);
                    }
                    $var_128[] = $var_172;
                }
            }

            
            foreach ($var_166 as $var_177) {
                if (!empty($var_177)) {
                    
                    
                    
                    list($var_178, $var_179, $var_180) = sscanf($var_177, '%04d%02d%02d');
                    if ($var_52->fn_16()) {
                        $var_125->setAttribute('EXDATE', array(new class_0($var_178, $var_179, $var_180)), array('VALUE' => 'DATE'));
                    } else {
                        
                        
                        
                        $var_138 = array();
                        if ($var_52->var_9) {
                            $var_138['TZID'] = $var_52->var_9;
                        }
                        $var_181 = clone $var_52->var_24;
                        $var_181->var_178 = $var_178;
                        $var_181->var_179 = $var_179;
                        $var_181->var_180 = $var_180;
                        $var_125->setAttribute('EXDATE', array($var_181), $var_138);
                    }
                }
            }
        }
        array_unshift($var_128, $var_125);

        $var_52->fn_17(false);

        return $var_128;
    }

    
    public function fn_21($var_125, $var_182 = false)
    {
        
        try {
            $var_4 = $var_125->getAttribute('UID');
            if (!empty($var_4)) {
                $var_52->var_4 = $var_4;
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_184 = $var_125->getAttribute('SEQUENCE');
            if (is_int($var_184)) {
                $var_52->var_5 = $var_184;
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_7 = $var_52->fn_22($var_125->getAttribute('SUMMARY'));
            if (!is_array($var_7)) {
                $var_52->var_7 = $var_7;
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_52->var_18 = $var_125->getAttributeValues('CATEGORIES');
        } catch (var_183 $var_65) {}

        
        try {
            $var_187 = $var_52->fn_22($var_125->getAttribute('DESCRIPTION'));
            if (!is_array($var_187)) {
                $var_52->var_14 = $var_187;
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_15 = $var_125->getAttribute('URL');
            if (!is_array($var_15)) {
                $var_52->var_15 = $var_15;
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_8 = $var_52->fn_22($var_125->getAttribute('LOCATION'));
            if (!is_array($var_8)) {
                $var_52->var_8 = $var_8;
            }
        } catch (var_183 $var_65) {}

        try {
            $var_188 = $var_125->getAttribute('GEO');
            $var_52->var_150 = array(
                'lat' => $var_188['latitude'],
                'lon' => $var_188['longitude']
            );
        } catch (var_183 $var_65) {}

        
        try {
            $var_189 = $var_125->getAttribute('CLASS');
            if (!is_array($var_189)) {
                $var_189 = Horde_String::upper($var_189);
                $var_52->var_16 = $var_189 == 'PRIVATE' || $var_189 == 'CONFIDENTIAL';
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_10 = $var_125->getAttribute('STATUS');
            if (!is_array($var_10)) {
                $var_10 = Horde_String::upper($var_10);
                if ($var_10 == 'DECLINED') {
                    $var_10 = 'CANCELLED';
                }
                if (defined('Kronolith::STATUS_' . $var_10)) {
                    $var_52->var_10 = constant('Kronolith::STATUS_' . $var_10);
                }
            }
        } catch (var_183 $var_65) {}

        
        
        $var_52->var_29 = false;

        
        $var_190 = null;
        try {
            $var_24 = $var_125->getAttribute('DTSTART');
            $var_191 = $var_125->getAttribute('DTSTART', true);
            
            
            if (isset($var_191[0]['TZID'])) {
                
                $var_139 = $var_191[0]['TZID'];
                try {
                    
                    new class_6($var_139);
                    $var_52->var_9 = $var_190 = $var_139;
                } catch (var_85 $var_65) {}
            }
            if (!is_array($var_24)) {
                
                $var_52->var_24 = new class_0($var_24, $var_190);
            } else {
                
                $var_52->var_24 = new class_0(
                    array('year'  => (int)$var_24['year'],
                          'month' => (int)$var_24['month'],
                          'mday'  => (int)$var_24['mday']),
                    $var_190
                );
            }
        } catch (var_183 $var_65) {} catch (var_192 $var_65) {}

        try {
            $var_25 = $var_125->getAttribute('DTEND');
            if (!is_array($var_25)) {
                
                $var_52->var_25 = new class_0($var_25, $var_190);
                
                
                
                if (is_object($var_52->var_24) && $var_52->var_24->var_193 == 0 &&
                    $var_52->var_24->var_158 == 0 && $var_52->var_24->var_194 == 0 &&
                    $var_52->var_25->var_193 == 23 && $var_52->var_25->var_158 == 59) {
                    $var_52->var_25 = new class_0(
                        array('year'  => (int)$var_52->var_25->var_178,
                              'month' => (int)$var_52->var_25->var_179,
                              'mday'  => (int)$var_52->var_25->var_180 + 1),
                        $var_190);
                }
            } else {
                
                $var_52->var_25 = new class_0(
                    array('year'  => (int)$var_25['year'],
                          'month' => (int)$var_25['month'],
                          'mday'  => (int)$var_25['mday']),
                    $var_190);
            }
        } catch (var_183 $var_65) {}

        if (is_null($var_25)) {
            try {
                $var_195 = $var_125->getAttribute('DURATION');
                if (!is_array($var_195)) {
                    $var_52->var_25 = new class_0($var_52->var_24);
                    $var_52->var_25->var_194 += $var_195;
                    $var_25 = 1;
                }
            } catch (var_183 $var_65) {}

            if (is_null($var_25)) {
                
                $var_52->var_25 = new class_0($var_52->var_24);
                if (is_array($var_24)) {
                    
                    $var_52->var_25->var_180++;
                }
            }
        }

        
        try {
            $var_34 = $var_125->getAttribute('AALARM');
            if (!is_array($var_34) && intval($var_34)) {
                $var_52->var_34 = intval(($var_52->var_24->timestamp() - $var_34) / 60);
            }
        } catch (var_183 $var_65) {}

        
        foreach ($var_125->getComponents() as $var_34) {
            if (!($var_34 instanceof var_197)) {
                continue;
            }
            try {
                if ($var_34->getAttribute('ACTION') == 'NONE') {
                    continue;
                }
            } catch (var_183 $var_65) {}
            try {
                
                
                $var_198 = $var_34->getAttribute('TRIGGER');
                $var_199 = $var_34->getAttribute('TRIGGER', true);
            } catch (var_183 $var_65) {}
            if (!is_array($var_199)) {
                $var_199 = array($var_199);
            }
            $var_200 = false;
            foreach ($var_199 as $var_201) {
                if (isset($var_201['VALUE']) &&
                    $var_201['VALUE'] == 'DATE-TIME') {
                    if (isset($var_201['RELATED']) &&
                        $var_201['RELATED'] == 'END') {
                        $var_52->var_34 = intval(($var_52->var_25->timestamp() - $var_198) / 60);
                    } else {
                        $var_52->var_34 = intval(($var_52->var_24->timestamp() - $var_198) / 60);
                    }
                    $var_200 = true;
                    break;
                } elseif (isset($var_201['RELATED']) && $var_201['RELATED'] == 'END') {
                    $var_52->var_34 = -intval($var_198 / 60);
                    $var_52->var_34 -= $var_52->var_28;
                    $var_200 = true;
                    break;
                }
            }
            if (!$var_200) {
                $var_52->var_34 = -intval($var_198 / 60);
            }
            break;
        }

        
        if ($var_52->var_34) {
            try {
                
                
                $var_125->getAttribute('X-MOZ-LASTACK');
                try {
                    
                    $var_121 = $var_125->getAttribute('X-MOZ-SNOOZE-TIME');
                    $var_52->var_35 = intval(($var_121 - time()) / 60);
                } catch (var_183 $var_65) {}
            } catch (var_183 $var_65) {}
        }

        
        
        
        
        
        
        
        
        $var_202 = null;
        if ($var_182) {
            try {
                $var_202 = $var_125->getAttribute('ATTENDEE');
                $var_138 = $var_125->getAttribute('ATTENDEE', true);
            } catch (var_183 $var_65) {} catch (var_183 $var_65) {}
            }
        }
        if ($var_202) {
            if (!is_array($var_202)) {
                $var_202 = array($var_202);
            }
            if (!is_array($var_138)) {
                $var_138 = array($var_138);
            }
            
            $var_52->var_22 = array();
            for ($var_203 = 0; $var_203 < count($var_202); ++$var_203) {
                $var_202[$var_203] = str_replace(array('MAILTO:', 'mailto:'), '',
                                            $var_202[$var_203]);
                $var_146 = new class_4($var_202[$var_203]);
                $var_145 = $var_146->var_204;
                
                $var_205 = var_11::var_153;
                
                if (!empty($var_138[$var_203]['ROLE'])) {
                    switch($var_138[$var_203]['ROLE']) {
                    case 'OPT-PARTICIPANT':
                        $var_205 = var_11::var_154;
                        break;

                    case 'NON-PARTICIPANT':
                        $var_205 = var_11::var_155;
                        break;
                    }
                }
                
                if (!empty($var_138[$var_203]['EXPECT'])) {
                    switch($var_138[$var_203]['EXPECT']) {
                    case 'REQUEST':
                        $var_205 = var_11::var_154;
                        break;

                    case 'FYI':
                        $var_205 = var_11::var_155;
                        break;
                    }
                }
                $var_105 = var_11::var_156;
                if (empty($var_138[$var_203]['PARTSTAT']) &&
                    !empty($var_138[$var_203]['STATUS'])) {
                    $var_138[$var_203]['PARTSTAT']  = $var_138[$var_203]['STATUS'];
                }

                if (!empty($var_138[$var_203]['PARTSTAT'])) {
                    switch($var_138[$var_203]['PARTSTAT']) {
                    case 'ACCEPTED':
                        $var_105 = var_11::var_107;
                        break;

                    case 'DECLINED':
                        $var_105 = var_11::var_109;
                        break;

                    case 'TENTATIVE':
                        $var_105 = var_11::var_157;
                        break;
                    }
                }
                $var_66 = isset($var_138[$var_203]['CN'])
                    ? $var_52->fn_22($var_138[$var_203]['CN'])
                    : null;

                $var_52->fn_23($var_145, $var_205, $var_105, $var_66);
            }
        }

        $var_52->fn_24($var_125);

        $var_52->var_1 = true;
    }

    
    protected function fn_24($var_125)
    {
        
        try {
            $var_163 = $var_125->getAttribute('RRULE');
            if (!is_array($var_163)) {
                $var_52->var_41 = new class_3($var_52->var_24);
                if (strpos($var_163, '=') !== false) {
                    $var_52->var_41->fromRRule20($var_163);
                } else {
                    $var_52->var_41->fromRRule10($var_163);
                }

                
                
                $var_210 = $var_125->getAttributeValues('EXDATE');
                if (is_array($var_210)) {
                    foreach ($var_210 as $var_181) {
                        if (is_array($var_181)) {
                            $var_52->var_41->addException(
                                (int)$var_181['year'],
                                (int)$var_181['month'],
                                (int)$var_181['mday']);
                        }
                    }
                }
            }
        } catch (var_183 $var_65) {}

        
        try {
            $var_212 = $var_125->getAttribute('RECURRENCE-ID');
            $var_213 = new class_0($var_212);
            $var_52->var_47 = $var_213;
            $var_52->var_46 = $var_52->var_4;
            $var_52->var_4 = null;
            try {
                $var_214 = $var_52->fn_7()->getByUID($var_52->var_46);
                if ($var_214->var_41) {
                    $var_214->var_41->addException(
                        $var_213->format('Y'),
                        $var_213->format('m'),
                        $var_213->format('d')
                    );
                    $var_214->fn_10();
                }
            } catch (var_215 $var_65) {}
        } catch (var_183 $var_65) {}
    }

    
    public function fn_25(var_216 $var_217)
    {
        
        if ($var_52->var_75 === null) {
            $var_52->var_86 = $GLOBALS['registry']->getAuth();
        }
        if (!$var_217->isGhosted('subject') &&
            strlen($var_7 = $var_217->getSubject())) {
            $var_52->var_7 = $var_7;
        }
        if ($var_217->getProtocolVersion() == var_221::var_222 &&
            !$var_217->isGhosted('body') &&
            strlen($var_14 = $var_217->getBody())) {
            $var_52->var_14 = $var_14;
        } elseif ($var_217->getProtocolVersion() > var_221::var_222 && !$var_217->isGhosted('airsyncbasebody')) {
            if ($var_217->var_224->var_225 == var_221::var_226) {
                $var_52->var_14 = Horde_Text_Filter::filter($var_217->var_224->var_227, 'Html2text');
            } else {
                $var_52->var_14 = $var_217->var_224->var_227;
            }
        }

        if (!$var_217->isGhosted('location') &&
            strlen($var_8 = $var_217->fn_6())) {
            $var_52->var_8 = $var_8;
        }

        
        $var_139 = !$var_217->isGhosted('timezone')
            ? $var_217->getTimezone()
            : $var_52->var_9;
        $var_229 = $var_217->getDatetime();
        $var_52->var_24 = !$var_217->isGhosted('starttime')
            ? clone($var_229['start'])
            : $var_52->var_24;
        $var_52->var_24->fn_17($var_139);

        $var_52->var_25 = !$var_217->isGhosted('endtime')
            ? clone($var_229['end'])
            : $var_52->var_25;
        $var_52->var_25->fn_17($var_139);

        if (!$var_217->isGhosted('alldayevent')) {
            $var_52->var_29 = $var_229['allday'];
        }
        if ($var_139 != date_default_timezone_get()) {
            $var_52->var_9 = $var_139;
        }

        
        if (!$var_217->isGhosted('sensitivity')) {
            $var_52->var_16 = ($var_217->getSensitivity() == var_216::var_232 || $var_217->getSensitivity() == var_216::var_233) ? true :  false;
        }

        
        if (!$var_217->isGhosted('meetingstatus')) {
            if ($var_217->getMeetingStatus() == var_216::var_235) {
                $var_10 = var_11::var_91;
            } else {
                $var_10 = $var_217->getBusyStatus();
                switch ($var_10) {
                case var_216::var_237:
                    $var_10 = var_11::var_12;
                    break;

                case var_216::var_238:
                    $var_10 = var_11::var_151;
                    break;

                case var_216::var_239:
                    $var_10 = var_11::var_152;
                    break;
                
                case var_216::var_240:
                    $var_10 = var_11::var_12;
                default:
                    
                    $var_10 = var_11::var_151;
                }
            }
            $var_52->var_10 = $var_10;
        }

        
        if (!$var_217->isGhosted('reminder') && ($var_34 = $var_217->getReminder())) {
            $var_52->var_34 = $var_34;
        }

        
        if (!$var_217->isGhosted('recurrence') && ($var_163 = $var_217->getRecurrence())) {
            
            $var_243 = $var_52->fn_7();
            
            $var_52->var_41 = $var_163;
            if (!empty($var_52->var_4)) {
                $var_168 = new class_8();
                $var_168->var_46 = $var_52->var_4;
                $var_169 = $var_243->search($var_168);
                foreach ($var_169 as $var_170) {
                    foreach ($var_170 as $var_177) {
                        $var_243->deleteEvent($var_177->var_75);
                    }
                }
            }

            $var_244 = $var_217->getExceptions();
            foreach ($var_244 as $var_245){
                
                if (!$var_245->var_246) {
                    $var_123 = $var_243->getEvent();
                    $var_248 = $var_245->getDatetime();
                    $var_249 = $var_245->getExceptionStartTime();
                    $var_249->fn_17($var_139);
                    $var_52->var_41->addException($var_249->format('Y'), $var_249->format('m'), $var_249->format('d'));
                    $var_123->var_24 = $var_248['start'];
                    $var_123->var_25 = $var_248['end'];
                    $var_123->var_24->fn_17($var_139);
                    $var_123->var_25->fn_17($var_139);
                    $var_123->var_29 = $var_248['allday'];
                    $var_123->var_7 = $var_245->getSubject();
                    $var_123->var_7 = empty($var_123->var_7) ? $var_52->var_7 : $var_123->var_7;
                    $var_123->var_14 = $var_245->getBody();
                    $var_123->var_14 = empty($var_123->var_14) ? $var_52->var_14 : $var_123->var_14;
                    $var_123->var_46 = $var_52->var_4;
                    $var_123->var_47 = $var_249;
                    $var_123->var_1 = true;
                    if ($var_139 != date_default_timezone_get()) {
                        $var_123->var_9 = $var_139;
                    }
                    $var_123->fn_10();
                } else {
                    
                    $var_251 = $var_245->getExceptionStartTime();
                    $var_251->fn_17($var_139);
                    $var_52->var_41->addException($var_251->format('Y'), $var_251->format('m'), $var_251->format('d'));
               }
            }
        }

        
        if (!$var_217->isGhosted('attendees')) {
            $var_22 = $var_217->getAttendees();
            foreach ($var_22 as $var_202) {
                switch ($var_202->var_10) {
                case var_253::var_254:
                    $var_255 = var_11::var_107;
                    break;
                case var_253::var_256:
                    $var_255 = var_11::var_109;
                    break;
                case var_253::var_152:
                    $var_255 = var_11::var_157;
                    break;
                default:
                    $var_255 = var_11::var_156;
                }
                switch ($var_202->var_225) {
                case var_253::var_257:
                    $var_258 = var_11::var_153;
                    break;
                case var_253::var_259:
                    $var_258 = var_11::var_154;
                    break;
                case var_253::var_260:
                    $var_258 = var_11::var_153;
                }

                $var_52->fn_23($var_202->var_145,
                                   $var_258,
                                   $var_255,
                                   $var_202->var_66);
            }
        }

        
        if (!$var_217->isGhosted('categories')) {
            $var_52->var_18 = $var_217->getCategories();
        }

        
        if ($var_217->getProtocolVersion() >= var_221::var_262 &&
            !$var_217->isGhosted('onlinemeetingexternallink')) {
            $var_52->var_15 = $var_217->var_263;
        }

        
        $var_52->var_1 = true;
    }

    
    public function fn_26(array $var_264 = array())
    {
        global $var_265, $var_266;

        $var_217 = new class_7(
            array(
                'logger' => $GLOBALS['injector']->getInstance('Horde_Log_Logger'),
                'protocolversion' => $var_264['protocolversion']
            )
        );

        if (!$var_52->fn_19()) {
            
            if (!empty($var_264['bodyprefs'])) {
                if (Horde_String::length($var_52->var_14) > 0) {
                    $var_267 = $var_264['bodyprefs'];
                    $var_268 = new class_10();
                    
                    $var_268->var_225 = var_221::var_269;
                    if (isset($var_267[var_221::var_269]['truncationsize'])) {
                        $var_270 = $var_267[var_221::var_269]['truncationsize'];
                    } elseif (isset($var_267[var_221::var_226])) {
                        $var_270 = $var_267[var_221::var_226]['truncationsize'];
                        $var_52->var_14 = Horde_Text_Filter::filter($var_52->var_14, 'Text2html', array('parselevel' => var_271::var_272));
                    } else {
                        $var_270 = false;
                    }
                    if ($var_270 && Horde_String::length($var_52->var_14) > $var_270) {
                        $var_268->var_227 = Horde_String::substr($var_52->var_14, 0, $var_270);
                        $var_268->var_273 = 1;
                    } else {
                        $var_268->var_227 = $var_52->var_14;
                    }
                    $var_268->var_274 = Horde_String::length($var_52->var_14);
                    $var_217->var_224 = $var_268;
                }
            } else {
                $var_217->setBody($var_52->var_14);
            }
            $var_217->setLocation($var_52->var_8);
        }

        $var_217->setSubject($var_52->fn_18());
        $var_217->setDatetime(array(
            'start' => $var_52->var_24,
            'end' => $var_52->var_25,
            'allday' => $var_52->fn_16())
        );
        $var_217->fn_17($var_52->var_24);

        
        if (count($var_52->var_22)) {
            if ($var_52->var_86 == $var_266->getAuth()) {
                $var_279 = $var_265->getValue('activesync_identity') == 'horde'
                    ? $var_265->getValue('default_identity')
                    : $var_265->getValue('activesync_identity');

                $var_66 = $GLOBALS['injector']
                    ->getInstance('Horde_Core_Factory_Identity')
                    ->create($var_52->var_86)->getValue('fullname', $var_279);
                $var_145 = $GLOBALS['injector']
                    ->getInstance('Horde_Core_Factory_Identity')
                    ->create($var_52->var_86)->getValue('from_addr', $var_279);
            } else {
                $var_66 = Kronolith::getUserName($var_52->var_86);
                $var_145 = Kronolith::getUserEmail($var_52->var_86);
            }
            $var_217->setOrganizer(array(
                'name' => $var_66,
                'email' => $var_145)
            );
        }

        
        $var_217->setSensitivity($var_52->var_16 ?
            var_216::var_232 :
            var_216::var_284);

        
        switch ($var_52->var_10) {
        case var_11::var_91:
            $var_10 = var_216::var_238;
            break;
        case var_11::var_12:
            $var_10 = var_216::var_237;
            break;
        case var_11::var_152:
            $var_10 = var_216::var_239;
        case var_11::var_151:
        case var_11::var_285:
            $var_10 = var_216::var_238;
        }
        $var_217->setBusyStatus($var_10);

        
        $var_217->setDTStamp($_SERVER['REQUEST_TIME']);

        
        if ($var_52->fn_15()) {
            $var_217->setRecurrence($var_52->var_41, $GLOBALS['prefs']->getValue('week_start_monday'));

            
            if (!empty($var_52->var_41) && $var_166 = $var_52->var_41->getExceptions()) {
                $var_169 = $var_52->fn_27();
                foreach ($var_169 as $var_177) {
                    $var_65 = new class_11(array(
                        'protocolversion' => $var_264['protocolversion']));
                    $var_65->setDateTime(array(
                        'start' => $var_177->var_24,
                        'end' => $var_177->var_25,
                        'allday' => $var_177->fn_16()));

                    
                    $var_65->setExceptionStartTime($var_177->var_47);
                    $var_174 = $var_177->var_47->format('Ymd');
                    $var_176 = array_search($var_174, $var_166);
                    if ($var_176 !== false) {
                        unset($var_166[$var_176]);
                    }

                    
                    $var_65->setSubject($var_177->fn_18());
                    if (!$var_177->fn_19()) {
                        $var_65->setLocation($var_177->var_8);
                        $var_65->setBody($var_177->var_14);
                    }

                    $var_65->setSensitivity($var_177->var_16 ?
                        var_216::var_232 :
                        var_216::var_284);
                    $var_65->setReminder($var_177->var_34);
                    $var_65->setDTStamp($_SERVER['REQUEST_TIME']);

                    if ($var_264['protocolversion'] > var_221::var_293) {
                        switch ($var_177->var_10) {
                        case var_11::var_152;
                            $var_65->var_294 = var_216::var_157;
                            break;
                        case var_11::var_285:
                            $var_65->var_294 = var_216::var_295;
                            break;
                        case var_11::var_12:
                            $var_65->var_294 = var_216::var_107;
                            break;
                        default:
                            $var_65->var_294 = var_216::var_156;
                        }
                    }

                    
                    if (!$var_177->fn_19()) {
                        foreach ($var_177->var_149 as $var_296) {
                            $var_65->addCategory($var_296);
                        }
                    }

                    $var_217->addexception($var_65);
                }

                
                foreach ($var_166 as $var_246) {
                    $var_65 = new class_11(array(
                        'protocolversion' => $var_264['protocolversion']));
                    
                    
                    list($var_178, $var_179, $var_180) = sscanf($var_246, '%04d%02d%02d');
                    $var_299 = clone $var_52->var_24;
                    $var_299->var_178 = $var_178;
                    $var_299->var_179 = $var_179;
                    $var_299->var_180 = $var_180;
                    $var_65->setExceptionStartTime($var_299);
                    $var_65->var_246 = true;
                    $var_217->addException($var_65);
                }
            }
        }

        
        if (!$var_52->fn_19() && count($var_52->var_22)) {
            $var_217->setMeetingStatus(
                $var_52->var_10 == var_11::var_91
                    ? var_216::var_235
                    : var_216::var_301
            );
            foreach ($var_52->var_22 as $var_145 => $var_302) {
                $var_202 = new class_9(array(
                    'protocolversion' => $var_264['protocolversion']));
                $var_303 = new class_4($var_145);
                $var_202->var_66 = $var_303->var_304;
                $var_202->var_145 = $var_303->var_204;

                
                if ($var_264['protocolversion'] > var_221::var_222) {
                    $var_202->var_225 = ($var_302['attendance'] !== var_11::var_153
                        ? var_253::var_259
                        : var_253::var_257);

                    switch ($var_302['response']) {
                    case var_11::var_156:
                        $var_202->var_10 = var_253::var_305;
                        break;
                    case var_11::var_107:
                        $var_202->var_10 = var_253::var_254;
                        break;
                    case var_11::var_109:
                        $var_202->var_10 = var_253::var_256;
                        break;
                    case var_11::var_157:
                        $var_202->var_10 = var_253::var_152;
                        break;
                    default:
                        $var_202->var_10 = var_253::var_306;
                    }
                }

                $var_217->fn_23($var_202);
            }
        } elseif ($var_52->var_10 == var_11::var_91) {
            $var_217->setMeetingStatus(var_216::var_235);
        } else {
            $var_217->setMeetingStatus(var_216::var_307);
        }

        
        if ($var_264['protocolversion'] > var_221::var_222) {
            $var_308 = $var_52->fn_11();
            foreach ($var_308 as $var_75 => $var_227) {
                $var_93 = Kronolith::fn_7('Resource')->getResource($var_75);
                
                
                if ($var_93->get('email')) {
                    $var_202 = new class_9(array(
                        'protocolversion' => $var_264['protocolversion']));
                    $var_202->var_145 = $var_93->get('email');
                    $var_202->var_225 = var_253::var_260;
                    $var_202->var_66 = $var_227['name'];
                    $var_202->var_10 = $var_227['response'];
                    $var_217->fn_23($var_202);
                }
           }
        }

        
        if ($var_52->var_34) {
            $var_217->setReminder($var_52->var_34);
        }

        
        if (!$var_52->fn_19()) {
            foreach ($var_52->var_149 as $var_296) {
                $var_217->addCategory($var_296);
            }
        }

        
        if ($var_264['protocolversion'] > var_221::var_293) {
            
            
            switch ($var_52->var_10) {
            case var_11::var_152;
                $var_217->var_294 = var_216::var_157;
                break;
            case var_11::var_285:
                $var_217->var_294 = var_216::var_295;
                break;
            case var_11::var_12:
                $var_217->var_294 = var_216::var_107;
                break;
            default:
                $var_217->var_294 = var_216::var_156;
            }
        }

        
        if ($var_264['protocolversion'] >= var_221::var_262) {
            $var_217->var_263 = $var_52->var_15;
        }

        return $var_217;
    }

    
    public function fn_28($var_309)
    {
        
        if ($var_52->var_75 === null) {
            $var_52->var_86 = $GLOBALS['registry']->getAuth();
        }

        if (!empty($var_309['title'])) {
            $var_52->var_7 = $var_309['title'];
        } else {
            throw new class_1(_("Events must have a title."));
        }

        $var_52->var_24 = null;
        if (!empty($var_309['start_date'])) {
            $var_310 = array_map('intval', explode('-', $var_309['start_date']));
            if (empty($var_309['start_time'])) {
                $var_311 = array(0, 0, 0);
            } else {
                $var_311 = array_map('intval', explode(':', $var_309['start_time']));
                if (count($var_311) == 2) {
                    $var_311[2] = 0;
                }
            }
            if (count($var_311) == 3 && count($var_310) == 3 &&
                !empty($var_310[1]) && !empty($var_310[2])) {
                if ($var_310[0] < 100) {
                    $var_310[0] += (date('Y') / 100 | 0) * 100;
                }
                $var_52->var_24 = new class_0(
                    array(
                        'year'  => $var_310[0],
                        'month' => $var_310[1],
                        'mday'  => $var_310[2],
                        'hour'  => $var_311[0],
                        'min'   => $var_311[1],
                        'sec'   => $var_311[2]
                    ),
                    isset($var_309['timezone']) ? $var_309['timezone'] : null
                );
            }
        }
        if (!isset($var_52->var_24)) {
            throw new class_1(_("Events must have a start date."));
        }

        if (empty($var_309['duration'])) {
            if (empty($var_309['end_date'])) {
                $var_309['end_date'] = $var_309['start_date'];
            }
            if (empty($var_309['end_time'])) {
                $var_309['end_time'] = $var_309['start_time'];
            }
        } else {
            $var_312 = str_replace('W', '', $var_309['duration'][1]);
            $var_170 = str_replace('D', '', $var_309['duration'][2]);
            $var_313 = str_replace('H', '', $var_309['duration'][4]);
            $var_314 = isset($var_309['duration'][5]) ? str_replace('M', '', $var_309['duration'][5]) : 0;
            $var_315 = isset($var_309['duration'][6]) ? str_replace('S', '', $var_309['duration'][6]) : 0;
            $var_309['duration'] = ($var_312 * 60 * 60 * 24 * 7) + ($var_170 * 60 * 60 * 24) + ($var_313 * 60 * 60) + ($var_314 * 60) + $var_315;
            $var_52->var_25 = new class_0($var_52->var_24);
            $var_52->var_25->var_194 += $var_309['duration'];
        }
        if (!empty($var_309['end_date'])) {
            $var_310 = array_map('intval', explode('-', $var_309['end_date']));
            if (empty($var_309['end_time'])) {
                $var_311 = array(0, 0, 0);
            } else {
                $var_311 = array_map('intval', explode(':', $var_309['end_time']));
                if (count($var_311) == 2) {
                    $var_311[2] = 0;
                }
            }
            if (count($var_311) == 3 && count($var_310) == 3 &&
                !empty($var_310[1]) && !empty($var_310[2])) {
                if ($var_310[0] < 100) {
                    $var_310[0] += (date('Y') / 100 | 0) * 100;
                }
                $var_52->var_25 = new class_0(
                    array(
                        'year'  => $var_310[0],
                        'month' => $var_310[1],
                        'mday'  => $var_310[2],
                        'hour'  => $var_311[0],
                        'min'   => $var_311[1],
                        'sec'   => $var_311[2]
                    ),
                    isset($var_309['timezone']) ? $var_309['timezone'] : null
                );
            }
        }

        if (!empty($var_309['alarm'])) {
            $var_52->var_34 = (int)$var_309['alarm'];
        } elseif (!empty($var_309['alarm_date']) &&
                  !empty($var_309['alarm_time'])) {
            $var_310 = array_map('intval', explode('-', $var_309['alarm_date']));
            $var_311 = array_map('intval', explode(':', $var_309['alarm_time']));
            if (count($var_311) == 2) {
                $var_311[2] = 0;
            }
            if (count($var_311) == 3 && count($var_310) == 3 &&
                !empty($var_310[1]) && !empty($var_310[2])) {
                $var_34 = new class_0(
                    array(
                        'year'  => $var_310[0],
                        'month' => $var_310[1],
                        'mday'  => $var_310[2],
                        'hour'  => $var_311[0],
                        'min'   => $var_311[1],
                        'sec'   => $var_311[2]
                    ),
                    isset($var_309['timezone']) ? $var_309['timezone'] : null
                );
                $var_52->var_34 = ($var_52->var_24->timestamp() - $var_34->timestamp()) / 60;
            }
        }

        $var_52->var_29 = !empty($var_309['allday']);

        if (!empty($var_309['description'])) {
            $var_52->var_14 = $var_309['description'];
        }

        if (!empty($var_309['location'])) {
            $var_52->var_8 = $var_309['location'];
        }

        
        

        if (!empty($var_309['private'])) {
            $var_52->var_16 = true;
        }

        if (!empty($var_309['recur_type'])) {
            $var_52->var_41 = new class_3($var_52->var_24);
            $var_52->var_41->setRecurType($var_309['recur_type']);
            if (!empty($var_309['recur_count'])) {
                $var_52->var_41->setRecurCount($var_309['recur_count']);
            } elseif (!empty($var_309['recur_end_date'])) {
                $var_310 = array_map('intval', explode('-', $var_309['recur_end_date']));
                if (count($var_310) == 3 && !empty($var_310[1]) && !empty($var_310[2])) {
                    $var_52->var_41->setRecurEnd(
                        new class_0(array(
                            'year'  => $var_310[0],
                            'month' => $var_310[1],
                            'mday'  => $var_310[2]
                        ))
                    );
                }
            }
            if (!empty($var_309['recur_interval'])) {
                $var_52->var_41->setRecurInterval($var_309['recur_interval']);
            }
            if (!empty($var_309['recur_data'])) {
                $var_52->var_41->setRecurOnDay($var_309['recur_data']);
            }
            if (!empty($var_309['recur_exceptions'])) {
                foreach ($var_309['recur_exceptions'] as $var_177) {
                    $var_321 = explode('-', $var_177);
                    if (count($var_321) == 3) {
                        $var_52->var_41->addException($var_321[0], $var_321[1], $var_321[2]);
                    }
                }
            }
        }

        if (isset($var_309['sequence'])) {
            $var_52->var_5 = $var_309['sequence'];
        }

        if (!empty($var_309['tags'])) {
            $var_52->var_149 = $var_309['tags'];
        }

        if (!empty($var_309['timezone'])) {
            $var_52->var_9 = $var_309['timezone'];
        }

        if (!empty($var_309['uid'])) {
            $var_52->var_4 = $var_309['uid'];
        }

        $var_52->var_1 = true;
    }

    
    public function fn_13($var_311, $var_84 = null, $var_265 = null)
    {
        if (!$var_52->var_34 || $var_52->var_10 == var_11::var_91) {
            return;
        }

        if ($var_52->fn_15()) {
            $var_322 = $var_52->var_41->nextRecurrence($var_311);
            if (!$var_322 || ($var_322 && $var_52->var_41->hasException($var_322->var_178, $var_322->var_179, $var_322->var_180))) {
                return;
            }
            $var_24 = clone $var_322;
            $var_325 = Date_Calc::dateDiff(
                $var_52->var_24->var_180,
                $var_52->var_24->var_179,
                $var_52->var_24->var_178,
                $var_52->var_25->var_180,
                $var_52->var_25->var_179,
                $var_52->var_25->var_178
            );
            if ($var_325 == -1) {
                $var_325 = 0;
            }
            $var_25 = new class_0(array(
                'year' => $var_24->var_178,
                'month' => $var_24->var_179,
                'mday' => $var_24->var_180 + $var_325,
                'hour' => $var_52->var_25->var_193,
                'min' => $var_52->var_25->var_158,
                'sec' => $var_52->var_25->var_194)
            );
        } else {
            $var_24 = clone $var_52->var_24;
            $var_25 = clone $var_52->var_25;
        }

        $var_326 = $_SERVER['SERVER_NAME'];
        $var_327 = $GLOBALS['conf']['server']['name'];
        if (!empty($GLOBALS['conf']['reminder']['server_name'])) {
            $_SERVER['SERVER_NAME'] = $GLOBALS['conf']['server']['name'] = $GLOBALS['conf']['reminder']['server_name'];
        }

        if (empty($var_84)) {
            $var_84 = $GLOBALS['registry']->getAuth();
        }
        if (empty($var_265)) {
            $var_265 = $GLOBALS['prefs'];
        }

        $var_36 = !empty($var_52->var_36) ? $var_52->var_36 : @unserialize($var_265->getValue('event_alarms'));
        if (isset($var_36['notify'])) {
            $var_36['notify']['show'] = array(
                '__app' => $GLOBALS['registry']->getApp(),
                'event' => $var_52->var_75,
                'calendar' => $var_52->var_37);
            $var_36['notify']['ajax'] = 'event:' . $var_52->var_38 . '|' . $var_52->var_37 . ':' . $var_52->var_75 . ':' . $var_24->dateString();
            if (!empty($var_36['notify']['sound'])) {
                if ($var_36['notify']['sound'] == 'on') {
                    
                    $var_36['notify']['sound'] = (string)Horde_Themes::sound('theetone.wav');
                } else {
                    
                    
                    $var_36['notify']['sound'] = (string)Horde_Themes::sound($var_36['notify']['sound']);
                }
            }
            if ($var_52->fn_16()) {
                if ($var_24->compareDate($var_25) == 0) {
                    $var_36['notify']['subtitle'] = sprintf(_("On %s"), '<strong>' . $var_24->strftime($var_265->getValue('date_format')) . '</strong>');
                } else {
                    $var_36['notify']['subtitle'] = sprintf(_("From %s to %s"), '<strong>' . $var_24->strftime($var_265->getValue('date_format')) . '</strong>', '<strong>' . $var_25->strftime($var_265->getValue('date_format')) . '</strong>');
                }
            } else {
                $var_36['notify']['subtitle'] = sprintf(_("From %s at %s to %s at %s"), '<strong>' . $var_24->strftime($var_265->getValue('date_format')), $var_24->format($var_265->getValue('twentyFour') ? 'H:i' : 'h:ia') . '</strong>', '<strong>' . $var_25->strftime($var_265->getValue('date_format')), $var_52->var_25->format($var_265->getValue('twentyFour') ? 'H:i' : 'h:ia') . '</strong>');
            }
        }
        if (isset($var_36['mail'])) {
            $var_332 = Kronolith::getImagePart('big_alarm.png');

            $var_333 = new class_12(array('templatePath' => var_334 . '/alarm', 'encoding' => 'UTF-8'));
            new class_13($var_333);
            $var_333->var_123 = $var_52;
            $var_333->var_335 = $var_332->getContentId();
            $var_333->var_84 = $var_84;
            $var_333->var_337 = $var_265->getValue('date_format');
            $var_333->var_338 = $var_265->getValue('twentyFour') ? 'H:i' : 'h:ia';
            $var_333->var_24 = $var_24;
            if (!$var_265->isLocked('event_reminder')) {
                $var_333->var_340 = Horde::url($GLOBALS['registry']->getServiceLink('prefs', 'kronolith'), true)->remove(session_name());
            }
            if ($var_52->var_22) {
                $var_333->var_22 = Kronolith::getAttendeeEmailList($var_52->var_22)->var_343;
            }

            $var_36['mail']['mimepart'] = Kronolith::buildMimeMessage($var_333, 'mail', $var_332);
        }
        if (isset($var_36['desktop'])) {
            if ($var_52->fn_16()) {
                if ($var_52->var_24->compareDate($var_52->var_25) == 0) {
                    $var_36['desktop']['subtitle'] = sprintf(_("On %s"), $var_24->strftime($var_265->getValue('date_format')));
                } else {
                    $var_36['desktop']['subtitle'] = sprintf(_("From %s to %s"), $var_24->strftime($var_265->getValue('date_format')), $var_25->strftime($var_265->getValue('date_format')));
                }
            } else {
                $var_36['desktop']['subtitle'] = sprintf(_("From %s at %s to %s at %s"), $var_24->strftime($var_265->getValue('date_format')), $var_24->format($var_265->getValue('twentyFour') ? 'H:i' : 'h:ia'), $var_25->strftime($var_265->getValue('date_format')), $var_52->var_25->format($var_265->getValue('twentyFour') ? 'H:i' : 'h:ia'));
            }
            $var_36['desktop']['url'] = strval($var_52->fn_29(array(), true, false));
        }

        $var_345 = clone $var_24;
        $var_345->var_158 -= $var_52->var_34;
        $var_34 = array(
            'id' => $var_52->var_4,
            'user' => $var_84,
            'start' => $var_345,
            'end' => $var_25,
            'methods' => array_keys($var_36),
            'params' => $var_36,
            'title' => $var_52->fn_18($var_84),
            'text' => $var_52->var_14,
            'instanceid' => $var_52->fn_15() ? $var_322->dateString() : null);

        $_SERVER['SERVER_NAME'] = $var_326;
        $GLOBALS['conf']['server']['name'] = $var_327;

        return $var_34;
    }

    
    public function fn_30($var_347 = null, $var_348 = false, $var_349 = 'H:i')
    {
        $var_350 = new class_5;
        $var_350->var_4 = $var_52->var_4;
        $var_350->var_351 = $var_52->fn_18();
        $var_350->var_352 = $var_52->var_37;
        $var_350->var_353 = $var_52->var_24->fn_30();
        $var_350->var_65 = $var_52->var_25->fn_30();
        $var_350->var_354 = $var_52->var_20;
        $var_350->var_355 = $var_52->var_21;
        $var_350->var_356 = (int)$var_52->var_10;
        $var_350->var_357 = is_null($var_347) ? $var_52->fn_16() : $var_347;
        $var_350->var_358 = $var_52->fn_9(var_359::var_360);
        $var_350->var_361 = $var_52->fn_9(var_359::var_362);
        $var_350->var_363 = $var_52->fn_6();
        $var_350->var_364 = !empty($var_52->var_22);
        $var_350->var_365 = sprintf(
            '%010s%06s',
            $var_52->var_366->timestamp(),
            240000 - $var_52->var_25->format('His')
        );

        if ($var_52->var_13) {
            $var_350->var_367 = $var_52->var_13;
        }
        if ($var_52->var_34) {
            if ($var_52->var_34 % 10080 == 0) {
                $var_368 = $var_52->var_34 / 10080;
                $var_350->var_369 = sprintf(ngettext("%d week", "%d weeks", $var_368), $var_368);
            } elseif ($var_52->var_34 % 1440 == 0) {
                $var_368 = $var_52->var_34 / 1440;
                $var_350->var_369 = sprintf(ngettext("%d day", "%d days", $var_368), $var_368);
            } elseif ($var_52->var_34 % 60 == 0) {
                $var_368 = $var_52->var_34 / 60;
                $var_350->var_369 = sprintf(ngettext("%d hour", "%d hours", $var_368), $var_368);
            } else {
                $var_368 = $var_52->var_34;
                $var_350->var_369 = sprintf(ngettext("%d minute", "%d minutes", $var_368), $var_368);
            }
        }
        if ($var_52->fn_15()) {
            $var_350->var_308 = $var_52->var_41->getRecurType();
        } elseif ($var_52->var_46) {
            $var_350->var_370 = $var_52->var_46;
            if ($var_52->var_47) {
                $var_350->var_371 = sprintf(_("%s at %s"), $var_52->var_47->strftime($GLOBALS['prefs']->getValue('date_format')), $var_52->var_47->strftime(($GLOBALS['prefs']->getValue('twentyFour') ? '%H:%M' : '%I:%M %p')));
            }
        }
        if ($var_52->var_23) {
            $var_350->var_372 = $var_52->var_23;
        }
        if ($var_348) {
            $var_350->var_75 = $var_52->var_75;
            $var_350->var_373 = $var_52->var_38;
            $var_350->var_374 = $var_52->var_24->strftime('%x');
            $var_350->var_299 = $var_52->var_24->format($var_349);
            $var_350->var_375 = $var_52->var_25->strftime('%x');
            $var_350->var_376 = $var_52->var_25->format($var_349);
            $var_350->var_139 = $var_52->var_9;
            $var_350->var_369 = $var_52->var_34;
            $var_350->var_377 = $var_52->var_16;
            if ($var_52->fn_15()) {
                $var_350->var_308 = $var_52->var_41->fn_30();
            }
            if (!$var_52->fn_19()) {
                $var_350->var_378 = $var_52->var_14;
                $var_350->var_379 = $var_52->var_15;
                $var_350->var_380 = $GLOBALS['injector']->getInstance('Horde_Core_Factory_TextFilter')->filter($var_52->var_15, 'linkurls');
                $var_350->var_382 = array_values($var_52->var_149);
                $var_350->var_383 = $var_52->var_150;
                if ($var_52->var_22) {
                    $var_22 = array();
                    foreach ($var_52->var_22 as $var_145 => $var_384) {
                        $var_146 = new class_4($var_145);
                        if (!empty($var_384['name'])) {
                            $var_146->var_147 = $var_384['name'];
                        }

                        $var_22[] = array(
                            'a' => intval($var_384['attendance']),
                            'e' => $var_146->var_204,
                            'r' => intval($var_384['response']),
                            'l' => strval($var_146)
                        );
                        $var_350->var_385 = $var_22;
                    }
                }
            }
            if ($var_52->var_36) {
                $var_350->var_386 = $var_52->var_36;
            }
        }

        return $var_350;
    }

    
    public function fn_20()
    {
        if (!isset($var_52->var_4) || !isset($var_52->var_37)) {
            return false;
        }
        try {
            $var_387 = $var_52->fn_7()->fn_20($var_52->var_4, $var_52->var_37);
            if (!$var_387) {
                return false;
            }
        } catch (var_85 $var_65) {}
        $var_52->var_75 = $var_387;
        return true;
    }

    
    public function fn_17($var_388)
    {
        if (!$var_52->var_9 || !$var_52->fn_7()->supportsTimezones()) {
            return;
        }
        $var_9 = $var_388 ? $var_52->var_9 : date_default_timezone_get();
        $var_52->var_24->fn_17($var_9);
        $var_52->var_25->fn_17($var_9);
        if ($var_52->fn_15() && $var_52->var_41->hasRecurEnd()) {
            
            $var_52->var_41->var_24->fn_17($var_9);
            $var_52->var_41->var_391->fn_17($var_9);
        }
    }

    public function fn_31()
    {
        if (isset($var_52->var_48)) {
            return $var_52->var_48;
        }

        if ($var_52->var_24 && $var_52->var_25) {
            $var_393 = Date_Calc::dateDiff($var_52->var_24->var_180,
                                                 $var_52->var_24->var_179,
                                                 $var_52->var_24->var_178,
                                                 $var_52->var_25->var_180,
                                                 $var_52->var_25->var_179,
                                                 $var_52->var_25->var_178);
            $var_394 = $var_52->var_25->var_193 - $var_52->var_24->var_193;
            $var_395 = $var_52->var_25->var_158 - $var_52->var_24->var_158;
            while ($var_395 < 0) {
                $var_395 += 60;
                --$var_394;
            }
            while ($var_394 < 0) {
                $var_394 += 24;
                --$var_393;
            }
        } else {
            $var_393 = 0;
            $var_394 = 1;
            $var_395 = 0;
        }

        $var_52->var_48 = new class_5;
        $var_52->var_48->var_396 = $var_393;
        $var_52->var_48->var_193 = $var_394;
        $var_52->var_48->var_158 = $var_395;
        $var_52->var_48->var_397 = $var_52->fn_16();

        return $var_52->var_48;
    }

    
    public function fn_15()
    {
        return isset($var_52->var_41) &&
            !$var_52->var_41->hasRecurType(var_131::var_399) &&
            empty($var_52->var_46);
    }

    
    public function fn_32()
    {
        if (empty($var_52->var_46)) {
            return $var_52->fn_15()
                ? $var_52->var_41->fn_32()
                : _("No recurrence");
        } else {
            return _("Exception");
        }
    }

    
    public function fn_33($var_310)
    {
        if (!preg_match('/(\d{4})(\d{2})(\d{2})/', $var_310, $var_401)) {
            return '';
        }
        $var_402 = new class_0(array('year' => $var_401[1],
                                           'month' => $var_401[2],
                                           'mday' => $var_401[3]));
        $var_403 = $var_402->strftime($GLOBALS['prefs']->getValue('date_format'));
        return $var_403
            . Horde::url('edit.php')
            ->add(array('calendar' => $var_52->var_38 . '_' .$var_52->var_37,
                        'eventID' => $var_52->var_75,
                        'del_exception' => $var_310,
                        'url' => Horde_Util::getFormData('url')))
            ->link(array('title' => sprintf(_("Delete exception on %s"), $var_403)))
            . Horde::img('delete-small.png', _("Delete"))
            . '</a>';
    }

    
    public function fn_34()
    {
        $var_166 = $var_52->var_41->getExceptions();
        asort($var_166);
        return implode(', ', array_map(array($var_52, 'exceptionLink'), $var_166));
    }

    
    public function fn_27($var_406 = true)
    {
        if (!$var_52->var_41 || !$var_52->var_4) {
            return array();
        }
        $var_407 = array();
        $var_168 = new class_5();
        $var_168->var_46 = $var_52->var_4;
        $var_169 = $var_52->fn_7()->search($var_168);

        if (!$var_406) {
            return $var_169;
        }

        foreach ($var_169 as $var_170) {
            foreach ($var_170 as $var_177) {
                $var_407[] = $var_177;
            }
        }

        return $var_407;
    }

    
    public function fn_19($var_84 = null)
    {
        global $var_266;

        if ($var_84 === null) {
            $var_84 = $var_266->getAuth();
        }

        
        
        if ((!$var_52->var_16 || $var_52->var_86 == $var_84) &&
            $var_52->fn_9(var_359::var_408, $var_84)) {
            return false;
        }

        return true;
    }

    
    public function fn_18($var_84 = null)
    {
        if (!$var_52->var_1) {
            return '';
        }

        return $var_52->fn_19($var_84)
            ? _("busy")
            : (strlen($var_52->var_7) ? $var_52->var_7 : _("[Unnamed event]"));
    }

    
    public function fn_6($var_84 = null)
    {
        return $var_52->fn_19($var_84) ? '' : $var_52->var_8;
    }

    
    public function fn_35($var_145)
    {
        return isset($var_52->var_22[Horde_String::lower($var_145)]);
    }

    
    public function fn_23($var_145, $var_205, $var_105, $var_66 = null)
    {
        if ($var_205 == var_11::var_409) {
            if (isset($var_52->var_22[$var_145])) {
                $var_205 = $var_52->var_22[$var_145]['attendance'];
            } else {
                $var_205 = var_11::var_153;
            }
        }
        if (empty($var_66) && isset($var_52->var_22[$var_145]) &&
            !empty($var_52->var_22[$var_145]['name'])) {
            $var_66 = $var_52->var_22[$var_145]['name'];
        }

        $var_52->var_22[$var_145] = array(
            'attendance' => $var_205,
            'response' => $var_105,
            'name' => $var_66
        );
    }

    
    public function fn_12($var_93, $var_105)
    {
        $var_52->var_23[$var_93->getId()] = array(
            'attendance' => var_11::var_153,
            'response' => $var_105,
            'name' => $var_93->get('name'),
            'calendar' => $var_93->get('calendar')
        );
    }

    
    public function fn_36($var_93)
    {
        if (isset($var_52->var_23[$var_93->getId()])) {
            unset($var_52->var_23[$var_93->getId()]);
        }
    }

    
    public function fn_11()
    {
        return $var_52->var_23;
    }

    
    public function fn_37(array $var_410)
    {
        $var_52->var_23 = $var_410;
    }

    public function fn_16()
    {
        return $var_52->var_29 ||
            ($var_52->var_24->var_193 == 0 && $var_52->var_24->var_158 == 0 && $var_52->var_24->var_194 == 0 &&
             (($var_52->var_25->var_193 == 23 && $var_52->var_25->var_158 == 59) ||
              ($var_52->var_25->var_193 == 0 && $var_52->var_25->var_158 == 0 && $var_52->var_25->var_194 == 0 &&
               ($var_52->var_25->var_180 > $var_52->var_24->var_180 ||
                $var_52->var_25->var_179 > $var_52->var_24->var_179 ||
                $var_52->var_25->var_178 > $var_52->var_24->var_178))));
    }

    
    public function fn_5($var_149)
    {
        if (isset($var_52->var_17)) {
            $var_411 = array_map('Horde_String::lower', $var_52->var_17);
            $var_412 = array_map('Horde_String::lower', $var_149);
            usort($var_412, 'strcoll');

            if (array_diff($var_411, $var_412)) {
                Kronolith::getTagger()->replaceTags(
                    $var_52->var_4,
                    $var_52->var_17,
                    $var_52->var_6,
                    var_72::var_73
                );
            }
            $var_52->var_18 = $var_52->var_17;
        } else {
            $var_52->var_18 = $var_149;
        }
    }

    
    public function var_414(var_0 $var_415 = null)
    {
        global $var_265, $var_416;

        
        $var_417 = Horde_Util::getFormData('targetcalendar');
        if (strpos($var_417, '\\')) {
            list(, $var_52->var_86) = explode('\\', $var_417, 2);
        } elseif (!isset($var_52->var_3)) {
            $var_52->var_86 = $GLOBALS['registry']->getAuth();
        }

        
        $var_52->var_7 = Horde_Util::getFormData('title', $var_52->var_7);
        $var_52->var_14 = Horde_Util::getFormData('description', $var_52->var_14);
        $var_52->var_8 = Horde_Util::getFormData('location', $var_52->var_8);
        $var_52->var_9 = Horde_Util::getFormData('timezone', $var_52->var_9);
        $var_52->var_16 = (bool)Horde_Util::getFormData('private');

        
        $var_15 = Horde_Util::getFormData('eventurl', $var_52->var_15);
        if (strlen($var_15)) {
            
            $var_15 = @parse_url($var_15);
            if ($var_15) {
                if (function_exists('http_build_url')) {
                    if (empty($var_15['path'])) {
                        $var_15['path'] = '/';
                    }
                    $var_15 = http_build_url($var_15);
                } else {
                    $var_418 = '';
                    if (isset($var_15['scheme'])) {
                        $var_418 .= $var_15['scheme'] . ':
                    }
                    if (isset($url['var_84'])) {
                        $var_418 .= $var_15['user'];
                        if (isset($var_15['pass'])) {
                            $var_418 .= ':' . $var_15['pass'];
                        }
                        $var_418 .= '@';
                    }
                    if (isset($var_15['host'])) {
                        
                        if (function_exists('idn_to_ascii')) {
                            $var_15['host'] = @idn_to_ascii($var_15['host']);
                        } elseif (Horde_Mime::is8bit($var_15['host'])) {
                            
                            $var_15['host'] = '';
                        }
                        $var_418 .= $var_15['host'];
                    }
                    if (isset($var_15['path'])) {
                        $var_418 .= $var_15['path'];
                    }
                    if (isset($var_15['query'])) {
                        $var_418 .= '?' . $var_15['query'];
                    }
                    if (isset($var_15['fragment'])) {
                        $var_418 .= '
                    }
                    $url = $new_url;
                }
            }
        }
        $this->url = $url;

        
        $this->status = Horde_Util::getFormData('var_10', $var_52->var_10);

        
        $var_22 = $var_416->get('kronolith', 'attendees', var_419::var_420);
        if (!is_null($var_421 = Horde_Util::getFormData('attendees'))) {
            $var_421 = Kronolith::parseAttendees(trim($var_421));
            foreach ($var_421 as $var_145 => $var_202) {
                if (!isset($var_22[$var_145])) {
                    $var_22[$var_145] = $var_202;
                }
            }
            foreach (array_keys($var_22) as $var_145) {
                if (!isset($var_421[$var_145])) {
                    unset($var_22[$var_145]);
                }
            }
        }
        $var_52->var_22 = $var_22;

        
        $var_347 = Horde_Util::getFormData('whole_day');
        if ($var_422 = Horde_Util::getFormData('start_date')) {
            
            $var_52->var_24 = Kronolith::parseDate($var_422 . ' ' . Horde_Util::getFormData('start_time'), true, $var_52->var_9);
            if ($var_347) {
                $var_52->var_24->var_193 = $var_52->var_24->var_158 = $var_52->var_24->var_194 = 0;
            }
        } elseif ($var_24 = Horde_Util::getFormData('start')) {
            
            $var_423 = $var_24['year'];
            $var_424 = $var_24['month'];
            $var_425 = $var_24['day'];
            $var_426 = Horde_Util::getFormData('start_hour');
            $var_427 = Horde_Util::getFormData('start_min');
            $var_428 = Horde_Util::getFormData('am_pm');

            if (!$var_265->getValue('twentyFour')) {
                if ($var_428 == 'PM') {
                    if ($var_426 != 12) {
                        $var_426 += 12;
                    }
                } elseif ($var_426 == 12) {
                    $var_426 = 0;
                }
            }

            if (Horde_Util::getFormData('end_or_dur') == 1) {
                if ($var_347) {
                    $var_426 = 0;
                    $var_427 = 0;
                    $var_429 = 0;
                    $var_430 = 24;
                    $var_431 = 0;
                } else {
                    $var_429 = (int)Horde_Util::getFormData('dur_day');
                    $var_430 = (int)Horde_Util::getFormData('dur_hour');
                    $var_431 = (int)Horde_Util::getFormData('dur_min');
                }
            }

            $var_52->var_24 = new class_0(array('hour' => $var_426,
                                                'min' => $var_427,
                                                'month' => $var_424,
                                                'mday' => $var_425,
                                                'year' => $var_423),
                                          $var_52->var_9);
        }

        
        if ($var_432 = Horde_Util::getFormData('end_date')) {
            
            $var_52->var_25 = Kronolith::parseDate($var_432 . ' ' . Horde_Util::getFormData('end_time'), true, $var_52->var_9);
            if ($var_347) {
                $var_52->var_25->var_193 = $var_52->var_25->var_158 = $var_52->var_25->var_194 = 0;
                $var_52->var_25->var_180++;
            }
        } elseif (Horde_Util::getFormData('end_or_dur') == 1) {
            
            $var_52->var_25 = new class_0(array('hour' => $var_426 + $var_430,
                                              'min' => $var_427 + $var_431,
                                              'month' => $var_424,
                                              'mday' => $var_425 + $var_429,
                                              'year' => $var_423));
        } elseif ($var_25 = Horde_Util::getFormData('end')) {
            
            $var_433 = $var_25['year'];
            $var_434 = $var_25['month'];
            $var_435 = $var_25['day'];
            $var_436 = Horde_Util::getFormData('end_hour');
            $var_437 = Horde_Util::getFormData('end_min');
            $var_438 = Horde_Util::getFormData('end_am_pm');

            if (!$var_265->getValue('twentyFour')) {
                if ($var_438 == 'PM') {
                    if ($var_436 != 12) {
                        $var_436 += 12;
                    }
                } elseif ($var_436 == 12) {
                    $var_436 = 0;
                }
            }

            $var_52->var_25 = new class_0(array('hour' => $var_436,
                                              'min' => $var_437,
                                              'month' => $var_434,
                                              'mday' => $var_435,
                                              'year' => $var_433),
                                        $var_52->var_9);
            if ($var_52->var_25->compareDateTime($var_52->var_24) < 0) {
                $var_52->var_25 = new class_0($var_52->var_24);
            }
        }

        $var_52->var_29 = false;

        
        if (!is_null($var_34 = Horde_Util::getFormData('alarm'))) {
            if ($var_34) {
                $var_67 = Horde_Util::getFormData('alarm_value');
                $var_440 = Horde_Util::getFormData('alarm_unit');
                if ($var_67 == 0) {
                    $var_67 = $var_440 = 1;
                }
                $var_52->var_34 = $var_67 * $var_440;
                
                if (Horde_Util::getFormData('alarm_change_method')) {
                    $var_441 = Horde_Util::getFormData('event_alarms');
                    $var_36 = array();
                    if (!empty($var_441)) {
                        foreach ($var_441 as $var_225) {
                            $var_36[$var_225] = array();
                            switch ($var_225){
                            case 'notify':
                                $var_36[$var_225]['sound'] = Horde_Util::getFormData('event_alarms_sound');
                                break;
                            case 'mail':
                                $var_36[$var_225]['email'] = Horde_Util::getFormData('event_alarms_email');
                                break;
                            case 'popup':
                                break;
                            }
                        }
                    }
                    $var_52->var_36 = $var_36;
                } else {
                    $var_52->var_36 = array();
                }
            } else {
                $var_52->var_34 = 0;
                $var_52->var_36 = array();
            }
        }

        
        $var_52->var_41 = $var_52->readRecurrenceForm(
            $var_52->var_24, $var_52->var_9, $var_52->var_41);

        
        $var_52->fn_17(false);

        $var_52->fn_38($var_415);

        
        $var_52->var_149 = Horde_Util::getFormData('tags', $var_52->var_149);

        
        if (Horde_Util::getFormData('lat') && Horde_Util::getFormData('lon')) {
            $var_52->var_150 = array('lat' => Horde_Util::getFormData('lat'),
                                       'lon' => Horde_Util::getFormData('lon'),
                                       'zoom' => Horde_Util::getFormData('zoom'));
        }

        $var_52->var_1 = true;
    }

    static var_444 function var_442($var_24, $var_9,
                                              $var_41 = null)
    {
        $var_445 = Horde_Util::getFormData('recur');
        if (!strlen($var_445)) {
            return $var_41;
        }
        if (!isset($var_41)) {
            $var_41 = new class_3($var_24);
        } else {
            $var_41->setRecurStart($var_24);
        }
        if (Horde_Util::getFormData('recur_end_type') == 'date') {
            $var_432 = Horde_Util::getFormData('recur_end_date', false);
            if ($var_432 !== false) {
                
                if (empty($var_432)) {
                    throw new class_1();
                }
                $var_447 = Kronolith::parseDate($var_432, false);
                $var_448 = array(
                    'year'  => $var_447->var_178,
                    'month' => $var_447->var_179,
                    'day'  => $var_447->var_180);
            } else {
                
                $var_448 = Horde_Util::getFormData('recur_end');
            }
            if ($var_41->hasRecurEnd()) {
                $var_391 = $var_41->var_391;
                $var_391->var_179 = $var_448['month'];
                $var_391->var_180 = $var_448['day'];
                $var_391->var_178 = $var_448['year'];
            } else {
                $var_391 = new class_0(
                    array('hour' => 23,
                          'min' => 59,
                          'sec' => 59,
                          'month' => $var_448['month'],
                          'mday' => $var_448['day'],
                          'year' => $var_448['year']),
                    $var_9);
            }
            $var_41->setRecurEnd($var_391);
        } elseif (Horde_Util::getFormData('recur_end_type') == 'count') {
            $var_41->setRecurCount(Horde_Util::getFormData('recur_count'));
        } elseif (Horde_Util::getFormData('recur_end_type') == 'none') {
            $var_41->setRecurCount(0);
            $var_41->setRecurEnd(null);
        }

        $var_41->setRecurType($var_445);
        switch ($var_445) {
        case var_131::var_449:
            $var_41->setRecurInterval(Horde_Util::getFormData('recur_daily_interval', 1));
            break;

        case var_131::var_132:
            $var_450 = Horde_Util::getFormData('weekly');
            $var_451 = 0;
            if (is_array($var_450)) {
                foreach ($var_450 as $var_396) {
                    $var_451 |= $var_396;
                }
            }

            if ($var_451 == 0) {
                
                switch ($var_24->dayOfWeek()) {
                case 0: $var_451 |= var_62::var_453; break;
                case 1: $var_451 |= var_62::var_454; break;
                case 2: $var_451 |= var_62::var_455; break;
                case 3: $var_451 |= var_62::var_456; break;
                case 4: $var_451 |= var_62::var_457; break;
                case 5: $var_451 |= var_62::var_458; break;
                case 6: $var_451 |= var_62::var_459; break;
                }
            }

            $var_41->setRecurInterval(Horde_Util::getFormData('recur_weekly_interval', 1));
            $var_41->setRecurOnDay($var_451);
            break;

        case var_131::var_460:
            switch (Horde_Util::getFormData('recur_monthly_scheme')) {
            case var_131::var_134:
                $var_41->setRecurType(var_131::var_134);
            case var_131::var_460:
                $var_41->setRecurInterval(
                    Horde_Util::getFormData('recur_monthly')
                        ? 1
                        : Horde_Util::getFormData('recur_monthly_interval', 1)
                );
                break;
            default:
                $var_41->setRecurInterval(Horde_Util::getFormData('recur_day_of_month_interval', 1));
                break;
            }
            break;

        case var_131::var_134:
            $var_41->setRecurInterval(Horde_Util::getFormData('recur_week_of_month_interval', 1));
            break;

        case var_131::var_461:
            switch (Horde_Util::getFormData('recur_yearly_scheme')) {
            case var_131::var_133:
            case var_131::var_462:
                $var_41->setRecurType(Horde_Util::getFormData('recur_yearly_scheme'));
            case var_131::var_461:
                $var_41->setRecurInterval(
                    Horde_Util::getFormData('recur_yearly')
                        ? 1
                        : Horde_Util::getFormData('recur_yearly_interval', 1)
                );
                break;
            default:
                $var_41->setRecurInterval(Horde_Util::getFormData('recur_yearly_interval', 1));
                break;
            }
            break;

        case var_131::var_462:
            $var_41->setRecurInterval(Horde_Util::getFormData('recur_yearly_day_interval', $var_463));
            break;

        case var_131::var_133:
            $var_41->setRecurInterval(Horde_Util::getFormData('recur_yearly_weekday_interval', $var_463));
            break;
        }

        foreach (array('exceptions', 'completions') as $var_464) {
            if ($var_227 = Horde_Util::getFormData($var_464)) {
                if (!is_array($var_227)) {
                    $var_227 = explode(',', $var_227);
                }
                foreach ($var_227 as $var_310) {
                    list($var_178, $var_179, $var_180) = sscanf($var_310, '%04d%02d%02d');
                    if ($var_464 == 'exceptions') {
                        $var_41->addException($var_178, $var_179, $var_180);
                    } else {
                        $var_41->addCompletion($var_178, $var_179, $var_180);
                    }
                }
            }
        }

        return $var_41;
    }

    
    var_466 function fn_38(var_0 $var_415 = null)
    {
        global $var_416;

        if (Horde_Util::getFormData('isajax', false)) {
            $var_410 = array();
        } else {
            $var_410 = $var_416->get('kronolith', 'resources', var_419::var_420);
        }

        $var_467 = $var_52->var_23;
        $var_468 = Horde_Util::getFormData('resources');
        if (!empty($var_468)) {
            foreach (explode(',', $var_468) as $var_75) {
                try {
                    $var_93 = Kronolith::fn_7('Resource')->getResource($var_75);
                } catch (var_76 $var_65) {}
                if (!($var_93 instanceof var_469) ||
                    $var_93->isFree($var_52)) {
                    $var_410[$var_93->getId()] = array(
                        'attendance' => var_11::var_153,
                        'response'   => var_11::var_156,
                        'name'       => $var_93->get('name')
                    );
                } else {
                    $GLOBALS['notification']->push(_("No resources from this group were available"), 'horde.error');
                }
            }
        }
        $var_52->var_23 = $var_410;


        
        
        if (!empty($var_415) && $var_415->fn_15() && !$var_52->fn_15()) {
            foreach ($var_415->fn_11() as $var_472 => $var_227) {
                $var_93 = Kronolith::fn_7('Resource')->getResource($var_176);
                $var_111 = Kronolith::fn_7('Resource')->getByUID($var_415->var_4, $var_93->var_37);
                $var_111->var_41 = $var_123->var_41;
                $var_111->fn_10();
            }
        }

        
        
        if (!$var_52->fn_15()) {
            $var_473 = $var_467 + $var_52->var_23;
            $var_122 = array_diff(array_keys($var_467), array_keys($var_52->var_23));
            foreach ($var_122 as $var_176) {
                
                
                if ($var_473[$var_176]['response'] != var_11::var_109) {
                    try {
                        Kronolith::fn_7('Resource')
                            ->getResource($var_176)
                            ->removeEvent($var_52);
                    } catch (var_76 $var_65) {}
                }
            }
        }
    }

    public function fn_39($var_475)
    {
        global $var_265;

        $var_264 = array();
        $var_476 = '';
        $var_477 = false;
        $var_304 = '';

        switch ($var_475) {
        case 'start[year]':
            return  '<label for="' . $var_52->fn_40($var_475) . '" class="hidden">' . _("Start Year") . '</label>' .
                '<input name="' . $var_475 . '" value="' . $var_52->var_24->var_178 .
                '" type="text"' .
                ' id="' . $var_52->fn_40($var_475) . '" size="4" maxlength="4" />';

        case 'start[month]':
            $var_477 = $var_52->var_24->var_179;
            for ($var_203 = 1; $var_203 < 13; ++$var_203) {
                $var_264[$var_203] = strftime('%b', mktime(1, 1, 1, $var_203, 1));
            }
            $var_304 = _("Start Month");
            break;

        case 'start[day]':
            $var_477 = $var_52->var_24->var_180;
            for ($var_203 = 1; $var_203 < 32; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("Start Day");
            break;

        case 'start_hour':
            $var_477 = $var_52->var_24->format($var_265->getValue('twentyFour') ? 'G' : 'g');
            $var_479 = $var_265->getValue('twentyFour') ? 0 : 1;
            $var_480 = $var_265->getValue('twentyFour') ? 24 : 13;
            for ($var_203 = $var_479; $var_203 < $var_480; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("Start Hour");
            break;

        case 'start_min':
            $var_477 = sprintf('%02d', $var_52->var_24->var_158);
            for ($var_203 = 0; $var_203 < 12; ++$var_203) {
                $var_158 = sprintf('%02d', $var_203 * 5);
                $var_264[$var_158] = $var_158;
            }
            $var_304 = _("Start Minute");
            break;

        case 'end[year]':
            return  '<label for="' . $var_52->fn_40($var_475) . '" class="hidden">' . _("End Year") . '</label>' .
                '<input name="' . $var_475 . '" value="' . $var_52->var_25->var_178 .
                '" type="text"' .
                ' id="' . $var_52->fn_40($var_475) . '" size="4" maxlength="4" />';

        case 'end[month]':
            $var_477 = $var_52->var_25 ? $var_52->var_25->var_179 : $var_52->var_24->var_179;
            for ($var_203 = 1; $var_203 < 13; ++$var_203) {
                $var_264[$var_203] = strftime('%b', mktime(1, 1, 1, $var_203, 1));
            }
            $var_304 = _("End Month");
            break;

        case 'end[day]':
            $var_477 = $var_52->var_25 ? $var_52->var_25->var_180 : $var_52->var_24->var_180;
            for ($var_203 = 1; $var_203 < 32; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("End Day");
            break;

        case 'end_hour':
            $var_477 = $var_52->var_25
                ? $var_52->var_25->format($var_265->getValue('twentyFour') ? 'G' : 'g')
                : $var_52->var_24->format($var_265->getValue('twentyFour') ? 'G' : 'g') + 1;
            $var_479 = $var_265->getValue('twentyFour') ? 0 : 1;
            $var_480 = $var_265->getValue('twentyFour') ? 24 : 13;
            for ($var_203 = $var_479; $var_203 < $var_480; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("End Hour");
            break;

        case 'end_min':
            $var_477 = $var_52->var_25 ? $var_52->var_25->var_158 : $var_52->var_24->var_158;
            $var_477 = sprintf('%02d', $var_477);
            for ($var_203 = 0; $var_203 < 12; ++$var_203) {
                $var_158 = sprintf('%02d', $var_203 * 5);
                $var_264[$var_158] = $var_158;
            }
            $var_304 = _("End Minute");
            break;

        case 'dur_day':
            $var_481 = $var_52->fn_31();
            return  '<label for="' . $var_475 . '" class="hidden">' . _("Duration Day") . '</label>' .
                '<input name="' . $var_475 . '" value="' . $var_481->var_396 .
                '" type="text"' .
                ' id="' . $var_475 . '" size="4" maxlength="4" />';

        case 'dur_hour':
            $var_481 = $var_52->fn_31();
            $var_477 = $var_481->var_193;
            for ($var_203 = 0; $var_203 < 24; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("Duration Hour");
            break;

        case 'dur_min':
            $var_481 = $var_52->fn_31();
            $var_477 = $var_481->var_158;
            for ($var_203 = 0; $var_203 < 13; ++$var_203) {
                $var_158 = sprintf('%02d', $var_203 * 5);
                $var_264[$var_158] = $var_158;
            }
            $var_304 = _("Duration Minute");
            break;

        case 'recur_end[year]':
            if ($var_52->var_25) {
                $var_25 = ($var_52->fn_15() && $var_52->var_41->hasRecurEnd())
                        ? $var_52->var_41->var_391->var_178
                        : $var_52->var_25->var_178;
            } else {
                $var_25 = $var_52->var_24->var_178;
            }
            return  '<label for="' . $var_52->fn_40($var_475) . '" class="hidden">' . _("Recurrence End Year") . '</label>' .
                '<input name="' . $var_475 . '" value="' . $var_25 .
                '" type="text"' .
                ' id="' . $var_52->fn_40($var_475) . '" size="4" maxlength="4" />';

        case 'recur_end[month]':
            if ($var_52->var_25) {
                $var_477 = ($var_52->fn_15() && $var_52->var_41->hasRecurEnd())
                    ? $var_52->var_41->var_391->var_179
                    : $var_52->var_25->var_179;
            } else {
                $var_477 = $var_52->var_24->var_179;
            }
            for ($var_203 = 1; $var_203 < 13; ++$var_203) {
                $var_264[$var_203] = strftime('%b', mktime(1, 1, 1, $var_203, 1));
            }
            $var_304 = _("Recurrence End Month");
            break;

        case 'recur_end[day]':
            if ($var_52->var_25) {
                $var_477 = ($var_52->fn_15() && $var_52->var_41->hasRecurEnd())
                    ? $var_52->var_41->var_391->var_180
                    : $var_52->var_25->var_180;
            } else {
                $var_477 = $var_52->var_24->var_180;
            }
            for ($var_203 = 1; $var_203 < 32; ++$var_203) {
                $var_264[$var_203] = $var_203;
            }
            $var_304 = _("Recurrence End Day");
            break;
        }

        if (!$var_52->var_40) {
            $var_52->var_40 = Horde_Core_Ui_VarRenderer::factory('Html');
        }

        return '<label for="' . $var_52->fn_40($var_475) . '" class="hidden">' . $var_304 . '</label>' .
            '<select name="' . $var_475 . '"' . $var_476 . ' id="' . $var_52->fn_40($var_475) . '">' .
            $var_52->var_40->selectOptions($var_264, $var_477) .
            '</select>';
    }

    
    public function fn_29($var_138 = array(), $var_348 = false, $var_483 = true)
    {
        $var_138['eventID'] = $var_52->var_75;
        $var_138['calendar'] = $var_52->var_37;
        $var_138['type'] = $var_52->var_38;

        return Horde::url('event.php', $var_348)->setRaw(!$var_483)->add($var_138);
    }

    
    public function fn_41($var_138 = array(), $var_348 = false)
    {
        $var_138['view'] = 'EditEvent';
        $var_138['eventID'] = $var_52->var_75;
        $var_138['calendar'] = $var_52->var_37;
        $var_138['type'] = $var_52->var_38;

        return Horde::url('event.php', $var_348)->add($var_138);
    }

    
    public function fn_42($var_138 = array(), $var_348 = false)
    {
        $var_138['view'] = 'DeleteEvent';
        $var_138['eventID'] = $var_52->var_75;
        $var_138['calendar'] = $var_52->var_37;
        $var_138['type'] = $var_52->var_38;

        return Horde::url('event.php', $var_348)->add($var_138);
    }

    
    public function fn_43($var_138 = array(), $var_348 = false)
    {
        $var_138['view'] = 'ExportEvent';
        $var_138['eventID'] = $var_52->var_75;
        $var_138['calendar'] = $var_52->var_37;
        $var_138['type'] = $var_52->var_38;

        return Horde::url('event.php', $var_348)->add($var_138);
    }

    public function fn_44($var_487 = null, $var_488 = true, $var_489 = null,
                            $var_348 = false, $var_483 = true)
    {
        global $var_265;

        if (is_null($var_487)) {
            $var_487 = $var_52->var_24;
        }
        if (is_null($var_489)) {
            $var_489 = Horde::selfUrl(true, false, true);
        }

        $var_490 = $var_52->fn_18();
        $var_491 = $var_52->fn_29(array('datetime' => $var_487->strftime('%Y%m%d%H%M%S'), 'url' => $var_489), $var_348, $var_483);
        $var_492 = $var_52->fn_9(var_359::var_408);

        $var_405 = '<span' . $var_52->fn_45() . '>';
        if ($var_492 && $var_491) {
            $var_405 .= Horde::linkTooltip($var_491,
                                       $var_490,
                                       $var_52->fn_46(),
                                       '',
                                       '',
                                       $var_52->fn_47(),
                                       '',
                                       array('style' => $var_52->fn_45(false)));
        }
        $var_405 .= htmlspecialchars($var_490);
        if ($var_492 && $var_491) {
            $var_405 .= '</a>';
        }

        if ($var_488 && $var_265->getValue('show_icons')) {
            $var_496 = $var_52->var_53 == '
            $status = '';
            if ($var_52->var_34) {
                if ($var_52->var_34 % 10080 == 0) {
                    $var_368 = $var_52->var_34 / 10080;
                    $var_7 = sprintf(ngettext("Alarm %d week before", "Alarm %d weeks before", $var_368), $var_368);
                } elseif ($var_52->var_34 % 1440 == 0) {
                    $var_368 = $var_52->var_34 / 1440;
                    $var_7 = sprintf(ngettext("Alarm %d day before", "Alarm %d days before", $var_368), $var_368);
                } elseif ($var_52->var_34 % 60 == 0) {
                    $var_368 = $var_52->var_34 / 60;
                    $var_7 = sprintf(ngettext("Alarm %d hour before", "Alarm %d hours before", $var_368), $var_368);
                } else {
                    $var_368 = $var_52->var_34;
                    $var_7 = sprintf(ngettext("Alarm %d minute before", "Alarm %d minutes before", $var_368), $var_368);
                }
                $var_10 .= Horde::fullSrcImg('alarm-' . $var_496 . '.png', array('attr' => array('alt' => $var_7, 'title' => $var_7, 'class' => 'iconAlarm')));
            }

            if ($var_52->fn_15()) {
                $var_7 = Kronolith::recurToString($var_52->var_41->getRecurType());
                $var_10 .= Horde::fullSrcImg('recur-' . $var_496 . '.png', array('attr' => array('alt' => $var_7, 'title' => $var_7, 'class' => 'iconRecur')));
            } elseif ($var_52->var_46) {
                $var_7 = _("Exception");
                $var_10 .= Horde::fullSrcImg('exception-' . $var_496 . '.png', array('attr' => array('alt' => $var_7, 'title' => $var_7, 'class' => 'iconRecur')));
            }

            if ($var_52->var_16) {
                $var_7 = _("Private event");
                $var_10 .= Horde::fullSrcImg('private-' . $var_496 . '.png', array('attr' => array('alt' => $var_7, 'title' => $var_7, 'class' => 'iconPrivate')));
            }

            if (!empty($var_52->var_22)) {
                $var_10 .= Horde::fullSrcImg('attendees-' . $var_496 . '.png', array('attr' => array('alt' => _("Meeting"), 'title' => _("Meeting"), 'class' => 'iconPeople')));
            }

            $var_497 = ' ';
            if (!empty($var_52->var_13)) {
                $var_405 = $var_10 . ' <img class="kronolithEventIcon" src="' . $var_52->var_13 . '" /> ' . $var_405;
            } elseif (!empty($var_10)) {
                $var_405 .= ' ' . $var_10;
                $var_497 = '';
            }

            if ((!$var_52->var_16 ||
                 $var_52->var_86 == $GLOBALS['registry']->getAuth()) &&
                Kronolith::getDefaultCalendar(var_359::var_360)) {
                $var_15 = $var_52->fn_41(
                    array('datetime' => $var_487->strftime('%Y%m%d%H%M%S'),
                          'url' => $var_489),
                    $var_348);
                if ($var_15) {
                    $var_405 .= $var_497
                        . $var_15->link(array('title' => sprintf(_("Edit %s"), $var_490),
                                           'class' => 'iconEdit'))
                        . Horde::fullSrcImg('edit-' . $var_496 . '.png',
                                            array('attr' => array('alt' => _("Edit"))))
                        . '</a>';
                    $var_497 = '';
                }
            }
            if ($var_52->fn_9(var_359::var_362)) {
                $var_15 = $var_52->fn_42(
                    array('datetime' => $var_487->strftime('%Y%m%d%H%M%S'),
                          'url' => $var_489),
                    $var_348);
                if ($var_15) {
                    $var_405 .= $var_497
                        . $var_15->link(array('title' => sprintf(_("Delete %s"), $var_490),
                                           'class' => 'iconDelete'))
                        . Horde::fullSrcImg('delete-' . $var_496 . '.png',
                                            array('attr' => array('alt' => _("Delete"))))
                        . '</a>';
                }
            }
        }

        return $var_405 . '</span>';
    }

    
    public function fn_45($var_498 = true)
    {
        $var_499 = 'background-color:' . $var_52->var_39 . ';color:' . $var_52->var_53;
        if ($var_498) {
            $var_499 = ' style="' . $var_499 . '"';
        }
        return $var_499;
    }

    
    public function fn_47()
    {
        $var_500 = $var_52->fn_48()
            . "\n" . sprintf(_("Owner: %s"), ($var_52->var_86 == $GLOBALS['registry']->getAuth() ?
                                              _("Me") : Kronolith::getUserName($var_52->var_86)));

        if (!$var_52->fn_19()) {
            if ($var_52->var_8) {
                $var_500 .= "\n" . _("Location") . ': ' . $var_52->var_8;
            }

            if ($var_52->var_14) {
                $var_500 .= "\n\n" . Horde_String::wrap($var_52->var_14);
            }
        }

        return $var_500;
    }

    
    public function fn_48()
    {
        if ($var_52->fn_16()) {
            return _("All day");
        } elseif (($var_502 = $var_52->var_24->compareDate($var_52->var_25)) > 0) {
            $var_503 = $GLOBALS['prefs']->getValue('date_format');
            if ($var_502 > 0) {
                return $var_52->var_25->strftime($var_503) . '-'
                    . $var_52->var_24->strftime($var_503);
            } else {
                return $var_52->var_24->strftime($var_503) . '-'
                    . $var_52->var_25->strftime($var_503);
            }
        } else {
            $var_504 = $GLOBALS['prefs']->getValue('twentyFour');
            return $var_52->var_24->format($var_504 ? 'G:i' : 'g:ia')
                . '-'
                . $var_52->var_25->format($var_504 ? 'G:i' : 'g:ia');
        }
    }

    
    public function fn_46()
    {
        switch ($var_52->var_10) {
        case var_11::var_91:
            return 'kronolith-event-cancelled';

        case var_11::var_152:
        case var_11::var_151:
            return 'kronolith-event-tentative';
        }
    }

    protected function fn_40($var_75)
    {
        return str_replace(array('[', ']'),
                           array('_', ''),
                           $var_75);
    }

    
    protected function fn_22($var_505)
    {
        if (Horde_String::validUtf8($var_505)) {
            return $var_505;
        }

        return preg_replace('/[^\x09\x0A\x0D\x20-\x7E]/', '', $var_505);
    }
}
