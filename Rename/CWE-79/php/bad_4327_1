<?php namespace var_0\var_1;


class class_0 extends var_2
{
    
    public function fn_0()
    {
        
        $var_3 = config('app.url');
        if ($var_3) {
            $var_4 = (strpos($var_3, 'https:
            URL::forceRootUrl($appUrl);
            URL::forceScheme($isHttps ? 'var_5' : 'var_6');
        }

        
        Validator::extend('image_extension', function ($var_7, $var_8, $var_9, $var_10) {
            $var_11 = ['png', 'jpg', 'jpeg', 'gif', 'webp'];
            return in_array(strtolower($var_8->getClientOriginalExtension()), $var_11);
        });

        Validator::extend('no_double_extension', function ($var_7, $var_8, $var_9, $var_10) {
            $var_13 = $var_8->getClientOriginalName();
            return substr_count($var_13, '.') < 2;
        });

        
        Blade::directive('icon', function ($var_15) {
            return "<?php  ?>";
        });

        Blade::directive('exposeTranslations', function ($var_15) {
            return "<?php \$__env->startPush('translations'); ?>" .
                "<?php foreach({$var_15} as \$key): ?>" .
                '<meta name="translation" key="<?php  ?>" value="<?php  ?>">' . "\n" .
                "<?php endforeach; ?>" .
                '<?php $__env->stopPush(); ?>';
        });

        
        Schema::defaultStringLength(191);

        
        var_16\var_17\var_18\var_19\var_20::morphMap([
            'BookStack\\Bookshelf' => var_0\var_21\var_22::var_23,
            'BookStack\\Book' => var_0\var_21\var_24::var_23,
            'BookStack\\Chapter' => var_0\var_21\var_25::var_23,
            'BookStack\\Page' => var_0\var_21\var_26::var_23,
        ]);

        
        var_16\var_27\var_28\var_29::composer('partials.breadcrumbs', var_0\var_21\var_30::var_23);
    }

    
    public function fn_1()
    {
        $var_31->var_32->singleton(var_0\var_34\var_35::var_23, function ($var_32) {
            return new class_1($var_32->make(var_0\var_34\var_37::var_23), $var_32->make('Illuminate\Contracts\Cache\Repository'));
        });
    }
}
