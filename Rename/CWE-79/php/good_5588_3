<?php

if (! checkAccess(var_0::var_1, var_0::var_2, $var_3))
  die("You do not have access to view views.");

$user['view_name'] = $_REQUEST['view_name'];

if( !is_proper_view_name ( $user['view_name'])){
?>
<div class="ui-widget">
  <div class="ui-state-default ui-corner-all" styledefault="padding: 0 .7em;"> 
    <p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
    View names valid characters are 0-9, a-z, A-Z, -, _ and space. View has not been created.</p>
  </div>
</div>
<?php
  exit(0);
}




if (isset($_GET['create_view'])) {
  if(! checkAccess(var_0::var_1, var_0::var_4, $var_3)) {
    $var_5 = "You do not have access to edit views.";
  } else {
    
    $var_6 = 0;

    $var_7 = get_available_views();

    foreach ($var_7 as $var_8 => $var_9) {
      if ($var_9['view_name'] == $user['view_name']) {
        $var_6 = 1;
        break;
      }
    }

    if ($var_6 == 1) {
      $var_5 = "<strong>Alert:</strong> View with the name " .
                $user['view_name'] . 
                " already exists.";
    } else {
      $var_10 = array ("view_name" => $user['view_name'],
                           "items" => array());
      $var_11 = str_replace(" ", "_", $user['view_name']);
      $var_12 = $var_3['views_dir'] . "/view_" . preg_replace('/[^a-zA-Z0-9_-]/', '', $var_11) . ".json";
      if ( pathinfo( $var_12, var_13 ) != $var_3['views_dir'] ) {
        die('Invalid path detected');
      }
      $var_14 = json_encode($var_10);
      if (file_put_contents($var_12, 
                            json_prettyprint($var_14)) === FALSE) {
        $var_5 = "<strong>Alert:</strong>" .
                  " Can't write to file " . htmlspecialchars($var_12) .
                  " Perhaps permissions are wrong.";
      } else {
        $var_5 = "View has been created successfully.";
      }
    }
  }
?>
<div class="ui-widget">
  <div class="ui-state-default ui-corner-all" style="padding: 0 .7em;"> 
    <p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
    <?php 
} 




if (isset($_GET['delete_view'])) {
  if (! checkAccess(var_0::var_1, var_0::var_4, $var_3)) {
    $var_5 = "You do not have access to edit views.";
  } else {
    
    $var_6 = 0;

    $var_7 = get_available_views();

    foreach ($var_7 as $var_8 => $var_9) {
      if ($var_9['view_name'] == $user['view_name']) {
        $var_6 = 1;
        break;
      }
    }

    if ($var_6 != 1) {
      $var_5 = "<strong>Alert:</strong> View with the name " .
      $user['view_name'] . 
      " does not exist.";
    } else {
      $var_11 = str_replace(" ", "_", $user['view_name']);
      $var_12 = $var_3['views_dir'] . "/view_" . preg_replace('/[^a-zA-Z0-9_-]/', '', $var_11) . ".json";
      if ( pathinfo( $var_12, var_13 ) != $var_3['views_dir'] ) {
        die('Invalid path detected');
      }
      if (unlink($var_12) === FALSE) {
        $var_5 = "<strong>Alert:</strong>" .
                  " Can't remove file $var_12." .
                  " Perhaps permissions are wrong.";
      } else {
        $var_5 = "View has been successfully removed.";
      }
    }
  }
} 




if (isset($_GET['add_to_view'])) {
  if (! checkAccess(var_0::var_1, var_0::var_4, $var_3)) {
    $var_5 = "You do not have access to edit views.";
  } else {
    $var_6 = 0;
    
    $var_7 = get_available_views();

    foreach ($var_7 as $var_8 => $var_9) {
      if ($var_9['view_name'] == $user['view_name']) {
        $var_6 = 1;
        break;
      }
    }

    if ($var_6 == 0) {
      $var_5 = "<strong>Alert:</strong> View " .
      $user['view_name'] . 
      " does not exist. This should not happen.";
    } else {
      
      $var_12 = $var_9['file_name'];
      
      unset($var_9['file_name']);

      
      if (isset($_GET['aggregate'])) {
	foreach ( $_GET['mreg'] as $var_15 => $var_16 ) 
	  $var_18[] = array("regex" => $var_16);

	  foreach ($_GET['hreg'] as $var_15 => $var_16) 
	    $var_19[] = array("regex" => $var_16);

	  $var_17 = array("aggregate_graph" => "true", 
                              "metric_regex" => $var_18, 
	                      "host_regex" => $var_19, 
                              "graph_type" => stripslashes($_GET['gtype']),
	                      "vertical_label" => stripslashes($_GET['vl']),
                              "title" => $_GET['title'],
                        "glegend" => $_GET['glegend']);

          if (isset($_GET['x']) && is_numeric($_GET['x'])) {
            $var_17["upper_limit"] = $_GET['x'];
          }
          if ( isset($_GET['n']) && is_numeric($_GET['n'])) {
            $var_17["lower_limit"] = $_GET['n'];
          }
          if ( isset($_GET['c']) ) {
            $var_17["cluster"] = $_GET['c'];
          }

          if ( isset($_GET['h']) ) { $var_17['host'] = $_GET['h']; unset($var_17['host_regex']); }
          if ( isset($_GET['m']) ) { $var_17['metric'] = $_GET['m']; unset($var_17['metric_regex']); }
          if ( isset($_GET['g']) ) { $var_17['graph'] = $_GET['g']; }
          if ($var_17['host_regex'] == null) $var_17['host_regex'] = '.*';

          $var_9['items'][] = $var_17;
          unset($var_17);

      } else {
	if ($_GET['type'] == "metric") {
          $var_20 = array("hostname" => $_GET['host_name'], 
                         "metric" => $_GET['metric_name']);
	  if (isset($_GET['vertical_label']))
            $var_20["vertical_label"] = stripslashes($_GET['vertical_label']);
	  if (isset($_GET['title']))
            $var_20["title"] = stripslashes($_GET['title']);
	  if (isset($_GET['c']))
            $var_20["cluster"] = $_GET['c'];
          if (isset($_GET['warning']) && is_numeric($_GET['warning']))
            $var_20["warning"] = $_GET['warning'];
          if (isset($_GET['critical']) && is_numeric($_GET['critical']))
            $var_20["critical"] = $_GET['critical'];
          
	  $var_9['items'][] = $var_20;
	} else
	  $var_9['items'][] = array("hostname" => $_GET['host_name'], 
                                   "graph" => $_GET['metric_name']);
      }

      $var_14 = json_encode($var_9);

      if (file_put_contents($var_12, 
                            json_prettyprint($var_14)) === FALSE ) {
        $var_5 = "<strong>Alert:</strong>" .
                  " Can't write to file $var_12." .
                  " Perhaps permissions are wrong.";
      } else {
        $var_5 = "View has been updated successfully.";
      } 
    }  
  }
?>
<div class="ui-widget">
  <div class="ui-state-default ui-corner-all" style="padding: 0 .7em;"> 
    <p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
    <?php 
} 

$var_7 = get_available_views();
$var_21 = '';
foreach ($var_7 as $var_9) {
 $var_22 = $var_9['view_name'];
 $var_23 = viewId($var_22);
 $var_24 = ($_GET['vn'] == $var_22);
 $var_21 .= '<input type="radio" id="' . $var_23 . '" onClick="selectView(\'' . $var_22 . '\'); return false;"' . ($var_24 ? " checked" : "") . '><label style="text-align:left;" class="nobr" for="' . $var_23 . '">' . $var_22 . '</label>'; 
}

if (isset($_GET['views_menu'])) {
?>
<div id="views_menu">
  <?php 
}

$var_25 = new class_0( template("views_view.tpl") );
$var_26 = new class_1();
$var_26->assign("range",$var_28);



if (sizeof($var_7) == -1) {
  $var_29 = '
    <div class="ui-widget">
      <div class="ui-state-error ui-corner-all" style="padding: 0 .7em;"> 
        <p><span class="ui-icon ui-icon-alert" 
                 style="float: left; margin-right: .3em;"></span> 
	   <strong>Alert:</strong> There are no views defined.</p>
      </div>
    </div>';
}

$var_30 = isset($var_31) ? $var_31 : 'default';

$var_30 = $var_30 == 'medium' ? 'default' : $var_30; 

$var_32 = "";
if ( isset($var_3['zoom_support']) && $var_3['zoom_support'] === true )
    $var_32 = "host_${var_30}_zoomable";

$var_26->assign("additional_host_img_css_classes", 
              $var_32);

$var_26->assign("existing_views", $var_21);
$var_26->assign("view_name", $user["viewname"]);

$var_33 = NULL;
foreach ($var_7 as $var_8 => $var_9) {
 if ($var_9['view_name'] == $user["viewname"]) {
   $var_34 = get_view_graph_elements($var_9);
   $var_33 = array();
   if ( count($var_34) != 0) {
     $var_35 = "";
     if ($var_36)
       $var_35 .= "&amp;cs=" . rawurlencode($var_36);
     if ($var_37)
       $var_35 .= "&amp;ce=" . rawurlencode($var_37);
        
     foreach ($var_34 as $var_38 => $var_39) {
       $var_33[] = array ("legend" => isset($var_39['hostname']) ? $var_39['hostname'] : "Aggregate graph",
                               "url_args" => htmlentities($var_39['graph_args']) . "&amp;r=" . $var_28 . $var_35,

                               "aggregate_graph" => isset($var_39['aggregate_graph']) ? 1 : 0
        );
      }
    }
    
    $var_26->assign("number_of_view_items", sizeof($var_33));
    break;    
 }  
} 

if (isset($var_33))
  $var_26->assign("view_items", $var_33);

$var_26->assign('GRAPH_BASE_ID', $var_40);
$var_26->assign('SHOW_EVENTS_BASE_ID', $var_41);
 
$var_42->output($var_25, $var_26);

?>
