<?php

















error_reporting( var_0 );


@set_time_limit( 0 );
$var_1 = true;  
define( 'MANTIS_INSTALLER', true );
define( 'PLUGINS_DISABLED', true );
$var_2 = false; 

$var_3 = false;
$var_4 = false;



function fn_0( $var_5, $var_6 = true, $var_7 = '' ) {
	global $var_3;
	
	if( var_8 == $var_5 ) {
		if( $var_6 ) {
			$var_3 = true;
			
		} else {
			
		}
		if( '' != $var_7 ) {
			
		}
	}

	if( var_9 == $var_5 ) {
		
	}
	
}



function fn_1( $var_10, $var_5, $var_6 = true, $var_7 = '' ) {

	
	
}










$var_11 = gpc_get_int( 'install', 0 );
?>
<html>
<head>
<title> MantisBT Administration - Installation  </title>
<link rel="stylesheet" type="text/css" href="admin.css" />
</head>
<body>
<table width="100%" border="0" cellspacing="0" cellpadding="0" bgcolor="
	<tr class="top-bar">
		<td class="links">
			[ <a href="index.php">Back to Administration</a> ]
		</td>
		<td class="title">
		<?php
switch( $var_11 ) {
	case 6:
		
		break;
	case 5:
		
		break;
	case 4:
		
		break;
	case 3:
		
		break;
	case 2:
		
		break;
	case 1:
		
		break;
	case 0:
	default:
		
		break;
}
?>
		</td>
	</tr>
</table>
<br /><br />

<form method='POST'>
<?php
if( 0 == $var_11 ) {
	?>
<table width="100%" bgcolor="
<tr>
	<td bgcolor="
		<span class="title">Checking Installation...</span>
	</td>
</tr>
<?php
}

$var_12 = $var_13 . 'config_inc.php';
$var_14 = file_exists( $var_12 );
$var_15 = null;
$var_16 = null;
$var_17 = null;
$var_18 = null;
$var_19 = null;
if( $var_14 ) {
	if( 0 == $var_11 ) {
		fn_1( "Config File Exists - Upgrade", true );
	}

	

	$var_20 = config_get( 'dsn', '' );
	$var_15 = config_get( 'hostname', '' );
	$var_16 = config_get( 'db_type', '' );
	$var_17 = config_get( 'database_name', '' );
	$var_18 = config_get( 'db_username', '' );
	$var_19 = config_get( 'db_password', '' );

	if( 0 == $var_11 ) {
		fn_1( 'Setting Database Type', '' !== $var_16, true, 'database type is blank?' );
		fn_1( 'Checking Database connection settings exist', ( $var_20 !== '' || ( $var_17 !== '' && $var_18 !== '' && $var_15 !== '' ) ), true, 'database connection settings do not exist?' );
		fn_1( 'Checking PHP support for database type',
			db_check_database_support( $var_16 ), true,
			'database is not supported by PHP. Check that it has been compiled into your server.'
		);
		if( $var_16 == 'mssql' ) {
			fn_1( 'Checking PHP support for Microsoft SQL Server driver',
				version_compare( phpversion(), '5.3' ) < 0, true,
				'mssql driver is no longer supported in PHP >= 5.3, please use mssqlnative instead'
			);
		}
	}

	$var_21 = ADONewConnection( $var_16 );
	$var_22 = @$var_21->Connect( $var_15, $var_18, $var_19, $var_17 );
	if( $var_21->IsConnected() ) {
		$var_25 = true;
	}
	$var_26 = config_get( 'database_version', -1 );
	if( $var_26 > 1 ) {
		$var_4 = true;
		$var_27 = true;
	} else {
		if( 0 == $var_11 ) {
			fn_1( 'Config File Exists but Database does not', false, false, 'Bad config_inc.php?' );
		}
	}
} else {
	
	$var_15 = gpc_get( 'hostname', config_get( 'hostname', 'localhost' ) );
	$var_16 = gpc_get( 'db_type', config_get( 'db_type', '' ) );
	$var_17 = gpc_get( 'database_name', config_get( 'database_name', 'bugtrack' ) );
	$var_18 = gpc_get( 'db_username', config_get( 'db_username', '' ) );
	$var_19 = gpc_get( 'db_password', config_get( 'db_password', '' ) );
	if( var_28 == $var_19 ) {
		$var_19 = config_get( 'db_password' );
	}
}
$var_29 = gpc_get( 'admin_username', '' );
$var_30 = gpc_get( 'admin_password', '' );
$var_31 = gpc_get_bool( 'log_queries', false );
$var_27 = gpc_get_bool( 'db_exists', false );

$var_32 = '';
if( $var_16 == 'db2' ) {

	
	if( strpos( $var_17, '/' ) != false ) {
		$var_33 = $var_17;
		list( $var_17, $var_32 ) = explode( '/', $var_33, 2 );
	}
}

if( 0 == $var_11 ) {
	?>

<!-- Check PHP Version -->
<?php fn_1( ' Checking PHP version (your version is ' . phpversion() . ')', check_php_version( phpversion() ), true, 'Upgrade to a more recent version of PHP' );?>

<!-- Check Safe Mode -->
<?php
fn_1( 'Checking if safe mode is enabled for install script',
	! ini_get ( 'SAFE_MODE' ),
	true,
	'Disable safe_mode in php.ini before proceeding' ) ?>

</table>
<?php
	if( false == $var_3 ) {
		$var_11++;
	}
} 


if( 2 == $var_11 ) {
	?>

<table width="100%" border="0" cellpadding="10" cellspacing="1">
<!-- Setting config variables -->
<?php fn_1( 'Setting Database Hostname', '' !== $var_15, true, 'host name is blank' )?>

<!-- Setting config variables -->
<?php fn_1( 'Setting Database Type', '' !== $var_16, true, 'database type is blank?' )?>

<!-- Checking DB support-->
<?php
	fn_1( 'Checking PHP support for database type', db_check_database_support( $var_16 ), true, 'database is not supported by PHP. Check that it has been compiled into your server.' );

	fn_1( 'Setting Database Username', '' !== $var_18, true, 'database username is blank' );
	fn_1( 'Setting Database Password', '' !== $var_19, false, 'database password is blank' );
	fn_1( 'Setting Database Name', '' !== $var_17, true, 'database name is blank' );

	if( $var_16 == 'db2' ) {
		fn_1( 'Setting Database Schema', !is_blank( $var_32 ), true, 'must have a schema name for AS400 in the form of DBNAME/SCHEMA' );
	}
?>
<tr>
	<td bgcolor="
		Setting Admin Username
	</td>
	<?php
		if( '' !== $var_29 ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, false, 'admin user name is blank, using database user instead' );
		$var_29 = $var_18;
	}
	?>
</tr>
<tr>
	<td bgcolor="
		Setting Admin Password
	</td>
	<?php
		if( '' !== $var_30 ) {
		fn_0( var_9 );
	} else {
		if( '' != $var_19 ) {
			fn_0( var_8, false, 'admin user password is blank, using database user password instead' );
			$var_30 = $var_19;
		} else {
			fn_0( var_9 );
		}
	}
	?>
</tr>

<!-- connect to db -->
<tr>
	<td bgcolor="
		Attempting to connect to database as admin
	</td>
	<?php
		$var_34 = false;
	$var_21 = ADONewConnection( $var_16 );
	$var_22 = @$var_21->Connect( $var_15, $var_29, $var_30 );

	if( $var_22 ) {

		
		$var_22 = @$var_21->Connect( $var_15, $var_29, $var_30, $var_17 );
		if( $var_22 ) {
			$var_34 = true;
			$var_27 = true;
		}
		if( $var_16 == 'db2' ) {
			$var_35 = &$var_21->execute( 'set schema ' . $var_32 );
			if( $var_35 === false ) {
				fn_0( var_8, true, 'set schema failed: ' . $var_21->errorMsg() );
			}
		} else {
			fn_0( var_9 );
		}
	} else {
		fn_0( var_8, true, 'Does administrative user have access to the database? ( ' . db_error_msg() . ' )' );
	}
	?>
</tr>
<?php
	if( $var_27 ) {
		?>
<tr>
	<td bgcolor="
		Attempting to connect to database as user
	</td>
	<?php
		$var_21 = ADONewConnection( $var_16 );
		$var_22 = @$var_21->Connect( $var_15, $var_18, $var_19, $var_17 );

		if( $var_22 == true ) {
			$var_34 = true;
			if( $var_16 == 'db2' ) {
				$var_35 = &$var_21->execute( 'set schema ' . $var_32 );
				if( $var_35 === false ) {
					fn_0( var_8, true, 'set schema failed: ' . $var_21->errorMsg() );
				}
			} else {
				fn_0( var_9 );
			}
		} else {
			fn_0( var_8, false, 'Database user doesn\'t have access to the database ( ' . db_error_msg() . ' )' );
		}
		?>
</tr>

<?php
	}
	if( $var_34 ) {
		?>
<!-- display database version -->
<tr>
	<td bgcolor="
		Checking Database Server Version
		<?php
		
		
		$var_38 = @$var_21->ServerInfo();
		
		?>
	</td>
	<?php
		$var_40 = '';
		$var_41 = '';
		switch( $var_16 ) {
			case 'mysql':
			case 'mysqli':
				if( version_compare( $var_38['version'], '4.1.0', '<' ) ) {
					$var_41 = 'MySQL 4.1.0 or later is required for installation.';
				}
				break;
			case 'mssql':
			case 'mssqlnative':
				if( version_compare( $var_38['version'], '9.0.0', '<' ) ) {
					$var_41 = 'SQL Server 2005 or later is required for installation.';
				}
				break;
			case 'pgsql':
			case 'db2':
			default:
				break;
		}

		fn_0(( '' == $var_41 ) && ( '' == $var_40 ), ( '' != $var_41 ), $var_41 . ' ' . $var_40 );
		?>
</tr>
<?php
	}
	if( false == $var_3 ) {
		$var_11++;
	} else {
		$var_11--; 
	}
} 


if( 1 == $var_11 ) {
	?>

<table width="100%" border="0" cellpadding="10" cellspacing="1">
<tr>
	<td bgcolor="
		<span class="title"><?php 

			
			if( version_compare( phpversion(), '5.3' ) >= 0 ) {
				unset( $var_42['mssql']);
			}

			foreach( $var_42 as $var_43 => $var_44 ) {
				
			}
		?>
		</select>
	</td>
</tr>
<?php
}

if( !$var_4 ) {?>
<tr>
	<td>
		Hostname (for Database Server)
	</td>
	<td>
		<input name="hostname" type="textbox" value="<?php 

		if( $var_16 == 'db2' ) {
			$var_45 = $var_21->Execute( "select * from SYSIBM.SCHEMATA WHERE SCHEMA_NAME = '" . $var_32 . "' AND SCHEMA_OWNER = '" . $var_18 . "'" );
			if( $var_45 === false ) {
				
			}

			if( $var_45->var_47 ) {
				$var_22 = false;
				
			} else {
				$var_22 = &$var_21->execute( 'set schema ' . $var_32 );
			}
		}

		$var_34 = false;

		if( $var_22 == true ) {
			fn_0( var_9 );
			$var_34 = true;
		} else {
			
			$var_21 = ADONewConnection( $var_16 );
			$var_22 = $var_21->Connect( $var_15, $var_29, $var_30 );

			$var_48 = NewDataDictionary( $var_21 );

			if( $var_16 == 'db2' ) {
				$var_45 = &$var_21->Execute( "CREATE SCHEMA " . $var_32 );

				if( !$var_45 ) {
					$var_22 = false;
					fn_0( var_8, true, 'Does administrative user have access to create the database? ( ' . db_error_msg() . ' )' );
					$var_11--; 
				} else {
					fn_0( var_9 );
					$var_34 = true;
				}
			} else {
				$var_49 = $var_48->CreateDatabase( $var_17, Array( 'mysql' => 'DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci' ) );
				$var_51 = $var_48->ExecuteSQLArray( $var_49, false );
				if( $var_51 == 2 ) {
					fn_0( var_9 );
					$var_34 = true;
				} else {
					$var_41 = db_error_msg();
					if( strstr( $var_41, 'atabase exists' ) ) {
						fn_0( var_8, false, 'Database already exists? ( ' . db_error_msg() . ' )' );
					} else {
						fn_0( var_8, true, 'Does administrative user have access to create the database? ( ' . db_error_msg() . ' )' );
						$var_11--; 
					}
				}
			}
		}
		?>
</tr>
<?php
	$var_21->Close();
?>
<tr>
	<td bgcolor="
		Attempting to connect to database as user
	</td>
	<?php
		$var_21 = ADONewConnection( $var_16 );
		$var_22 = @$var_21->Connect( $var_15, $var_18, $var_19, $var_17 );

		if( $var_16 == 'db2' ) {
			$var_35 = &$var_21->execute( 'set schema ' . $var_32 );
			if( $var_35 === false ) {
				
			}
		}

		if( $var_22 == true ) {
			fn_0( var_9 );
		} else {
			fn_0( var_8, false, 'Database user doesn\'t have access to the database ( ' . db_error_msg() . ' )' );
		}
		$var_21->Close();
		?>
</tr>
<?php
	}

	
	if( false == $var_3 ) {
		$var_25 = false;

		
		$GLOBALS['g_db_type'] = $var_16;

		
		$var_21 = ADONewConnection( $var_16 );
		$var_22 = @$var_21->Connect( $var_15, $var_29, $var_30, $var_17 );
		if( !$var_31 ) {
			$var_25 = true;

			
		}
		$var_54 = config_get( 'database_version', -1, var_55, var_56 );
		$var_57 = count( $var_58 ) - 1;
		$var_59 = $var_54 + 1;
		if( $var_31 ) {
			
		}

		if( $var_16 == 'db2' ) {
			$var_35 = &$var_21->execute( 'set schema ' . $var_32 );
			if( $var_35 === false ) {
				
			}
		}

		while(( $var_59 <= $var_57 ) && !$var_3 ) {
			if( !$var_31 ) {
				
			$var_60 = true;
			$var_61 = $var_58[$var_59][1][0];
			if( $var_58[$var_59][0] == 'InsertData' ) {
				$var_49 = call_user_func_array( $var_58[$var_59][0], $var_58[$var_59][1] );
			}
			else if( $var_58[$var_59][0] == 'UpdateSQL' ) {
				$var_49 = array(
					$var_58[$var_59][1],
				);
				$var_61 = $var_58[$var_59][1];
			} else if( $var_58[$var_59][0] == 'UpdateFunction' ) {
				$var_49 = array(
					$var_58[$var_59][1],
				);
				if( isset( $var_58[$var_59][2] ) ) {
					$var_49[] = $var_58[$var_59][2];
				}
				$var_60 = false;
				$var_61 = $var_58[$var_59][1];
			} else {
				
				if( isset( $var_58[$var_59][2] ) ) {
					if( call_user_func_array( $var_58[$var_59][2][0], $var_58[$var_59][2][1] ) ) {
						$var_49 = call_user_func_array( Array( $var_48, $var_58[$var_59][0] ), $var_58[$var_59][1] );
					} else {
						$var_49 = array();
					}
				} else {
					$var_49 = call_user_func_array( Array( $var_48, $var_58[$var_59][0] ), $var_58[$var_59][1] );
				}
			}
			if( $var_31 ) {
				if( $var_60 ) {
					foreach( $var_49 as $var_62 ) {
						\var_63\var_64\var_63\var_64";
					}
				}
			} else {
				
				if( $var_60 ) {
					$var_51 = $var_48->var_52( $var_49, false );
				} else {
					if( isset( $var_49[1] ) ) {
						$var_51 = call_user_func( 'install_' . $var_49[0], $var_49[1] );
					} else {
						$var_51 = call_user_func( 'install_' . $var_49[0] );
					}
				}
				if( $var_51 == 2 ) {
					print_test_result( GOOD );
					config_set( 'database_version', $var_59 );
				} else {
					$var_65 = '';
					foreach ( $var_49 as $var_66 )
						$var_65 .= $var_66 . '<br />';
					print_test_result( BAD, true, $var_65  . $var_21->var_67() );
				}
				
			}
			$var_59++;
		}
		if( $var_31 ) {
			
			' . "\var_63\var_64";
			
		}
	}
	if( false == $var_3 ) {
		$var_11++;
	} else {
		$var_11--;
	}

	?>
</table>
<?php
}  


if( 4 == $var_11 ) {

	
	
	?>
		<input name="var_68" var_69="var_70" var_71="<?php 
}  


if( 5 == $var_11 ) {
	$var_12 = $var_13 . 'config_inc.php';
	$var_14 = file_exists( $var_12 );
	?>
<table width="100%" border="0" cellpadding="10" cellspacing="1">
<tr>
	<td bgcolor="
		<span class="title">Write Configuration File(s)</span>
	</td>
</tr>

<tr>
	<td bgcolor="
		<?php
			if( !$var_14 ) {
		
		
	} else {
		
	}
	?>
	</td>
	<?php
		$var_72 = '<?php' . "\r\n";
	$var_72 .= "\t\$g_hostname = '$var_15';\r\n";
	$var_72 .= "\t\$g_db_type = '$var_16';\r\n";
	$var_72 .= "\t\$g_database_name = '$var_17';\r\n";
	$var_72 .= "\t\$g_db_username = '$var_18';\r\n";
	$var_72 .= "\t\$g_db_password = '$var_19';\r\n";

	if( $var_16 == 'db2' ) {
		$var_72 .= "\t\$g_db_schema = '$var_32';\r\n";
	}

	$var_72 .= '?>' . "\r\n";
	$var_73 = true;

	if( !$var_14 ) {
		if( $var_74 = @fopen( $var_12, 'w' ) ) {
			fwrite( $var_74, $var_72 );
			fclose( $var_74 );
		}

		if( file_exists( $var_12 ) ) {
			fn_0( var_9 );
			$var_73 = false;
		} else {
			fn_0( var_8, false, 'cannot write ' . $var_12 );
		}
	} else {
		
		if ( ( $var_15 != config_get( 'hostname', '' ) ) ||
			( $var_16 != config_get( 'db_type', '' ) ) ||
			( $var_17 != config_get( 'database_name', '') ) ||
			( $var_32 != config_get( 'db_schema', '') ) ||
			( $var_18 != config_get( 'db_username', '' ) ) ||
			( $var_19 != config_get( 'db_password', '' ) ) ) {
			fn_0( var_8, false, 'file ' . $var_13 . 'config_inc.php' . ' already exists and has different settings' );
		} else {
			fn_0( var_9, false );
			$var_73 = false;
		}
	}
	?>
</tr>
<?php
	if( true == $var_73 ) {
		
		
		
	}
	?>

</table>

<?php
	if( false == $var_3 ) {
		$var_11++;
	}
}



if( 6 == $var_11 ) {

	
	?>
<table width="100%" bgcolor="
<tr>
	<td bgcolor="
		<span class="title">Checking Installation...</span>
	</td>
</tr>

<!-- Checking register_globals are off -->
<?php fn_1( 'Checking for register_globals are off for mantis', !ini_get_bool( 'register_globals' ), false, 'change php.ini to disable register_globals setting' )?>

<tr>
	<td bgcolor="
		Attempting to connect to database as user
	</td>
	<?php
		$var_21 = ADONewConnection( $var_16 );
	$var_22 = @$var_21->Connect( $var_15, $var_18, $var_19, $var_17 );

	if( $var_22 == true ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, false, 'Database user doesn\'t have access to the database ( ' . db_error_msg() . ' )' );
	}

	if( $var_16 == 'db2' ) {
		$var_35 = &$var_21->execute( 'set schema ' . $var_32 );
		if( $var_35 === false ) {
			
		}
	}
	?>
</tr>
<tr>
	<td bgcolor="
		checking ability to SELECT records
	</td>
	<?php
		$var_75 = db_get_table( 'mantis_config_table' );
	$var_76 = "SELECT COUNT(*) FROM $var_75";
	$var_22 = @$var_21->Execute( $var_76 );

	if( $var_22 != false ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, true, 'Database user doesn\'t have SELECT access to the database ( ' . db_error_msg() . ' )' );
	}
	?>
</tr>
<tr>
	<td bgcolor="
		checking ability to INSERT records
	</td>
	<?php
		$var_76 = "INSERT INTO $var_75 ( value, type, access_reqd, config_id, project_id, user_id ) VALUES ('test', 1, 90, 'database_test', 20, 0 )";
	$var_22 = @$var_21->Execute( $var_76 );

	if( $var_22 != false ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, true, 'Database user doesn\'t have INSERT access to the database ( ' . db_error_msg() . ' )' );
	}
	?>
</tr>
<tr>
	<td bgcolor="
		checking ability to UPDATE records
	</td>
	<?php
		$var_76 = "UPDATE $var_75 SET value='test_update' WHERE config_id='database_test'";
	$var_22 = @$var_21->Execute( $var_76 );

	if( $var_22 != false ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, true, 'Database user doesn\'t have UPDATE access to the database ( ' . db_error_msg() . ' )' );
	}
	?>
</tr>
<tr>
	<td bgcolor="
		checking ability to DELETE records
	</td>
	<?php
		$var_76 = "DELETE FROM $var_75 WHERE config_id='database_test'";
	$var_22 = @$var_21->Execute( $var_76 );

	if( $var_22 != false ) {
		fn_0( var_9 );
	} else {
		fn_0( var_8, true, 'Database user doesn\'t have DELETE access to the database ( ' . db_error_msg() . ' )' );
	}
	?>
</tr>
</table>
<?php
	if( false == $var_3 ) {
		$var_11++;
	}
}



if( 7 == $var_11 ) {
	
	?>
<p>Install was successful.</p>
<?php if( $var_27 ) {?>
<p><a href="../login_page.php">Continue</a> to log into Mantis</p>
<?php
	} else {?>
<p>Please log in as the administrator and <a href="../login_page.php">create</a> your first project.

<?php
	}
}



if( $var_3 ) {
	?>
<table width="100%" bgcolor="
<tr>
	<td bgcolor="
		<span class="title">Checks Failed...</span>
	</td>
</tr>
<tr>
	<td bgcolor="
	<td bgcolor="
		<input name="install" type="hidden" value="<?php echo $var_11?>"></input>
		<input name="hostname" type="hidden" value="<?php echo $var_15?>"></input>
		<input name="db_type" type="hidden" value="<?php echo $var_16?>"></input>
		<input name="database_name" type="hidden" value="<?php echo $var_17?>"></input>
		<input name="db_username" type="hidden" value="<?php echo $var_18?>"></input>
		<input name="db_password" type="hidden" value="<?php echo $var_19?>"></input>
		<input name="admin_username" type="hidden" value="<?php echo $var_29?>"></input>
		<input name="admin_password" type="hidden" value="<?php echo $var_30?>"></input>
		<input name="log_queries" type="hidden" value="<?php echo( $var_31 ? 1 : 0 )?>"></input>
		<input name="db_exists" type="hidden" value="<?php echo( $var_27 ? 1 : 0 )?>"></input>
		<input name="retry" type="submit" class="button" value="Retry"></input>
	</td>
</tr>
</table>
<?php
}
?>
</form>
</body>
</html>
