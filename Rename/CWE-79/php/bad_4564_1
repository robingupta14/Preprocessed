<?php



class class_0 extends var_0
{
    public $var_1 = true;
    protected $var_2 = 'id_feature';
    protected $var_3;

    public function fn_0()
    {
        $var_4->var_5 = 'feature';
        $var_4->var_6 = 'Feature';
        $var_4->var_7 = 'feature';
        $var_4->var_8 = 'id_feature';
        $var_4->var_9 = true;

        parent::fn_0();

        $var_4->var_10 = array(
            'id_feature' => array(
                'title' => $var_4->trans('ID', array(), 'Admin.Global'),
                'align' => 'center',
                'class' => 'fixed-width-xs',
            ),
            'name' => array(
                'title' => $var_4->trans('Name', array(), 'Admin.Global'),
                'width' => 'auto',
                'filter_key' => 'b!name',
            ),
            'value' => array(
                'title' => $var_4->trans('Values', array(), 'Admin.Global'),
                'orderby' => false,
                'search' => false,
                'align' => 'center',
                'class' => 'fixed-width-xs',
            ),
            'position' => array(
                'title' => $var_4->trans('Position', array(), 'Admin.Global'),
                'filter_key' => 'a!position',
                'align' => 'center',
                'class' => 'fixed-width-xs',
                'position' => 'position',
            ),
        );

        $var_4->var_12 = array(
            'delete' => array(
                'text' => $var_4->trans('Delete selected', array(), 'Admin.Actions'),
                'icon' => 'icon-trash',
                'confirm' => $var_4->trans('Delete selected items?', array(), 'Admin.Notifications.Warning'),
            ),
        );
    }

    
    public function fn_1()
    {
        $var_4->addRowAction('view');
        $var_4->addRowAction('edit');
        $var_4->addRowAction('delete');

        return parent::fn_1();
    }

    
    protected function fn_2()
    {
        $var_4->var_5 = 'feature_value';
        $var_4->var_6 = 'FeatureValue';
        $var_4->var_8 = 'id_feature_value';
    }

    
    protected function fn_3()
    {
        $var_4->var_5 = 'feature';
        $var_4->var_6 = 'Feature';
        $var_4->var_8 = 'id_feature';
    }

    public function fn_4()
    {
        if (($var_18 = Tools::getValue('id_feature'))) {
            $var_4->fn_2();
            $var_4->var_7 = 'feature_value';
            $var_4->var_9 = true;

            
            $var_4->addRowAction('edit');
            $var_4->addRowAction('delete');

            if (!Validate::isLoadedObject($var_19 = new class_1((int) $var_18))) {
                $var_4->var_80[] = $var_4->trans('An error occurred while updating the status for an object.', array(), 'Admin.Notifications.Error') . ' <b>' . $var_4->var_5 . '</b> ' . $var_4->trans('(cannot load object)', array(), 'Admin.Notifications.Error');

                return;
            }

            $var_4->var_3 = $var_19->var_20;
            $var_4->var_21 = $var_4->var_3[$var_4->var_22->var_23->var_89];
            $var_4->var_10 = array(
                'id_feature_value' => array(
                    'title' => $var_4->trans('ID', array(), 'Admin.Global'),
                    'align' => 'center',
                    'class' => 'fixed-width-xs',
                ),
                'value' => array(
                    'title' => $var_4->trans('Value', array(), 'Admin.Global'),
                ),
            );

            $var_4->var_24 = sprintf('AND `id_feature` = %d', (int) $var_18);
            self::$var_25 = self::$var_25 . '&id_feature=' . (int) $var_18 . '&viewfeature';
            $var_4->processFilter();

            return parent::fn_1();
        }
    }

    
    public function fn_5()
    {
        $var_4->var_21 = $var_4->trans('Add a new feature', array(), 'Admin.Catalog.Feature');
        $var_4->var_28 = array(
            'legend' => array(
                'title' => $var_4->trans('Feature', array(), 'Admin.Catalog.Feature'),
                'icon' => 'icon-info-sign',
            ),
            'input' => array(
                array(
                    'type' => 'text',
                    'label' => $var_4->trans('Name', array(), 'Admin.Global'),
                    'name' => 'name',
                    'lang' => true,
                    'size' => 33,
                    'hint' => $var_4->trans('Invalid characters:', array(), 'Admin.Notifications.Info') . ' <>;=
                    'var_29' => true,
                ),
            ),
        );

        if (Shop::isFeatureActive()) {
            $var_4->var_28['input'][] = array(
                'type' => 'shop',
                'label' => $var_4->trans('Shop association', array(), 'Admin.Global'),
                'name' => 'checkBoxShopAsso',
            );
        }

        $var_4->var_28['submit'] = array(
            'title' => $var_4->trans('Save', array(), 'Admin.Actions'),
        );

        return parent::fn_5();
    }

    public function fn_6()
    {
        if (class_1::isFeatureActive()) {
            if (empty($var_4->var_30)) {
                $var_4->page_header_toolbar_btn['new_feature'] = array(
                    'href' => self::$var_25 . '&addfeature&token=' . $var_4->var_31,
                    'desc' => $var_4->trans('Add new feature', array(), 'Admin.Catalog.Feature'),
                    'icon' => 'process-icon-new',
                );

                $var_4->page_header_toolbar_btn['new_feature_value'] = array(
                    'href' => self::$var_25 . '&addfeature_value&id_feature=' . (int) Tools::getValue('id_feature') . '&token=' . $var_4->var_31,
                    'desc' => $var_4->trans('Add new feature value', array(), 'Admin.Catalog.Help'),
                    'icon' => 'process-icon-new',
                );
            }
        }

        if ($var_4->var_30 == 'view') {
            $var_4->page_header_toolbar_btn['new_feature_value'] = array(
                'href' => self::$var_25 . '&addfeature_value&id_feature=' . (int) Tools::getValue('id_feature') . '&token=' . $var_4->var_31,
                'desc' => $var_4->trans('Add new feature value', array(), 'Admin.Catalog.Help'),
                'icon' => 'process-icon-new',
            );
        }

        parent::fn_6();
    }

    
    public function fn_7()
    {
        switch ($var_4->var_30) {
            case 'editFeatureValue':
            case 'add':
            case 'edit':
                $var_4->var_55['save'] = array(
                    'href' => '
                    'var_32' => $var_4->trans('Save', array(), 'Admin.Actions'),
                );

                if ($var_4->var_30 == 'editFeatureValue') {
                    $var_4->var_55['save-and-stay'] = array(
                        'short' => 'SaveAndStay',
                        'href' => '
                        'var_32' => $var_4->trans('Save and add another value', array(), 'Admin.Catalog.Help'),
                        'force_desc' => true,
                    );
                }

                
                $var_33 = Tools::safeOutput(Tools::getValue('back', ''));
                if (empty($var_33)) {
                    $var_33 = self::$var_25 . '&token=' . $var_4->var_31;
                }

                $var_4->var_55['back'] = array(
                    'href' => $var_33,
                    'desc' => $var_4->trans('Back to the list', array(), 'Admin.Catalog.Help'),
                );

                break;
            case 'view':
                $var_4->var_55['newAttributes'] = array(
                    'href' => self::$var_25 . '&addfeature_value&id_feature=' . (int) Tools::getValue('id_feature') . '&token=' . $var_4->var_31,
                    'desc' => $var_4->trans('Add new feature values', array(), 'Admin.Catalog.Help'),
                );
                $var_4->var_55['back'] = array(
                    'href' => self::$var_25 . '&token=' . $var_4->var_31,
                    'desc' => $var_4->trans('Back to the list', array(), 'Admin.Catalog.Help'),
                );

                break;
            default:
                parent::fn_7();
        }
    }

    public function fn_8()
    {
        $var_34 = $var_4->var_35;

        switch ($var_4->var_30) {
            case 'edit':
                $var_34[] = $var_4->trans('Edit New Feature', array(), 'Admin.Catalog.Feature');
                $var_4->addMetaTitle($var_34[count($var_34) - 1]);

                break;

            case 'add':
                $var_34[] = $var_4->trans('Add New Feature', array(), 'Admin.Catalog.Feature');
                $var_4->addMetaTitle($var_34[count($var_34) - 1]);

                break;

            case 'view':
                $var_34[] = $var_4->var_3[$var_4->var_22->var_23->var_89];
                $var_4->addMetaTitle($var_34[count($var_34) - 1]);

                break;

            case 'editFeatureValue':
                if (Tools::getValue('id_feature_value')) {
                    if (($var_18 = Tools::getValue('id_feature'))) {
                        if (Validate::isLoadedObject($var_19 = new class_1((int) $var_18))) {
                            $var_34[] = '<a href="' . Context::getContext()->var_37->getAdminLink('AdminFeatures') . '&id_feature=' . $var_18 . '&viewfeature">' . $var_19->var_20[$var_4->var_22->var_23->var_89] . '</a>';
                        }

                        if (Validate::isLoadedObject($var_19 = new class_2((int) Tools::getValue('id_feature_value')))) {
                            $var_34[] = $var_4->trans('Edit: %value%', array('%value%' => $var_19->var_88[$var_4->var_22->var_23->var_89]), 'Admin.Catalog.Feature');
                        }
                    } else {
                        $var_34[] = $var_4->trans('Edit Value', array(), 'Admin.Catalog.Feature');
                    }
                } else {
                    $var_34[] = $var_4->trans('Add New Value', array(), 'Admin.Catalog.Feature');
                }

                if (count($var_34) > 0) {
                    $var_4->addMetaTitle($var_34[count($var_34) - 1]);
                }

                break;
        }

        $var_4->var_21 = $var_34;
    }

    
    public function fn_9()
    {
        $var_4->fn_2();

        $var_4->var_28[0]['form'] = array(
            'legend' => array(
                'title' => $var_4->trans('Feature value', array(), 'Admin.Catalog.Feature'),
                'icon' => 'icon-info-sign',
            ),
            'input' => array(
                array(
                    'type' => 'select',
                    'label' => $var_4->trans('Feature', array(), 'Admin.Catalog.Feature'),
                    'name' => 'id_feature',
                    'options' => array(
                        'query' => class_1::getFeatures($var_4->var_22->var_40->var_18),
                        'id' => 'id_feature',
                        'name' => 'name',
                    ),
                    'required' => true,
                ),
                array(
                    'type' => 'text',
                    'label' => $var_4->trans('Value', array(), 'Admin.Global'),
                    'name' => 'value',
                    'lang' => true,
                    'size' => 33,
                    'hint' => $var_4->trans('Invalid characters:', array(), 'Admin.Notifications.Info') . ' <>;=
                    'var_29' => true,
                ),
            ),
            'submit' => array(
                'title' => $var_4->trans('Save', array(), 'Admin.Actions'),
            ),
            'buttons' => array(
                'save-and-stay' => array(
                    'title' => $var_4->trans('Save then add another value', array(), 'Admin.Catalog.Feature'),
                    'name' => 'submitAdd' . $var_4->var_5 . 'AndStay',
                    'type' => 'submit',
                    'class' => 'btn btn-default pull-right',
                    'icon' => 'process-icon-save',
                ),
            ),
        );

        $var_4->var_53['id_feature'] = (int) Tools::getValue('id_feature');

        
        $var_41 = new class_2(Tools::getValue('id_feature_value'));

        $var_4->var_42 = array(
            'feature_value' => $var_41,
        );

        $var_4->getlanguages();
        $var_44 = new class_3();
        $var_44->var_45 = true;

        $var_33 = Tools::safeOutput(Tools::getValue('back', ''));
        if (empty($var_33)) {
            $var_33 = self::$var_25 . '&token=' . $var_4->var_31;
        }
        if (!Validate::isCleanHtml($var_33)) {
            die(Tools::displayError());
        }

        $var_44->var_46 = $var_33;
        $var_44->var_25 = self::$var_25;
        $var_44->var_31 = $var_4->var_31;
        $var_44->var_5 = $var_4->var_5;
        $var_44->var_8 = $var_4->var_8;
        $var_44->var_47 = 'feature_value/';
        $var_44->var_18 = $var_41->var_18;
        $var_44->var_48 = false;
        $var_44->var_42 = $var_4->var_42;
        $var_44->var_49 = $var_4->var_50;
        $var_44->var_51 = $var_4->var_51;
        $var_44->var_52 = $var_4->var_52;
        $var_44->var_53 = $var_4->getFieldsValue($var_41);
        $var_44->var_55 = $var_4->var_55;
        $var_44->var_56 = $var_4->trans('Add a new feature value', array(), 'Admin.Catalog.Feature');
        $var_4->var_57 .= $var_44->generateForm($var_4->var_28);
    }

    
    public function fn_10()
    {
        if (class_1::isFeatureActive()) {
            if ($var_4->var_30 == 'edit' || $var_4->var_30 == 'add') {
                if (!$var_4->loadObject(true)) {
                    return;
                }
                $var_4->var_57 .= $var_4->fn_5();
            } elseif ($var_4->var_30 == 'view') {
                
                if ($var_4->var_6) {
                    $var_4->loadObject(true);
                }
                $var_4->var_57 .= $var_4->fn_4();
            } elseif ($var_4->var_30 == 'editFeatureValue') {
                if (!$var_4->var_60 = new class_2((int) Tools::getValue('id_feature_value'))) {
                    return;
                }
                $var_4->var_57 .= $var_4->fn_9();
            } elseif ($var_4->var_30 != 'view' && !$var_4->var_61) {
                
                $var_4->fn_3();
                $var_4->var_57 .= $var_4->fn_1();
                
                if (!Tools::getValue('submitFilterfeature_value', 0) && !Tools::getIsset('id_feature_value')) {
                    $var_4->processResetFilters('feature_value');
                }
            }
        } else {
            $var_63 = $var_4->var_22->var_37->getAdminLink('AdminPerformance');
            $var_64 = '<a href="' . $var_63 . '
            $this->displayWarning($this->trans('var_65 var_66 var_67 var_68 var_69. var_70 var_71 var_72 var_73 var_74: %var_64%.', array('%url%' => $var_64), 'Admin.Catalog.Notification'));
        }

        $var_4->var_22->var_75->assign(array(
            'content' => $var_4->var_57,
        ));
    }

    public function fn_11()
    {
        
        if (Tools::getValue('id_feature_value')
            || Tools::isSubmit('deletefeature_value')
            || Tools::isSubmit('submitAddfeature_value')
            || Tools::isSubmit('addfeature_value')
            || Tools::isSubmit('updatefeature_value')
            || Tools::isSubmit('submitBulkdeletefeature_value')) {
            $var_4->fn_2();
        }

        if (Tools::getIsset('viewfeature')) {
            $var_4->var_7 = 'feature_value';

            if (isset($var_86['submitReset' . $var_4->var_7])) {
                $var_4->processResetFilters();
            }
        } else {
            $var_4->var_7 = 'feature';
            $var_4->var_77 = 'position';
            $var_4->var_78 = 'ASC';
        }

        parent::fn_11();
    }

    public function fn_12()
    {
        if (!class_1::isFeatureActive()) {
            return;
        }

        
        if (Tools::getIsset('id_feature') && Tools::getIsset('viewfeature')) {
            self::$var_25 = self::$var_25 . '&id_feature=' . Tools::getValue('id_feature', 0) . '&viewfeature';
        }

        if ($var_4->var_5 == 'feature_value' && ($var_4->var_79 == 'save' || $var_4->var_79 == 'delete' || $var_4->var_79 == 'bulkDelete')) {
            Hook::exec(
                'displayFeatureValuePostProcess',
                array('errors' => &$var_4->var_80)
            );
        } 
        else {
            Hook::exec(
                'displayFeaturePostProcess',
                array('errors' => &$var_4->var_80)
            );
        } 

        parent::fn_12();

        if ($var_4->var_5 == 'feature_value' && ($var_4->var_30 == 'edit' || $var_4->var_30 == 'add')) {
            $var_4->var_30 = 'editFeatureValue';
        }
    }

    
    public function fn_13()
    {
        $var_60 = parent::fn_13();

        if (Tools::isSubmit('submitAdd' . $var_4->var_5 . 'AndStay') && !count($var_4->var_80)) {
            if ($var_4->var_5 == 'feature_value' && ($var_4->var_30 == 'edit' || $var_4->var_30 == 'add')) {
                $var_4->var_81 = self::$var_25 . '&addfeature_value&id_feature=' . (int) Tools::getValue('id_feature') . '&token=' . $var_4->var_31;
            } else {
                $var_4->var_81 = self::$var_25 . '&' . $var_4->var_8 . '=&conf=3&update' . $var_4->var_5 . '&token=' . $var_4->var_31;
            }
        } elseif (Tools::isSubmit('submitAdd' . $var_4->var_5 . 'AndStay') && count($var_4->var_80)) {
            $var_4->var_30 = 'editFeatureValue';
        }

        return $var_60;
    }

    
    public function fn_14()
    {
        $var_60 = parent::fn_14();

        if (Tools::isSubmit('submitAdd' . $var_4->var_5 . 'AndStay') && !count($var_4->var_80)) {
            $var_4->var_81 = self::$var_25 . '&' . $var_4->var_8 . '=&conf=3&update' . $var_4->var_5 . '&token=' . $var_4->var_31;
        }

        return $var_60;
    }

    
    public function fn_15()
    {
        if ($var_4->var_5 == 'feature') {
            $var_82 = (int) Tools::getValue('id_feature');
            
            if ($var_82 <= 0) {
                $var_83 = 'SELECT `position`+1
						FROM `' . var_84 . 'feature`
						ORDER BY position DESC';
                
                $var_86['position'] = Db::getInstance()->getValue($var_83);
            }
            
            foreach ($var_86 as $var_87 => $var_88) {
                if (preg_match('/^name_/Ui', $var_87)) {
                    $var_86[$var_87] = str_replace('\n', '', str_replace('\r', '', $var_88));
                }
            }
        }

        return parent::fn_15();
    }

    
    public function fn_16($var_89, $var_90 = null, $var_91 = null, $var_92 = 0, $var_93 = null, $var_94 = false)
    {
        if ($var_4->var_5 == 'feature_value') {
            $var_4->var_24 .= ' AND (a.custom = 0 OR a.custom IS NULL)';
        }

        parent::fn_16($var_89, $var_90, $var_91, $var_92, $var_93, $var_94);

        if ($var_4->var_5 == 'feature') {
            $var_95 = count($var_4->var_96);
            for ($var_97 = 0; $var_97 < $var_95; ++$var_97) {
                $var_98 = &$var_4->var_96[$var_97];

                $var_99 = new class_4();
                $var_99->select('COUNT(fv.id_feature_value) as count_values');
                $var_99->from('feature_value', 'fv');
                $var_99->where('fv.id_feature =' . (int) $var_98['id_feature']);
                $var_99->where('(fv.custom=0 OR fv.custom IS NULL)');
                $var_103 = Db::getInstance(var_104)->getValue($var_99);
                $var_98['value'] = (int) $var_103;
                unset($var_99);
            }
        }
    }

    public function fn_17()
    {
        if ($var_4->access('edit')) {
            $var_106 = (int) Tools::getValue('way');
            $var_82 = (int) Tools::getValue('id');
            $var_107 = Tools::getValue('feature');

            $var_108 = array();
            foreach ($var_107 as $var_109) {
                if (!empty($var_109)) {
                    $var_108[] = $var_109;
                }
            }

            foreach ($var_108 as $var_110 => $var_88) {
                $var_111 = explode('_', $var_88);

                if (isset($var_111[2]) && (int) $var_111[2] === $var_82) {
                    if ($var_66 = new class_1((int) $var_111[2])) {
                        if (isset($var_110) && $var_66->updatePosition($var_106, $var_110, $var_82)) {
                            
                        } else {
                            
                        }
                    } else {
                        
                    }

                    break;
                }
            }
        }
    }
}
