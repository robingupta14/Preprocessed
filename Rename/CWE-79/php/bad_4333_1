<?php





class class_0
{

    
    const var_0 = 1;
    const var_1 = 2;

    
    protected $var_2 = true;

    
    protected $var_3;

    
    protected $var_4;

    
    protected $var_5;

    
    protected $var_6 = 1;

    
    protected $var_7 = 1;

    
    protected $var_8 = null;

    
    protected $var_9 = [];

    
    public function fn_0(var_10 $var_5)
    {
        $var_11->var_5 = $var_5;
        $var_11->var_3 = $var_5->buildParserConfiguration();
    }

    
    public function fn_1()
    {
        return [$var_11->var_6, $var_11->var_7, $var_11->var_8];
    }

    
    public function fn_2()
    {
        return $var_11->var_2;
    }

    
    public function fn_3($var_2)
    {
        $var_11->var_2 = (boolean) $var_2;
    }

    
    public function fn_4($var_15, $var_16 = null)
    {
        if (!is_string($var_15)) {
            throw new class_1('Parse requires a template string as argument, ' . gettype($var_15) . ' given.', 1224237899);
        }
        try {
            $var_11->fn_5();

            $var_15 = $var_11->fn_6($var_15);

            $var_20 = $var_11->fn_7($var_15);
            $var_22 = $var_11->fn_8($var_20, self::var_1);
        } catch (var_17 $var_24) {}
        $var_11->var_9[$var_16] = $var_22;
        return $var_22;
    }

    
    public function fn_9(\var_17 $var_24, $var_16)
    {
        list ($var_25, $var_26, $var_27) = $var_11->fn_1();
        $var_28 = get_class($var_24);
        return new $var_28(
            sprintf(
                'Fluid parse error in template %s, line %d at character %d. Error: %s (error code %d). Template source chunk: %s',
                $var_16,
                $var_25,
                $var_26,
                $var_24->getMessage(),
                $var_24->getCode(),
                $var_27
            ),
            $var_24->getCode(),
            $var_24
        );
    }

    
    public function fn_10($var_16, $var_31)
    {
        $var_32 = $var_11->var_5->getTemplateCompiler();
        if (isset($var_11->var_9[$var_16])) {
            $var_34 = $var_11->var_9[$var_16];
        } elseif ($var_32->has($var_16)) {
            $var_34 = $var_32->get($var_16);
            if ($var_34 instanceof var_37) {
                $var_34 = $var_11->fn_11($var_16, $var_31);
            }
        } else {
            $var_34 = $var_11->fn_11($var_16, $var_31);
            try {
                $var_32->store($var_16, $var_34);
            } catch (var_40 $var_41) {}
        }
        return $var_34;
    }

    
    protected function fn_11($var_16, $var_31)
    {
        $var_34 = $var_11->fn_4(
            $var_31($var_11, $var_11->var_5->getTemplatePaths()),
            $var_16
        );
        $var_34->setIdentifier($var_16);
        $var_11->var_9[$var_16] = $var_34;
        return $var_34;
    }

    
    protected function fn_6($var_44)
    {
        foreach ($var_11->var_5->getTemplateProcessors() as $var_46) {
            $var_44 = $var_46->preProcessSource($var_44);
        }
        return $var_44;
    }

    
    protected function fn_5()
    {
        $var_11->var_2 = true;
        $var_11->var_6 = 1;
        $var_11->var_7 = 1;
    }

    
    protected function fn_7($var_15)
    {
        return preg_split(var_48::$var_49, $var_15, -1, var_50 | var_51);
    }

    
    protected function fn_8(array $var_20, $var_52)
    {
        $var_53 = $var_11->fn_12();
        $var_55 = '';

        foreach ($var_20 as $var_56) {
            if ($var_52 === self::var_1) {
                
                
                
                $var_11->var_8 = $var_56;
            }
            $var_11->var_6 += substr_count($var_56, var_57);
            $var_11->var_7 = strlen(substr($var_55, strrpos($var_55, var_57))) + 1;
            $var_55 = $var_56;
            $var_58 = [];

            if (preg_match(var_48::$var_59, $var_56, $var_58) > 0) {
                try {
                    if ($var_11->fn_13(
                        $var_53,
                        $var_58['NamespaceIdentifier'],
                        $var_58['MethodIdentifier'],
                        $var_58['Attributes'],
                        ($var_58['Selfclosing'] === '' ? false : true),
                        $var_56
                    )) {
                        continue;
                    }
                } catch (\var_61\var_62\var_63\var_64\var_17 $var_24) {
                    $var_11->fn_14(
                        $var_53,
                        $var_11->var_5->getErrorHandler()->handleViewHelperError($var_24)
                    );
                } catch (var_17 $var_24) {}
            } elseif (preg_match(var_48::$var_68, $var_56, $var_58) > 0) {
                if ($var_11->fn_15(
                    $var_53,
                    $var_58['NamespaceIdentifier'],
                    $var_58['MethodIdentifier']
                )) {
                    continue;
                }
            }
            $var_11->fn_16($var_53, $var_56, $var_52);
        }

        if ($var_53->countNodeStack() !== 1) {
            throw new class_1(
                'Not all tags were closed!',
                1238169398
            );
        }
        return $var_53;
    }
    
    protected function fn_13(var_72 $var_53, $var_73, $var_74, $var_75, $var_76, $var_56)
    {
        $var_77 = $var_11->var_5->getViewHelperResolver();
        if ($var_77->isNamespaceIgnored($var_73)) {
            return null;
        }
        if (!$var_77->isNamespaceValid($var_73)) {
            throw new class_3('Unknown Namespace: ' . $var_73);
        }

        $var_81 = $var_77->createViewHelperInstance($var_73, $var_74);
        $var_83 = $var_81->prepareArguments();
        $var_85 = $var_11->fn_17(
            $var_53,
            $var_73,
            $var_74,
            $var_11->fn_18($var_75, $var_81)
        );

        if ($var_85) {
            $var_85->setPointerTemplateCode($var_56);
            if ($var_76 === true) {
                $var_53->popNodeFromStack();
                $var_11->fn_19($var_85, var_91::var_92, $var_53);
                
                $var_53->getNodeFromStack()->addChildNode($var_85);
            }
        }

        return $var_85;
    }

    
    protected function fn_17(var_72 $var_53, $var_73, $var_74, $var_95)
    {
        $var_77 = $var_11->var_5->getViewHelperResolver();
        if ($var_77->isNamespaceIgnored($var_73)) {
            return null;
        }
        if (!$var_77->isNamespaceValid($var_73)) {
            throw new class_3('Unknown Namespace: ' . $var_73);
        }
        try {
            $var_96 = new class_4(
                $var_11->var_5,
                $var_73,
                $var_74,
                $var_95,
                $var_53
            );

            $var_11->fn_19($var_96, var_91::var_98, $var_53);
            $var_81 = $var_96->getUninitializedViewHelper();
            $var_81::postParseEvent($var_96, $var_95, $var_53->getVariableContainer());
            $var_53->pushNodeToStack($var_96);
            return $var_96;
        } catch (\var_61\var_62\var_63\var_64\var_17 $var_24) {
            $var_11->fn_14(
                $var_53,
                $var_11->var_5->getErrorHandler()->handleViewHelperError($var_24)
            );
        } catch (var_17 $var_24) {}
        return null;
    }

    
    protected function fn_15(var_72 $var_53, $var_73, $var_74)
    {
        $var_77 = $var_11->var_5->getViewHelperResolver();
        if ($var_77->isNamespaceIgnored($var_73)) {
            return false;
        }
        if (!$var_77->isNamespaceValid($var_73)) {
            throw new class_3('Unknown Namespace: ' . $var_73);
        }
        $var_102 = $var_53->popNodeFromStack();
        if (!($var_102 instanceof var_97)) {
            throw new class_1('You closed a templating tag which you never opened!', 1224485838);
        }
        $var_103 = $var_77->resolveViewHelperClassName($var_73, $var_74);
        $var_105 = $var_102->getViewHelperClassName();
        if ($var_103 !== $var_105) {
            throw new class_1(
                'Templating tags not properly nested. Expected: ' . $var_105 . '; Actual: ' .
                $var_103,
                1224485398
            );
        }
        $var_11->fn_19($var_102, var_91::var_92, $var_53);
        $var_53->getNodeFromStack()->addChildNode($var_102);

        return true;
    }

    
    protected function fn_20(var_72 $var_53, $var_108, $var_109, $var_110, $var_111)
    {
        $var_110 .= $var_111;
        $var_112 = 0;

        
        
        if (strlen($var_109) === 0 && strlen($var_110) > 0) {
            $var_110 = $var_108 . $var_110;
            $var_108 = '';
        }

        
        $var_113 = [];
        if (strlen($var_110) > 0 && preg_match_all(var_48::$var_114, $var_110, $var_113, var_115) > 0) {
            
            
            
            $var_77 = $var_11->var_5->getViewHelperResolver();
            foreach (array_reverse($var_113) as $var_116) {
                if (!$var_77->isNamespaceValid($var_116['NamespaceIdentifier'])) {
                    throw new class_3('Unknown Namespace: ' . $var_116['NamespaceIdentifier']);
                }
                $var_81 = $var_77->createViewHelperInstance($var_116['NamespaceIdentifier'], $var_116['MethodIdentifier']);
                if (strlen($var_116['ViewHelperArguments']) > 0) {
                    $var_75 = $var_11->fn_21($var_116['ViewHelperArguments'], $var_81);
                } else {
                    $var_75 = [];
                }
                $var_85 = $var_11->fn_17(
                    $var_53,
                    $var_116['NamespaceIdentifier'],
                    $var_116['MethodIdentifier'],
                    $var_75
                );
                if ($var_85) {
                    $var_112++;
                }
            }
        }

        
        if (strlen($var_108) > 0) {
            $var_118 = new class_5($var_108);
            $var_11->fn_19($var_118, var_91::var_119, $var_53);
            $var_53->getNodeFromStack()->addChildNode($var_118);
        }

        
        for ($var_120 = 0; $var_120 < $var_112; $var_120++) {
            $var_118 = $var_53->popNodeFromStack();
            $var_11->fn_19($var_118, var_91::var_92, $var_53);
            $var_53->getNodeFromStack()->addChildNode($var_118);
        }
    }

    
    protected function fn_19(var_121 & $var_118, $var_122, var_72 $var_53)
    {
        if ($var_11->var_3 === null) {
            return;
        }
        if ($var_11->var_2) {
            
            foreach ($var_11->var_3->getEscapingInterceptors($var_122) as $var_124) {
                $var_118 = $var_124->process($var_118, $var_122, $var_53);
            }
        }

        
        foreach ($var_11->var_3->getInterceptors($var_122) as $var_124) {
            $var_118 = $var_124->process($var_118, $var_122, $var_53);
        }
    }

    
    protected function fn_18($var_127, var_128 $var_81)
    {
        $var_83 = $var_11->var_5->getViewHelperResolver()->getArgumentDefinitionsForViewHelper($var_81);
        $var_95 = [];
        $var_130 = [];
        $var_113 = [];
        if (preg_match_all(var_48::$var_131, $var_127, $var_113, var_115) > 0) {
            $var_132 = $var_11->var_2;
            $var_11->var_2 = false;
            foreach ($var_113 as $var_116) {
                $var_133 = $var_116['Argument'];
                $var_134 = $var_11->fn_22($var_116['ValueQuoted']);
                $var_95[$var_133] = $var_11->fn_23($var_134);
                if (isset($var_83[$var_133])) {
                    $var_137 = $var_83[$var_133];
                    if ($var_137->getType() === 'boolean' || $var_137->getType() === 'bool') {
                        $var_95[$var_133] = new class_6($var_95[$var_133]);
                    }
                } else {
                    $var_130[$var_133] = $var_95[$var_133];
                }
            }
            $var_11->var_2 = $var_132;
        }
        $var_11->fn_24($var_83, $var_95);
        $var_81->validateAdditionalArguments($var_130);
        return $var_95 + $var_130;
    }

    
    protected function fn_23($var_141)
    {
        if (strpos($var_141, '{') === false && strpos($var_141, '<') === false) {
            if (is_numeric($var_141)) {
                return new class_7($var_141);
            }
            return new class_8($var_141);
        }
        $var_142 = $var_11->fn_7($var_141);
        $var_143 = $var_11->fn_8($var_142, self::var_0)->getRootNode();
        return $var_143;
    }

    
    public function fn_22($var_145)
    {
        $var_134 = $var_145;
        if ($var_134 === '') {
            return $var_134;
        }
        if ($var_145[0] === '"') {
            $var_134 = str_replace('\\"', '"', preg_replace('/(^"|"$)/', '', $var_145));
        } elseif ($var_145[0] === '\'') {
            $var_134 = str_replace("\\'", "'", preg_replace('/(^\'|\'$)/', '', $var_145));
        }
        return str_replace('\\\\', '\\', $var_134);
    }

    
    protected function fn_16(var_72 $var_53, $var_146, $var_52)
    {
        $var_147 = preg_split(var_48::$var_148, $var_146, -1, var_50 | var_51);
        if ($var_147 === false) {
            
            $var_11->fn_14($var_53, $var_146);
            return;
        }
        foreach ($var_147 as $var_149) {
            $var_58 = [];
            $var_150 = null;
            if (preg_match(var_48::$var_151, $var_149, $var_58) > 0) {
                $var_11->fn_20(
                    $var_53,
                    $var_58['Object'],
                    $var_58['Delimiter'],
                    (isset($var_58['ViewHelper']) ? $var_58['ViewHelper'] : ''),
                    (isset($var_58['AdditionalViewHelpers']) ? $var_58['AdditionalViewHelpers'] : '')
                );
            } elseif ($var_52 === self::var_0
                && preg_match(var_48::$var_152, $var_149, $var_58) > 0
            ) {
                
                $var_11->fn_25($var_53, $var_11->fn_21($var_58['Array']));
            } else {
                
                
                foreach ($var_11->var_5->getExpressionNodeTypes() as $var_155) {
                    $var_156 = $var_155::$var_156;
                    $var_58 = [];
                    preg_match_all($var_156, $var_149, $var_58, var_115);
                    if (is_array($var_58) === true) {
                        foreach ($var_58 as $var_157) {
                            $var_158 = strpos($var_149, $var_157[0]);
                            
                            $var_150 = new $var_155($var_157[0], $var_157, $var_53);
                            try {
                                
                                if ($var_150 instanceof var_159) {
                                    $var_150->evaluate($var_11->var_5);
                                }

                                if ($var_158 > 0) {
                                    $var_53->getNodeFromStack()->addChildNode(new class_8(substr($var_149, 0, $var_158)));
                                }

                                $var_11->fn_19($var_150, var_91::var_161, $var_53);
                                $var_53->getNodeFromStack()->addChildNode($var_150);

                                $var_162 = $var_158 + strlen($var_157[0]);
                                if ($var_162 < strlen($var_149)) {
                                    $var_11->fn_16($var_53, substr($var_149, $var_162), $var_52);
                                    break;
                                }
                            } catch (var_163 $var_24) {}
                        }
                    }
                }

                if (!$var_150) {
                    
                    $var_11->fn_14($var_53, $var_149);
                }
            }
        }
    }

    
    protected function fn_25(var_72 $var_53, $var_164)
    {
        $var_165 = new class_9($var_164);
        $var_53->getNodeFromStack()->addChildNode($var_165);
    }

    
    protected function fn_21($var_164, var_128 $var_81 = null)
    {
        $var_130 = [];
        $var_83 = [];
        if ($var_81 instanceof var_128) {
            $var_83 = $var_11->var_5->getViewHelperResolver()->getArgumentDefinitionsForViewHelper($var_81);
        }
        $var_113 = [];
        $var_166 = [];
        if (preg_match_all(var_48::$var_167, $var_164, $var_113, var_115)) {
            foreach ($var_113 as $var_116) {
                $var_168 = $var_11->fn_22($var_116['Key']);
                $var_169 = &$var_166;
                if (!isset($var_83[$var_168])) {
                    $var_169 = &$var_130;
                }

                if (array_key_exists('Subarray', $var_116) && !empty($var_116['Subarray'])) {
                    $var_169[$var_168] = new class_9($var_11->fn_21($var_116['Subarray']));
                } elseif (!empty($var_116['VariableIdentifier'])) {
                    $var_169[$var_168] = new class_5($var_116['VariableIdentifier']);
                } elseif (array_key_exists('Number', $var_116) && (!empty($var_116['Number']) || $var_116['Number'] === '0')) {
                    
                    $var_169[$var_168] = $var_116['Number'] + 0;
                } elseif ((array_key_exists('QuotedString', $var_116) && !empty($var_116['QuotedString']))) {
                    $var_141 = $var_11->fn_22($var_116['QuotedString']);
                    $var_169[$var_168] = $var_11->fn_23($var_141);
                }

                if (isset($var_83[$var_168]) && ($var_83[$var_168]->getType() === 'boolean' || $var_83[$var_168]->getType() === 'bool')) {
                    $var_169[$var_168] = new class_6($var_169[$var_168]);
                }
            }
        }
        if ($var_81 instanceof var_128) {
            $var_11->fn_24($var_83, $var_166);
            $var_81->validateAdditionalArguments($var_130);
        }
        return $var_166 + $var_130;
    }

    
    protected function fn_14(var_72 $var_53, $var_146)
    {
        $var_118 = new class_8($var_146);
        $var_11->fn_19($var_118, var_91::var_170, $var_53);
        $var_53->getNodeFromStack()->addChildNode($var_118);
    }

    
    protected function fn_12()
    {
        $var_143 = new class_10();
        $var_171 = $var_11->var_5->getVariableProvider();
        $var_53 = new class_2();
        $var_53->setRootNode($var_143);
        $var_53->pushNodeToStack($var_143);
        $var_53->setVariableProvider($var_171->getScopeCopy($var_171->getAll()));
        return $var_53;
    }

    
    protected function fn_24($var_177, $var_178)
    {
        $var_179 = array_keys($var_178);
        foreach ($var_177 as $var_180 => $var_181) {
            if ($var_181->isRequired() && !in_array($var_180, $var_179)) {
                throw new class_1('Required argument "' . $var_180 . '" was not supplied.', 1237823699);
            }
        }
    }
}
