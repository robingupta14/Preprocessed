<?php

class class_0 extends var_0 {
	
	function fn_0() {
		$var_1 = new class_1(array(
			'Var' => 'var value'
		));
		
		$var_2 = $var_1->renderWith("SSViewerTestPartialTemplate");
		$var_4->assertEquals('Test partial template: var value', trim(preg_replace("/<!--.*-->/U",'',$var_2)));
	}
	
	function fn_1() {
		$var_6 = $var_4->getMock("Requirements_Backend", array("javascript", "css"));
		$var_8 = 'sapphire/tests/forms/a.js';
		$var_9 = 'sapphire/tests/forms/a.js';
		
		$var_6->expects($var_4->once())->method('javascript')->with($var_8);
		$var_6->expects($var_4->once())->method('css')->with($var_9);
		
		Requirements::set_backend($var_6);
		
		$var_1 = new class_1(array());
		
		$var_14 = SSViewer::fromString(<<<SS
		<% require javascript($var_8) %>
		<% require css($var_9) %>
SS
);
		$var_15 = $var_14->process($var_1);
		$var_4->assertFalse((bool)trim($var_15), "Should be no content in this return.");
	}
	
	function fn_2() {
		$var_14 = SSViewer::fromString(<<<SS
This is my template<%-- this is a comment --%>This is some content<%-- this is another comment --%>This is the final content
SS
);
		$var_18 = $var_14->process(new class_1(array()));
		
		$var_4->assertEquals("This is my templateThis is some contentThis is the final content", preg_replace("/\n?<!--.*-->\n?/U",'',$var_18));
	}
}
