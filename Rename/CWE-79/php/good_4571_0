<?php



class class_0 extends var_0
{
    
    public function fn_0()
    {
        if (getenv('kernel.environment') === 'test') {
            throw $var_1;
        }

        header('HTTP/1.1 500 Internal Server Error');
        if (ToolsCore::isPHPCLI()) {
            
            
        } elseif (var_2) {
            
            
            
            
            

            $var_1->fn_1($var_1->getFile(), $var_1->getLine());

            
            
            foreach ($var_1->getTrace() as $var_7 => $var_8) {
                $var_9 = (isset($var_8['file'])) ? ltrim(str_replace(array(var_10, '\\'), array('', '/'), $var_8['file']), '/') : '';
                $var_11 = (isset($var_8['line'])) ? $var_8['line'] : '';
                if (defined('_PS_ADMIN_DIR_')) {
                    $var_9 = str_replace(basename(var_12) . var_13, 'admin' . var_13, $var_9);
                }
                
                
                 var_14: 

                if (isset($var_8['args']) && count($var_8['args'])) {
                     var_14: 
                }

                if ($var_9) {
                    $var_1->fn_1($var_8['file'], $var_8['line'], $var_7);
                }
                if (isset($var_8['args']) && count($var_8['args'])) {
                    $var_15 = $var_1->fn_2($var_8);
                    $var_1->fn_3($var_15, $var_7);
                }
                
            }
            
            
        } else {
            
            if (file_exists(var_10 . '/error500.html')) {
                
            }
        }
        
        $var_1->fn_4();
        
        exit((int) ToolsCore::isPHPCLI());
    }

    
    protected function fn_1($var_19, $var_20, $var_7 = null)
    {
        $var_21 = file($var_19);
        $var_22 = $var_20 - 6;
        $var_23 = 11;
        if ($var_22 < 0) {
            $var_23 += $var_22;
            $var_22 = 0;
        }
        $var_21 = array_slice($var_21, $var_22, $var_23);
        ++$var_22;

        
        foreach ($var_21 as $var_24 => $var_25) {
            $var_26 = ($var_22 + $var_24) . '. ' . htmlspecialchars($var_25);
            if ($var_22 + $var_24 == $var_20) {
                
            } else {
                
            }
        }
        
    }

    
    protected function fn_2(array $var_8)
    {
        $var_15 = $var_8['args'];
        if (empty($var_8['class']) || empty($var_8['function'])) {
            return $var_15;
        }

        $var_27 = [
            'pwd',
            'pass',
            'passwd',
            'password',
            'database',
            'server',
        ];
        $var_28 = [];

        try {
            $var_29 = new \var_30($var_8['class']);
            
            $var_31 = $var_29->getMethod($var_8['function']);
            
            foreach ($var_31->getParameters() as $var_34 => $var_35) {
                if ($var_34 >= count($var_15)) {
                    break;
                }

                if (in_array(strtolower($var_35->getName()), $var_27)) {
                    $var_28[] = '**hidden_' . $var_35->getName() . '**';
                } else {
                    $var_28[] = $var_15[$var_34];
                }
            }
        } catch (var_37 $var_38) {}

        return $var_28;
    }

    
    protected function fn_3($var_15, $var_7)
    {
        
        foreach ($var_15 as $var_39 => $var_40) {
            
            
            
        }
        
    }

    
    protected function fn_4()
    {
        $var_41 = new class_1();
        $var_41->setFilename(var_10 . '/var/logs/' . date('Ymd') . '_exception.log');
        $var_41->fn_4($var_1->fn_5(false));
    }

    
    protected function fn_6($var_44 = true)
    {
        Tools::displayAsDeprecated('Use getExtendedMessage instead');

        return $var_1->fn_5($var_44);
    }

    
    protected function fn_5($var_44 = true)
    {
        $var_45 = '<p><b>%s</b><br /><i>at line </i><b>%d</b><i> in file </i><b>%s</b></p>';
        if (!$var_44) {
            $var_45 = strip_tags(str_replace('<br />', ' ', $var_45));
        }

        return sprintf(
            $var_45,
            Tools::safeOutput($var_1->getMessage(), true),
            $var_1->getLine(),
            ltrim(str_replace(array(var_10, '\\'), array('', '/'), $var_1->getFile()), '/')
        );
    }
}
