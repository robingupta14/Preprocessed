<?php
if ( ! defined( 'ABSPATH' ) ) var_0; 

class class_0 extends var_1 {
	
	protected function fn_0( $var_3, $var_4, $var_5 = null ) {
		if ( is_null( $var_5 ) )
			$var_5 = get_comment( $var_3 );
		
		aal_insert_log( array(
			'action'         => $var_4,
			'object_type'    => 'Comments',
			'object_subtype' => get_post_type( $var_5->var_6 ),
			'object_name'    => esc_html( get_the_title( $var_5->var_6 ) ),
			'object_id'      => $var_3,
		) );
	}
	
	public function fn_1( $var_7, $var_5 = null ) {
		if ( is_null( $var_5 ) )
			$var_5 = get_comment( $var_7 );
		
		$var_4 = 'created';
		switch ( current_filter() ) {
			case 'wp_insert_comment' :
				$var_4 = 1 === (int) $var_5->var_8 ? 'approved' : 'pending';
				break;
			
			case 'edit_comment' :
				$var_4 = 'updated';
				break;

			case 'delete_comment' :
				$var_4 = 'deleted';
				break;
			
			case 'trash_comment' :
				$var_4 = 'trashed';
				break;
			
			case 'untrash_comment' :
				$var_4 = 'untrashed';
				break;
			
			case 'spam_comment' :
				$var_4 = 'spammed';
				break;
			
			case 'unspam_comment' :
				$var_4 = 'unspammed';
				break;
		}
		
		$var_9->fn_0( $var_7, $var_4, $var_5 );
	}

	public function fn_2( $var_10, $var_11, $var_5 ) {
		$var_9->fn_0( $var_5->var_7, $var_10, $var_5 );
	}

	public function fn_3() {
		add_action( 'wp_insert_comment', array( &$var_9, 'handle_comment_log' ), 10, 2 );
		add_action( 'edit_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'trash_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'untrash_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'spam_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'unspam_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'delete_comment', array( &$var_9, 'handle_comment_log' ) );
		add_action( 'transition_comment_status', array( &$var_9, 'hooks_transition_comment_status' ), 10, 3 );
		
		parent::fn_3();
	}
	
}
