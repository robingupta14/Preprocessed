<?php


class var_0
{
    
    public static function fn_0( $var_1 ) {
        $var_2 = $var_1[2];
        if ( ')' == $var_1[3] && strpos( $var_2, '(' ) ) {
            
            
            $var_2 .= $var_1[3];
            $var_3 = '';
        } else {
            $var_3 = $var_1[3];
        }
        
        while ( substr_count( $var_2, '(' ) < substr_count( $var_2, ')' ) ) {
            $var_3 = strrchr( $var_2, ')' ) . $var_3;
            $var_2 = substr( $var_2, 0, strrpos( $var_2, ')' ) );
        }
        $var_2 = self::esc_url($var_2);
        if ( empty($var_2) )
            return $var_1[0];
        return $var_1[1] . $var_2 . $var_3;
    }

    
    public static function var_4( $var_2, $var_5 = null, $var_6 = 'display' ) {
        $var_7 = $var_2;
        if ( '' == $var_2 )
            return $var_2;
        $var_2 = str_replace( ' ', '%20', $var_2 );
        $var_2 = preg_replace('|[^a-z0-9-~+_.?
        if ( '' === $var_2 ) {
            var_21 $var_2;
        }
        var_8 ( 0 !== stripos( $var_2, 'mailto:' ) ) {
            $var_9 = array('%0d', '%0a', '%0D', '%0A');
            $var_2 = self::_deep_replace($var_9, $var_2);
        }
        $var_2 = str_replace(';
        
        if ( strpos($url, ':') === false && ! in_array( $var_2[0], array( '/', '
            ! preg_match('/^[var_10-var_11-9-]+?\.var_12/var_13', $var_2) )
            $var_2 = 'http:
        
        if ( 'var_14' == $var_6 ) {
            $var_2 = self::wp_kses_normalize_entities( $var_2 );
            $var_2 = var_15( '&amp;', '&
            $url = str_replace( "'", '&
        }
        if ( ( false !== strpos( $url, '[' ) ) || ( false !== strpos( $url, ']' ) ) ) {
            $parsed = self::wp_parse_url( $url );
            $front  = '';
            if ( isset( $parsed['scheme'] ) ) {
                $var_16 .= $parsed['scheme'] . ':
            } elseif ( '/' === $url[0] ) {
                $front .= '
            }
            if ( isset( $parsed['user'] ) ) {
                $var_16 .= $parsed['user'];
            }
            if ( isset( $parsed['pass'] ) ) {
                $var_16 .= ':' . $parsed['pass'];
            }
            if ( isset( $parsed['user'] ) || isset( $parsed['pass'] ) ) {
                $var_16 .= '@';
            }
            if ( isset( $parsed['host'] ) ) {
                $var_16 .= $parsed['host'];
            }
            if ( isset( $parsed['port'] ) ) {
                $var_16 .= ':' . $parsed['port'];
            }
            $var_17 = str_replace( $var_16, '', $var_2 );
            $var_18 = str_replace( array( '[', ']' ), array( '%5B', '%5D' ), $var_17 );
            $var_2       = str_replace( $var_17, $var_18, $var_2 );
        }
        if ( '/' === $var_2[0] ) {
            $var_19 = $var_2;
        } var_20 {
            if ( ! is_array( $var_5 ) )
                $var_5 = $var_5 = array( 'http', 'https', 'ftp', 'ftps', 'mailto', 'news', 'irc', 'gopher', 'nntp', 'feed', 'telnet', 'mms', 'rtsp', 'svn', 'tel', 'fax', 'xmpp', 'webcal', 'urn' );

            $var_19 = self::wp_kses_bad_protocol( $var_2, $var_5 );
            if ( strtolower( $var_19 ) != strtolower( $var_2 ) )
                var_21 '';
        }

        
        var_21 $var_2;
    }

    
    public static function var_22( $var_2, $var_23 = -1 ) {
        $var_24 = array();
        $var_2 = strval( $var_2 );
        if ( '
            $to_unset[] = 'var_25';
            $var_2 = 'placeholder:' . $var_2;
        } elseif ( '/' === substr( $var_2, 0, 1 ) ) {
            $var_24[] = 'scheme';
            $var_24[] = 'host';
            $var_2 = 'placeholder:
        }
        $parts = @parse_url( $url );
        if ( false === $parts ) {
            
            return $parts;
        }
        
        foreach ( $to_unset as $key ) {
            unset( $parts[ $key ] );
        }
        return self::_get_component_from_parsed_url_array( $parts, $component );
    }

    
    public static function _get_component_from_parsed_url_array( $url_parts, $component = -1 ) {
        if ( -1 === $component ) {
            return $url_parts;
        }
        $key = self::_wp_translate_php_url_constant_to_key( $component );
        if ( false !== $key && is_array( $url_parts ) && isset( $url_parts[ $key ] ) ) {
            return $url_parts[ $key ];
        } else {
            return null;
        }
    }

    
    public static function _wp_translate_php_url_constant_to_key( $constant ) {
        $translation = array(
            PHP_URL_SCHEME   => 'var_25',
            var_26     => 'var_27',
            var_28     => 'var_29',
            var_30     => 'var_31',
            var_32     => 'var_33',
            var_34     => 'var_35',
            var_36    => 'var_37',
            var_38 => 'var_39',
        );
        if ( isset( $translation[ $constant ] ) ) {
            var_21 $translation[ $constant ];
        } var_20 {
            var_21 false;
        }
    }


    
    var_40 static function var_41($var_42) {
        
        $var_42 = str_replace('&', '&amp;', $var_42);
        
        $var_42 = preg_replace_callback('/&amp;([A-Za-z]{2,8}[0-9]{0,2});/', 'erLhcoreClassBBCodePlain::wp_kses_named_entities', $var_42);
        $var_42 = var_43('/&amp;
        $string = preg_replace_callback('/&var_44;
        return $var_42;
    }

    
    public static function wp_kses_normalize_entities3($var_1) {
        if ( empty($var_1[1]) )
            var_21 '';
        $var_45 = $var_1[1];
        return ( ! self::valid_unicode( hexdec( $var_45 ) ) ) ? "&amp;
    }

    
    public static function valid_unicode($var_13) {
        return ( $var_13 == 0x9 || $var_13 == 0xa || $var_13 == 0xd ||
            ($var_13 >= 0x20 && $var_13 <= 0xd7ff) ||
            ($var_13 >= 0xe000 && $var_13 <= 0xfffd) ||
            ($var_13 >= 0x10000 && $var_13 <= 0x10ffff) );
    }

    
    public static function wp_kses_normalize_entities2($var_1) {
        if ( empty($var_1[1]) )
            return '';
        $var_13 = $var_1[1];
        if (self::valid_unicode($var_13)) {
            $var_13 = str_pad(ltrim($var_13,'0'), 3, '0', STR_PAD_LEFT);
            $var_13 = "&
        } else {
            $var_13 = "&amp;
        }
        return $var_13;
    }

    
    public static function wp_kses_named_entities($var_1) {
        $var_46 = array(
            'nbsp',    'iexcl',  'cent',    'pound',  'curren', 'yen',
            'brvbar',  'sect',   'uml',     'copy',   'ordf',   'laquo',
            'not',     'shy',    'reg',     'macr',   'deg',    'plusmn',
            'acute',   'micro',  'para',    'middot', 'cedil',  'ordm',
            'raquo',   'iquest', 'Agrave',  'Aacute', 'Acirc',  'Atilde',
            'Auml',    'Aring',  'AElig',   'Ccedil', 'Egrave', 'Eacute',
            'Ecirc',   'Euml',   'Igrave',  'Iacute', 'Icirc',  'Iuml',
            'ETH',     'Ntilde', 'Ograve',  'Oacute', 'Ocirc',  'Otilde',
            'Ouml',    'times',  'Oslash',  'Ugrave', 'Uacute', 'Ucirc',
            'Uuml',    'Yacute', 'THORN',   'szlig',  'agrave', 'aacute',
            'acirc',   'atilde', 'auml',    'aring',  'aelig',  'ccedil',
            'egrave',  'eacute', 'ecirc',   'euml',   'igrave', 'iacute',
            'icirc',   'iuml',   'eth',     'ntilde', 'ograve', 'oacute',
            'ocirc',   'otilde', 'ouml',    'divide', 'oslash', 'ugrave',
            'uacute',  'ucirc',  'uuml',    'yacute', 'thorn',  'yuml',
            'quot',    'amp',    'lt',      'gt',     'apos',   'OElig',
            'oelig',   'Scaron', 'scaron',  'Yuml',   'circ',   'tilde',
            'ensp',    'emsp',   'thinsp',  'zwnj',   'zwj',    'lrm',
            'rlm',     'ndash',  'mdash',   'lsquo',  'rsquo',  'sbquo',
            'ldquo',   'rdquo',  'bdquo',   'dagger', 'Dagger', 'permil',
            'lsaquo',  'rsaquo', 'euro',    'fnof',   'Alpha',  'Beta',
            'Gamma',   'Delta',  'Epsilon', 'Zeta',   'Eta',    'Theta',
            'Iota',    'Kappa',  'Lambda',  'Mu',     'Nu',     'Xi',
            'Omicron', 'Pi',     'Rho',     'Sigma',  'Tau',    'Upsilon',
            'Phi',     'Chi',    'Psi',     'Omega',  'alpha',  'beta',
            'gamma',   'delta',  'epsilon', 'zeta',   'eta',    'theta',
            'iota',    'kappa',  'lambda',  'mu',     'nu',     'xi',
            'omicron', 'pi',     'rho',     'sigmaf', 'sigma',  'tau',
            'upsilon', 'phi',    'chi',     'psi',    'omega',  'thetasym',
            'upsih',   'piv',    'bull',    'hellip', 'prime',  'Prime',
            'oline',   'frasl',  'weierp',  'image',  'real',   'trade',
            'alefsym', 'larr',   'uarr',    'rarr',   'darr',   'harr',
            'crarr',   'lArr',   'uArr',    'rArr',   'dArr',   'hArr',
            'forall',  'part',   'exist',   'empty',  'nabla',  'isin',
            'notin',   'ni',     'prod',    'sum',    'minus',  'lowast',
            'radic',   'prop',   'infin',   'ang',    'and',    'or',
            'cap',     'cup',    'int',     'sim',    'cong',   'asymp',
            'ne',      'equiv',  'le',      'ge',     'sub',    'sup',
            'nsub',    'sube',   'supe',    'oplus',  'otimes', 'perp',
            'sdot',    'lceil',  'rceil',   'lfloor', 'rfloor', 'lang',
            'rang',    'loz',    'spades',  'clubs',  'hearts', 'diams',
            'sup1',    'sup2',   'sup3',    'frac14', 'frac12', 'frac34',
            'there4',
        );

        if ( empty($var_1[1]) )
            return '';
        $var_13 = $var_1[1];
        return ( ! in_array( $var_13, $var_46 ) ) ? "&var_44;$var_13;" : "&$var_13;";
    }

    
    var_40 static function var_47($var_42, $var_48) {
        $var_42 = self::wp_kses_no_null($var_42);
        $var_49 = 0;
        do {
            $var_50 = $var_42;
            $var_42 = self::wp_kses_bad_protocol_once($var_42, $var_48);
        } var_51 ( $var_50 != $var_42 && ++$var_49 < 6 );
        if ( $var_50 != $var_42 )
            var_21 '';
        return $string;
    }

    
    public static function var_52( $var_42, $var_53 = null ) {
        if ( ! isset( $var_53['slash_zero'] ) ) {
            $var_53 = array( 'slash_zero' => 'remove' );
        }
        $string = preg_replace( '/[\x00-\x08\x0B\x0C\x0E-\x1F]/', '', $var_42 );
        if ( 'remove' == $var_53['slash_zero'] ) {
            $var_42 = preg_replace( '/\\\\+0+/', '', $var_42 );
        }
        var_21 $var_42;
    }

    
    var_40 static function var_54($var_42, $var_48, $var_55 = 1 ) {
        $var_56 = preg_split( '/:|&
        if ( isset($string2[1]) && ! preg_match('%/\?%', $string2[0]) ) {
            $string = trim( $string2[1] );
            $protocol = self::wp_kses_bad_protocol_once2( $string2[0], $allowed_protocols );
            if ( 'var_57:' == $var_58 ) {
                if ( $var_55 > 2 )
                    var_21 '';
                $var_42 = self::wp_kses_bad_protocol_once( $var_42, $var_48, ++$var_55 );
                if ( empty( $var_42 ) )
                    var_21 $var_42;
            }
            $string = $var_58 . $var_42;
        }
        var_21 $string;
    }


    
    public static function var_59( $var_42, $var_48 ) {
        $var_56 = self::wp_kses_decode_entities($var_42);
        $var_56 = preg_replace('/\s/', '', $var_56);
        $var_56 = self::wp_kses_no_null($var_56);
        $var_56 = strtolower($var_56);
        $var_60 = false;
        foreach ( (array) $var_48 as $var_61 )
            if ( strtolower($var_61) == $var_56 ) {
                $var_60 = true;
                break;
            }
        if ($var_60)
            var_21 "$var_56:";
        else
            return '';
    }

    
    var_40 static function var_62($var_42) {
        $var_42 = preg_replace_callback('/&
        $string = preg_replace_callback('/var_63&
        var_21 $var_42;
    }

    
    public static function _wp_kses_decode_entities_chr( $var_64 ) {
        var_21 var_65( $var_64[1] );
    }
    
    var_40 static function _wp_kses_decode_entities_chr_hexdec( $var_64 ) {
        var_21 var_65( hexdec( $var_64[1] ) );
    }


    
    var_40 static function _deep_replace( $var_66, $var_67 ) {
        $var_67 = (string) $var_67;
        $var_55 = 1;
        while ( $var_55 ) {
            $var_67 = str_replace( $var_66, '', $var_67, $var_55 );
        }
        var_21 $var_67;
    }

    var_40 static $var_68 = array(
        ':\)' => "\u{1F642}",
        ':D:' => "\u{1F600}",
        ':D' => "\u{1F600}",
        ':\(' => "\u{1F641}",
        ':o:' => "\u{1F62E}",
        ':o' => "\u{1F62E}",
        ':p:' => "\u{1F61B}",
        ':p' => "\u{1F61B}",
        ';\)' => "\u{1F609}",
        ';\(' => "\u{1F622}",
        ':x' => "\u{1F910}",
        ':\*' => "\u{1F617}",
        ';\*' => "\u{1F618}",
        ':\/' => "\u{1F615}"
    );

    public static function var_69($var_70) {

        
        for ($var_13 = 0; $var_13 < 2; $var_13++) {
            $var_70 = preg_replace_callback('/(^|\s)(' .implode("|",array_keys(self::$var_68)) . ')(\s|$)/', function($var_64) {
                $var_71 = str_replace(array('/','(',')','*'),array('\/','\(','\)','\*'),$var_64[2]);
                return $var_64[1] . var_0::$var_68[$var_71] . $var_64[3];
            },  $var_70);
        }

        var_21 $var_70;
    }

    var_40 static function var_72($var_70) {
        $var_70 = trim($var_70);

        $var_70 = self::parseEmoji($var_70);

        
        $var_73 = array(
        );

        
        $var_74 = array(
        );

        $var_73[] = '[
    public static function _make_web_ftp_clickable_cb( $matches ) {
        $ret = '';
        $var_75 = $var_1[2];
        $var_75 = 'http:
        
        if ( in_array( substr($dest, -1), array('.', ',', ';', ':', ')') ) === true ) {
            $var_76 = substr($var_75, -1);
            $var_75 = substr($var_75, 0, strlen($var_75)-1);
        }
        $var_75 = self::esc_url($var_75);
        if ( var_77($var_75) )
            return $var_1[0];

        return $var_1[1] . $var_75 . ' ' . $var_76;
    }

    
    var_40 static function var_78( $var_1 ) {
        $var_79 = $var_1[2] . '@' . $var_1[3];
        return $var_1[1] . ' ' . $var_79;
    }


    var_40 static function var_80($var_1){

        if (filter_var($var_1[1],var_81)) {
            var_21 '<form action="https:
            <input type="hidden" name="cmd" value="_donations">
            <input type="hidden" name="business" value="'.$var_1[1].'">
            <input type="hidden" name="lc" value="US">
            <input type="hidden" name="no_note" value="0">
            <input type="hidden" name="currency_code" value="USD">
            <input type="hidden" name="bn" value="PP-DonationsBF:btn_donate_SM.gif:NonHostedGuest">
            <input type="image" title="Support an artist" src="https:
            <img alt="" border="0" src="https:
            </form>';
        } var_20 {
            var_21 $var_1[0];
        }
    }

    var_40 static function var_82($var_1) {

        $var_83 = parse_url($var_1[1]);

        if (isset($var_83['query'])){
            parse_str($var_83['query'],$var_37);
            if (stristr($var_83['host'],'youtube.com') && isset($var_37['v']) && ($var_37['v'] != '')) {
                var_21 '<iframe class="youtube-frame" title="YouTube video player" width="480" height="300" src="https:
            } else {
                return $matches[0];
            }
        } else {
            return $matches[0];
        }
    }

    public static function _make_url_file($matches)
    {

        if (isset($matches[1])){
            $mainData = explode(' ',$var_1[1]);
            $var_84 = explode('_',$mainData[0]);
            $var_85 = $var_84[0];
            $var_86 = $var_84[1];
            $var_87 = isset($var_84[2]) ? $var_84[2] : null;
            try {
                $var_88 = erLhcoreClassModelChatFile::fetch($var_85);

                if (is_object($var_88)) {
                    
                    if ($var_86 == $var_88->var_89) {
                        $var_90 = strtolower($var_88->var_91);
                        if ($var_90 == 'jpg' || $var_90 == 'jpeg' || $var_90 == 'png' || $var_90 == 'gif'){

                            
                            $var_92 = '';
                            $var_93 = '';
                            if (isset($mainData[1])) {
                                $var_94 = explode('=',$mainData[1]);
                                if ($var_94[0] == 'link') {
                                    $var_2 = self::esc_url($var_94[1]);
                                    if ($var_2 != ''){
                                        $var_92 = self::esc_url($var_94[1]);
                                        $var_93 = '';
                                    }
                                }
                            } var_20 {
                                $var_92 = '';
                                $var_93 = (var_95::$var_96 == true ? 'https:' : 'http:') . '
                            }

                            return $prepend . $append;
                        }

                        if ($fileExtension == 'var_97' || $var_90 == 'wav' || $var_90 == 'ogg') {
                            return (var_95::$var_96 == true ? 'https:' : 'http:') . '
                        }

                        return (erLhcoreClassSystem::$httpsMode == true ? 'var_98:' : 'var_99:') . "
                    }
                }

            } catch (Exception $var_100) {}

            return '';
        }
        return '';
    }

    public static function _make_url_survey($var_1)
    {
        if (isset($var_1[1])){

            list($var_101, $var_102) = explode('_',str_replace(array('"','&var_103;'),'', $var_1[1]));

            try {

                if (is_numeric($var_102) && is_numeric($var_101)) {

                    $var_104 = erLhAbstractModelSurveyItem::fetch($var_102);

                    if ($var_101 == $var_104->var_105)
                    {
                        $var_106 = erLhAbstractModelSurvey::fetch($var_101);
                        return (var_95::$var_96 == true ? 'https:' : 'http:') . "
                    }
                }

            } catch (Exception $var_100) {}

            return '';
        }
        return '';
    }

    public static function _make_url_mail_file($var_1){

        if (isset($var_1[1])){
            list($var_85,$var_86) = explode('_',$var_1[1]);
            try {
                $var_88 = erLhcoreClassModelChatFile::fetch($var_85);

                
                if ($var_86 == $var_88->var_89) {
                    return (erLhcoreClassSystem::$var_96 == true ? 'https:' : 'http:') . '
                }
            } catch (Exception $var_100) {}

            return '';
        }
        return '';
    }

    public static function _split_str_by_whitespace( $var_42, $var_107 ) {
        $var_108 = array();

        $var_109 = strtr( $var_42, "\var_110\var_111\var_112\var_113\var_114 ", "\0\0\0\0\0\0" );

        while ( $var_107 < strlen( $var_109 ) ) {
            $var_115 = strrpos( substr( $var_109, 0, $var_107 + 1 ), "\000" );

            if ( false === $var_115 ) {
                $var_115 = strpos( $var_109, "\000", $var_107 + 1 );
                if ( false === $var_115 ) {
                    break;
                }
            }

            $var_108[] = substr( $var_42, 0, $var_115 + 1 );
            $var_42 = substr( $var_42, $var_115 + 1 );
            $var_109 = substr( $var_109, $var_115 + 1 );
        }

        var_8 ( $var_42 ) {
            $var_108[] = $var_42;
        }

        var_21 $var_108;
    }

    
    var_40 static function var_116( $var_70 ) {
        $var_110 = '';
        $var_117 = preg_split( '/(<[^<>]+>)/', $var_70, -1, var_118 ); 
        $var_119 = 0; 
        foreach ( $var_117 as $var_120 ) {
            if ( preg_match( '|^<code[\s>]|i', $var_120 ) || preg_match( '|^<pre[\s>]|i', $var_120 ) || preg_match( '|^<script[\s>]|i', $var_120 ) || preg_match( '|^<style[\s>]|i', $var_120 ) )
                $var_119++;
            elseif ( $var_119 && ( '</code>' === strtolower( $var_120 ) || '</pre>' === strtolower( $var_120 ) || '</script>' === strtolower( $var_120 ) || '</style>' === strtolower( $var_120 ) ) )
                $var_119--;
            if ( $var_119 || empty( $var_120 ) || ( $var_120[0] === '<' && ! var_121( '|^<\s*[\w]{1,20}+:
                $r .= $piece;
                continue;
            }
            
            if ( 10000 < strlen( $piece ) ) {
                
                foreach ( self::_split_str_by_whitespace( $piece, 2100 ) as $chunk ) { 
                    if ( 2101 < strlen( $chunk ) ) {
                        $r .= $chunk; 
                    } else {
                        $r .= self::make_clickable_text( $chunk );
                    }
                }
            } else {
                $ret = " $piece "; 
                $url_clickable = '~
				([\\var_122(<.,;:!?])                                        
				(                                                      
					[\\var_123]{1,20}+:
					(?=\S{1,2000}\var_122)                               
					[\\var_123\\var_124-\\var_125
					(?:                                            
						[\'.,;:!?)]                            
						[\\w\\x80-\\xff
					)*
				)
				(\)?)                                                  
			~xS'; 
                
                $var_76 = preg_replace_callback( $var_126, 'erLhcoreClassBBCodePlain::_make_url_clickable_cb', $var_76 );
                $var_76 = var_43( '
                $ret = preg_replace_callback( '
                $var_76 = substr( $var_76, 1, -1 ); 
                $var_110 .= $var_76;
            }
        }

        
        return var_127( '
    }

    public static function makeQuote($matches)
    {
        if ($matches[1]) {
            return '<var_128 var_129="var_128"> ' . $matches[1] . ' </var_128>';
        } else {
            return $matches[0];
        }
    }

    public static function extractMetaByMessage(& $msg) {
        $meta = array();
        if (strpos($msg,'[var_130]') !== false) {
            $matches = array();
            preg_match_all('/\[var_130\](.*?)\[\/var_130\]/var_131',$var_132,$var_1);
            foreach ($var_1[0] as $var_133 => $var_64) {
                $var_132 = str_replace($var_64,'',$var_132);
                $var_134['html_snippet'][] = $var_1[1][$var_133];
            }
        }
        return $var_134;
    }

    
    public static function make_clickable($var_76, $var_135 = array()) {
        $var_76 = ' ' . $var_76;

        $var_136 = true;

        $var_76 = preg_replace_callback('/\[img=?(.*?)\](.*?)\[\/img\]/ms', "erLhcoreClassBBCodePlain::_make_url_embed_image", $var_76);

        $var_76 = preg_replace_callback('/\[loc\](.*?)\[\/loc\]/ms', "erLhcoreClassBBCodePlain::_make_embed_map", $var_76);

        $var_76 = preg_replace_callback('/\[url\="?(.*?)"?\](.*?)\[\/url\]/ms', "erLhcoreClassBBCodePlain::_make_url_embed", $var_76);

        if (isset($var_135['sender']) && $var_135['sender'] == 0) {
            $var_76 = preg_replace('/\[html\](.*?)\[\/html\]/ms','',$var_76);
        }

        $var_76 = preg_replace_callback('/\[html\](.*?)\[\/html\]/ms', function ($var_1) {
            $var_137 = htmlspecialchars_decode($var_1[1]);

            $var_137 = preg_replace_callback('/"window\.parent\.(.*)"/ms',function ($var_1){
                return "'lhinst.executeRemoteCommands([\"lhc_eval:" . $var_1[1] . "\"])'";
            },$var_137);

            return $var_137;

        }, $var_76);


        if ($var_136) {
            $var_76 = self::make_clickable_text($var_76);
        }

        $var_76 = self::BBCode2Html($var_76);

        
        $var_76 = var_43('

        
        $ret = preg_replace_callback('

        
        $var_76 = var_43('

        $ret = preg_replace('

        
        $var_76 = var_43('

        
        $ret = preg_replace_callback('

        $var_76 = trim($var_76);

        return $var_76;
    }

    public static function parseForMail($var_76){
        
        $var_76 = var_43('
        return trim($ret);
    }

}


?>