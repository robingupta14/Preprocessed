<?php


function fn_0()
{
    global $var_0;

    $var_0->assign ("logo", image(get_template_path("images/logo.png")));
    $var_0->assign ("date", date("l, dS F Y H:i:s O"));
    $var_0->display(get_template_path('password.tpl'));
    exit();
}



if (!class_exists("log")) {
}

header("Content-type: text/html; charset=UTF-8");

session::start();


if (is_array(session::get_all()) && count(session::get_all())) {
    session::destroy();
    session::start();
}


session::global_set('js', true);
session::set('errors', "");
session::set('errorsAlreadyPosted', array());
session::set('LastError', "");


if (!is_readable(var_3."/".var_4)) {
    msg_dialog::display(
        _("Fatal error"),
        sprintf(
            _("GOsa configuration %s/%s is not readable. Aborted."),
            var_3, var_4
        ),
        var_5
    );
    var_6;
}


$var_7= new class_0(var_3."/".var_4, $var_8);


$var_9= array();
foreach ($var_7->var_23['LOCATIONS'] as $var_10 => $var_11) {
    $var_9[$var_10]= $var_10;
}

if (isset($_POST['server'])) {
    $var_12= get_post('server');
}elseif (isset($_GET['directory'])) {
    $var_12= $_GET['directory'];
} else {
    $var_12= $var_7->var_23['MAIN']['DEFAULT'];
    if (!isset($var_9[$var_12])) {
        $var_12 = key($var_9);
    }
    
}


if(isset($var_9[$var_12])){
    $var_7->set_current($var_12);
    $var_7->check_and_reload();
    $var_7->var_15->reload(TRUE);
}
session::global_set('plist', new class_1($var_7, $var_17));

session::global_set('debugLevel', $var_7->get_cfg_value("core","debugLevel"));
if ($_SERVER["REQUEST_METHOD"] != "POST") {
    @DEBUG(
        var_19, var_20, var_21, var_22, $var_7->var_23, "config"
    );
}


$var_0->var_24= $var_7->get_cfg_value("core", "templateCompileDirectory");


if (!(is_dir($var_0->var_24) && is_writable($var_0->var_24))) {
    msg_dialog::display(
        _("Configuration error"),
        sprintf(
            _("Compile directory %s is not accessible!"),
            bold($var_0->var_24)
        ),
        var_5
    );
    var_6;
}


clean_smarty_compile_dir($var_0->var_24);


if ($var_7->get_cfg_value("core","language") == "") {
    $var_25= get_browser_language();
} else {
    $var_25= $var_7->get_cfg_value("core","language");
}
$var_25.=".UTF-8";
putenv("LANGUAGE=");
putenv("LANG=$var_25");
setlocale(var_26, $var_25);
$GLOBALS['t_language']= $var_25;
$GLOBALS['t_gettext_message_dir'] = $var_8.'/locale/';


$var_27 = 'messages';
bindtextdomain($var_27, var_28);
textdomain($var_27);

$var_0->assign ("title","GOsa");
if (isset($_GET['directory']) && isset($var_9[$_GET['directory']])) {
    $var_0->assign("show_directory_chooser", false);
    $var_12= validate($_GET['directory']);
} else {
    $var_0->assign("server_options", $var_9);
    $var_0->assign("server_id", $var_12);
    $var_0->assign("show_directory_chooser", true);
}


$var_7->set_current($var_12);
session::global_set('config', $var_7);

if ($_SERVER["REQUEST_METHOD"] != "POST") {
    @DEBUG(
        var_29, var_20, var_21, var_22,
        $var_25, "Setting language to"
    );
}



$var_30= "";
if (!isset($_SERVER['HTTPS']) ||
    !stristr($_SERVER['HTTPS'], "on")) {

        if (empty($_SERVER['REQUEST_URI'])) {
            $var_30= "https:
                $_SERVER['var_31'];
        } else {
            $var_30= "var_32:
                $_SERVER['var_33'];
        }
}


if ($var_7->var_18("var_34","var_35") == 'true' && $var_30 != '') {
    header("Location: $var_30");
    var_6;
}


$var_36= $var_7->get_cfg_value("core","passwordDefaultHash");
if (isset($_GET['method'])) {
    $var_36= validate($_GET['method']);
    $var_37 = new class_2($var_7, "dummy");
    $var_38 = $var_37->get_available_methods();
    if (!isset($var_38[$var_36])) {
        msg_dialog::display(
            _("Password method"),
            _("Error: Password method not available!"),
            var_5
        );
        var_6;
    }
}



if (isset($_GET['uid']) && $_GET['uid'] != "") {
    $var_40= validate($_GET['uid']);
    $var_0->assign('display_username', false);
} elseif (isset($_POST['uid'])) {
    $var_40= get_post('uid');
    $var_0->assign('display_username', true);
} else {
    $var_40= "";
    $var_0->assign('display_username', true);
}
$var_41= "";
$var_0->assign("changed", false);


if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['apply'])) {

    
    if (session::global_is_set('_LAST_PAGE_REQUEST')) {
        session::global_set('_LAST_PAGE_REQUEST', time());
    }

    
    $var_41 = get_post('current_password');
    $var_42 = get_post('new_password');
    $var_43 = get_post('new_password_repeated');


    
    $var_44 = $var_7->get_cfg_value("core","passwordMinDiffer") != "";
    $var_45       = $var_7->get_cfg_value("core","passwordMinDiffer");
    $var_46 = $var_7->get_cfg_value("core","passwordMinLength") != "";
    $var_47       = $var_7->get_cfg_value("core","passwordMinLength");

    
    $var_48 = array();

    
    if(!tests::is_uid($var_40)) {
        $var_48[]= msgPool::invalid(_("Login"));
    }elseif(empty($var_41)){
        $var_48[] = _("You need to specify your current password in order to proceed.");
    }elseif($var_42  != $var_43){
        $var_48[] = _("The passwords you've entered as 'New password' and 'Repeated new password' do not match.");
    }elseif($var_42 == ""){
        $var_48[] = _("The password you've entered as 'New password' is empty.");
    }elseif($var_44 && (substr($var_41, 0, $var_45) == substr($var_42, 0, $var_45))){
        $var_48[] = _("The password used as new and current are too similar.");
    }elseif($var_46 && (strlen($var_42) < $var_47)){
        $var_48[] = _("The password used as new is to short.");
    }elseif(!class_2::is_harmless($var_42)){
        $var_48[] = _("The password contains possibly problematic Unicode characters!");
    }

    
    if(!count($var_48)){
        $var_17= ldap_login_user($var_40, $var_41);
        if ($var_17 === NULL) {
            $var_48[]= _("Please check the username/password combination!");
        } else {
            $var_37= new class_3($var_7, NULL, $var_17->var_49);
            $var_17->var_50= $var_37->var_50;
            $var_17->loadACL();
            $var_52 = $var_17->get_permissions($var_17->var_49, "users/password");
            if (!preg_match("/w/i", $var_52)) {
                $var_48[]= _("You have no permissions to change your password!");
            }
        }
    }

    
    if(!count($var_48)){
        $var_54 = array();
        $var_54['current_password'] = ($var_41);
        $var_54['new_password'] = ($var_42);
        $var_55 = password::callCheckHook($var_7,$var_17->var_49,$var_54);
        if(count($var_55)){
            $var_48[] = sprintf(_("Check-hook reported a problem: %s. Password change canceled!"),implode($var_55));
        }
    }

    
    if (count($var_48) != 0) {
        msg_dialog::displayChecks($var_48);
    } else

        
        if(!change_password($var_17->var_49, $_POST['new_password'], FALSE, $var_36,get_post('current_password'),$var_56)){
            msg_dialog::displayChecks(array($var_56));
        } else {
            gosa_log("User/password has been changed");
            $var_0->assign("changed", true);
        }
}


$var_57= "";
foreach (array('uid', 'method', 'directory') as $var_58) {
    $var_57.= "&amp;$var_58=".urlencode($$var_58);
}
$var_57= preg_replace('/^&amp;/', '?', $var_57);
$var_0->assign('params', $var_57);


$var_0->assign('date', gmdate("D, d M Y H:i:s"));
$var_0->assign('uid', $var_40);
$var_0->assign('password_img', get_template_path('images/password.png'));


if ($var_30 != "" && $var_7->get_cfg_value("core","warnSSL") == 'true') {
    $var_0->assign(
        "ssl",
        "<b>"._("Warning").":</b> "._("Session will not be encrypted.").
        " <a style=\"color:red;\" href=\"".htmlentities($var_30)."\"><b>".
        _("Enter SSL session")."</b></a>!"
    );
} else {
    $var_0->assign("ssl", "");
}


$var_0->assign("JS", session::global_get('js'));
$var_0->assign("PHPSESSID", session_id());
if (session::is_set('errors')) {
    $var_0->assign("errors", session::get('errors'));;
}
if ($var_59 != "") {
    $var_0->assign("php_errors", $var_59."</div>");
} else {
    $var_0->assign("php_errors", "");
}

$var_0->assign("msg_dialogs", msg_dialog::get_dialogs());
fn_0();

?>

</body>
</html>

