<?php

class class_0 extends var_1 {

	private static $var_2 = "\"Name\"";

	private static $var_3 = "File";

	private static $var_4 = "Files";

	private static $var_5 = array(
		"Name" => "Varchar(255)",
		"Title" => "Varchar(255)",
		"Filename" => "Text",
		"Content" => "Text",
		
		'ShowInSearch' => 'Boolean(1)',
	);

	private static $var_6 = array(
		"Parent" => "File",
		"Owner" => "Member"
	);

	private static $var_7 = array();

	private static $var_8 = array();

	private static $var_9 = array(
		"ShowInSearch" => 1,
	);

	private static $var_10 = array(
		"Hierarchy",
	);

	private static $var_11 = array (
		'TreeTitle' => 'HTMLText'
	);

	
	private static $var_12 = array(
		'','ace','arc','arj','asf','au','avi','bmp','bz2','cab','cda','css','csv','dmg','doc','docx','dotx','dotm',
		'flv','gif','gpx','gz','hqx','ico','jar','jpeg','jpg','js','kml', 'm4a','m4v',
		'mid','midi','mkv','mov','mp3','mp4','mpa','mpeg','mpg','ogg','ogv','pages','pcx','pdf','pkg',
		'png','pps','ppt','pptx','potx','potm','ra','ram','rm','rtf','sit','sitx', 'tar','tgz','tif','tiff',
		'txt','wav','webm','wma','wmv','xls','xlsx','xltx','xltm','zip','zipx',
	);

	
	private static $var_13 = array(
		'audio' => array(
			"aif" ,"au" ,"mid" ,"midi" ,"mp3" ,"ra" ,"ram" ,"rm","mp3" ,"wav" ,"m4a" ,"snd" ,"aifc" ,"aiff" ,"wma",
			"apl", "avr" ,"cda" ,"ogg"
		),
		'mov' => array(
			"mpeg" ,"mpg" ,"mp4" ,"m1v" ,"mp2" ,"mpa" ,"mpe" ,"ifo" ,"vob","avi" ,"wmv" ,"asf" ,"m2v" ,"qt", "ogv", "webm"
		),
		'zip' => array(
			"arc" ,"rar" ,"tar" ,"gz" ,"tgz" ,"bz2" ,"dmg" ,"jar","ace" ,"arj" ,"bz" ,"cab"
		),
		'image' => array(
			"bmp" ,"gif" ,"jpg" ,"jpeg" ,"pcx" ,"tif" ,"png" ,"alpha","als" ,"cel" ,"icon" ,"ico" ,"ps"
		),
		'flash' => array(
			'swf', 'fla'
		),
		'doc' => array(
			'doc','docx','txt','rtf','xls','xlsx','pages', 'ppt','pptx','pps','csv', 'html','htm','xhtml', 'xml','pdf'
		)
	);

	
	private static $var_14 = true;

	
	private static $var_15 = true;

	
	protected static $var_16 = null;

	
	public static function fn_0($var_17, $var_18 = null, $var_19 = null) {
		if(!isset($var_17['id']) || !is_numeric($var_17['id'])) return;

		$var_20 = DataObject::get_by_id('File', $var_17['id']);

		if (!$var_20) {
			if(class_exists('ErrorPage')) {
				$var_20 = ErrorPage::get()->filter("ErrorCode", 404)->first();
			}

			if (!$var_20) return; 
		}

		
		if($var_18) {
			
			$var_23 = ' ';
			if($var_20 instanceof var_0) {
				foreach(array(
					'class' => 'file',
					'data-type' => $var_20->fn_1(),
					'data-size' => $var_20->fn_2()
				) as $var_26 => $var_27) {
					$var_23 .= sprintf('%s="%s" ', $var_26, $var_27);
				}
			}

			return sprintf('<a href="%s"%s>%s</a>', $var_20->fn_3(), rtrim($var_23), $var_19->parse($var_18));
		} else {
			return $var_20->fn_3();
		}
	}

	
	public function fn_4() {
		return parent::fn_4() && file_exists($var_31->fn_5());
	}

	
	public static function fn_6($var_33) {
		
		$var_33 = Image::strip_resampled_prefix($var_33);

		
		$var_34 = explode("/", $var_33);
		$var_35 = 0;
		$var_36 = null;
		foreach($var_34 as $var_37) {
			if($var_37 == var_38 && !$var_35) continue;
			$var_36 = class_0::get()->filter(array(
				'Name' => $var_37,
				'ParentID' => $var_35
			))->first();
			if(!$var_36) break;
			$var_35 = $var_36->var_39;
		}

		return $var_36;
	}

	
	public function fn_3() {
		return $var_31->fn_7();
	}

	
	public function fn_8() {
		return $var_31->fn_9();
	}

	
	public function fn_10() {
		return $var_31->fn_11();
	}

	
	public function fn_12() {
		return Convert::raw2xml($var_31->var_44);
	}

	
	protected function fn_13() {
		parent::fn_13();

		
		$var_31->fn_14();

		if($var_31->fn_4() && !is_dir($var_31->fn_5())) {
			unlink($var_31->fn_5());
		}
	}

	
	public function fn_15($var_46 = null) {
		if(!$var_46) $var_46 = Member::currentUser();

		$var_47 = $var_31->extend('canView', $var_46);
		if($var_47 && is_array($var_47)) if(!min($var_47)) return false;

		return true;
	}

	
	public function fn_16($var_46 = null) {
		if(!$var_46) $var_46 = Member::currentUser();

		$var_50 = $var_31->extendedCan('canEdit', $var_46);
		if($var_50 !== null) return $var_50;

		return Permission::checkMember($var_46, array('CMS_ACCESS_AssetAdmin', 'CMS_ACCESS_LeftAndMain'));
	}

	
	public function fn_17($var_46 = null) {
		if(!$var_46) $var_46 = Member::currentUser();

		$var_50 = $var_31->extendedCan('canCreate', $var_46);
		if($var_50 !== null) return $var_50;

		return $var_31->fn_16($var_46);
	}

	
	public function fn_18($var_46 = null) {
		if(!$var_46) $var_46 = Member::currentUser();

		$var_47 = $var_31->extend('canDelete', $var_46);
		if($var_47 && is_array($var_47)) if(!min($var_47)) return false;

		return $var_31->fn_16($var_46);
	}

	
	public function fn_19() {
		
		if($var_31 instanceof var_52) {
			$var_53 = $var_31->getFormattedImage(
				'ScaleWidth',
				Config::inst()->get('Image', 'asset_preview_width')
			);
			$var_56 = $var_53 ? $var_53->var_57 : '';
			$var_58 = new class_1("ImageFull",
				"<img id='thumbnailImage' class='thumbnail-preview' src='{$var_56}?r="
					. rand(1,100000)  . "' alt='{$var_31->var_59}' />\n"
			);
		} else {
			$var_58 = new class_1("ImageFull", $var_31->fn_20());
		}

		
		$var_61 = UploadField::create('UploadField','Upload Field')
			->setPreviewMaxWidth(40)
			->setPreviewMaxHeight(30)
			->setAllowedMaxFileNumber(1);
		
		if ($var_31->var_65) {
			$var_66 = $var_31->Parent();
			if ($var_66) {  
				$var_61->setFolderName($var_66->fn_9());
				$var_61->setRecord($var_66);
			}
		}

		
		$var_70 = CompositeField::create(
			CompositeField::create(
				$var_58
			)->fn_21("FilePreviewImage")->addExtraClass('cms-file-info-preview'),
			CompositeField::create(
				CompositeField::create(
					new class_2("FileType", _t('AssetTableField.TYPE','File type') . ':'),
					new class_2("Size", _t('AssetTableField.SIZE','File size') . ':', $var_31->fn_2()),
					$var_73 = new class_2('ClickableURL', _t('AssetTableField.URL','URL'),
						sprintf('<a href="%s" target="_blank">%s</a>', $var_31->fn_3(), $var_31->fn_8())
					),
					new class_3("Created", _t('AssetTableField.CREATED','First uploaded') . ':'),
					new class_3("LastEdited", _t('AssetTableField.LASTEDIT','Last changed') . ':')
				)
			)->fn_21("FilePreviewData")->addExtraClass('cms-file-info-data')
		)->fn_21("FilePreview")->addExtraClass('cms-file-info');
		$var_73->var_74 = true;

		
		$var_75 = new class_4("ParentID", _t('AssetTableField.FOLDER','Folder'), 'Folder');

		$var_76 = new class_5(
			new class_6('Root',
				new class_7('Main',
					$var_70,
					
					
					new class_8("Title", _t('AssetTableField.TITLE','Title')),
					new class_8("Name", _t('AssetTableField.FILENAME','Filename')),
					$var_77
						= new class_9("OwnerID", _t('AssetTableField.OWNER','Owner'), Member::mapInCMSGroups()),
					$var_75
				)
			)
		);
		$var_77->setHasEmptyDefault(true);

		
		if(!($var_31 instanceof var_79)) $var_31->extend('updateCMSFields', $var_76);

		return $var_76;
	}

	
	public static function fn_22($var_80) {
		$var_80 = strtolower($var_80);
		foreach(Config::inst()->get('File', 'app_categories') as $var_81 => $var_82) {
			if(in_array($var_80, $var_82)) return $var_81;
		}
		return false;
	}

	
	public function fn_23() {
		return self::fn_22($var_31->fn_1());
	}

	
	public function fn_24() {
		return DBField::create_field('HTMLVarchar', '<img src="'.$var_31->fn_25().'"/>');
	}

	public function fn_20() {
		return '<img src="' . $var_31->fn_25() . '" />';
	}

	
	public function fn_25() {
		$var_80 = strtolower($var_31->fn_1());
		if(!Director::fileExists(var_85 . "/images/app_icons/{$var_80}_32.png")) {
			$var_80 = $var_31->fn_23();
		}

		if(!Director::fileExists(var_85 . "/images/app_icons/{$var_80}_32.png")) {
			$var_80 = "generic";
		}

		return var_85 . "/images/app_icons/{$var_80}_32.png";
	}

	
	public function fn_26() {
		$var_31->extend('onAfterUpload');
	}

	
	public function fn_27() {
		if(is_numeric($var_31->var_39)) {
			DB::prepared_query('DELETE FROM "File" WHERE "ID" = ?', array($var_31->var_39));
		}
	}

	
	protected function fn_28() {
		parent::fn_28();

		
		if(!$var_31->var_39 && !$var_31->var_86) {
			$var_31->var_86 = (Member::currentUser() ? Member::currentUser()->var_39 : 0);
		}

		
		if(!$var_31->getField('Name')) $var_31->var_59 = "new-" . strtolower($var_31->var_88);
	}

	
	protected function fn_29() {
		parent::fn_29();

		$var_31->fn_14();
	}

	
	public function fn_14() {
		if(!$var_31->config()->var_15) return false;

		
		$var_31->setField('Filename', $var_31->fn_30());

		
		if(!$var_31->isChanged('Filename')) return false;

		$var_93 = $var_31->getChangedFields();
		$var_95 = $var_93['Filename']['before'];
		$var_96 = $var_93['Filename']['after'];

		
		if(!$var_95) return;

		$var_97 = Director::getAbsFile($var_95);
		$var_98 = Director::getAbsFile($var_96);

		
		
		
		
		
		

		
		
		
		if(!file_exists($var_98)) {
			if(!is_a($var_31, 'Folder')) {
				
				if(!file_exists($var_97)) {
					throw new class_10();
				}

				
				
				if(!file_exists(dirname($var_98))) {
					throw new class_10("Cannot move $var_97 to $var_98 - Directory " . dirname($var_96)
						. " doesn't exist");
				}
			}

			
			$var_99 = rename($var_97, $var_98);
			if(!$var_99) throw new class_10();
		}


		
		$var_31->fn_31($var_95, $var_96);
	}

	
	public function fn_32($var_102, &$var_103) {
		if($var_104 = $var_31->Children()) {
			foreach($var_104 as $var_36) {
				if(!$var_102 || eval("return $var_102;")) $var_103[] = $var_36;
				$var_36->fn_32($var_102, $var_103);
			}
			return true;
		}
	}

	
	public function fn_21($var_26) {
		$var_106 = $var_31->var_59;

		
		if(!$var_26) $var_26 = $var_31->var_44;

		
		$var_21 = FileNameFilter::create();
		$var_26 = $var_21->filter($var_26);

		
		if(!$var_26) $var_26 = 'new-folder';

		
		if($var_106 && $var_106 != $var_26) {
			$var_107 = pathinfo($var_26, var_108);
			$var_80 = self::fn_36($var_26);
			$var_109 = 1;

			while(class_0::get()->filter(array(
					'Name' => $var_26,
					'ParentID' => (int) $var_31->var_65
				))->exclude(array(
					'ID' => $var_31->var_39
				))->first()
			) {
				$var_109++;
				$var_26 = "$var_107-$var_109.$var_80";
			}
		}

		
		$var_31->setField('Name', $var_26);

		
		
		$var_31->setField('Filename', $var_31->fn_30());

		
		if(!$var_31->var_44) {
			$var_31->var_44 = str_replace(array('-','_'),' ', preg_replace('/\.[^.]+$/', '', $var_26));
		}

		return $var_26;
	}

	
	protected function fn_31($var_111, $var_112) {
		$var_31->extend('updateLinks', $var_111, $var_112);
	}

	
	public function fn_33($var_35) {
		$var_31->setField('ParentID', (int)$var_35);

		
		$var_31->setField('Filename', $var_31->fn_30());

		return $var_31->getField('ParentID');
	}

	
	public function fn_11() {
		return Director::absoluteURL($var_31->fn_7());
	}

	
	public function fn_7() {
		return Controller::join_links(Director::baseURL(), $var_31->fn_9());
	}

	
	public function fn_5() {
		$var_113 = Director::baseFolder();

		if(strpos($var_31->fn_9(), $var_113) === 0) {
			
			return $var_31->fn_9();
		} else {
			
			return Director::baseFolder() . '/' . $var_31->fn_9();
		}
	}

	
	public function fn_30() {
		if($var_31->var_65) {
			
			$var_114 = DataObject::get_by_id('Folder', $var_31->var_65, false);
			if($var_114 && $var_114->isInDB()) {
				return $var_114->fn_30() . $var_31->getField("Name");
			}
			else return var_38 . "/" . $var_31->getField("Name");
		} else if($var_31->getField("Name")) {
			return var_38 . "/" . $var_31->getField("Name");
		} else {
			return var_38;
		}
	}

	
	public function fn_34() {
		return Director::absoluteBaseURL()."admin/assets/removefile/".$var_31->var_39;
	}

	public function fn_9() {
		
		if($var_31->getField('Filename')) {
			return $var_31->getField('Filename');
		} else {
			return var_38 . '/';
		}
	}

	
	public function fn_35($var_116) {
		$var_31->setField('Filename', $var_116);

		
		
		$var_31->setField('Name', basename($var_116));
	}

	
	public function fn_1() {
		return self::fn_36($var_31->getField('Filename'));
	}

	
	public static function fn_36($var_33) {
		return pathinfo($var_33, var_117);
	}

	
	public function fn_37() {
		$var_118 = array(
			'gif' => _t('File.GifType', 'GIF image - good for diagrams'),
			'jpg' => _t('File.JpgType', 'JPEG image - good for photos'),
			'jpeg' => _t('File.JpgType', 'JPEG image - good for photos'),
			'png' => _t('File.PngType', 'PNG image - good general-purpose format'),
			'ico' => _t('File.IcoType', 'Icon image'),
			'tiff' => _t('File.TiffType', 'Tagged image format'),
			'doc' => _t('File.DocType', 'Word document'),
			'xls' => _t('File.XlsType', 'Excel spreadsheet'),
			'zip' => _t('File.ZipType', 'ZIP compressed file'),
			'gz' => _t('File.GzType', 'GZIP compressed file'),
			'dmg' => _t('File.DmgType', 'Apple disk image'),
			'pdf' => _t('File.PdfType', 'Adobe Acrobat PDF file'),
			'mp3' => _t('File.Mp3Type', 'MP3 audio file'),
			'wav' => _t('File.WavType', 'WAV audo file'),
			'avi' => _t('File.AviType', 'AVI video file'),
			'mpg' => _t('File.MpgType', 'MPEG video file'),
			'mpeg' => _t('File.MpgType', 'MPEG video file'),
			'js' => _t('File.JsType', 'Javascript file'),
			'css' => _t('File.CssType', 'CSS file'),
			'html' => _t('File.HtmlType', 'HTML file'),
			'htm' => _t('File.HtmlType', 'HTML file')
		);

		$var_80 = strtolower($var_31->fn_1());

		return isset($var_118[$var_80]) ? $var_118[$var_80] : 'unknown';
	}

	
	public function fn_2() {
		$var_119 = $var_31->fn_38();

		return ($var_119) ? self::fn_39($var_119) : false;
	}

	
	public static function fn_39($var_119) {
		if($var_119 < 1024) return $var_119 . ' bytes';
		if($var_119 < 10240) return (round($var_119/1024*10)/10). ' KB';
		if($var_119 < 1048576) return round($var_119/1024) . ' KB';
		if($var_119 < 10485760) return (round(($var_119/1024)/1024*10)/10) . ' MB';
		if($var_119 < 1073741824) return round(($var_119/1024)/1024) . ' MB';
		return round($var_119/1073741824*10)/10 . ' GB';
	}

	
	public static function fn_40($var_121) {
		$var_122 = str_split(trim($var_121));
		$var_123 = strtolower(array_pop($var_122));
		$var_124 = (int) implode($var_122);
		switch ($var_123) {
			case 'g':
				$var_124 *= 1024;
				
			case 'm':
				$var_124 *= 1024;
				
			case 'k':
				$var_124 *= 1024;
				
			default:
				
				break;
		}
		return $var_124;
	}

	
	public function fn_38(){
		if(file_exists($var_31->fn_5())) {
			$var_119 = filesize($var_31->fn_5());
			return $var_119;
		} else {
			return 0;
		}
	}

	public function fn_41($var_125 = true) {
		parent::fn_41($var_125);

		self::$var_16 = null;
	}

	
	public function fn_42($var_126 = true) {
		$var_127 = parent::fn_42($var_126);
		$var_127['Name'] = _t('File.Name', 'Name');
		$var_127['Title'] = _t('File.Title', 'Title');
		$var_127['Filename'] = _t('File.Filename', 'Filename');
		$var_127['Filename'] = _t('File.Filename', 'Filename');
		$var_127['Content'] = _t('File.Content', 'Content');

		return $var_127;
	}

	protected function fn_43() {
		if($var_31->config()->var_14 || !Permission::check('ADMIN')) {
			
			
			$var_128 = $var_31->fn_1();
			$var_129 = array_map('strtolower', $var_31->config()->var_12);
			if(!in_array(strtolower($var_128), $var_129)) {
				$var_82 =  $var_129;
				sort($var_82);
				$var_130 =  _t(
					'File.INVALIDEXTENSION',
					'Extension is not allowed (valid: {extensions})',
					'Argument 1: Comma-separated list of valid extensions',
					array('extensions' => wordwrap(implode(', ',$var_82)))
				);
				return new class_11(false, $var_130);
			}
		}

		
		

		$var_50 = new class_11(true);
		$var_31->extend('validate', $var_50);
		return $var_50;
	}

	
	private static $var_131 = array(
		'*' => 'File',
		'jpg' => 'Image',
		'jpeg' => 'Image',
		'png' => 'Image',
		'gif' => 'Image',
	);

	
	public static function fn_44($var_80) {
		$var_132 = array_change_key_case(self::config()->var_131, var_133);
		return (array_key_exists(strtolower($var_80), $var_132)) ? $var_132[strtolower($var_80)] : $var_132['*'];
	}

	
	public static function fn_45($var_82, $var_88) {
		if(!is_array($var_82)) $var_82 = array($var_82);

		foreach($var_82 as $var_80) {
			if(!is_subclass_of($var_88, 'File')) {
				throw new class_12(
					sprintf('Class "%s" (for extension "%s") is not a valid subclass of File', $var_88, $var_80)
				);
			}
			self::config()->var_131 = array($var_80 => $var_88);
		}
	}

}
