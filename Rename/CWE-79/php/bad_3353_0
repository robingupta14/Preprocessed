<?php



class var_0 extends var_1 {
	
	public $var_2;

	
	public $var_3;

	
	public $var_4;

	
	protected $var_5 = false;

	
	public function fn_0() {
		$var_6->var_2 = array(
			
			'wp.getUsersBlogs'		=> 'this:wp_getUsersBlogs',
			'wp.newPost'			=> 'this:wp_newPost',
			'wp.editPost'			=> 'this:wp_editPost',
			'wp.deletePost'			=> 'this:wp_deletePost',
			'wp.getPost'			=> 'this:wp_getPost',
			'wp.getPosts'			=> 'this:wp_getPosts',
			'wp.newTerm'			=> 'this:wp_newTerm',
			'wp.editTerm'			=> 'this:wp_editTerm',
			'wp.deleteTerm'			=> 'this:wp_deleteTerm',
			'wp.getTerm'			=> 'this:wp_getTerm',
			'wp.getTerms'			=> 'this:wp_getTerms',
			'wp.getTaxonomy'		=> 'this:wp_getTaxonomy',
			'wp.getTaxonomies'		=> 'this:wp_getTaxonomies',
			'wp.getUser'			=> 'this:wp_getUser',
			'wp.getUsers'			=> 'this:wp_getUsers',
			'wp.getProfile'			=> 'this:wp_getProfile',
			'wp.editProfile'		=> 'this:wp_editProfile',
			'wp.getPage'			=> 'this:wp_getPage',
			'wp.getPages'			=> 'this:wp_getPages',
			'wp.newPage'			=> 'this:wp_newPage',
			'wp.deletePage'			=> 'this:wp_deletePage',
			'wp.editPage'			=> 'this:wp_editPage',
			'wp.getPageList'		=> 'this:wp_getPageList',
			'wp.getAuthors'			=> 'this:wp_getAuthors',
			'wp.getCategories'		=> 'this:mw_getCategories',		
			'wp.getTags'			=> 'this:wp_getTags',
			'wp.newCategory'		=> 'this:wp_newCategory',
			'wp.deleteCategory'		=> 'this:wp_deleteCategory',
			'wp.suggestCategories'	=> 'this:wp_suggestCategories',
			'wp.uploadFile'			=> 'this:mw_newMediaObject',	
			'wp.deleteFile'			=> 'this:wp_deletePost',		
			'wp.getCommentCount'	=> 'this:wp_getCommentCount',
			'wp.getPostStatusList'	=> 'this:wp_getPostStatusList',
			'wp.getPageStatusList'	=> 'this:wp_getPageStatusList',
			'wp.getPageTemplates'	=> 'this:wp_getPageTemplates',
			'wp.getOptions'			=> 'this:wp_getOptions',
			'wp.setOptions'			=> 'this:wp_setOptions',
			'wp.getComment'			=> 'this:wp_getComment',
			'wp.getComments'		=> 'this:wp_getComments',
			'wp.deleteComment'		=> 'this:wp_deleteComment',
			'wp.editComment'		=> 'this:wp_editComment',
			'wp.newComment'			=> 'this:wp_newComment',
			'wp.getCommentStatusList' => 'this:wp_getCommentStatusList',
			'wp.getMediaItem'		=> 'this:wp_getMediaItem',
			'wp.getMediaLibrary'	=> 'this:wp_getMediaLibrary',
			'wp.getPostFormats'     => 'this:wp_getPostFormats',
			'wp.getPostType'		=> 'this:wp_getPostType',
			'wp.getPostTypes'		=> 'this:wp_getPostTypes',
			'wp.getRevisions'		=> 'this:wp_getRevisions',
			'wp.restoreRevision'	=> 'this:wp_restoreRevision',

			
			'blogger.getUsersBlogs' => 'this:blogger_getUsersBlogs',
			'blogger.getUserInfo' => 'this:blogger_getUserInfo',
			'blogger.getPost' => 'this:blogger_getPost',
			'blogger.getRecentPosts' => 'this:blogger_getRecentPosts',
			'blogger.newPost' => 'this:blogger_newPost',
			'blogger.editPost' => 'this:blogger_editPost',
			'blogger.deletePost' => 'this:blogger_deletePost',

			
			'metaWeblog.newPost' => 'this:mw_newPost',
			'metaWeblog.editPost' => 'this:mw_editPost',
			'metaWeblog.getPost' => 'this:mw_getPost',
			'metaWeblog.getRecentPosts' => 'this:mw_getRecentPosts',
			'metaWeblog.getCategories' => 'this:mw_getCategories',
			'metaWeblog.newMediaObject' => 'this:mw_newMediaObject',

			
			
			'metaWeblog.deletePost' => 'this:blogger_deletePost',
			'metaWeblog.getUsersBlogs' => 'this:blogger_getUsersBlogs',

			
			'mt.getCategoryList' => 'this:mt_getCategoryList',
			'mt.getRecentPostTitles' => 'this:mt_getRecentPostTitles',
			'mt.getPostCategories' => 'this:mt_getPostCategories',
			'mt.setPostCategories' => 'this:mt_setPostCategories',
			'mt.supportedMethods' => 'this:mt_supportedMethods',
			'mt.supportedTextFilters' => 'this:mt_supportedTextFilters',
			'mt.getTrackbackPings' => 'this:mt_getTrackbackPings',
			'mt.publishPost' => 'this:mt_publishPost',

			
			'pingback.ping' => 'this:pingback_ping',
			'pingback.extensions.getPingbacks' => 'this:pingback_extensions_getPingbacks',

			'demo.sayHello' => 'this:sayHello',
			'demo.addTwoNumbers' => 'this:addTwoNumbers'
		);

		$var_6->fn_1();

		
		$var_6->var_2 = apply_filters( 'xmlrpc_methods', $var_6->var_2 );
	}

	
	public function fn_2( $var_8, $var_9 ) {
		if ( '_multisite_getUsersBlogs' === $var_8 ) {
			return call_user_func_array( array( $var_6, $var_8 ), $var_9 );
		}
		return false;
	}

	
	public function fn_3() {
		$var_6->IXR_Server($var_6->var_2);
	}

	
	public function fn_4() {
		return 'Hello!';
	}

	
	public function fn_5( $var_10 ) {
		$var_11 = $var_10[0];
		$var_12 = $var_10[1];
		return $var_11 + $var_12;
	}

	
	public function fn_6( $var_14, $var_15 ) {
		
		$var_16 = apply_filters( 'pre_option_enable_xmlrpc', false );
		if ( false === $var_16 ) {
			$var_16 = apply_filters( 'option_enable_xmlrpc', true );
		}

		
		$var_16 = apply_filters( 'xmlrpc_enabled', $var_16 );

		if ( ! $var_16 ) {
			$var_6->var_4 = new class_0( 405, sprintf( __( 'XML-RPC services are disabled on this site.' ) ) );
			return false;
		}

		if ( $var_6->var_5 ) {
			$var_18 = new class_1( 'login_prevented' );
		} else {
			$var_18 = wp_authenticate( $var_14, $var_15 );
		}

		if ( is_wp_error( $var_18 ) ) {
			$var_6->var_4 = new class_0( 403, __( 'Incorrect username or password.' ) );

			
			$var_6->var_5 = true;

			
			$var_6->var_4 = apply_filters( 'xmlrpc_login_error', $var_6->var_4, $var_18 );
			return false;
		}

		wp_set_current_user( $var_18->var_19 );
		return $var_18;
	}

	
	public function fn_7( $var_14, $var_15 ) {
		return (bool) $var_6->fn_6( $var_14, $var_15 );
	}

	
	public function fn_8( &$var_21 ) {
		if ( ! is_array( $var_21 ) )
			return wp_slash( $var_21 );

		foreach ( $var_21 as &$var_22 ) {
			if ( is_array( $var_22 ) )
				$var_6->fn_8( $var_22 );
			elseif ( ! is_object( $var_22 ) )
				$var_22 = wp_slash( $var_22 );
		}
	}

	
	public function fn_9($var_24) {
		$var_24 = (int) $var_24;

		$var_25 = array();

		foreach ( (array) has_meta($var_24) as $var_26 ) {
			
			if ( ! current_user_can( 'edit_post_meta', $var_24 , $var_26['meta_key'] ) )
				continue;

			$var_25[] = array(
				"id"    => $var_26['meta_id'],
				"key"   => $var_26['meta_key'],
				"value" => $var_26['meta_value']
			);
		}

		return $var_25;
	}

	
	public function fn_10($var_24, $var_28) {
		$var_24 = (int) $var_24;

		foreach ( (array) $var_28 as $var_26 ) {
			if ( isset($var_26['id']) ) {
				$var_26['id'] = (int) $var_26['id'];
				$var_29 = get_metadata_by_mid( 'post', $var_26['id'] );
				if ( isset($var_26['key']) ) {
					$var_26['key'] = wp_unslash( $var_26['key'] );
					if ( $var_26['key'] !== $var_29->var_30 )
						continue;
					$var_26['value'] = wp_unslash( $var_26['value'] );
					if ( current_user_can( 'edit_post_meta', $var_24, $var_26['key'] ) )
						update_metadata_by_mid( 'post', $var_26['id'], $var_26['value'] );
				} elseif ( current_user_can( 'delete_post_meta', $var_24, $var_29->var_30 ) ) {
					delete_metadata_by_mid( 'post', $var_26['id'] );
				}
			} elseif ( current_user_can( 'add_post_meta', $var_24, wp_unslash( $var_26['key'] ) ) ) {
				add_post_meta( $var_24, $var_26['key'], $var_26['value'] );
			}
		}
	}

	
	public function fn_1() {
		$var_6->var_3 = array(
			
			'software_name'     => array(
				'desc'          => __( 'Software Name' ),
				'readonly'      => true,
				'value'         => 'WordPress'
			),
			'software_version'  => array(
				'desc'          => __( 'Software Version' ),
				'readonly'      => true,
				'value'         => get_bloginfo( 'version' )
			),
			'blog_url'          => array(
				'desc'          => __( 'WordPress Address (URL)' ),
				'readonly'      => true,
				'option'        => 'siteurl'
			),
			'home_url'          => array(
				'desc'          => __( 'Site Address (URL)' ),
				'readonly'      => true,
				'option'        => 'home'
			),
			'login_url'          => array(
				'desc'          => __( 'Login Address (URL)' ),
				'readonly'      => true,
				'value'         => wp_login_url( )
			),
			'admin_url'          => array(
				'desc'          => __( 'The URL to the admin area' ),
				'readonly'      => true,
				'value'         => get_admin_url( )
			),
			'image_default_link_type' => array(
				'desc'          => __( 'Image default link type' ),
				'readonly'      => true,
				'option'        => 'image_default_link_type'
			),
			'image_default_size' => array(
				'desc'          => __( 'Image default size' ),
				'readonly'      => true,
				'option'        => 'image_default_size'
			),
			'image_default_align' => array(
				'desc'          => __( 'Image default align' ),
				'readonly'      => true,
				'option'        => 'image_default_align'
			),
			'template'          => array(
				'desc'          => __( 'Template' ),
				'readonly'      => true,
				'option'        => 'template'
			),
			'stylesheet'        => array(
				'desc'          => __( 'Stylesheet' ),
				'readonly'      => true,
				'option'        => 'stylesheet'
			),
			'post_thumbnail'    => array(
				'desc'          => __('Post Thumbnail'),
				'readonly'      => true,
				'value'         => current_theme_supports( 'post-thumbnails' )
			),

			
			'time_zone'         => array(
				'desc'          => __( 'Time Zone' ),
				'readonly'      => false,
				'option'        => 'gmt_offset'
			),
			'blog_title'        => array(
				'desc'          => __( 'Site Title' ),
				'readonly'      => false,
				'option'        => 'blogname'
			),
			'blog_tagline'      => array(
				'desc'          => __( 'Site Tagline' ),
				'readonly'      => false,
				'option'        => 'blogdescription'
			),
			'date_format'       => array(
				'desc'          => __( 'Date Format' ),
				'readonly'      => false,
				'option'        => 'date_format'
			),
			'time_format'       => array(
				'desc'          => __( 'Time Format' ),
				'readonly'      => false,
				'option'        => 'time_format'
			),
			'users_can_register' => array(
				'desc'          => __( 'Allow new users to sign up' ),
				'readonly'      => false,
				'option'        => 'users_can_register'
			),
			'thumbnail_size_w'  => array(
				'desc'          => __( 'Thumbnail Width' ),
				'readonly'      => false,
				'option'        => 'thumbnail_size_w'
			),
			'thumbnail_size_h'  => array(
				'desc'          => __( 'Thumbnail Height' ),
				'readonly'      => false,
				'option'        => 'thumbnail_size_h'
			),
			'thumbnail_crop'    => array(
				'desc'          => __( 'Crop thumbnail to exact dimensions' ),
				'readonly'      => false,
				'option'        => 'thumbnail_crop'
			),
			'medium_size_w'     => array(
				'desc'          => __( 'Medium size image width' ),
				'readonly'      => false,
				'option'        => 'medium_size_w'
			),
			'medium_size_h'     => array(
				'desc'          => __( 'Medium size image height' ),
				'readonly'      => false,
				'option'        => 'medium_size_h'
			),
			'medium_large_size_w'   => array(
				'desc'          => __( 'Medium-Large size image width' ),
				'readonly'      => false,
				'option'        => 'medium_large_size_w'
			),
			'medium_large_size_h'   => array(
				'desc'          => __( 'Medium-Large size image height' ),
				'readonly'      => false,
				'option'        => 'medium_large_size_h'
			),
			'large_size_w'      => array(
				'desc'          => __( 'Large size image width' ),
				'readonly'      => false,
				'option'        => 'large_size_w'
			),
			'large_size_h'      => array(
				'desc'          => __( 'Large size image height' ),
				'readonly'      => false,
				'option'        => 'large_size_h'
			),
			'default_comment_status' => array(
				'desc'          => __( 'Allow people to post comments on new articles' ),
				'readonly'      => false,
				'option'        => 'default_comment_status'
			),
			'default_ping_status' => array(
				'desc'          => __( 'Allow link notifications from other blogs (pingbacks and trackbacks) on new articles' ),
				'readonly'      => false,
				'option'        => 'default_ping_status'
			)
		);

		
		$var_6->var_3 = apply_filters( 'xmlrpc_blog_options', $var_6->var_3 );
	}

	
	public function fn_11( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 2 ) ) {
			return $var_6->var_4;
		}

		
		if ( !is_multisite() ) {
			array_unshift( $var_10, 1 );
			return $var_6->fn_13( $var_10 );
		}

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[0];
		$var_15 = $var_10[1];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getUsersBlogs' );

		$var_33 = (array) get_blogs_of_user( $var_18->var_19 );
		$var_34 = array();
		$var_35 = 0;
		$var_36 = get_active_blog_for_user( $var_18->var_19 );
		if ( $var_36 ) {
			$var_35 = (int) $var_36->var_37;
		}

		foreach ( $var_33 as $var_38 ) {
			
			if ( $var_38->var_39 != get_current_network_id() )
				continue;

			$var_37 = $var_38->var_40;

			switch_to_blog( $var_37 );

			$var_41 = current_user_can( 'manage_options' );
			$var_42 = ( (int) $var_37 === $var_35 );

			$var_34[] = array(
				'isAdmin'   => $var_41,
				'isPrimary' => $var_42,
				'url'       => home_url( '/' ),
				'blogid'    => (string) $var_37,
				'blogName'  => get_option( 'blogname' ),
				'xmlrpc'    => site_url( 'xmlrpc.php', 'rpc' ),
			);

			restore_current_blog();
		}

		return $var_34;
	}

	
	protected function fn_12( $var_10, $var_43 ) {
		if ( count( $var_10 ) < $var_43 ) {
			$var_6->var_4 = new class_0( 400, __( 'Insufficient arguments passed to this XML-RPC method.' ) );
			return false;
		}

		return true;
	}

	
	protected function fn_14( $var_45, $var_28 ) {
		$var_46 = array(
			'name' => $var_45->var_8,
			'label' => $var_45->var_47,
			'hierarchical' => (bool) $var_45->var_48,
			'public' => (bool) $var_45->var_49,
			'show_ui' => (bool) $var_45->var_50,
			'_builtin' => (bool) $var_45->var_51,
		);

		if ( in_array( 'labels', $var_28 ) )
			$var_46['labels'] = (array) $var_45->var_52;

		if ( in_array( 'cap', $var_28 ) )
			$var_46['cap'] = (array) $var_45->var_53;

		if ( in_array( 'menu', $var_28 ) )
			$var_46['show_in_menu'] = (bool) $var_46->var_54;

		if ( in_array( 'object_type', $var_28 ) )
			$var_46['object_type'] = array_unique( (array) $var_45->var_55 );

		
		return apply_filters( 'xmlrpc_prepare_taxonomy', $var_46, $var_45, $var_28 );
	}

	
	protected function fn_15( $var_57 ) {
		$var_58 = $var_57;
		if ( ! is_array( $var_58 ) )
			$var_58 = get_object_vars( $var_58 );

		
		$var_58['term_id'] = strval( $var_58['term_id'] );
		$var_58['term_group'] = strval( $var_58['term_group'] );
		$var_58['term_taxonomy_id'] = strval( $var_58['term_taxonomy_id'] );
		$var_58['parent'] = strval( $var_58['parent'] );

		
		$var_58['count'] = intval( $var_58['count'] );

		
		return apply_filters( 'xmlrpc_prepare_term', $var_58, $var_57 );
	}

	
	protected function fn_16( $var_60 ) {
		if ( $var_60 === '0000-00-00 00:00:00' ) {
			return new class_2( '00000000T00:00:00Z' );
		}
		return new class_2( mysql2date( 'Ymd\TH:i:s', $var_60, false ) );
	}

	
	protected function fn_17( $var_63, $var_60 ) {
		if ( $var_60 !== '0000-00-00 00:00:00' && $var_63 === '0000-00-00 00:00:00' ) {
			return new class_2( get_gmt_from_date( mysql2date( 'Y-m-d H:i:s', $var_60, false ), 'Ymd\TH:i:s' ) );
		}
		return $var_6->fn_16( $var_63 );
	}

	
	protected function fn_18( $var_65, $var_28 ) {
		
		$var_66 = array( 'post_id' => strval( $var_65['ID'] ) );

		
		$var_67 = array(
			'post_title'        => $var_65['post_title'],
			'post_date'         => $var_6->fn_16( $var_65['post_date'] ),
			'post_date_gmt'     => $var_6->fn_17( $var_65['post_date_gmt'], $var_65['post_date'] ),
			'post_modified'     => $var_6->fn_16( $var_65['post_modified'] ),
			'post_modified_gmt' => $var_6->fn_17( $var_65['post_modified_gmt'], $var_65['post_modified'] ),
			'post_status'       => $var_65['post_status'],
			'post_type'         => $var_65['post_type'],
			'post_name'         => $var_65['post_name'],
			'post_author'       => $var_65['post_author'],
			'post_password'     => $var_65['post_password'],
			'post_excerpt'      => $var_65['post_excerpt'],
			'post_content'      => $var_65['post_content'],
			'post_parent'       => strval( $var_65['post_parent'] ),
			'post_mime_type'    => $var_65['post_mime_type'],
			'link'              => get_permalink( $var_65['ID'] ),
			'guid'              => $var_65['guid'],
			'menu_order'        => intval( $var_65['menu_order'] ),
			'comment_status'    => $var_65['comment_status'],
			'ping_status'       => $var_65['ping_status'],
			'sticky'            => ( $var_65['post_type'] === 'post' && is_sticky( $var_65['ID'] ) ),
		);

		
		$var_67['post_thumbnail'] = array();
		$var_68 = get_post_thumbnail_id( $var_65['ID'] );
		if ( $var_68 ) {
			$var_69 = current_theme_supports('post-thumbnail') ? 'post-thumbnail' : 'thumbnail';
			$var_67['post_thumbnail'] = $var_6->fn_19( get_post( $var_68 ), $var_69 );
		}

		
		if ( $var_67['post_status'] === 'future' )
			$var_67['post_status'] = 'publish';

		
		$var_67['post_format'] = get_post_format( $var_65['ID'] );
		if ( empty( $var_67['post_format'] ) )
			$var_67['post_format'] = 'standard';

		
		if ( in_array( 'post', $var_28 ) ) {
			$var_66 = array_merge( $var_66, $var_67 );
		} else {
			$var_71 = array_intersect_key( $var_67, array_flip( $var_28 ) );
			$var_66 = array_merge( $var_66, $var_71 );
		}

		$var_72 = in_array( 'taxonomies', $var_28 );

		if ( $var_72 || in_array( 'terms', $var_28 ) ) {
			$var_73 = get_object_taxonomies( $var_65['post_type'], 'names' );
			$var_74 = wp_get_object_terms( $var_65['ID'], $var_73 );
			$var_66['terms'] = array();
			foreach ( $var_74 as $var_57 ) {
				$var_66['terms'][] = $var_6->fn_15( $var_57 );
			}
		}

		if ( in_array( 'custom_fields', $var_28 ) )
			$var_66['custom_fields'] = $var_6->fn_9( $var_65['ID'] );

		if ( in_array( 'enclosure', $var_28 ) ) {
			$var_66['enclosure'] = array();
			$var_75 = (array) get_post_meta( $var_65['ID'], 'enclosure' );
			if ( ! empty( $var_75 ) ) {
				$var_76 = explode( "\n", $var_75[0] );
				$var_66['enclosure']['url'] = trim( htmlspecialchars( $var_76[0] ) );
				$var_66['enclosure']['length'] = (int) trim( $var_76[1] );
				$var_66['enclosure']['type'] = trim( $var_76[2] );
			}
		}

		
		return apply_filters( 'xmlrpc_prepare_post', $var_66, $var_65, $var_28 );
	}

	
	protected function fn_20( $var_78, $var_28 ) {
		$var_79 = array(
			'name' => $var_78->var_8,
			'label' => $var_78->var_47,
			'hierarchical' => (bool) $var_78->var_48,
			'public' => (bool) $var_78->var_49,
			'show_ui' => (bool) $var_78->var_50,
			'_builtin' => (bool) $var_78->var_51,
			'has_archive' => (bool) $var_78->var_80,
			'supports' => get_all_post_type_supports( $var_78->var_8 ),
		);

		if ( in_array( 'labels', $var_28 ) ) {
			$var_79['labels'] = (array) $var_78->var_52;
		}

		if ( in_array( 'cap', $var_28 ) ) {
			$var_79['cap'] = (array) $var_78->var_53;
			$var_79['map_meta_cap'] = (bool) $var_78->var_81;
		}

		if ( in_array( 'menu', $var_28 ) ) {
			$var_79['menu_position'] = (int) $var_78->var_82;
			$var_79['menu_icon'] = $var_78->var_83;
			$var_79['show_in_menu'] = (bool) $var_78->var_54;
		}

		if ( in_array( 'taxonomies', $var_28 ) )
			$var_79['taxonomies'] = get_object_taxonomies( $var_78->var_8, 'names' );

		
		return apply_filters( 'xmlrpc_prepare_post_type', $var_79, $var_78 );
	}

	
	protected function fn_19( $var_84, $var_69 = 'thumbnail' ) {
		$var_85 = array(
			'attachment_id'    => strval( $var_84->var_19 ),
			'date_created_gmt' => $var_6->fn_17( $var_84->var_86, $var_84->var_87 ),
			'parent'           => $var_84->var_88,
			'link'             => wp_get_attachment_url( $var_84->var_19 ),
			'title'            => $var_84->var_89,
			'caption'          => $var_84->var_90,
			'description'      => $var_84->var_91,
			'metadata'         => wp_get_attachment_metadata( $var_84->var_19 ),
			'type'             => $var_84->var_92
		);

		$var_93 = image_downsize( $var_84->var_19, $var_69 );
		if ( $var_93 )
			$var_85['thumbnail'] = $var_93[0];
		else
			$var_85['thumbnail'] = $var_85['link'];

		
		return apply_filters( 'xmlrpc_prepare_media_item', $var_85, $var_84, $var_69 );
	}

	
	protected function fn_21( $var_95 ) {
		
		$var_96 = get_extended( $var_95->var_91 );
		$var_97 = get_permalink( $var_95->var_19 );

		
		$var_98 = "";
		if ( ! empty( $var_95->var_88 ) ) {
			$var_99 = get_post( $var_95->var_88 );
			$var_98 = $var_99->var_89;
		}

		
		$var_100 = comments_open( $var_95->var_19 ) ? 1 : 0;
		$var_101 = pings_open( $var_95->var_19 ) ? 1 : 0;

		
		$var_102 = $var_6->fn_16( $var_95->var_87 );
		$var_103 = $var_6->fn_17( $var_95->var_86, $var_95->var_87 );

		
		$var_104 = array();
		if ( is_object_in_taxonomy( 'page', 'category' ) ) {
			foreach ( wp_get_post_categories( $var_95->var_19 ) as $var_105 ) {
				$var_104[] = get_cat_name( $var_105 );
			}
		}

		
		$var_106 = get_userdata( $var_95->var_107 );

		$var_108 = get_page_template_slug( $var_95->var_19 );
		if ( empty( $var_108 ) )
			$var_108 = 'default';

		$var_109 = array(
			'dateCreated'            => $var_102,
			'userid'                 => $var_95->var_107,
			'page_id'                => $var_95->var_19,
			'page_status'            => $var_95->var_110,
			'description'            => $var_96['main'],
			'title'                  => $var_95->var_89,
			'link'                   => $var_97,
			'permaLink'              => $var_97,
			'categories'             => $var_104,
			'excerpt'                => $var_95->var_90,
			'text_more'              => $var_96['extended'],
			'mt_allow_comments'      => $var_100,
			'mt_allow_pings'         => $var_101,
			'wp_slug'                => $var_95->var_111,
			'wp_password'            => $var_95->var_112,
			'wp_author'              => $var_106->var_113,
			'wp_page_parent_id'      => $var_95->var_88,
			'wp_page_parent_title'   => $var_98,
			'wp_page_order'          => $var_95->var_114,
			'wp_author_id'           => (string) $var_106->var_19,
			'wp_author_display_name' => $var_106->var_113,
			'date_created_gmt'       => $var_103,
			'custom_fields'          => $var_6->fn_9( $var_95->var_19 ),
			'wp_page_template'       => $var_108
		);

		
		return apply_filters( 'xmlrpc_prepare_page', $var_109, $var_95 );
	}

	
	protected function fn_22( $var_116 ) {
		
		$var_117 = $var_6->fn_17( $var_116->var_117, $var_116->var_118 );

		if ( '0' == $var_116->var_119 ) {
			$var_120 = 'hold';
		} elseif ( 'spam' == $var_116->var_119 ) {
			$var_120 = 'spam';
		} elseif ( '1' == $var_116->var_119 ) {
			$var_120 = 'approve';
		} else {
			$var_120 = $var_116->var_119;
		}
		$var_121 = array(
			'date_created_gmt' => $var_117,
			'user_id'          => $var_116->var_122,
			'comment_id'       => $var_116->var_123,
			'parent'           => $var_116->var_124,
			'status'           => $var_120,
			'content'          => $var_116->var_125,
			'link'             => get_comment_link($var_116),
			'post_id'          => $var_116->var_126,
			'post_title'       => get_the_title($var_116->var_126),
			'author'           => $var_116->var_127,
			'author_url'       => $var_116->var_128,
			'author_email'     => $var_116->var_129,
			'author_ip'        => $var_116->var_130,
			'type'             => $var_116->var_131,
		);

		
		return apply_filters( 'xmlrpc_prepare_comment', $var_121, $var_116 );
	}

	
	protected function fn_23( $var_18, $var_28 ) {
		$var_133 = array( 'user_id' => strval( $var_18->var_19 ) );

		$var_134 = array(
			'username'          => $var_18->var_135,
			'first_name'        => $var_18->var_136,
			'last_name'         => $var_18->var_137,
			'registered'        => $var_6->fn_16( $var_18->var_138 ),
			'bio'               => $var_18->var_139,
			'email'             => $var_18->var_140,
			'nickname'          => $var_18->var_141,
			'nicename'          => $var_18->var_142,
			'url'               => $var_18->var_143,
			'display_name'      => $var_18->var_113,
			'roles'             => $var_18->var_144,
		);

		if ( in_array( 'all', $var_28 ) ) {
			$var_133 = array_merge( $var_133, $var_134 );
		} else {
			if ( in_array( 'basic', $var_28 ) ) {
				$var_145 = array( 'username', 'email', 'registered', 'display_name', 'nicename' );
				$var_28 = array_merge( $var_28, $var_145 );
			}
			$var_71 = array_intersect_key( $var_134, array_flip( $var_28 ) );
			$var_133 = array_merge( $var_133, $var_71 );
		}

		
		return apply_filters( 'xmlrpc_prepare_user', $var_133, $var_18, $var_28 );
	}

	
	public function fn_24( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_146 = $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		if ( isset( $var_146['post_date'] ) && ! ( $var_146['post_date'] instanceof var_61 ) ) {
			$var_146['post_date'] = $var_6->fn_16( $var_146['post_date'] );
		}

		
		
		if ( isset( $var_146['post_date_gmt'] ) && ! ( $var_146['post_date_gmt'] instanceof var_61 ) ) {
			if ( $var_146['post_date_gmt'] == '0000-00-00 00:00:00' || isset( $var_146['post_date'] ) ) {
				unset( $var_146['post_date_gmt'] );
			} else {
				$var_146['post_date_gmt'] = $var_6->fn_16( $var_146['post_date_gmt'] );
			}
		}

		
		do_action( 'xmlrpc_call', 'wp.newPost' );

		unset( $var_146['ID'] );

		return $var_6->fn_25( $var_18, $var_146 );
	}

	
	private function fn_26( $var_43 ) {
		return $var_43 > 1;
	}

	
	private function fn_27( $var_149, $var_150 = false ) {
		$var_78 = get_post_type_object( $var_149['post_type'] );

		
		if ( 'private' === $var_149['post_status'] || ! empty( $var_149['post_password'] ) ) {
			
			if ( ! empty( $var_149['sticky'] ) ) {
				return new class_0( 401, __( 'Sorry, you cannot stick a private post.' ) );
			}

			if ( $var_150 ) {
				unstick_post( $var_149['ID'] );
			}
		} elseif ( isset( $var_149['sticky'] ) )  {
			if ( ! current_user_can( $var_78->var_53->var_151 ) ) {
				return new class_0( 401, __( 'Sorry, you are not allowed to make posts sticky.' ) );
			}

			$var_152 = wp_validate_boolean( $var_149['sticky'] );
			if ( $var_152 ) {
				stick_post( $var_149['ID'] );
			} else {
				unstick_post( $var_149['ID'] );
			}
		}
	}

	
	protected function fn_25( $var_18, $var_146 ) {
		$var_153 = array(
			'post_status'    => 'draft',
			'post_type'      => 'post',
			'post_author'    => null,
			'post_password'  => null,
			'post_excerpt'   => null,
			'post_content'   => null,
			'post_title'     => null,
			'post_date'      => null,
			'post_date_gmt'  => null,
			'post_format'    => null,
			'post_name'      => null,
			'post_thumbnail' => null,
			'post_parent'    => null,
			'ping_status'    => null,
			'comment_status' => null,
			'custom_fields'  => null,
			'terms_names'    => null,
			'terms'          => null,
			'sticky'         => null,
			'enclosure'      => null,
			'ID'             => null,
		);

		$var_149 = wp_parse_args( array_intersect_key( $var_146, $var_153 ), $var_153 );

		$var_78 = get_post_type_object( $var_149['post_type'] );
		if ( ! $var_78 )
			return new class_0( 403, __( 'Invalid post type.' ) );

		$var_150 = ! empty( $var_149['ID'] );

		if ( $var_150 ) {
			if ( ! get_post( $var_149['ID'] ) )
				return new class_0( 401, __( 'Invalid post ID.' ) );
			if ( ! current_user_can( 'edit_post', $var_149['ID'] ) )
				return new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );
			if ( $var_149['post_type'] != get_post_type( $var_149['ID'] ) )
				return new class_0( 401, __( 'The post type may not be changed.' ) );
		} else {
			if ( ! current_user_can( $var_78->var_53->var_154 ) || ! current_user_can( $var_78->var_53->var_155 ) )
				return new class_0( 401, __( 'Sorry, you are not allowed to post on this site.' ) );
		}

		switch ( $var_149['post_status'] ) {
			case 'draft':
			case 'pending':
				break;
			case 'private':
				if ( ! current_user_can( $var_78->var_53->var_156 ) )
					return new class_0( 401, __( 'Sorry, you are not allowed to create private posts in this post type.' ) );
				break;
			case 'publish':
			case 'future':
				if ( ! current_user_can( $var_78->var_53->var_156 ) )
					return new class_0( 401, __( 'Sorry, you are not allowed to publish posts in this post type.' ) );
				break;
			default:
				if ( ! get_post_status_object( $var_149['post_status'] ) )
					$var_149['post_status'] = 'draft';
			break;
		}

		if ( ! empty( $var_149['post_password'] ) && ! current_user_can( $var_78->var_53->var_156 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to create password protected posts in this post type.' ) );

		$var_149['post_author'] = absint( $var_149['post_author'] );
		if ( ! empty( $var_149['post_author'] ) && $var_149['post_author'] != $var_18->var_19 ) {
			if ( ! current_user_can( $var_78->var_53->var_151 ) )
				return new class_0( 401, __( 'Sorry, you are not allowed to create posts as this user.' ) );

			$var_106 = get_userdata( $var_149['post_author'] );

			if ( ! $var_106 )
				return new class_0( 404, __( 'Invalid author ID.' ) );
		} else {
			$var_149['post_author'] = $var_18->var_19;
		}

		if ( isset( $var_149['comment_status'] ) && $var_149['comment_status'] != 'open' && $var_149['comment_status'] != 'closed' )
			unset( $var_149['comment_status'] );

		if ( isset( $var_149['ping_status'] ) && $var_149['ping_status'] != 'open' && $var_149['ping_status'] != 'closed' )
			unset( $var_149['ping_status'] );

		
		if ( ! empty( $var_149['post_date_gmt'] ) ) {
			
			$var_157 = rtrim( $var_149['post_date_gmt']->getIso(), 'Z' ) . 'Z';
		} elseif ( ! empty( $var_149['post_date'] ) ) {
			$var_157 = $var_149['post_date']->getIso();
		}

		
		$var_149['edit_date'] = false;

		if ( ! empty( $var_157 ) ) {
			$var_149['post_date'] = get_date_from_gmt( iso8601_to_datetime( $var_157 ) );
			$var_149['post_date_gmt'] = iso8601_to_datetime( $var_157, 'GMT' );

			
			$var_149['edit_date'] = true;
		}

		if ( ! isset( $var_149['ID'] ) )
			$var_149['ID'] = get_default_post_to_edit( $var_149['post_type'], true )->var_19;
		$var_159 = $var_149['ID'];

		if ( $var_149['post_type'] == 'post' ) {
			$var_4 = $var_6->fn_27( $var_149, $var_150 );
			if ( $var_4 ) {
				return $var_4;
			}
		}

		if ( isset( $var_149['post_thumbnail'] ) ) {
			
			if ( ! $var_149['post_thumbnail'] )
				delete_post_thumbnail( $var_159 );
			elseif ( ! get_post( absint( $var_149['post_thumbnail'] ) ) )
				return new class_0( 404, __( 'Invalid attachment ID.' ) );
			set_post_thumbnail( $var_159, $var_149['post_thumbnail'] );
			unset( $var_146['post_thumbnail'] );
		}

		if ( isset( $var_149['custom_fields'] ) )
			$var_6->fn_10( $var_159, $var_149['custom_fields'] );

		if ( isset( $var_149['terms'] ) || isset( $var_149['terms_names'] ) ) {
			$var_73 = get_object_taxonomies( $var_149['post_type'], 'objects' );

			
			$var_74 = array();

			
			if ( isset( $var_149['terms'] ) && is_array( $var_149['terms'] ) ) {
				$var_160 = array_keys( $var_149['terms'] );

				
				foreach ( $var_160 as $var_45 ) {
					if ( ! array_key_exists( $var_45 , $var_73 ) )
						return new class_0( 401, __( 'Sorry, one of the given taxonomies is not supported by the post type.' ) );

					if ( ! current_user_can( $var_73[$var_45]->var_53->var_161 ) )
						return new class_0( 401, __( 'Sorry, you are not allowed to assign a term to one of the given taxonomies.' ) );

					$var_162 = $var_149['terms'][$var_45];
					$var_74[ $var_45 ] = array();
					foreach ( $var_162 as $var_163 ) {
						$var_57 = get_term_by( 'id', $var_163, $var_45 );

						if ( ! $var_57 )
							return new class_0( 403, __( 'Invalid term ID.' ) );

						$var_74[$var_45][] = (int) $var_163;
					}
				}
			}

			
			if ( isset( $var_149['terms_names'] ) && is_array( $var_149['terms_names'] ) ) {
				$var_160 = array_keys( $var_149['terms_names'] );

				foreach ( $var_160 as $var_45 ) {
					if ( ! array_key_exists( $var_45 , $var_73 ) )
						return new class_0( 401, __( 'Sorry, one of the given taxonomies is not supported by the post type.' ) );

					if ( ! current_user_can( $var_73[$var_45]->var_53->var_161 ) )
						return new class_0( 401, __( 'Sorry, you are not allowed to assign a term to one of the given taxonomies.' ) );

					
					$var_164 = array();
					if ( is_taxonomy_hierarchical( $var_45 ) ) {
						$var_165 = get_terms( $var_45, array( 'fields' => 'names', 'hide_empty' => false ) );

						
						$var_166 = array_count_values( $var_165 );

						
						$var_167 = array_filter( $var_166, array( $var_6, '_is_greater_than_one') );

						$var_164 = array_keys( $var_167 );
					}

					$var_168 = $var_149['terms_names'][$var_45];
					foreach ( $var_168 as $var_169 ) {
						if ( in_array( $var_169, $var_164 ) )
							return new class_0( 401, __( 'Ambiguous term name used in a hierarchical taxonomy. Please use term ID instead.' ) );

						$var_57 = get_term_by( 'name', $var_169, $var_45 );

						if ( ! $var_57 ) {
							
							if ( ! current_user_can( $var_73[$var_45]->var_53->var_170 ) )
								return new class_0( 401, __( 'Sorry, you are not allowed to add a term to one of the given taxonomies.' ) );

							
							$var_171 = wp_insert_term( $var_169, $var_45 );
							if ( is_wp_error( $var_171 ) )
								return new class_0( 500, $var_171->get_error_message() );

							$var_74[$var_45][] = (int) $var_171['term_id'];
						} else {
							$var_74[$var_45][] = (int) $var_57->var_163;
						}
					}
				}
			}

			$var_149['tax_input'] = $var_74;
			unset( $var_149['terms'], $var_149['terms_names'] );
		}

		if ( isset( $var_149['post_format'] ) ) {
			$var_173 = set_post_format( $var_159, $var_149['post_format'] );

			if ( is_wp_error( $var_173 ) )
				return new class_0( 500, $var_173->get_error_message() );

			unset( $var_149['post_format'] );
		}

		
		$var_174 = isset( $var_149['enclosure'] ) ? $var_149['enclosure'] : null;
		$var_6->add_enclosure_if_new( $var_159, $var_174 );

		$var_6->attach_uploads( $var_159, $var_149['post_content'] );

		
		$var_149 = apply_filters( 'xmlrpc_wp_insert_post_data', $var_149, $var_146 );

		$var_159 = $var_150 ? wp_update_post( $var_149, true ) : wp_insert_post( $var_149, true );
		if ( is_wp_error( $var_159 ) )
			return new class_0( 500, $var_159->get_error_message() );

		if ( ! $var_159 )
			return new class_0( 401, __( 'Sorry, your entry could not be posted.' ) );

		return strval( $var_159 );
	}

	
	public function fn_28( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 5 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_24        = (int) $var_10[3];
		$var_146 = $var_10[4];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.editPost' );

		$var_65 = get_post( $var_24, var_177 );

		if ( empty( $var_65['ID'] ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( isset( $var_146['if_not_modified_since'] ) ) {
			
			if ( mysql2date( 'U', $var_65['post_modified_gmt'] ) > $var_146['if_not_modified_since']->getTimestamp() ) {
				return new class_0( 409, __( 'There is a revision of this post that is more recent.' ) );
			}
		}

		
		$var_65['post_date'] = $var_6->fn_16( $var_65['post_date'] );

		
		if ( $var_65['post_date_gmt'] == '0000-00-00 00:00:00' || isset( $var_146['post_date'] ) )
			unset( $var_65['post_date_gmt'] );
		else
			$var_65['post_date_gmt'] = $var_6->fn_16( $var_65['post_date_gmt'] );

		$var_6->fn_8( $var_65 );
		$var_179 = array_merge( $var_65, $var_146 );

		$var_180 = $var_6->fn_25( $var_18, $var_179 );
		if ( $var_180 instanceof var_17 )
			return $var_180;

		return true;
	}

	
	public function fn_29( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14   = $var_10[1];
		$var_15   = $var_10[2];
		$var_24    = (int) $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.deletePost' );

		$var_65 = get_post( $var_24, var_177 );
		if ( empty( $var_65['ID'] ) ) {
			return new class_0( 404, __( 'Invalid post ID.' ) );
		}

		if ( ! current_user_can( 'delete_post', $var_24 ) ) {
			return new class_0( 401, __( 'Sorry, you are not allowed to delete this post.' ) );
		}

		$var_181 = wp_delete_post( $var_24 );

		if ( ! $var_181 ) {
			return new class_0( 500, __( 'The post cannot be deleted.' ) );
		}

		return true;
	}

	
	public function fn_30( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_24  = (int) $var_10[3];

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_post_fields', array( 'post', 'terms', 'custom_fields' ), 'wp.getPost' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getPost' );

		$var_65 = get_post( $var_24, var_177 );

		if ( empty( $var_65['ID'] ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( ! current_user_can( 'edit_post', $var_24 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		return $var_6->fn_18( $var_65, $var_28 );
	}

	
	public function fn_31( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_182   = isset( $var_10[3] ) ? $var_10[3] : array();

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_post_fields', array( 'post', 'terms', 'custom_fields' ), 'wp.getPosts' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getPosts' );

		$var_183 = array();

		if ( isset( $var_182['post_type'] ) ) {
			$var_78 = get_post_type_object( $var_182['post_type'] );
			if ( ! ( (bool) $var_78 ) )
				return new class_0( 403, __( 'Invalid post type.' ) );
		} else {
			$var_78 = get_post_type_object( 'post' );
		}

		if ( ! current_user_can( $var_78->var_53->var_155 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit posts in this post type.' ) );

		$var_183['post_type'] = $var_78->var_8;

		if ( isset( $var_182['post_status'] ) )
			$var_183['post_status'] = $var_182['post_status'];

		if ( isset( $var_182['number'] ) )
			$var_183['numberposts'] = absint( $var_182['number'] );

		if ( isset( $var_182['offset'] ) )
			$var_183['offset'] = absint( $var_182['offset'] );

		if ( isset( $var_182['orderby'] ) ) {
			$var_183['orderby'] = $var_182['orderby'];

			if ( isset( $var_182['order'] ) )
				$var_183['order'] = $var_182['order'];
		}

		if ( isset( $var_182['s'] ) ) {
			$var_183['s'] = $var_182['s'];
		}

		$var_184 = wp_get_recent_posts( $var_183 );

		if ( ! $var_184 )
			return array();

		
		$var_34 = array();

		foreach ( $var_184 as $var_65 ) {
			if ( ! current_user_can( 'edit_post', $var_65['ID'] ) )
				continue;

			$var_34[] = $var_6->fn_18( $var_65, $var_28 );
		}

		return $var_34;
	}

	
	public function fn_32( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_146 = $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.newTerm' );

		if ( ! taxonomy_exists( $var_146['taxonomy'] ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_146['taxonomy'] );

		if ( ! current_user_can( $var_45->var_53->var_170 ) ) {
			return new class_0( 401, __( 'Sorry, you are not allowed to create terms in this taxonomy.' ) );
		}

		$var_45 = (array) $var_45;

		
		$var_185 = array();

		$var_185['name'] = trim( $var_146['name'] );
		if ( empty( $var_185['name'] ) )
			return new class_0( 403, __( 'The term name cannot be empty.' ) );

		if ( isset( $var_146['parent'] ) ) {
			if ( ! $var_45['hierarchical'] )
				return new class_0( 403, __( 'This taxonomy is not hierarchical.' ) );

			$var_186 = (int) $var_146['parent'];
			$var_187 = get_term( $var_186 , $var_45['name'] );

			if ( is_wp_error( $var_187 ) )
				return new class_0( 500, $var_187->get_error_message() );

			if ( ! $var_187 )
				return new class_0( 403, __( 'Parent term does not exist.' ) );

			$var_185['parent'] = $var_146['parent'];
		}

		if ( isset( $var_146['description'] ) )
			$var_185['description'] = $var_146['description'];

		if ( isset( $var_146['slug'] ) )
			$var_185['slug'] = $var_146['slug'];

		$var_57 = wp_insert_term( $var_185['name'] , $var_45['name'] , $var_185 );

		if ( is_wp_error( $var_57 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_57 )
			return new class_0( 500, __( 'Sorry, your term could not be created.' ) );

		return strval( $var_57['term_id'] );
	}

	
	public function fn_33( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 5 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_163        = (int) $var_10[3];
		$var_146 = $var_10[4];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.editTerm' );

		if ( ! taxonomy_exists( $var_146['taxonomy'] ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_146['taxonomy'] );

		$var_45 = (array) $var_45;

		
		$var_185 = array();

		$var_57 = get_term( $var_163 , $var_146['taxonomy'] );

		if ( is_wp_error( $var_57 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_57 )
			return new class_0( 404, __( 'Invalid term ID.' ) );

		if ( ! current_user_can( 'edit_term', $var_163 ) ) {
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this term.' ) );
		}

		if ( isset( $var_146['name'] ) ) {
			$var_185['name'] = trim( $var_146['name'] );

			if ( empty( $var_185['name'] ) )
				return new class_0( 403, __( 'The term name cannot be empty.' ) );
		}

		if ( ! empty( $var_146['parent'] ) ) {
			if ( ! $var_45['hierarchical'] )
				return new class_0( 403, __( "This taxonomy is not hierarchical so you can't set a parent." ) );

			$var_186 = (int) $var_146['parent'];
			$var_187 = get_term( $var_186 , $var_45['name'] );

			if ( is_wp_error( $var_187 ) )
				return new class_0( 500, $var_187->get_error_message() );

			if ( ! $var_187 )
				return new class_0( 403, __( 'Parent term does not exist.' ) );

			$var_185['parent'] = $var_146['parent'];
		}

		if ( isset( $var_146['description'] ) )
			$var_185['description'] = $var_146['description'];

		if ( isset( $var_146['slug'] ) )
			$var_185['slug'] = $var_146['slug'];

		$var_57 = wp_update_term( $var_163 , $var_45['name'] , $var_185 );

		if ( is_wp_error( $var_57 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_57 )
			return new class_0( 500, __( 'Sorry, editing the term failed.' ) );

		return true;
	}

	
	public function fn_34( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 5 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14           = $var_10[1];
		$var_15           = $var_10[2];
		$var_45           = $var_10[3];
		$var_163            = (int) $var_10[4];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.deleteTerm' );

		if ( ! taxonomy_exists( $var_45 ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_45 );
		$var_57 = get_term( $var_163, $var_45->var_8 );

		if ( is_wp_error( $var_57 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_57 )
			return new class_0( 404, __( 'Invalid term ID.' ) );

		if ( ! current_user_can( 'delete_term', $var_163 ) ) {
			return new class_0( 401, __( 'Sorry, you are not allowed to delete this term.' ) );
		}

		$var_181 = wp_delete_term( $var_163, $var_45->var_8 );

		if ( is_wp_error( $var_181 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_181 )
			return new class_0( 500, __( 'Sorry, deleting the term failed.' ) );

		return $var_181;
	}

	
	public function fn_35( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 5 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14           = $var_10[1];
		$var_15           = $var_10[2];
		$var_45           = $var_10[3];
		$var_163            = (int) $var_10[4];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getTerm' );

		if ( ! taxonomy_exists( $var_45 ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_45 );

		$var_57 = get_term( $var_163 , $var_45->var_8, var_177 );

		if ( is_wp_error( $var_57 ) )
			return new class_0( 500, $var_57->get_error_message() );

		if ( ! $var_57 )
			return new class_0( 404, __( 'Invalid term ID.' ) );

		if ( ! current_user_can( 'assign_term', $var_163 ) ) {
			return new class_0( 401, __( 'Sorry, you are not allowed to assign this term.' ) );
		}

		return $var_6->fn_15( $var_57 );
	}

	
	public function fn_36( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_45       = $var_10[3];
		$var_182         = isset( $var_10[4] ) ? $var_10[4] : array();

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getTerms' );

		if ( ! taxonomy_exists( $var_45 ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_45 );

		if ( ! current_user_can( $var_45->var_53->var_161 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to assign terms in this taxonomy.' ) );

		$var_183 = array();

		if ( isset( $var_182['number'] ) )
			$var_183['number'] = absint( $var_182['number'] );

		if ( isset( $var_182['offset'] ) )
			$var_183['offset'] = absint( $var_182['offset'] );

		if ( isset( $var_182['orderby'] ) ) {
			$var_183['orderby'] = $var_182['orderby'];

			if ( isset( $var_182['order'] ) )
				$var_183['order'] = $var_182['order'];
		}

		if ( isset( $var_182['hide_empty'] ) )
			$var_183['hide_empty'] = $var_182['hide_empty'];
		else
			$var_183['get'] = 'all';

		if ( isset( $var_182['search'] ) )
			$var_183['search'] = $var_182['search'];

		$var_74 = get_terms( $var_45->var_8, $var_183 );

		if ( is_wp_error( $var_74 ) )
			return new class_0( 500, $var_74->get_error_message() );

		$var_34 = array();

		foreach ( $var_74 as $var_57 ) {
			$var_34[] = $var_6->fn_15( $var_57 );
		}

		return $var_34;
	}

	
	public function fn_37( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_45 = $var_10[3];

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_taxonomy_fields', array( 'labels', 'cap', 'object_type' ), 'wp.getTaxonomy' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getTaxonomy' );

		if ( ! taxonomy_exists( $var_45 ) )
			return new class_0( 403, __( 'Invalid taxonomy.' ) );

		$var_45 = get_taxonomy( $var_45 );

		if ( ! current_user_can( $var_45->var_53->var_161 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to assign terms in this taxonomy.' ) );

		return $var_6->fn_14( $var_45, $var_28 );
	}

	
	public function fn_38( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_182   = isset( $var_10[3] ) ? $var_10[3] : array( 'public' => true );

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_taxonomy_fields', array( 'labels', 'cap', 'object_type' ), 'wp.getTaxonomies' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getTaxonomies' );

		$var_160 = get_taxonomies( $var_182, 'objects' );

		
		$var_34 = array();

		foreach ( $var_160 as $var_45 ) {
			
			if ( ! current_user_can( $var_45->var_53->var_161 ) )
				continue;

			$var_34[] = $var_6->fn_14( $var_45, $var_28 );
		}

		return $var_34;
	}

	
	public function fn_39( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_122  = (int) $var_10[3];

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_user_fields', array( 'all' ), 'wp.getUser' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getUser' );

		if ( ! current_user_can( 'edit_user', $var_122 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this user.' ) );

		$var_188 = get_userdata( $var_122 );

		if ( ! $var_188 )
			return new class_0( 404, __( 'Invalid user ID.' ) );

		return $var_6->fn_23( $var_188, $var_28 );
	}

	
	public function fn_40( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_182   = isset( $var_10[3] ) ? $var_10[3] : array();

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_user_fields', array( 'all' ), 'wp.getUsers' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getUsers' );

		if ( ! current_user_can( 'list_users' ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to list users.' ) );

		$var_183 = array( 'fields' => 'all_with_meta' );

		$var_183['number'] = ( isset( $var_182['number'] ) ) ? absint( $var_182['number'] ) : 50;
		$var_183['offset'] = ( isset( $var_182['offset'] ) ) ? absint( $var_182['offset'] ) : 0;

		if ( isset( $var_182['orderby'] ) ) {
			$var_183['orderby'] = $var_182['orderby'];

			if ( isset( $var_182['order'] ) )
				$var_183['order'] = $var_182['order'];
		}

		if ( isset( $var_182['role'] ) ) {
			if ( get_role( $var_182['role'] ) === null )
				return new class_0( 403, __( 'Invalid role.' ) );

			$var_183['role'] = $var_182['role'];
		}

		if ( isset( $var_182['who'] ) ) {
			$var_183['who'] = $var_182['who'];
		}

		$var_189 = get_users( $var_183 );

		$var_190 = array();
		foreach ( $var_189 as $var_188 ) {
			if ( current_user_can( 'edit_user', $var_188->var_19 ) )
				$var_190[] = $var_6->fn_23( $var_188, $var_28 );
		}
		return $var_190;
	}

	
	public function fn_41( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( isset( $var_10[3] ) ) {
			$var_28 = $var_10[3];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_user_fields', array( 'all' ), 'wp.getProfile' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getProfile' );

		if ( ! current_user_can( 'edit_user', $var_18->var_19 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit your profile.' ) );

		$var_188 = get_userdata( $var_18->var_19 );

		return $var_6->fn_23( $var_188, $var_28 );
	}

	
	public function fn_42( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_146 = $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.editProfile' );

		if ( ! current_user_can( 'edit_user', $var_18->var_19 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit your profile.' ) );

		
		$var_188 = array();
		$var_188['ID'] = $var_18->var_19;

		
		if ( isset( $var_146['first_name'] ) )
			$var_188['first_name'] = $var_146['first_name'];

		if ( isset( $var_146['last_name'] ) )
			$var_188['last_name'] = $var_146['last_name'];

		if ( isset( $var_146['url'] ) )
			$var_188['user_url'] = $var_146['url'];

		if ( isset( $var_146['display_name'] ) )
			$var_188['display_name'] = $var_146['display_name'];

		if ( isset( $var_146['nickname'] ) )
			$var_188['nickname'] = $var_146['nickname'];

		if ( isset( $var_146['nicename'] ) )
			$var_188['user_nicename'] = $var_146['nicename'];

		if ( isset( $var_146['bio'] ) )
			$var_188['description'] = $var_146['bio'];

		$var_181 = wp_update_user( $var_188 );

		if ( is_wp_error( $var_181 ) )
			return new class_0( 500, $var_181->get_error_message() );

		if ( ! $var_181 )
			return new class_0( 500, __( 'Sorry, the user cannot be updated.' ) );

		return true;
	}

	
	public function fn_43( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_191  = (int) $var_10[1];
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) ) {
			return $var_6->var_4;
		}

		$var_95 = get_post($var_191);
		if ( ! $var_95 )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can( 'edit_page', $var_191 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this page.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPage' );

		
		if ( $var_95->var_19 && ($var_95->var_78 == 'page') ) {
			return $var_6->fn_21( $var_95 );
		}
		
		else {
			return new class_0( 404, __( 'Sorry, no such page.' ) );
		}
	}

	
	public function fn_44( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14  = $var_10[1];
		$var_15  = $var_10[2];
		$var_192 = isset($var_10[3]) ? (int) $var_10[3] : 10;

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_pages' ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit pages.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPages' );

		$var_193 = get_posts( array('post_type' => 'page', 'post_status' => 'any', 'numberposts' => $var_192) );
		$var_192 = count($var_193);

		
		if ( $var_192 >= 1 ) {
			$var_194 = array();

			foreach ($var_193 as $var_95) {
				if ( current_user_can( 'edit_page', $var_95->var_19 ) )
					$var_194[] = $var_6->fn_21( $var_95 );
			}

			return $var_194;
		}

		return array();
	}

	
	public function fn_45( $var_10 ) {
		
		$var_14 = $var_6->fn_8( $var_10[1] );
		$var_15 = $var_6->fn_8( $var_10[2] );

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.newPage' );

		
		$var_10[3]["post_type"] = 'page';

		
		return $var_6->mw_newPost( $var_10 );
	}

	
	public function fn_46( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_191  = (int) $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.deletePage' );

		
		
		$var_196 = get_post($var_191, var_177);
		if ( !$var_196 || ($var_196['post_type'] != 'page') )
			return new class_0( 404, __( 'Sorry, no such page.' ) );

		
		if ( !current_user_can('delete_page', $var_191) )
			return new class_0( 401, __( 'Sorry, you are not allowed to delete this page.' ) );

		
		$var_181 = wp_delete_post($var_191);
		if ( !$var_181 )
			return new class_0( 500, __( 'Failed to delete the page.' ) );

		
		do_action( 'xmlrpc_call_success_wp_deletePage', $var_191, $var_10 );

		return true;
	}

	
	public function fn_47( $var_10 ) {
		
		$var_191  = (int) $var_10[1];
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];
		$var_197  = $var_10[4];
		$var_198  = $var_10[5];

		$var_199 = $var_6->fn_8( $var_14 );
		$var_200 = $var_6->fn_8( $var_15 );

		if ( !$var_18 = $var_6->fn_6( $var_199, $var_200 ) ) {
			return $var_6->var_4;
		}

		
		do_action( 'xmlrpc_call', 'wp.editPage' );

		
		$var_196 = get_post($var_191, var_177);
		if ( !$var_196 || ($var_196['post_type'] != 'page') )
			return new class_0( 404, __( 'Sorry, no such page.' ) );

		
		if ( !current_user_can('edit_page', $var_191) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this page.' ) );

		
		$var_197['post_type'] = 'page';

		
		$var_10 = array(
			$var_191,
			$var_14,
			$var_15,
			$var_197,
			$var_198
		);

		
		return $var_6->mw_editPost( $var_10 );
	}

	
	public function fn_48( $var_10 ) {
		global $var_202;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_pages' ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit pages.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPageList' );

		
		$var_203 = $var_202->get_results("
			SELECT ID page_id,
				post_title page_title,
				post_parent page_parent_id,
				post_date_gmt,
				post_date,
				post_status
			FROM {$var_202->var_205}
			WHERE post_type = 'page'
			ORDER BY ID
		");

		
		$var_192 = count($var_203);
		for ( $var_206 = 0; $var_206 < $var_192; $var_206++ ) {
			$var_203[$var_206]->var_157 = $var_6->fn_16(  $var_203[$var_206]->var_87 );
			$var_203[$var_206]->var_207 = $var_6->fn_17( $var_203[$var_206]->var_86, $var_203[$var_206]->var_87 );

			unset($var_203[$var_206]->var_86);
			unset($var_203[$var_206]->var_87);
			unset($var_203[$var_206]->var_110);
		}

		return $var_203;
	}

	
	public function fn_49( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can('edit_posts') )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit posts.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getAuthors' );

		$var_208 = array();
		foreach ( get_users( array( 'fields' => array('ID','user_login','display_name') ) ) as $var_18 ) {
			$var_208[] = array(
				'user_id'       => $var_18->var_19,
				'user_login'    => $var_18->var_135,
				'display_name'  => $var_18->var_113
			);
		}

		return $var_208;
	}

	
	public function fn_50( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			return new class_0( 401, __( 'Sorry, you must be able to edit posts on this site in order to view tags.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getKeywords' );

		$var_209 = array();

		if ( $var_210 = get_tags() ) {
			foreach ( (array) $var_210 as $var_211 ) {
				$var_34 = array();
				$var_34['tag_id']			= $var_211->var_163;
				$var_34['name']				= $var_211->var_8;
				$var_34['count']			= $var_211->var_43;
				$var_34['slug']				= $var_211->var_212;
				$var_34['html_url']			= esc_html( get_tag_link( $var_211->var_163 ) );
				$var_34['rss_url']			= esc_html( get_tag_feed_link( $var_211->var_163 ) );

				$var_209[] = $var_34;
			}
		}

		return $var_209;
	}

	
	public function fn_51( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_213 = $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.newCategory' );

		
		if ( !current_user_can('manage_categories') )
			return new class_0(401, __('Sorry, you are not allowed to add a category.'));

		
		
		if ( empty($var_213['slug']) )
			$var_213['slug'] = '';

		
		
		if ( !isset($var_213['parent_id']) )
			$var_213['parent_id'] = '';

		
		if ( empty($var_213["description"]) )
			$var_213["description"] = "";

		$var_214 = array(
			'cat_name'				=> $var_213['name'],
			'category_nicename'		=> $var_213['slug'],
			'category_parent'		=> $var_213['parent_id'],
			'category_description'	=> $var_213['description']
		);

		$var_105 = wp_insert_category($var_214, true);
		if ( is_wp_error( $var_105 ) ) {
			if ( 'term_exists' == $var_105->get_error_code() )
				return (int) $var_105->get_error_data();
			else
				return new class_0(500, __('Sorry, the new category failed.'));
		} elseif ( ! $var_105 ) {
			return new class_0(500, __('Sorry, the new category failed.'));
		}

		
		do_action( 'xmlrpc_call_success_wp_newCategory', $var_105, $var_10 );

		return $var_105;
	}

	
	public function fn_52( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14    = $var_10[1];
		$var_15    = $var_10[2];
		$var_217 = (int) $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.deleteCategory' );

		if ( !current_user_can('manage_categories') )
			return new class_0( 401, __( 'Sorry, you are not allowed to delete a category.' ) );

		$var_218 = wp_delete_term( $var_217, 'category' );

		if ( true == $var_218 ) {
			
			do_action( 'xmlrpc_call_success_wp_deleteCategory', $var_217, $var_10 );
		}

		return $var_218;
	}

	
	public function fn_53( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14    = $var_10[1];
		$var_15    = $var_10[2];
		$var_213    = $var_10[3];
		$var_219 = (int) $var_10[4];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			return new class_0( 401, __( 'Sorry, you must be able to edit posts on this site in order to view categories.' ) );

		
		do_action( 'xmlrpc_call', 'wp.suggestCategories' );

		$var_220 = array();
		$var_10 = array('get' => 'all', 'number' => $var_219, 'name__like' => $var_213);
		foreach ( (array) get_categories($var_10) as $var_221 ) {
			$var_220[] = array(
				'category_id'	=> $var_221->var_163,
				'category_name'	=> $var_221->var_8
			);
		}

		return $var_220;
	}

	
	public function fn_54($var_10) {
		$var_6->fn_8($var_10);

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_222	= (int) $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		
		do_action( 'xmlrpc_call', 'wp.getComment' );

		if ( ! $var_116 = get_comment( $var_222 ) ) {
			return new class_0( 404, __( 'Invalid comment ID.' ) );
		}

		if ( ! current_user_can( 'edit_comment', $var_222 ) ) {
			return new class_0( 403, __( 'Sorry, you are not allowed to moderate or edit this comment.' ) );
		}

		return $var_6->fn_22( $var_116 );
	}

	
	public function fn_55( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_34	  = isset( $var_10[3] ) ? $var_10[3] : array();

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		
		do_action( 'xmlrpc_call', 'wp.getComments' );

		if ( isset( $var_34['status'] ) ) {
			$var_218 = $var_34['status'];
		} else {
			$var_218 = '';
		}

		if ( ! current_user_can( 'moderate_comments' ) && 'approve' !== $var_218 ) {
			return new class_0( 401, __( 'Invalid comment status.' ) );
		}

		$var_24 = '';
		if ( isset( $var_34['post_id'] ) ) {
			$var_24 = absint( $var_34['post_id'] );
		}

		$var_78 = '';
		if ( isset( $var_34['post_type'] ) ) {
			$var_223 = get_post_type_object( $var_34['post_type'] );
			if ( ! $var_223 || ! post_type_supports( $var_223->var_8, 'comments' ) ) {
				return new class_0( 404, __( 'Invalid post type.' ) );
			}
			$var_78 = $var_34['post_type'];
		}

		$var_224 = 0;
		if ( isset( $var_34['offset'] ) ) {
			$var_224 = absint( $var_34['offset'] );
		}

		$var_225 = 10;
		if ( isset( $var_34['number'] ) ) {
			$var_225 = absint( $var_34['number'] );
		}

		$var_226 = get_comments( array(
			'status' => $var_218,
			'post_id' => $var_24,
			'offset' => $var_224,
			'number' => $var_225,
			'post_type' => $var_78,
		) );

		$var_227 = array();
		if ( is_array( $var_226 ) ) {
			foreach ( $var_226 as $var_116 ) {
				$var_227[] = $var_6->fn_22( $var_116 );
			}
		}

		return $var_227;
	}

	
	public function fn_56( $var_10 ) {
		$var_6->fn_8($var_10);

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_123	= (int) $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		if ( ! get_comment( $var_123 ) ) {
			return new class_0( 404, __( 'Invalid comment ID.' ) );
		}

		if ( !current_user_can( 'edit_comment', $var_123 ) ) {
			return new class_0( 403, __( 'Sorry, you are not allowed to moderate or edit this comment.' ) );
		}

		
		do_action( 'xmlrpc_call', 'wp.deleteComment' );

		$var_218 = wp_delete_comment( $var_123 );

		if ( $var_218 ) {
			
			do_action( 'xmlrpc_call_success_wp_deleteComment', $var_123, $var_10 );
		}

		return $var_218;
	}

	
	public function fn_57( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_123	= (int) $var_10[3];
		$var_146 = $var_10[4];

		if ( !$var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		if ( ! get_comment( $var_123 ) ) {
			return new class_0( 404, __( 'Invalid comment ID.' ) );
		}

		if ( ! current_user_can( 'edit_comment', $var_123 ) ) {
			return new class_0( 403, __( 'Sorry, you are not allowed to moderate or edit this comment.' ) );
		}

		
		do_action( 'xmlrpc_call', 'wp.editComment' );

		if ( isset($var_146['status']) ) {
			$var_228 = get_comment_statuses();
			$var_228 = array_keys($var_228);

			if ( ! in_array($var_146['status'], $var_228) )
				return new class_0( 401, __( 'Invalid comment status.' ) );
			$var_119 = $var_146['status'];
		}

		
		if ( !empty( $var_146['date_created_gmt'] ) ) {
			
			$var_157 = rtrim( $var_146['date_created_gmt']->getIso(), 'Z' ) . 'Z';
			$var_118 = get_date_from_gmt(iso8601_to_datetime($var_157));
			$var_117 = iso8601_to_datetime($var_157, 'GMT');
		}

		if ( isset($var_146['content']) )
			$var_125 = $var_146['content'];

		if ( isset($var_146['author']) )
			$var_127 = $var_146['author'];

		if ( isset($var_146['author_url']) )
			$var_128 = $var_146['author_url'];

		if ( isset($var_146['author_email']) )
			$var_129 = $var_146['author_email'];

		
		$var_116 = compact('comment_ID', 'comment_content', 'comment_approved', 'comment_date', 'comment_date_gmt', 'comment_author', 'comment_author_email', 'comment_author_url');

		$var_181 = wp_update_comment($var_116);
		if ( is_wp_error( $var_181 ) )
			return new class_0(500, $var_181->get_error_message());

		if ( !$var_181 )
			return new class_0(500, __('Sorry, the comment could not be edited.'));

		
		do_action( 'xmlrpc_call_success_wp_editComment', $var_123, $var_10 );

		return true;
	}

	
	public function fn_58($var_10) {
		$var_6->fn_8($var_10);

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_65           = $var_10[3];
		$var_146 = $var_10[4];

		
		$var_229 = apply_filters( 'xmlrpc_allow_anonymous_comments', false );

		$var_18 = $var_6->fn_6($var_14, $var_15);

		if ( !$var_18 ) {
			$var_230 = false;
			if ( $var_229 && get_option('comment_registration') ) {
				return new class_0( 403, __( 'You must be registered to comment.' ) );
			} elseif ( ! $var_229 ) {
				return $var_6->var_4;
			}
		} else {
			$var_230 = true;
		}

		if ( is_numeric($var_65) )
			$var_24 = absint($var_65);
		else
			$var_24 = url_to_postid($var_65);

		if ( ! $var_24 ) {
			return new class_0( 404, __( 'Invalid post ID.' ) );
		}

		if ( ! get_post( $var_24 ) ) {
			return new class_0( 404, __( 'Invalid post ID.' ) );
		}

		if ( ! comments_open( $var_24 ) ) {
			return new class_0( 403, __( 'Sorry, comments are closed for this item.' ) );
		}

		if ( empty( $var_146['content'] ) ) {
			return new class_0( 403, __( 'Comment is required.' ) );
		}

		$var_116 = array(
			'comment_post_ID' => $var_24,
			'comment_content' => $var_146['content'],
		);

		if ( $var_230 ) {
			$var_113 = $var_18->var_113;
			$var_140 = $var_18->var_140;
			$var_143 = $var_18->var_143;

			$var_116['comment_author'] = $var_6->fn_8( $var_113 );
			$var_116['comment_author_email'] = $var_6->fn_8( $var_140 );
			$var_116['comment_author_url'] = $var_6->fn_8( $var_143 );
			$var_116['user_ID'] = $var_18->var_19;
		} else {
			$var_116['comment_author'] = '';
			if ( isset($var_146['author']) )
				$var_116['comment_author'] = $var_146['author'];

			$var_116['comment_author_email'] = '';
			if ( isset($var_146['author_email']) )
				$var_116['comment_author_email'] = $var_146['author_email'];

			$var_116['comment_author_url'] = '';
			if ( isset($var_146['author_url']) )
				$var_116['comment_author_url'] = $var_146['author_url'];

			$var_116['user_ID'] = 0;

			if ( get_option('require_name_email') ) {
				if ( 6 > strlen($var_116['comment_author_email']) || '' == $var_116['comment_author'] )
					return new class_0( 403, __( 'Comment author name and email are required.' ) );
				elseif ( !is_email($var_116['comment_author_email']) )
					return new class_0( 403, __( 'A valid email address is required.' ) );
			}
		}

		$var_116['comment_parent'] = isset($var_146['comment_parent']) ? absint($var_146['comment_parent']) : 0;

		
		do_action( 'xmlrpc_call', 'wp.newComment' );

		$var_123 = wp_new_comment( $var_116, true );
		if ( is_wp_error( $var_123 ) ) {
			return new class_0( 403, $var_123->get_error_message() );
		}

		if ( ! $var_123 ) {
			return new class_0( 403, __( 'An unknown error occurred' ) );
		}

		
		do_action( 'xmlrpc_call_success_wp_newComment', $var_123, $var_10 );

		return $var_123;
	}

	
	public function fn_59( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		if ( ! current_user_can( 'publish_posts' ) ) {
			return new class_0( 403, __( 'Sorry, you are not allowed access to details about this site.' ) );
		}

		
		do_action( 'xmlrpc_call', 'wp.getCommentStatusList' );

		return get_comment_statuses();
	}

	
	public function fn_60( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_24	= (int) $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		$var_65 = get_post( $var_24, var_177 );
		if ( empty( $var_65['ID'] ) ) {
			return new class_0( 404, __( 'Invalid post ID.' ) );
		}

		if ( ! current_user_can( 'edit_post', $var_24 ) ) {
			return new class_0( 403, __( 'Sorry, you are not allowed access to details of this post.' ) );
		}

		
		do_action( 'xmlrpc_call', 'wp.getCommentCount' );

		$var_43 = wp_count_comments( $var_24 );

		return array(
			'approved' => $var_43->var_231,
			'awaiting_moderation' => $var_43->var_232,
			'spam' => $var_43->var_233,
			'total_comments' => $var_43->var_234
		);
	}

	
	public function fn_61( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed access to details about this site.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPostStatusList' );

		return get_post_statuses();
	}

	
	public function fn_62( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_pages' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed access to details about this site.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPageStatusList' );

		return get_page_statuses();
	}

	
	public function fn_63( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_pages' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed access to details about this site.' ) );

		$var_235 = get_page_templates();
		$var_235['Default'] = 'default';

		return $var_235;
	}

	
	public function fn_64( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_236	= isset( $var_10[3] ) ? (array) $var_10[3] : array();

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		if ( count( $var_236 ) == 0 )
			$var_236 = array_keys($var_6->var_3);

		return $var_6->fn_65($var_236);
	}

	
	public function fn_65($var_236) {
		$var_21 = array();
		$var_238 = current_user_can( 'manage_options' );
		foreach ( $var_236 as $var_239 ) {
			if ( array_key_exists( $var_239, $var_6->var_3 ) ) {
				$var_21[$var_239] = $var_6->var_3[$var_239];
				
				if ( isset( $var_21[$var_239]['option'] ) ) {
					$var_21[$var_239]['value'] = get_option( $var_21[$var_239]['option'] );
					unset($var_21[$var_239]['option']);
				}

				if ( ! $var_238 )
					$var_21[$var_239]['readonly'] = true;
			}
		}

		return $var_21;
	}

	
	public function fn_66( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_236	= (array) $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'manage_options' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed to update options.' ) );

		$var_240 = array();
		foreach ( $var_236 as $var_241 => $var_242 ) {
			$var_240[] = $var_241;
			if ( !array_key_exists( $var_241, $var_6->var_3 ) )
				continue;

			if ( $var_6->var_3[$var_241]['readonly'] == true )
				continue;

			update_option( $var_6->var_3[$var_241]['option'], wp_unslash( $var_242 ) );
		}

		
		return $var_6->fn_65($var_240);
	}

	
	public function fn_67( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14		= $var_10[1];
		$var_15		= $var_10[2];
		$var_243	= (int) $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'upload_files' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed to upload files.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getMediaItem' );

		if ( ! $var_244 = get_post($var_243) )
			return new class_0( 404, __( 'Invalid attachment ID.' ) );

		return $var_6->fn_19( $var_244 );
	}

	
	public function fn_68($var_10) {
		$var_6->fn_8($var_10);

		$var_14	= $var_10[1];
		$var_15	= $var_10[2];
		$var_34		= isset( $var_10[3] ) ? $var_10[3] : array() ;

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'upload_files' ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to upload files.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getMediaLibrary' );

		$var_245 = ( isset($var_34['parent_id']) ) ? absint($var_34['parent_id']) : '' ;
		$var_246 = ( isset($var_34['mime_type']) ) ? $var_34['mime_type'] : '' ;
		$var_224 = ( isset($var_34['offset']) ) ? absint($var_34['offset']) : 0 ;
		$var_225 = ( isset($var_34['number']) ) ? absint($var_34['number']) : -1 ;

		$var_247 = get_posts( array('post_type' => 'attachment', 'post_parent' => $var_245, 'offset' => $var_224, 'numberposts' => $var_225, 'post_mime_type' => $var_246 ) );

		$var_248 = array();

		foreach ($var_247 as $var_244 )
			$var_248[] = $var_6->fn_19( $var_244 );

		return $var_248;
	}

	
	public function fn_69( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			return new class_0( 403, __( 'Sorry, you are not allowed access to details about this site.' ) );

		
		do_action( 'xmlrpc_call', 'wp.getPostFormats' );

		$var_249 = get_post_format_strings();

		
		if ( isset( $var_10[3] ) && is_array( $var_10[3] ) ) {
			if ( $var_10[3]['show-supported'] ) {
				if ( current_theme_supports( 'post-formats' ) ) {
					$var_250 = get_theme_support( 'post-formats' );

					$var_21 = array();
					$var_21['all'] = $var_249;
					$var_21['supported'] = $var_250[0];

					$var_249 = $var_21;
				}
			}
		}

		return $var_249;
	}

	
	public function fn_70( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_251 = $var_10[3];

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_posttype_fields', array( 'labels', 'cap', 'taxonomies' ), 'wp.getPostType' );
		}

		if ( !$var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getPostType' );

		if ( ! post_type_exists( $var_251 ) )
			return new class_0( 403, __( 'Invalid post type.' ) );

		$var_78 = get_post_type_object( $var_251 );

		if ( ! current_user_can( $var_78->var_53->var_155 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit posts in this post type.' ) );

		return $var_6->fn_20( $var_78, $var_28 );
	}

	
	public function fn_71( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_182   = isset( $var_10[3] ) ? $var_10[3] : array( 'public' => true );

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_posttype_fields', array( 'labels', 'cap', 'taxonomies' ), 'wp.getPostTypes' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getPostTypes' );

		$var_252 = get_post_types( $var_182, 'objects' );

		$var_34 = array();

		foreach ( $var_252 as $var_78 ) {
			if ( ! current_user_can( $var_78->var_53->var_155 ) )
				continue;

			$var_34[$var_78->var_8] = $var_6->fn_20( $var_78, $var_28 );
		}

		return $var_34;
	}

	
	public function fn_72( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 4 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		$var_24  = (int) $var_10[3];

		if ( isset( $var_10[4] ) ) {
			$var_28 = $var_10[4];
		} else {
			
			$var_28 = apply_filters( 'xmlrpc_default_revision_fields', array( 'post_date', 'post_date_gmt' ), 'wp.getRevisions' );
		}

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.getRevisions' );

		if ( ! $var_65 = get_post( $var_24 ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( ! current_user_can( 'edit_post', $var_24 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit posts.' ) );

		
		if ( ! wp_revisions_enabled( $var_65 ) )
			return new class_0( 401, __( 'Sorry, revisions are disabled.' ) );

		$var_253 = wp_get_post_revisions( $var_24 );

		if ( ! $var_253 )
			return array();

		$var_34 = array();

		foreach ( $var_253 as $var_254 ) {
			if ( ! current_user_can( 'read_post', $var_254->var_19 ) )
				continue;

			
			if ( wp_is_post_autosave( $var_254 ) )
				continue;

			$var_34[] = $var_6->fn_18( get_object_vars( $var_254 ), $var_28 );
		}

		return $var_34;
	}

	
	public function fn_73( $var_10 ) {
		if ( ! $var_6->fn_12( $var_10, 3 ) )
			return $var_6->var_4;

		$var_6->fn_8( $var_10 );

		$var_14    = $var_10[1];
		$var_15    = $var_10[2];
		$var_255 = (int) $var_10[3];

		if ( ! $var_18 = $var_6->fn_6( $var_14, $var_15 ) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'wp.restoreRevision' );

		if ( ! $var_254 = wp_get_post_revision( $var_255 ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( wp_is_post_autosave( $var_254 ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( ! $var_65 = get_post( $var_254->var_88 ) )
			return new class_0( 404, __( 'Invalid post ID.' ) );

		if ( ! current_user_can( 'edit_post', $var_254->var_88 ) )
			return new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		
		if ( ! wp_revisions_enabled( $var_65 ) )
			return new class_0( 401, __( 'Sorry, revisions are disabled.' ) );

		$var_65 = wp_restore_post_revision( $var_255 );

		return (bool) $var_65;
	}

	

	
	public function fn_13($var_10) {
		if ( ! $var_6->fn_12( $var_10, 3 ) ) {
			return $var_6->var_4;
		}

		if ( is_multisite() ) {
			return $var_6->_multisite_getUsersBlogs($var_10);
		}

		$var_6->fn_8($var_10);

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'blogger.getUsersBlogs' );

		$var_41 = current_user_can('manage_options');

		$var_34 = array(
			'isAdmin'  => $var_41,
			'url'      => get_option('home') . '/',
			'blogid'   => '1',
			'blogName' => get_option('blogname'),
			'xmlrpc'   => site_url( 'xmlrpc.php', 'rpc' ),
		);

		return array($var_34);
	}

	
	protected function var_256( $var_10 ) {
		$var_257 = get_site();

		$var_258 = $var_257->var_258;
		$var_259 = $var_257->var_259 . 'xmlrpc.php';

		$var_260 = new var_261( var_262( "http:
		$var_260->var_183('wp.getUsersBlogs', $var_10[1], $var_10[2]);
		$var_33 = $var_260->var_263();

		if ( isset($var_33['var_264']) )
			return new IXR_Error($var_33['var_264'], $var_33['var_265']);

		if ( $_SERVER['var_266'] == $var_258 && $_SERVER['var_267'] == $var_259 ) {
			return $var_33;
		} else {
			foreach ( (array) $var_33 as $var_38 ) {
				if ( strpos($var_38['var_268'], $_SERVER['var_266']) )
					return array($var_38);
			}
			return array();
		}
	}

	
	public function blogger_getUserInfo( $var_10 ) {
		$var_6->var_20( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to access user data on this site.' ) );

		
		do_action( 'xmlrpc_call', 'blogger.getUserInfo' );

		$var_34 = array(
			'nickname'  => $var_18->var_141,
			'userid'    => $var_18->var_19,
			'url'       => $var_18->var_143,
			'lastname'  => $var_18->var_269,
			'firstname' => $var_18->var_270
		);

		return $var_34;
	}

	
	public function blogger_getPost( $var_10 ) {
		$var_6->var_20( $var_10 );

		$var_159  = (int) $var_10[1];
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		$var_149 = get_post($var_159, ARRAY_A);
		if ( ! $var_149 )
			return new IXR_Error( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can( 'edit_post', $var_159 ) )
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		
		do_action( 'xmlrpc_call', 'blogger.getPost' );

		$var_104 = implode(',', wp_get_post_categories($var_159));

		$var_197  = '<title>'.wp_unslash($var_149['var_89']).'</title>';
		$var_197 .= '<category>'.$var_104.'</category>';
		$var_197 .= wp_unslash($var_149['var_91']);

		$var_34 = array(
			'userid'    => $var_149['var_107'],
			'dateCreated' => $var_6->var_59( $var_149['var_87'] ),
			'content'     => $var_197,
			'postid'  => (string) $var_149['var_19']
		);

		return $var_34;
	}

	
	public function blogger_getRecentPosts( $var_10 ) {

		$var_6->var_20($var_10);

		
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];
		if ( isset( $var_10[4] ) )
			$var_183 = array( 'numberposts' => absint( $var_10[4] ) );
		else
			$var_183 = array();

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		if ( ! current_user_can( 'edit_posts' ) )
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to edit posts.' ) );

		
		do_action( 'xmlrpc_call', 'blogger.getRecentPosts' );

		$var_184 = wp_get_recent_posts( $var_183 );

		if ( !$var_184 ) {
			$var_6->var_4 = new IXR_Error(500, __('Either there are no posts, or something went wrong.'));
			return $var_6->var_4;
		}

		$var_271 = array();
		foreach ($var_184 as $var_272) {
			if ( !current_user_can( 'edit_post', $var_272['var_19'] ) )
				continue;

			$var_87  = $var_6->var_59( $var_272['var_87'] );
			$var_104 = implode(',', wp_get_post_categories($var_272['var_19']));

			$var_197  = '<title>'.wp_unslash($var_272['var_89']).'</title>';
			$var_197 .= '<category>'.$var_104.'</category>';
			$var_197 .= wp_unslash($var_272['var_91']);

			$var_271[] = array(
				'userid' => $var_272['var_107'],
				'dateCreated' => $var_87,
				'content' => $var_197,
				'postid' => (string) $var_272['var_19'],
			);
		}

		return $var_271;
	}

	
	public function blogger_getTemplate($var_10) {
		return new IXR_Error( 403, __('Sorry, that file cannot be edited.' ) );
	}

	
	public function blogger_setTemplate($var_10) {
		return new IXR_Error( 403, __('Sorry, that file cannot be edited.' ) );
	}

	
	public function blogger_newPost( $var_10 ) {
		$var_6->var_20( $var_10 );

		$var_14 = $var_10[2];
		$var_15 = $var_10[3];
		$var_197  = $var_10[4];
		$var_198  = $var_10[5];

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'blogger.newPost' );

		$var_53 = ($var_198) ? 'publish_posts' : 'edit_posts';
		if ( ! current_user_can( get_post_type_object( 'post' )->cap->create_posts ) || !current_user_can($var_53) )
			return new IXR_Error(401, __('Sorry, you are not allowed to post on this site.'));

		$var_110 = ($var_198) ? 'publish' : 'draft';

		$var_107 = $var_18->var_19;

		$var_89 = xmlrpc_getposttitle($var_197);
		$var_273 = xmlrpc_getpostcategory($var_197);
		$var_91 = xmlrpc_removepostdata($var_197);

		$var_87 = current_time('mysql');
		$var_86 = current_time('mysql', 1);

		$var_149 = compact('post_author', 'post_date', 'post_date_gmt', 'post_content', 'post_title', 'post_category', 'post_status');

		$var_159 = wp_insert_post($var_149);
		if ( is_wp_error( $var_159 ) )
			return new IXR_Error(500, $var_159->var_172());

		if ( !$var_159 )
			return new IXR_Error(500, __('Sorry, your entry could not be posted.'));

		$var_6->var_176( $var_159, $var_91 );

		
		do_action( 'xmlrpc_call_success_blogger_newPost', $var_159, $var_10 );

		return $var_159;
	}

	
	public function blogger_editPost( $var_10 ) {

		$var_6->var_20($var_10);

		$var_159  = (int) $var_10[1];
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];
		$var_197  = $var_10[4];
		$var_198  = $var_10[5];

		if ( ! $var_18 = $var_6->var_13( $var_14, $var_15 ) ) {
			return $var_6->var_4;
		}

		
		do_action( 'xmlrpc_call', 'blogger.editPost' );

		$var_274 = get_post( $var_159, ARRAY_A );

		if ( ! $var_274 || $var_274['var_78'] != 'post' ) {
			return new IXR_Error( 404, __( 'Sorry, no such post.' ) );
		}

		$var_6->var_20($var_274);

		if ( ! current_user_can( 'edit_post', $var_159 ) ) {
			return new IXR_Error(401, __('Sorry, you are not allowed to edit this post.'));
		}
		if ( 'publish' == $var_274['var_110'] && ! current_user_can( 'publish_posts' ) ) {
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to publish this post.' ) );
		}

		$var_275 = array();
		$var_275['var_19'] = $var_274['var_19'];
		$var_275['var_91'] = xmlrpc_removepostdata( $var_197 );
		$var_275['var_89'] = xmlrpc_getposttitle( $var_197 );
		$var_275['var_273'] = xmlrpc_getpostcategory( $var_197 );
		$var_275['var_110'] = $var_274['var_110'];
		$var_275['var_90'] = $var_274['var_90'];
		$var_275['var_110'] = $var_198 ? 'publish' : 'draft';

		$var_181 = wp_update_post( $var_275 );

		if ( ! $var_181 ) {
			return new IXR_Error(500, __('For some strange yet very annoying reason, this post could not be edited.'));
		}
		$var_6->var_176( $var_274['var_19'], $var_275['var_91'] );

		
		do_action( 'xmlrpc_call_success_blogger_editPost', $var_159, $var_10 );

		return true;
	}

	
	public function blogger_deletePost( $var_10 ) {
		$var_6->var_20( $var_10 );

		$var_159  = (int) $var_10[1];
		$var_14 = $var_10[2];
		$var_15 = $var_10[3];

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'blogger.deletePost' );

		$var_274 = get_post( $var_159, ARRAY_A );

		if ( ! $var_274 || $var_274['var_78'] != 'post' ) {
			return new IXR_Error( 404, __( 'Sorry, no such post.' ) );
		}

		if ( ! current_user_can( 'delete_post', $var_159 ) ) {
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to delete this post.' ) );
		}

		$var_181 = wp_delete_post( $var_159 );

		if ( ! $var_181 ) {
			return new IXR_Error( 500, __( 'The post cannot be deleted.' ) );
		}

		
		do_action( 'xmlrpc_call_success_blogger_deletePost', $var_159, $var_10 );

		return true;
	}

	

	
	public function mw_newPost($var_10) {
		$var_6->var_20($var_10);

		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_146 = $var_10[3];
		$var_198        = isset( $var_10[4] ) ? $var_10[4] : 0;

		if ( !$var_18 = $var_6->var_13($var_14, $var_15) )
			return $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'metaWeblog.newPost' );

		$var_108 = '';
		if ( !empty( $var_146['var_78'] ) ) {
			if ( $var_146['var_78'] == 'page' ) {
				if ( $var_198 )
					$var_53  = 'publish_pages';
				elseif ( isset( $var_146['var_276'] ) && 'publish' == $var_146['var_276'] )
					$var_53  = 'publish_pages';
				else
					$var_53 = 'edit_pages';
				$var_277 = __( 'Sorry, you are not allowed to publish pages on this site.' );
				$var_78 = 'page';
				if ( !empty( $var_146['var_278'] ) )
					$var_108 = $var_146['var_278'];
			} elseif ( $var_146['var_78'] == 'post' ) {
				if ( $var_198 )
					$var_53  = 'publish_posts';
				elseif ( isset( $var_146['var_110'] ) && 'publish' == $var_146['var_110'] )
					$var_53  = 'publish_posts';
				else
					$var_53 = 'edit_posts';
				$var_277 = __( 'Sorry, you are not allowed to publish posts on this site.' );
				$var_78 = 'post';
			} else {
				
				return new IXR_Error( 401, __( 'Invalid post type.' ) );
			}
		} else {
			if ( $var_198 )
				$var_53  = 'publish_posts';
			elseif ( isset( $var_146['var_110'] ) && 'publish' == $var_146['var_110'])
				$var_53  = 'publish_posts';
			else
				$var_53 = 'edit_posts';
			$var_277 = __( 'Sorry, you are not allowed to publish posts on this site.' );
			$var_78 = 'post';
		}

		if ( ! current_user_can( get_post_type_object( $var_78 )->cap->create_posts ) )
			return new IXR_Error( 401, __( 'Sorry, you are not allowed to publish posts on this site.' ) );
		if ( !current_user_can( $var_53 ) )
			return new IXR_Error( 401, $var_277 );

		
		if ( isset( $var_146['var_279'] ) ) {
			$var_146['var_279'] = sanitize_key( $var_146['var_279'] );
			if ( !array_key_exists( $var_146['var_279'], get_post_format_strings() ) ) {
				return new IXR_Error( 404, __( 'Invalid post format.' ) );
			}
		}

		
		
		$var_111 = "";
		if ( isset($var_146['wp_slug']) )
			$var_111 = $var_146['wp_slug'];

		
		if ( isset($var_146['wp_password']) )
			$var_112 = $var_146['wp_password'];

		
		if ( isset($var_146['wp_page_parent_id']) )
			$var_88 = $var_146['wp_page_parent_id'];

		
		if ( isset($var_146['wp_page_order']) )
			$var_114 = $var_146['wp_page_order'];

		$var_107 = $var_18->var_19;

		
		if ( isset( $var_146['wp_author_id'] ) && ( $var_18->var_19 != $var_146['wp_author_id'] ) ) {
			switch ( $var_78 ) {
				case "post":
					if ( !current_user_can( 'edit_others_posts' ) )
						var_286 new class_0( 401, __( 'Sorry, you are not allowed to create posts as this user.' ) );
					break;
				case "page":
					if ( !current_user_can( 'edit_others_pages' ) )
						var_286 new class_0( 401, __( 'Sorry, you are not allowed to create pages as this user.' ) );
					break;
				default:
					return new class_0( 401, __( 'Invalid post type.' ) );
			}
			$var_106 = get_userdata( $var_146['wp_author_id'] );
			if ( ! $var_106 )
				return new class_0( 404, __( 'Invalid author ID.' ) );
			$var_107 = $var_146['wp_author_id'];
		}

		$var_89 = isset( $var_146['title'] ) ? $var_146['title'] : null;
		$var_91 = isset( $var_146['description'] ) ? $var_146['description'] : null;

		$var_110 = $var_198 ? 'publish' : 'draft';

		if ( isset( $var_146["{$var_78}_status"] ) ) {
			switch ( $var_146["{$var_78}_status"] ) {
				case 'draft':
				case 'pending':
				case 'private':
				case 'publish':
					$var_110 = $var_146["{$var_78}_status"];
					break;
				default:
					$var_110 = $var_198 ? 'publish' : 'draft';
					break;
			}
		}

		$var_90 = isset($var_146['mt_excerpt']) ? $var_146['mt_excerpt'] : null;
		$var_280 = isset($var_146['mt_text_more']) ? $var_146['mt_text_more'] : null;

		$var_281 = isset($var_146['mt_keywords']) ? $var_146['mt_keywords'] : null;

		if ( isset($var_146['mt_allow_comments']) ) {
			if ( !is_numeric($var_146['mt_allow_comments']) ) {
				switch ( $var_146['mt_allow_comments'] ) {
					case 'closed':
						$var_120 = 'closed';
						break;
					case 'open':
						$var_120 = 'open';
						break;
					default:
						$var_120 = get_default_comment_status( $var_78 );
						break;
				}
			} var_297 {
				switch ( (int) $var_146['mt_allow_comments'] ) {
					case 0:
					case 2:
						$var_120 = 'closed';
						break;
					case 1:
						$var_120 = 'open';
						break;
					default:
						$var_120 = get_default_comment_status( $var_78 );
						break;
				}
			}
		} var_297 {
			$var_120 = get_default_comment_status( $var_78 );
		}

		var_282 ( isset($var_146['mt_allow_pings']) ) {
			if ( !is_numeric($var_146['mt_allow_pings']) ) {
				switch ( $var_146['mt_allow_pings'] ) {
					case 'closed':
						$var_283 = 'closed';
						break;
					case 'open':
						$var_283 = 'open';
						break;
					default:
						$var_283 = get_default_comment_status( $var_78, 'pingback' );
						break;
				}
			} var_297 {
				switch ( (int) $var_146['mt_allow_pings'] ) {
					case 0:
						$var_283 = 'closed';
						break;
					case 1:
						$var_283 = 'open';
						break;
					default:
						$var_283 = get_default_comment_status( $var_78, 'pingback' );
						break;
				}
			}
		} var_297 {
			$var_283 = get_default_comment_status( $var_78, 'pingback' );
		}

		var_282 ( $var_280 )
			$var_91 = $var_91 . '<!--more-->' . $var_280;

		$var_284 = null;
		if ( isset( $var_146['mt_tb_ping_urls'] ) ) {
			$var_284 = $var_146['mt_tb_ping_urls'];
			if ( is_array($var_284) )
				$var_284 = implode(' ', $var_284);
		}

		
		if ( !empty( $var_146['date_created_gmt'] ) )
			
			$var_157 = rtrim( $var_146['date_created_gmt']->getIso(), 'Z' ) . 'Z';
		elseif ( !empty( $var_146['dateCreated']) )
			$var_157 = $var_146['dateCreated']->getIso();

		if ( !empty( $var_157 ) ) {
			$var_87 = get_date_from_gmt(iso8601_to_datetime($var_157));
			$var_86 = iso8601_to_datetime($var_157, 'GMT');
		} var_297 {
			$var_87 = '';
			$var_86 = '';
		}

		$var_273 = array();
		if ( isset( $var_146['categories'] ) ) {
			$var_285 = $var_146['categories'];

			if ( is_array($var_285) ) {
				foreach ($var_285 as $var_221) {
					$var_273[] = get_cat_ID($var_221);
				}
			}
		}

		$var_275 = compact('post_author', 'post_date', 'post_date_gmt', 'post_content', 'post_title', 'post_category', 'post_status', 'post_excerpt', 'comment_status', 'ping_status', 'to_ping', 'post_type', 'post_name', 'post_password', 'post_parent', 'menu_order', 'tags_input', 'page_template');

		$var_159 = $var_275['ID'] = get_default_post_to_edit( $var_78, true )->var_19;

		
		if ( $var_78 == 'post' && isset( $var_146['sticky'] ) ) {
			$var_21 = $var_275;
			$var_21['sticky'] = $var_146['sticky'];
			$var_4 = $var_6->fn_27( $var_21 );
			if ( $var_4 ) {
				var_286 $var_4;
			}
		}

		if ( isset($var_146['custom_fields']) )
			$var_6->fn_10($var_159, $var_146['custom_fields']);

		if ( isset ( $var_146['wp_post_thumbnail'] ) ) {
			if ( set_post_thumbnail( $var_159, $var_146['wp_post_thumbnail'] ) === false )
				var_286 new var_17( 404, __( 'Invalid attachment ID.' ) );

			unset( $var_146['wp_post_thumbnail'] );
		}

		
		$var_287 = isset($var_146['enclosure']) ? $var_146['enclosure'] : null;
		$var_6->add_enclosure_if_new($var_159, $var_287);

		$var_6->attach_uploads( $var_159, $var_91 );

		
		
		if ( isset( $var_146['wp_post_format'] ) )
			set_post_format( $var_159, $var_146['wp_post_format'] );

		$var_159 = wp_insert_post( $var_275, true );
		if ( is_wp_error( $var_159 ) )
			var_286 new var_17(500, $var_159->get_error_message());

		if ( !$var_159 )
			var_286 new var_17(500, __('Sorry, your entry could not be posted.'));

		
		var_288( 'xmlrpc_call_success_mw_newPost', $var_159, $var_10 );

		return var_289($var_159);
	}

	
	public function var_175( $var_159, $var_174 ) {
		if ( is_array( $var_174 ) && isset( $var_174['url'] ) && isset( $var_174['length'] ) && isset( $var_174['type'] ) ) {
			$var_290 = $var_174['url'] . "\n" . $var_174['length'] . "\n" . $var_174['type'] . "\n";
			$var_291 = false;
			if ( $var_75 = get_post_meta( $var_159, 'enclosure' ) ) {
				foreach ( $var_75 as $var_292 ) {
					
					if ( rtrim( $var_292, "\n" ) == rtrim( $var_290, "\n" ) ) {
						$var_291 = true;
						break;
					}
				}
			}
			if ( ! $var_291 )
				add_post_meta( $var_159, 'enclosure', $var_290 );
		}
	}

	
	var_49 function var_176( $var_159, $var_91 ) {
		var_334 $var_202;

		
		$var_247 = $var_202->get_results( "SELECT ID, guid FROM {$var_202->var_205} WHERE post_parent = '0' AND post_type = 'attachment'" );
		if ( is_array( $var_247 ) ) {
			foreach ( $var_247 as $var_293 ) {
				if ( ! empty( $var_293->var_294 ) && strpos( $var_91, $var_293->var_294 ) !== false )
					$var_202->update($var_202->var_205, array('post_parent' => $var_159), array('ID' => $var_293->var_19) );
			}
		}
	}

	
	var_49 function var_201( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_159        = (int) $var_10[0];
		$var_14       = $var_10[1];
		$var_15       = $var_10[2];
		$var_146 = $var_10[3];
		$var_198        = isset( $var_10[4] ) ? $var_10[4] : 0;

		if ( ! $var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'metaWeblog.editPost' );

		$var_275 = get_post( $var_159, var_177 );

		
		if ( ! $var_275 || empty( $var_275[ 'ID' ] ) )
			var_286 new class_0( 404, __( 'Invalid post ID.' ) );

		if ( ! current_user_can( 'edit_post', $var_159 ) )
			var_286 new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		
		if ( ! in_array( $var_275[ 'post_type' ], array( 'post', 'page' ) ) )
			var_286 new class_0( 401, __( 'Invalid post type.' ) );

		
		if ( ! empty( $var_146[ 'post_type' ] ) && ( $var_146['post_type'] != $var_275[ 'post_type' ] ) )
			var_286 new class_0( 401, __( 'The post type may not be changed.' ) );

		
		if ( isset( $var_146['wp_post_format'] ) ) {
			$var_146['wp_post_format'] = sanitize_key( $var_146['wp_post_format'] );
			if ( !array_key_exists( $var_146['wp_post_format'], get_post_format_strings() ) ) {
				var_286 new class_0( 404, __( 'Invalid post format.' ) );
			}
		}

		$var_6->fn_8($var_275);

		$var_19 = $var_275['ID'];
		$var_91 = $var_275['post_content'];
		$var_89 = $var_275['post_title'];
		$var_90 = $var_275['post_excerpt'];
		$var_112 = $var_275['post_password'];
		$var_88 = $var_275['post_parent'];
		$var_78 = $var_275['post_type'];
		$var_114 = $var_275['menu_order'];

		
		$var_111 = $var_275['post_name'];
		if ( isset($var_146['wp_slug']) )
			$var_111 = $var_146['wp_slug'];

		
		if ( isset($var_146['wp_password']) )
			$var_112 = $var_146['wp_password'];

		
		if ( isset($var_146['wp_page_parent_id']) )
			$var_88 = $var_146['wp_page_parent_id'];

		
		if ( isset($var_146['wp_page_order']) )
			$var_114 = $var_146['wp_page_order'];

		$var_108 = null;
		if ( ! empty( $var_146['wp_page_template'] ) && 'page' == $var_78 )
			$var_108 = $var_146['wp_page_template'];

		$var_107 = $var_275['post_author'];

		
		if ( isset( $var_146['wp_author_id'] ) ) {
			
			if ( $var_18->var_19 != $var_146['wp_author_id'] || $var_18->var_19 != $var_107 ) {
				switch ( $var_78 ) {
					case 'post':
						if ( ! current_user_can( 'edit_others_posts' ) ) {
							var_286 new class_0( 401, __( 'Sorry, you are not allowed to change the post author as this user.' ) );
						}
						break;
					case 'page':
						if ( ! current_user_can( 'edit_others_pages' ) ) {
							var_286 new class_0( 401, __( 'Sorry, you are not allowed to change the page author as this user.' ) );
						}
						break;
					default:
						return new class_0( 401, __( 'Invalid post type.' ) );
				}
				$var_107 = $var_146['wp_author_id'];
			}
		}

		var_282 ( isset($var_146['mt_allow_comments']) ) {
			if ( !is_numeric($var_146['mt_allow_comments']) ) {
				switch ( $var_146['mt_allow_comments'] ) {
					case 'closed':
						$var_120 = 'closed';
						break;
					case 'open':
						$var_120 = 'open';
						break;
					default:
						$var_120 = get_default_comment_status( $var_78 );
						break;
				}
			} var_297 {
				switch ( (int) $var_146['mt_allow_comments'] ) {
					case 0:
					case 2:
						$var_120 = 'closed';
						break;
					case 1:
						$var_120 = 'open';
						break;
					default:
						$var_120 = get_default_comment_status( $var_78 );
						break;
				}
			}
		}

		var_282 ( isset($var_146['mt_allow_pings']) ) {
			if ( !is_numeric($var_146['mt_allow_pings']) ) {
				switch ( $var_146['mt_allow_pings'] ) {
					case 'closed':
						$var_283 = 'closed';
						break;
					case 'open':
						$var_283 = 'open';
						break;
					default:
						$var_283 = get_default_comment_status( $var_78, 'pingback' );
						break;
				}
			} var_297 {
				switch ( (int) $var_146["mt_allow_pings"] ) {
					case 0:
						$var_283 = 'closed';
						break;
					case 1:
						$var_283 = 'open';
						break;
					default:
						$var_283 = get_default_comment_status( $var_78, 'pingback' );
						break;
				}
			}
		}

		var_282 ( isset( $var_146['title'] ) )
			$var_89 =  $var_146['title'];

		if ( isset( $var_146['var_313'] ) )
			$var_91 = $var_146['var_313'];

		$var_273 = array();
		if ( isset( $var_146['var_104'] ) ) {
			$var_285 = $var_146['var_104'];
			if ( is_array($var_285) ) {
				foreach ($var_285 as $var_221) {
					$var_273[] = get_cat_ID($var_221);
				}
			}
		}

		if ( isset( $var_146['mt_excerpt'] ) )
			$var_90 =  $var_146['mt_excerpt'];

		$var_280 = isset( $var_146['mt_text_more'] ) ? $var_146['mt_text_more'] : null;

		$var_110 = $var_198 ? 'publish' : 'draft';
		if ( isset( $var_146["{$var_78}_status"] ) ) {
			switch( $var_146["{$var_78}_status"] ) {
				case 'draft':
				case 'pending':
				case 'private':
				case 'publish':
					$var_110 = $var_146["{$var_78}_status"];
					break;
				default:
					$var_110 = $var_198 ? 'publish' : 'draft';
					break;
			}
		}

		$var_281 = isset( $var_146['mt_keywords'] ) ? $var_146['mt_keywords'] : null;

		if ( 'publish' == $var_110 || 'private' == $var_110 ) {
			if ( 'page' == $var_78 && ! current_user_can( 'publish_pages' ) ) {
				var_286 new class_0( 401, __( 'Sorry, you are not allowed to publish this page.' ) );
			} var_295 ( ! current_user_can( 'publish_posts' ) ) {
				var_286 new class_0( 401, __( 'Sorry, you are not allowed to publish this post.' ) );
			}
		}

		var_282 ( $var_280 )
			$var_91 = $var_91 . "<!--more-->" . $var_280;

		$var_284 = null;
		if ( isset( $var_146['mt_tb_ping_urls'] ) ) {
			$var_284 = $var_146['mt_tb_ping_urls'];
			if ( is_array($var_284) )
				$var_284 = implode(' ', $var_284);
		}

		
		if ( !empty( $var_146['date_created_gmt'] ) )
			
			$var_157 = rtrim( $var_146['date_created_gmt']->getIso(), 'Z' ) . 'Z';
		elseif ( !empty( $var_146['dateCreated']) )
			$var_157 = $var_146['dateCreated']->getIso();

		
		$var_296 = false;

		if ( !empty( $var_157 ) ) {
			$var_87 = get_date_from_gmt(iso8601_to_datetime($var_157));
			$var_86 = iso8601_to_datetime($var_157, 'GMT');

			
			$var_296 = true;
		} var_297 {
			$var_87     = $var_275['post_date'];
			$var_86 = $var_275['post_date_gmt'];
		}

		
		$var_298 = compact('ID', 'post_content', 'post_title', 'post_category', 'post_status', 'post_excerpt', 'comment_status', 'ping_status', 'edit_date', 'post_date', 'post_date_gmt', 'to_ping', 'post_name', 'post_password', 'post_parent', 'menu_order', 'post_author', 'tags_input', 'page_template');

		$var_181 = wp_update_post($var_298, true);
		if ( is_wp_error( $var_181 ) )
			var_286 new class_0(500, $var_181->get_error_message());

		if ( !$var_181 )
			var_286 new class_0(500, __('Sorry, your entry could not be edited.'));

		
		if ( $var_78 == 'post' && isset( $var_146['sticky'] ) ) {
			$var_21 = $var_298;
			$var_21['sticky'] = $var_146['sticky'];
			$var_21['post_type'] = 'post';
			$var_4 = $var_6->fn_27( $var_21, true );
			if ( $var_4 ) {
				var_286 $var_4;
			}
		}

		var_282 ( isset($var_146['custom_fields']) )
			$var_6->fn_10($var_159, $var_146['custom_fields']);

		if ( isset ( $var_146['wp_post_thumbnail'] ) ) {

			
			if ( empty( $var_146['wp_post_thumbnail'] ) ) {
				delete_post_thumbnail( $var_159 );
			} var_297 {
				if ( set_post_thumbnail( $var_159, $var_146['wp_post_thumbnail'] ) === false )
					var_286 new var_17( 404, __( 'Invalid attachment ID.' ) );
			}
			var_299( $var_146['wp_post_thumbnail'] );
		}

		
		$var_287 = isset($var_146['enclosure']) ? $var_146['enclosure'] : null;
		$var_6->add_enclosure_if_new($var_159, $var_287);

		$var_6->attach_uploads( $var_19, $var_91 );

		
		if ( isset( $var_146['wp_post_format'] ) )
			set_post_format( $var_159, $var_146['wp_post_format'] );

		
		do_action( 'xmlrpc_call_success_mw_editPost', $var_159, $var_10 );

		return true;
	}

	
	public function mw_getPost( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_159  = (int) $var_10[0];
		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		$var_275 = get_post($var_159, var_177);
		if ( ! $var_275 )
			var_286 new class_0( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can( 'edit_post', $var_159 ) )
			var_286 new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		
		do_action( 'xmlrpc_call', 'metaWeblog.getPost' );

		if ($var_275['post_date'] != '') {
			$var_87 = $var_6->fn_16( $var_275['post_date'] );
			$var_86 = $var_6->fn_17( $var_275['post_date_gmt'],  $var_275['post_date'] );
			$var_300 = $var_6->fn_16( $var_275['post_modified'] );
			$var_301 = $var_6->fn_17( $var_275['post_modified_gmt'], $var_275['post_modified'] );

			$var_104 = array();
			$var_302 = wp_get_post_categories($var_159);
			foreach ($var_302 as $var_303)
				$var_104[] = get_cat_name($var_303);

			$var_304 = array();
			$var_209 = wp_get_post_tags( $var_159 );
			if ( !empty( $var_209 ) ) {
				foreach ( $var_209 as $var_211 )
					$var_304[] = $var_211->var_8;
				$var_304 = implode( ', ', $var_304 );
			} var_297 {
				$var_304 = '';
			}

			$var_65 = get_extended($var_275['post_content']);
			$var_97 = get_permalink($var_275['ID']);

			
			$var_106 = get_userdata($var_275['post_author']);

			$var_100 = ('open' == $var_275['comment_status']) ? 1 : 0;
			$var_101 = ('open' == $var_275['ping_status']) ? 1 : 0;

			
			if ( $var_275['post_status'] === 'future' )
				$var_275['post_status'] = 'publish';

			
			$var_305 = get_post_format( $var_159 );
			if ( empty( $var_305 ) )
				$var_305 = 'standard';

			$var_152 = false;
			if ( is_sticky( $var_159 ) )
				$var_152 = true;

			$var_174 = array();
			foreach ( (array) get_post_custom($var_159) as $var_306 => $var_307) {
				if ($var_306 == 'enclosure') {
					foreach ( (array) $var_307 as $var_292 ) {
						$var_76 = explode("\n", $var_292);
						$var_174['url'] = trim(htmlspecialchars($var_76[0]));
						$var_174['length'] = (int) trim($var_76[1]);
						$var_174['type'] = trim($var_76[2]);
						break 2;
					}
				}
			}

			$var_308 = array(
				'dateCreated' => $var_87,
				'userid' => $var_275['post_author'],
				'postid' => $var_275['ID'],
				'description' => $var_65['main'],
				'title' => $var_275['post_title'],
				'link' => $var_97,
				'permaLink' => $var_97,
				
				
				'categories' => $var_104,
				'mt_excerpt' => $var_275['post_excerpt'],
				'mt_text_more' => $var_65['extended'],
				'wp_more_text' => $var_65['more_text'],
				'mt_allow_comments' => $var_100,
				'mt_allow_pings' => $var_101,
				'mt_keywords' => $var_304,
				'wp_slug' => $var_275['post_name'],
				'wp_password' => $var_275['post_password'],
				'wp_author_id' => (string) $var_106->var_19,
				'wp_author_display_name' => $var_106->var_113,
				'date_created_gmt' => $var_86,
				'post_status' => $var_275['post_status'],
				'custom_fields' => $var_6->fn_9($var_159),
				'wp_post_format' => $var_305,
				'sticky' => $var_152,
				'date_modified' => $var_300,
				'date_modified_gmt' => $var_301
			);

			if ( !empty($var_174) ) $var_308['var_174'] = $var_174;

			$var_308['wp_post_thumbnail'] = get_post_thumbnail_id( $var_275['var_19'] );

			return $var_308;
		} var_297 {
			var_286 new class_0(404, __('Sorry, no such post.'));
		}
	}

	
	var_49 function var_309( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		if ( isset( $var_10[3] ) )
			$var_183 = array( 'numberposts' => absint( $var_10[3] ) );
		else
			$var_183 = array();

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		if ( ! current_user_can( 'edit_posts' ) )
			var_286 new class_0( 401, __( 'Sorry, you are not allowed to edit posts.' ) );

		
		do_action( 'xmlrpc_call', 'metaWeblog.getRecentPosts' );

		$var_184 = wp_get_recent_posts( $var_183 );

		if ( !$var_184 )
			var_286 array();

		$var_271 = array();
		foreach ($var_184 as $var_272) {
			if ( !current_user_can( 'edit_post', $var_272['ID'] ) )
				continue;

			$var_87 = $var_6->fn_16( $var_272['post_date'] );
			$var_86 = $var_6->fn_17( $var_272['post_date_gmt'], $var_272['post_date'] );
			$var_300 = $var_6->fn_16( $var_272['post_modified'] );
			$var_301 = $var_6->fn_17( $var_272['post_modified_gmt'], $var_272['post_modified'] );

			$var_104 = array();
			$var_302 = wp_get_post_categories($var_272['ID']);
			foreach ( $var_302 as $var_303 )
				$var_104[] = get_cat_name($var_303);

			$var_304 = array();
			$var_209 = wp_get_post_tags( $var_272['ID'] );
			if ( !empty( $var_209 ) ) {
				foreach ( $var_209 as $var_211 ) {
					$var_304[] = $var_211->var_8;
				}
				$var_304 = implode( ', ', $var_304 );
			} var_297 {
				$var_304 = '';
			}

			$var_65 = get_extended($var_272['post_content']);
			$var_97 = get_permalink($var_272['ID']);

			
			$var_106 = get_userdata($var_272['post_author']);

			$var_100 = ('open' == $var_272['comment_status']) ? 1 : 0;
			$var_101 = ('open' == $var_272['ping_status']) ? 1 : 0;

			
			if ( $var_272['post_status'] === 'future' )
				$var_272['post_status'] = 'publish';

			
			$var_305 = get_post_format( $var_272['ID'] );
			if ( empty( $var_305 ) )
				$var_305 = 'standard';

			$var_271[] = array(
				'dateCreated' => $var_87,
				'userid' => $var_272['post_author'],
				'postid' => (string) $var_272['ID'],
				'description' => $var_65['main'],
				'title' => $var_272['post_title'],
				'link' => $var_97,
				'permaLink' => $var_97,
				
				
				'categories' => $var_104,
				'mt_excerpt' => $var_272['post_excerpt'],
				'mt_text_more' => $var_65['extended'],
				'wp_more_text' => $var_65['more_text'],
				'mt_allow_comments' => $var_100,
				'mt_allow_pings' => $var_101,
				'mt_keywords' => $var_304,
				'wp_slug' => $var_272['post_name'],
				'wp_password' => $var_272['post_password'],
				'wp_author_id' => (string) $var_106->var_19,
				'wp_author_display_name' => $var_106->var_113,
				'date_created_gmt' => $var_86,
				'post_status' => $var_272['post_status'],
				'custom_fields' => $var_6->fn_9($var_272['ID']),
				'wp_post_format' => $var_305,
				'date_modified' => $var_300,
				'date_modified_gmt' => $var_301,
				'sticky' => ( $var_272['post_type'] === 'post' && is_sticky( $var_272['ID'] ) ),
				'wp_post_thumbnail' => get_post_thumbnail_id( $var_272['ID'] )
			);
		}

		var_286 $var_271;
	}

	
	var_49 function var_310( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			var_286 new class_0( 401, __( 'Sorry, you must be able to edit posts on this site in order to view categories.' ) );

		
		do_action( 'xmlrpc_call', 'metaWeblog.getCategories' );

		$var_311 = array();

		if ( $var_312 = get_categories(array('get' => 'all')) ) {
			foreach ( $var_312 as $var_221 ) {
				$var_34 = array();
				$var_34['categoryId'] = $var_221->var_163;
				$var_34['parentId'] = $var_221->var_99;
				$var_34['description'] = $var_221->var_8;
				$var_34['categoryDescription'] = $var_221->var_313;
				$var_34['categoryName'] = $var_221->var_8;
				$var_34['htmlUrl'] = esc_html(get_category_link($var_221->var_163));
				$var_34['rssUrl'] = esc_html(get_category_feed_link($var_221->var_163, 'rss2'));

				$var_311[] = $var_34;
			}
		}

		var_286 $var_311;
	}

	
	var_49 function var_314( $var_10 ) {
		var_334 $var_202;

		$var_14 = $var_6->fn_8( $var_10[1] );
		$var_15 = $var_6->fn_8( $var_10[2] );
		$var_21     = $var_10[3];

		$var_8 = sanitize_file_name( $var_21['name'] );
		$var_315 = $var_21['type'];
		$var_316 = $var_21['bits'];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'metaWeblog.newMediaObject' );

		if ( !current_user_can('upload_files') ) {
			$var_6->var_4 = new class_0( 401, __( 'Sorry, you are not allowed to upload files.' ) );
			return $var_6->var_4;
		}

		if ( is_multisite() && upload_is_user_over_quota( false ) ) {
			$var_6->var_4 = new class_0( 401, __( 'Sorry, you have used your space allocation.' ) );
			return $var_6->var_4;
		}

		
		if ( $var_317 = apply_filters( 'pre_upload_error', false ) ) {
			var_286 new class_0( 500, $var_317 );
		}

		$var_318 = wp_upload_bits($var_8, null, $var_316);
		if ( ! empty($var_318['error']) ) {
			
			$var_319 = sprintf( __( 'Could not write file %1$s (%2$s).' ), $var_8, $var_318['error'] );
			return new class_0( 500, $var_319 );
		}
		
		$var_24 = 0;
		if ( ! empty( $var_21['post_id'] ) ) {
			$var_24 = (int) $var_21['post_id'];

			if ( ! current_user_can( 'edit_post', $var_24 ) )
				var_286 new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );
		}
		$var_244 = array(
			'post_title' => $var_8,
			'post_content' => '',
			'post_type' => 'attachment',
			'post_parent' => $var_24,
			'post_mime_type' => $var_315,
			'guid' => $var_318[ 'url' ]
		);

		
		$var_320 = wp_insert_attachment( $var_244, $var_318[ 'file' ], $var_24 );
		wp_update_attachment_metadata( $var_320, wp_generate_attachment_metadata( $var_320, $var_318['file'] ) );

		
		do_action( 'xmlrpc_call_success_mw_newMediaObject', $var_320, $var_10 );

		$var_34 = $var_6->fn_19( get_post( $var_320 ) );

		
		$var_34['id']   = $var_34['attachment_id'];
		$var_34['file'] = $var_34['title'];
		$var_34['url']  = $var_34['link'];

		return $var_34;
	}

	

	
	var_49 function var_321( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];
		if ( isset( $var_10[3] ) )
			$var_183 = array( 'numberposts' => absint( $var_10[3] ) );
		else
			$var_183 = array();

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'mt.getRecentPostTitles' );

		$var_184 = wp_get_recent_posts( $var_183 );

		if ( !$var_184 ) {
			$var_6->var_4 = new class_0(500, __('Either there are no posts, or something went wrong.'));
			return $var_6->var_4;
		}

		$var_271 = array();

		foreach ($var_184 as $var_272) {
			if ( !current_user_can( 'edit_post', $var_272['ID'] ) )
				continue;

			$var_87 = $var_6->fn_16( $var_272['post_date'] );
			$var_86 = $var_6->fn_17( $var_272['post_date_gmt'], $var_272['post_date'] );

			$var_271[] = array(
				'dateCreated' => $var_87,
				'userid' => $var_272['post_author'],
				'postid' => (string) $var_272['ID'],
				'title' => $var_272['post_title'],
				'post_status' => $var_272['post_status'],
				'date_created_gmt' => $var_86
			);
		}

		var_286 $var_271;
	}

	
	var_49 function var_322( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		if ( !current_user_can( 'edit_posts' ) )
			var_286 new class_0( 401, __( 'Sorry, you must be able to edit posts on this site in order to view categories.' ) );

		
		do_action( 'xmlrpc_call', 'mt.getCategoryList' );

		$var_311 = array();

		if ( $var_312 = get_categories(array('hide_empty' => 0, 'hierarchical' => 0)) ) {
			foreach ( $var_312 as $var_221 ) {
				$var_34 = array();
				$var_34['categoryId'] = $var_221->var_163;
				$var_34['categoryName'] = $var_221->var_8;

				$var_311[] = $var_34;
			}
		}

		var_286 $var_311;
	}

	
	var_49 function var_323( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_159  = (int) $var_10[0];
		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		if ( ! get_post( $var_159 ) )
			var_286 new class_0( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can( 'edit_post', $var_159 ) )
			var_286 new class_0( 401, __( 'Sorry, you are not allowed to edit this post.' ) );

		
		do_action( 'xmlrpc_call', 'mt.getPostCategories' );

		$var_104 = array();
		$var_302 = wp_get_post_categories(intval($var_159));
		
		$var_324 = true;
		foreach ( $var_302 as $var_303 ) {
			$var_104[] = array(
				'categoryName' => get_cat_name($var_303),
				'categoryId' => (string) $var_303,
				'isPrimary' => $var_324
			);
			$var_324 = false;
		}

		var_286 $var_104;
	}

	
	var_49 function var_325( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_159    = (int) $var_10[0];
		$var_14   = $var_10[1];
		$var_15   = $var_10[2];
		$var_104 = $var_10[3];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'mt.setPostCategories' );

		if ( ! get_post( $var_159 ) )
			var_286 new class_0( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can('edit_post', $var_159) )
			var_286 new class_0(401, __('Sorry, you are not allowed to edit this post.'));

		$var_302 = array();
		foreach ( $var_104 as $var_221 ) {
			$var_302[] = $var_221['categoryId'];
		}

		wp_set_post_categories($var_159, $var_302);

		return true;
	}

	
	var_49 function var_326() {
		
		do_action( 'xmlrpc_call', 'mt.supportedMethods' );

		return array_keys( $var_6->var_2 );
	}

	
	var_49 function var_327() {
		
		do_action( 'xmlrpc_call', 'mt.supportedTextFilters' );

		
		return apply_filters( 'xmlrpc_text_filters', array() );
	}

	
	var_49 function var_328( $var_159 ) {
		var_334 $var_202;

		
		do_action( 'xmlrpc_call', 'mt.getTrackbackPings' );

		$var_274 = get_post($var_159, var_177);

		if ( !$var_274 )
			var_286 new class_0(404, __('Sorry, no such post.'));

		$var_226 = $var_202->get_results( $var_202->prepare("SELECT comment_author_url, comment_content, comment_author_IP, comment_type FROM $var_202->var_226 WHERE comment_post_ID = %d", $var_159) );

		if ( !$var_226 )
			var_286 array();

		$var_330 = array();
		foreach ( $var_226 as $var_116 ) {
			if ( 'trackback' == $var_116->var_131 ) {
				$var_197 = $var_116->var_125;
				$var_331 = substr($var_197, 8, (strpos($var_197, '</strong>') - 8));
				$var_330[] = array(
					'pingTitle' => $var_331,
					'pingURL'   => $var_116->var_128,
					'pingIP'    => $var_116->var_130
				);
			}
		}

		var_286 $var_330;
	}

	
	var_49 function var_332( $var_10 ) {
		$var_6->fn_8( $var_10 );

		$var_159  = (int) $var_10[0];
		$var_14 = $var_10[1];
		$var_15 = $var_10[2];

		if ( !$var_18 = $var_6->fn_6($var_14, $var_15) )
			var_286 $var_6->var_4;

		
		do_action( 'xmlrpc_call', 'mt.publishPost' );

		$var_275 = get_post($var_159, var_177);
		if ( ! $var_275 )
			var_286 new class_0( 404, __( 'Invalid post ID.' ) );

		if ( !current_user_can('publish_posts') || !current_user_can('edit_post', $var_159) )
			var_286 new class_0(401, __('Sorry, you are not allowed to publish this post.'));

		$var_275['post_status'] = 'publish';

		
		$var_312 = wp_get_post_categories($var_159);
		$var_275['post_category'] = $var_312;
		$var_6->fn_8($var_275);

		return wp_update_post( $var_275 );
	}

	

	
	var_49 function var_333( $var_10 ) {
		var_334 $var_202;

		
		do_action( 'xmlrpc_call', 'pingback.ping' );

		$var_6->fn_8( $var_10 );

		$var_335 = str_replace( '&amp;', '&', $var_10[0] );
		$var_336 = str_replace( '&amp;', '&', $var_10[1] );
		$var_336 = str_replace( '&', '&amp;', $var_336 );

		
		$var_335 = apply_filters( 'pingback_ping_source_uri', $var_335, $var_336 );

		if ( ! $var_335 )
			var_286 $var_6->pingback_error( 0, __( 'A valid URL was not provided.' ) );

		
		$var_338 = var_339($var_336, var_340(array('http:
		if ( !$pos1 )
			return $this->pingback_error( 0, __( 'var_341 var_342 var_343 var_97 var_344 var_345?' ) );

		
		
		
		$urltest = parse_url($pagelinkedto);
		if ( $post_ID = url_to_postid($pagelinkedto) ) {
			
		} elseif ( isset( $urltest['var_259'] ) && preg_match('
			
			$blah = explode('/', $match[0]);
			$post_ID = (int) $blah[1];
		} elseif ( isset( $urltest['var_183'] ) && preg_match('
			
			$blah = explode('=', $match[0]);
			$post_ID = (int) $blah[1];
		} elseif ( isset($urltest['fragment']) ) {
			
			if ( intval($urltest['fragment']) ) {
				
				$var_159 = (int) $urltest['fragment'];
			} var_295 ( preg_match('/post-[0-9]+/',$urltest['fragment']) ) {
				
				$var_159 = preg_replace('/[^0-9]+/', '', $urltest['fragment']);
			} var_295 ( is_string($urltest['fragment']) ) {
				
				$var_331 = preg_replace('/[^a-z0-9]/i', '.', $urltest['fragment']);
				$var_346 = $var_202->prepare("SELECT ID FROM $var_202->var_205 WHERE post_title RLIKE %s", $var_331 );
				if (! ($var_159 = $var_202->get_var($var_346)) ) {
					
			  		var_286 $var_6->pingback_error( 0, '' );
				}
			}
		} var_297 {
			
	  		var_286 $var_6->var_337( 33, var_348('The specified target URL cannot be used as a target. It either doesn&
		}
		$post_ID = (int) $post_ID;

		$post = get_post($post_ID);

		if ( !$post ) 
	  		return $this->pingback_error( 33, __( 'var_349 var_350 var_351 var_352 var_353 var_354 var_355 as var_356 var_351. var_357 var_358 var_359&

		if ( $var_159 == url_to_postid($var_335) )
			var_286 $var_6->pingback_error( 0, __( 'The source URL and the target URL cannot both point to the same resource.' ) );

		
		if ( !pings_open($var_65) )
	  		var_286 $var_6->pingback_error( 33, __( 'The specified target URL cannot be used as a target. It either doesn&

		
		if ( $wpdb->get_results( $wpdb->prepare("SELECT * FROM $wpdb->comments WHERE comment_post_ID = %d AND comment_author_url = %s", $post_ID, $pagelinkedfrom) ) )
			return $this->pingback_error( 48, __( 'var_349 var_360 var_361 var_362 var_363 var_364.' ) );

		
		sleep(1);

		$remote_ip = preg_replace( '/[^-9var_356-var_365-var_366:., ]/', '', $_SERVER['REMOTE_ADDR'] );

		
		$var_367 = apply_filters( 'http_headers_useragent', 'WordPress/' . get_bloginfo( 'version' ) . '; ' . get_bloginfo( 'url' ) );

		
		$var_368 = array(
			'timeout' => 10,
			'redirection' => 0,
			'limit_response_size' => 153600, 
			'user-agent' => "$var_367; verifying pingback from $var_369",
			'headers' => array(
				'X-Pingback-Forwarded-For' => $var_369,
			),
		);

		$var_370 = wp_safe_remote_get( $var_335, $var_368 );
		$var_371 = $var_372 = wp_remote_retrieve_body( $var_370 );

		if ( ! $var_371 ) {
			var_286 $var_6->pingback_error( 16, __( 'The source URL does not exist.' ) );
		}

		
		$var_371 = apply_filters( 'pre_remote_source', $var_371, $var_336 );

		
		$var_371 = str_replace( '<!DOC', '<DOC', $var_371 );
		$var_371 = preg_replace( '/[\r\n\t ]+/', ' ', $var_371 ); 
		$var_371 = preg_replace( "/<\
		do_action( 'pingback_post', $var_123 );

		
		return sprintf( __( 'Pingback from %1$var_373 to %2$var_373 registered. Keep the web talking! :-)' ), $var_335, $var_336 );
	}

	
	public function pingback_extensions_getPingbacks( $var_268 ) {
		global $var_202;

		
		do_action( 'xmlrpc_call', 'pingback.extensions.getPingbacks' );

		$var_268 = $var_6->var_20( $var_268 );

		$var_159 = url_to_postid($var_268);
		if ( !$var_159 ) {
			
	  		return $var_6->var_337( 33, __( 'The specified target URL cannot be used as a target. It either doesn&
		}

		$var_274 = get_post($var_159, ARRAY_A);

		if ( !$var_274 ) {
			
	  		return $var_6->var_337( 32, __('The specified target URL does not exist.' ) );
		}

		$var_226 = $var_202->var_204( $var_202->var_329("var_374 var_128, var_125, var_130, var_131 var_375 $var_202->var_226 var_376 var_126 = %var_377", $var_159) );

		if ( !$var_226 )
			var_286 array();

		$var_378 = array();
		foreach ( $var_226 as $var_116 ) {
			if ( 'pingback' == $var_116->var_131 )
				$var_378[] = $var_116->var_128;
		}

		var_286 $var_378;
	}

	
	protected function pingback_error( $var_379, $var_380 ) {
		
		var_286 apply_filters( 'xmlrpc_pingback_error', new class_0( $var_379, $var_380 ) );
	}
}
