
























from __future__ import unicode_literals


from django import template
from django.core.serializers import serialize
from django.db.models.query import QuerySet
from django.utils import six
from django.utils.safestring import mark_safe

from djblets.util.serializers import DjbletsJSONEncoder


var_0 = django.template.Library()


@var_0.simple_tag
def function_0(var_2):
    
    var_4 = 

    for field in var_2:
        var_4 += { name: '%s',  % field.name

        if field.is_hidden:
            var_4 += hidden: true, 
        else:
            var_4 += label: '%s',  % field.label_tag(field.label + :)

            if field.field.required:
                var_4 += required: true, 

            if field.field.help_text:
                var_4 += help_text: '%s',  % field.field.help_text

        var_4 += widget: '%s' }, % django.utils.six.text_type(field)

    
    return [ %var_4 ] % var_4[:-1]


@var_0.filter
def function_1(var_5, indent=None):
    if isinstance(var_5, QuerySet):
        var_8 = serialize(json, var_5, indent=indent)
    else:
        var_8 = json.dumps(var_5, indent=indent, cls=DjbletsJSONEncoder)

    return mark_safe(var_8)


@var_0.filter
def function_2(var_9, var_10=):
    
    if not var_9:
        return 

    return mark_safe(json_dumps(var_9)[1:-1] + var_10)
