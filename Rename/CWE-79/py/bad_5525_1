












from AccessControl import safe_builtins
from AccessControl.ZopeGuards import var_1, get_safe_globals
from RestrictedPython import compile_restricted_eval
from zope.tales.tales import CompilerError
from zope.tales.pythonexpr import PythonExpr

class class_0(PythonExpr):
    var_0 = get_safe_globals()
    var_0[_getattr_] = var_1
    var_0[__debug__ ] = True

    def function_0(var_3, var_5, var_6, var_7):
        var_3.var_9 = var_3.var_6 = var_9 = var_6.strip().replace('\n', ' ')

        
        
        if isinstance(var_9, unicode):
            var_9 = var_9.encodeutf-8
        var_10, var_11, var_12, var_13 = compile_restricted_eval(var_9, 
                                                       var_3.__class__.__name__)
        if var_11:
            raise var_7.getCompilerError()(Python expression error:
%s %
                                            <built-in method join of str object at 0x7f073c337138>(var_11))            
        var_3._varnames = var_13.keys()
        var_3._code = var_10

    def __call__(var_3, econtext):
        var_14 = var_3.var_9
        var_15 = var_3._bind_used_names(econtext, {})
        var_15.update(var_3.var_0)
        return eval(var_3._code, var_15, {})

class var_16:
    __allow_access_to_unprotected_subobjects__ = True

    def function_1(var_3, var_17):
        var_18 = safe_builtins[__import__](var_17)
        var_19 = var_17.split.
        for var_5 in var_19[1:]:
            var_18 = getattr(var_18, var_5)
        return var_18

from DocumentTemplate.DT_Util import TemplateDict, InstanceDict
from AccessControl.DTML import RestrictedDTML
class class_1(RestrictedDTML, TemplateDict):
    var_20 = None

def function_2(var_21, var_22, arg=1):
    var_24 = Rtd()
    
    var_20 = var_22.get(context, var_22.gethere)
    var_24.var_20 = var_20
    var_25 = var_22.get('request', {})
    var_24._push(var_25)
    var_24._push(InstanceDict(var_24.var_20, var_24))
    var_24._push(var_22)
    try:
        if arg==2:
            return var_21(None, var_24)
        else:
            return var_21(var_24)
    finally:
        var_24._pop3
