




var_0 = os.path.join

from tornado import web

from Ellipsisbase.handlers import APIHandler, json_errors
from Ellipsisutils import url_path_join

def function_0(var_2, var_4):
    
    var_6 = var_2.kernel_spec_manager
    var_7 = var_6.get_kernel_spec(var_4)
    var_8 = {var_4: var_4}
    var_8[var_7] = var_7.to_dict()
    var_8[var_9] = var_9 = {}
    var_10 = var_7.var_10
    for resource in ['kernel.js', 'kernel.css']:
        if os.path.exists(var_0(var_10, resource)):
            var_9[resource] = url_path_join(
                var_2.base_url,
                kernelspecs,
                var_4,
                resource
            )
    for logo_file in glob.glob(var_0(var_10, logo-*)):
        var_11 = os.path.basename(logo_file)
        var_12, var_13 = os.path.splitext(var_11)
        var_9[var_12] = url_path_join(
            var_2.base_url,
            kernelspecs,
            var_4,
            var_11
        )
    return var_8

class class_0(APIHandler):
    var_14 = ('GET',)

    @tornado.web.authenticated
    @json_errors
    def function_1(var_15):
        var_6 = var_15.kernel_spec_manager
        var_16 = var_15.kernel_manager
        var_17 = {}
        var_17[default] = var_16.default_kernel_name
        var_17[kernelspecs] = var_18 = {}
        for var_19 in var_6.find_kernel_specs():
            try:
                var_8 = kernelspec_model(var_15, var_19)
            except Exception:
                var_15.log.error(Failed to load kernel var_7: '%s', var_19, exc_info=True)
                continue
            var_18[var_19] = var_8
        var_15.set_header('Content-Type', 'application/json')
        var_15.finish(json.dumps(var_17))


class class_1(APIHandler):
    var_14 = ('GET',)

    @tornado.web.authenticated
    @json_errors
    def function_1(var_15, var_19):
        try:
            var_17 = kernelspec_model(var_15, var_19)
        except KeyError:
            raise tornado.web.HTTPError(404, Kernel var_7 %s not found % var_19)
        var_15.set_header('Content-Type', 'application/json')
        var_15.finish(json.dumps(var_17))




var_20 = (?P<var_19>\w+)

var_21 = [
    (/api/kernelspecs, MainKernelSpecHandler),
    (/api/kernelspecs/%s % var_20, KernelSpecHandler),
]
