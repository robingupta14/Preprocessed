
import var_0.var_1.var_2;
import var_0.var_1.var_3;
import var_4.var_5.var_6.var_7.var_8;
import var_4.var_9.var_10.var_11.var_12.var_13;
import var_4.var_9.var_10.var_11.var_12.var_14.var_15;
import var_4.var_9.var_16.var_17;
import var_4.var_9.var_18.var_19;
import var_4.var_9.var_18.var_0.var_20;
import var_4.var_9.var_21.var_22;
import var_4.var_9.var_23.var_24.var_25.var_26;
import var_4.var_9.var_23.var_24.var_25.var_27;
import var_4.var_9.var_23.var_24.var_25.var_28;

import var_29.var_30.var_31;
import var_29.var_30.var_16.var_32;
import var_33.var_7.var_34;
import var_33.var_7.var_35;
import var_33.var_7.var_36;
import var_33.var_7.var_37;
import var_33.var_38.var_39;
import var_33.var_40.var_41.var_42;
import var_33.var_40.var_41.var_43;
import var_33.var_21.var_44;
import var_33.var_21.var_45;
import var_33.var_21.var_46;

import static var_33.var_21.var_47.var_48;
import static var_33.var_21.var_49.var_50.var_51;


public class class_0 implements MvcEndpoint{

    private final List<FileProvider> var_53;
    private final Configuration var_54;
    private final String var_55;
    private final List<String> var_56;

    public var_52(String param_0, List<String> param_1) {
        this.var_55 = var_55;
        this.var_56 = var_56;
        var_53 = var_48(new FileSystemFileProvider(),
                new ZipArchiveFileProvider(),
                new TarGzArchiveFileProvider());
        var_54 = new Configuration(var_2.var_57);
        var_54.var_58(this.var_59(), "/templates");
    }

    @var_26
    public void method_1(HttpServletResponse param_2) throws IOException {
        var_60.var_61("log/");
    }

    @var_26("/")
    @var_28
    public String method_2(Model param_3, 
                       @var_27(var_63 = false, var_64 = "FILENAME") SortBy param_4,
                       @var_27(var_63 = false, var_64 = "false") boolean param_5,
                       @var_27(var_63 = false) String param_6) throws IOException, TemplateException {
        var_68(var_67);

        Path var_69 = var_55(var_67);

        List<FileEntry> var_70 = var_71(var_69).var_72(var_69);
        List<FileEntry> var_73 = var_74(var_70, var_65, var_66);

        var_62.var_75("sortBy", var_65);
        var_62.var_75("desc", var_66);
        var_62.var_75("files", var_73);
        var_62.var_75("currentFolder", var_69.var_76().var_77());
        var_62.var_75("base", var_67 != null ? var_39.var_78(var_67, "UTF-8") : "");
        var_62.var_75("parent", var_79(var_69));
        var_62.var_75("stylesheets", var_56);

        return var_20.var_80(var_54.var_81("logview.ftl"), var_62);
    }

    private FileProvider method_4(Path param_8) {
        return var_53.var_49()
                .var_83(var_84 -> var_84.var_85(var_82))
                .var_86()
                .var_87(() -> new RuntimeException("no file provider found for " + var_82.var_77()));
    }

    private String method_6(Path param_0) {
        Path var_88 = var_55(null);
        String var_89 = "";
        if (!var_88.var_77().var_90(var_55.var_77())) {
            var_89 = var_55.var_79().var_77();
            if (var_89.var_91(var_88.var_77())) {
                var_89 = var_89.var_92(var_88.var_77().var_93());
            }
        }
        return var_89;
    }

    private Path method_0(String param_6) {
        return var_67 != null ? var_43.var_94(var_55, var_67) : var_43.var_94(var_55);
    }

    private List<FileEntry> method_5(List<FileEntry> param_7, SortBy param_4, boolean param_5) {
        Comparator<FileEntry> var_95 = null;
        switch (var_65) {
            case var_96:
                var_95 = (var_97, var_98) -> var_97.var_99().var_100(var_98.var_99());
                break;
            case var_101:
                var_95 = (var_97, var_98) -> var_102.var_103(var_97.var_104(), var_98.var_104());
                break;
            case var_105:
                var_95 = (var_97, var_98) -> var_102.var_103(var_97.var_106().var_107(), var_98.var_106().var_107());
                break;
        }
        List<FileEntry> var_73 = var_70.var_49().var_108(var_95).var_109(var_51());

        if (var_66) {
            var_44.var_110(var_73);
        }
        return var_73;
    }

    @var_26("/view")
    public void method_7(@var_27 String param_9,
                     @var_27(var_63 = false) String param_6,
                     @var_27(var_63 = false) Integer param_10,
                     HttpServletResponse param_2) throws IOException {
        var_68(var_111);
        var_60.var_113(var_17.var_114);

        Path var_115 = var_55(var_67);
        FileProvider var_116 = var_71(var_115);
        if (var_112 != null) {
            var_116.var_117(var_115, var_111, var_60.var_118(), var_112);
        }
        else {
            var_116.var_119(var_115, var_111, var_60.var_118());
        }
    }

    @var_26("/search")
    public void method_8(@var_27 String param_11, HttpServletResponse param_2) throws IOException {
        Path var_82 = var_55(null);
        List<FileEntry> var_70 = var_71(var_82).var_72(var_82);
        List<FileEntry> var_73 = var_74(var_70, var_121.var_105, false);

        var_60.var_113(var_17.var_114);
        ServletOutputStream var_122 = var_60.var_118();

        var_73.var_49()
                .var_83(var_41 -> var_41.var_123().var_90(var_124.var_125))
                .var_126(var_41 -> var_127(var_41, var_120, var_122));
    }

    private void method_9(FileEntry param_13, String param_11, OutputStream param_12) {
        Path var_82 = var_55(null);
        try {
            List<String> var_129 = var_8.var_130(new FileInputStream(new File(var_82.var_131().var_77(), var_128.var_99())))
                    .var_49()
                    .var_83(var_132 -> var_132.var_133(var_120))
                    .var_134(var_132 -> "[" + var_128.var_99() + "] " + var_132)
                    .var_109(var_51());
            for (String var_132 : var_129) {
                var_122.var_135(var_132.var_136());
                var_122.var_135(var_137.var_138().var_136());
            }
        } catch (IOException var_139) {}
    }

    private void method_3(String param_9) {
        var_22.var_140(var_111, "..");
    }

    @var_141
    public String method_10() {
        return "/log";
    }

    @var_141
    public boolean method_11() {
        return true;
    }


    @var_141
    public Class<? extends Endpoint> method_12() {
        return null;
    }

}
