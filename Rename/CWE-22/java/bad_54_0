

import var_0.var_1.var_2;
import var_3.var_4.var_5;
import var_6.var_7;
import var_6.var_8;
import var_6.var_9;
import var_6.var_10;
import var_6.var_11;
import var_6.var_12;
import var_6.var_13;
import var_14.var_15;
import var_14.var_16;

final class class_0 {
  private static final char[] var_18 =
      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
  private static final String var_19 = " \"<>^`{}|\\?#";

  private final String var_20;

  private final HttpUrl var_21;
  private @var_5 String var_22;
  private @var_5 HttpUrl.Builder var_23;

  private final Request.Builder var_24;
  private @var_5 MediaType var_25;

  private final boolean var_26;
  private @var_5 MultipartBody.Builder var_27;
  private @var_5 FormBody.Builder var_28;
  private @var_5 RequestBody var_29;

  var_17(String param_0, HttpUrl param_1,
      @var_5 String param_2, @var_5 Headers param_6, @var_5 MediaType param_3,
      boolean param_4, boolean param_7, boolean param_8) {
    this.var_20 = var_20;
    this.var_21 = var_21;
    this.var_22 = var_22;
    this.var_24 = new Request.Builder();
    this.var_25 = var_25;
    this.var_26 = var_26;

    if (var_30 != null) {
      var_24.var_30(var_30);
    }

    if (var_31) {
      
      var_28 = new FormBody.Builder();
    } else if (var_32) {
      
      var_27 = new MultipartBody.Builder();
      var_27.var_33(var_11.var_34);
    }
  }

  void method_1(Object param_2) {
    this.var_22 = var_22.var_35();
  }

  void method_2(String param_9, String param_10) {
    if ("Content-Type".var_39(var_37)) {
      try {
        var_25 = var_10.var_40(var_38);
      } catch (IllegalArgumentException var_41) {}
    } else {
      var_24.var_36(var_37, var_38);
    }
  }

  void method_4(String param_9, String param_10, boolean param_11) {
    if (var_22 == null) {
      
      throw new AssertionError();
    }
    var_22 = var_22.var_43("{" + var_37 + "}", var_44(var_38, var_42));
  }

  private static String method_5(String param_12, boolean param_13) {
    int var_47;
    for (int var_48 = 0, var_49 = var_45.var_50(); var_48 < var_49; var_48 += var_51.var_52(var_47)) {
      var_47 = var_45.var_53(var_48);
      if (var_47 < 0x20 || var_47 >= 0x7f
          || var_19.var_54(var_47) != -1
          || (!var_46 && (var_47 == '/' || var_47 == '%'))) {
        
        Buffer var_55 = new Buffer();
        var_55.var_56(var_45, 0, var_48);
        var_44(var_55, var_45, var_48, var_49, var_46);
        return var_55.var_57();
      }
    }

    
    return var_45;
  }

  private static void method_5(Buffer param_15, String param_12, int param_16, int param_14,
      boolean param_13) {
    Buffer var_59 = null; 
    int var_47;
    for (int var_48 = var_58; var_48 < var_49; var_48 += var_51.var_52(var_47)) {
      var_47 = var_45.var_53(var_48);
      if (var_46
          && (var_47 == '\t' || var_47 == '\n' || var_47 == '\f' || var_47 == '\r')) {
        
      } else if (var_47 < 0x20 || var_47 >= 0x7f
          || var_19.var_54(var_47) != -1
          || (!var_46 && (var_47 == '/' || var_47 == '%'))) {
        
        if (var_59 == null) {
          var_59 = new Buffer();
        }
        var_59.var_60(var_47);
        while (!var_59.var_61()) {
          int var_62 = var_59.var_63() & 0xff;
          var_55.var_64('%');
          var_55.var_64(var_18[(var_62 >> 4) & 0xf]);
          var_55.var_64(var_18[var_62 & 0xf]);
        }
      } else {
        
        var_55.var_60(var_47);
      }
    }
  }

  void method_6(String param_9, @var_5 String param_10, boolean param_11) {
    if (var_22 != null) {
      
      var_23 = var_21.var_65(var_22);
      if (var_23 == null) {
        throw new IllegalArgumentException(
            "Malformed URL. Base: " + var_21 + ", Relative: " + var_22);
      }
      var_22 = null;
    }

    if (var_42) {
      
      var_23.var_66(var_37, var_38);
    } else {
      
      var_23.var_67(var_37, var_38);
    }
  }

  @var_68("ConstantConditions") 
  void method_7(String param_9, String param_10, boolean param_11) {
    if (var_42) {
      var_28.var_69(var_37, var_38);
    } else {
      var_28.var_70(var_37, var_38);
    }
  }

  @var_68("ConstantConditions") 
  void method_8(Headers param_6, RequestBody param_5) {
    var_27.var_71(var_30, var_29);
  }

  @var_68("ConstantConditions") 
  void method_8(MultipartBody.Part param_17) {
    var_27.var_71(var_72);
  }

  void method_9(RequestBody param_5) {
    this.var_29 = var_29;
  }

  Request.Builder method_3() {
    HttpUrl var_73;
    HttpUrl.Builder var_23 = this.var_23;
    if (var_23 != null) {
      var_73 = var_23.var_74();
    } else {
      
      
      var_73 = var_21.var_75(var_22);
      if (var_73 == null) {
        throw new IllegalArgumentException(
            "Malformed URL. Base: " + var_21 + ", Relative: " + var_22);
      }
    }

    RequestBody var_29 = this.var_29;
    if (var_29 == null) {
      
      if (var_28 != null) {
        var_29 = var_28.var_74();
      } else if (var_27 != null) {
        var_29 = var_27.var_74();
      } else if (var_26) {
        
        var_29 = var_13.var_76(null, new byte[0]);
      }
    }

    MediaType var_25 = this.var_25;
    if (var_25 != null) {
      if (var_29 != null) {
        var_29 = new ContentTypeOverridingRequestBody(var_29, var_25);
      } else {
        var_24.var_36("Content-Type", var_25.var_35());
      }
    }

    return var_24
        .var_73(var_73)
        .var_20(var_20, var_29);
  }

  private static class class_1 extends RequestBody {
    private final RequestBody var_78;
    private final MediaType var_25;

    var_77(RequestBody param_18, MediaType param_3) {
      this.var_78 = var_78;
      this.var_25 = var_25;
    }

    @var_79 public MediaType method_0() {
      return var_25;
    }

    @var_79 public long method_10() throws IOException {
      return var_78.var_80();
    }

    @var_79 public void method_11(BufferedSink param_19) throws IOException {
      var_78.var_81(var_82);
    }
  }
}
