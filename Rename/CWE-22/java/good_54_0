

import var_0.var_1.var_2;
import var_0.var_3.var_4.var_5;
import var_6.var_7.var_8;
import var_9.var_10;
import var_9.var_11;
import var_9.var_12;
import var_9.var_13;
import var_9.var_14;
import var_9.var_15;
import var_9.var_16;
import var_17.var_18;
import var_17.var_19;

final class class_0 {
  private static final char[] var_21 =
      { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
  private static final String var_22 = " \"<>^`{}|\\?#";

  
  private static final Pattern var_23 = var_5.var_24("(.*/)?(\\.|%2e|%2E){1,2}(/.*)?");

  private final String var_25;

  private final HttpUrl var_26;
  private @var_8 String var_27;
  private @var_8 HttpUrl.Builder var_28;

  private final Request.Builder var_29;
  private @var_8 MediaType var_30;

  private final boolean var_31;
  private @var_8 MultipartBody.Builder var_32;
  private @var_8 FormBody.Builder var_33;
  private @var_8 RequestBody var_34;

  var_20(String param_0, HttpUrl param_1,
      @var_8 String param_2, @var_8 Headers param_6, @var_8 MediaType param_3,
      boolean param_4, boolean param_7, boolean param_8) {
    this.var_25 = var_25;
    this.var_26 = var_26;
    this.var_27 = var_27;
    this.var_29 = new Request.Builder();
    this.var_30 = var_30;
    this.var_31 = var_31;

    if (var_35 != null) {
      var_29.var_35(var_35);
    }

    if (var_36) {
      
      var_33 = new FormBody.Builder();
    } else if (var_37) {
      
      var_32 = new MultipartBody.Builder();
      var_32.var_38(var_14.var_39);
    }
  }

  void method_1(Object param_2) {
    this.var_27 = var_27.var_40();
  }

  void method_2(String param_9, String param_10) {
    if ("Content-Type".var_44(var_42)) {
      try {
        var_30 = var_13.var_45(var_43);
      } catch (IllegalArgumentException var_46) {}
    } else {
      var_29.var_41(var_42, var_43);
    }
  }

  void method_4(String param_9, String param_10, boolean param_11) {
    if (var_27 == null) {
      
      throw new AssertionError();
    }
    String var_48 = var_49(var_43, var_47);
    String var_50 = var_27.var_51("{" + var_42 + "}", var_48);
    if (var_23.var_52(var_50).var_53()) {
      throw new IllegalArgumentException(
          "@Path parameters shouldn't perform path traversal ('.' or '..'): " + var_43);
    }
    var_27 = var_50;
  }

  private static String method_5(String param_12, boolean param_13) {
    int var_56;
    for (int var_57 = 0, var_58 = var_54.var_59(); var_57 < var_58; var_57 += var_60.var_61(var_56)) {
      var_56 = var_54.var_62(var_57);
      if (var_56 < 0x20 || var_56 >= 0x7f
          || var_22.var_63(var_56) != -1
          || (!var_55 && (var_56 == '/' || var_56 == '%'))) {
        
        Buffer var_64 = new Buffer();
        var_64.var_65(var_54, 0, var_57);
        var_49(var_64, var_54, var_57, var_58, var_55);
        return var_64.var_66();
      }
    }

    
    return var_54;
  }

  private static void method_5(Buffer param_15, String param_12, int param_16, int param_14,
      boolean param_13) {
    Buffer var_68 = null; 
    int var_56;
    for (int var_57 = var_67; var_57 < var_58; var_57 += var_60.var_61(var_56)) {
      var_56 = var_54.var_62(var_57);
      if (var_55
          && (var_56 == '\t' || var_56 == '\n' || var_56 == '\f' || var_56 == '\r')) {
        
      } else if (var_56 < 0x20 || var_56 >= 0x7f
          || var_22.var_63(var_56) != -1
          || (!var_55 && (var_56 == '/' || var_56 == '%'))) {
        
        if (var_68 == null) {
          var_68 = new Buffer();
        }
        var_68.var_69(var_56);
        while (!var_68.var_70()) {
          int var_71 = var_68.var_72() & 0xff;
          var_64.var_73('%');
          var_64.var_73(var_21[(var_71 >> 4) & 0xf]);
          var_64.var_73(var_21[var_71 & 0xf]);
        }
      } else {
        
        var_64.var_69(var_56);
      }
    }
  }

  void method_6(String param_9, @var_8 String param_10, boolean param_11) {
    if (var_27 != null) {
      
      var_28 = var_26.var_74(var_27);
      if (var_28 == null) {
        throw new IllegalArgumentException(
            "Malformed URL. Base: " + var_26 + ", Relative: " + var_27);
      }
      var_27 = null;
    }

    if (var_47) {
      
      var_28.var_75(var_42, var_43);
    } else {
      
      var_28.var_76(var_42, var_43);
    }
  }

  @var_77("ConstantConditions") 
  void method_7(String param_9, String param_10, boolean param_11) {
    if (var_47) {
      var_33.var_78(var_42, var_43);
    } else {
      var_33.var_79(var_42, var_43);
    }
  }

  @var_77("ConstantConditions") 
  void method_8(Headers param_6, RequestBody param_5) {
    var_32.var_80(var_35, var_34);
  }

  @var_77("ConstantConditions") 
  void method_8(MultipartBody.Part param_17) {
    var_32.var_80(var_81);
  }

  void method_9(RequestBody param_5) {
    this.var_34 = var_34;
  }

  Request.Builder method_3() {
    HttpUrl var_82;
    HttpUrl.Builder var_28 = this.var_28;
    if (var_28 != null) {
      var_82 = var_28.var_83();
    } else {
      
      
      var_82 = var_26.var_84(var_27);
      if (var_82 == null) {
        throw new IllegalArgumentException(
            "Malformed URL. Base: " + var_26 + ", Relative: " + var_27);
      }
    }

    RequestBody var_34 = this.var_34;
    if (var_34 == null) {
      
      if (var_33 != null) {
        var_34 = var_33.var_83();
      } else if (var_32 != null) {
        var_34 = var_32.var_83();
      } else if (var_31) {
        
        var_34 = var_16.var_85(null, new byte[0]);
      }
    }

    MediaType var_30 = this.var_30;
    if (var_30 != null) {
      if (var_34 != null) {
        var_34 = new ContentTypeOverridingRequestBody(var_34, var_30);
      } else {
        var_29.var_41("Content-Type", var_30.var_40());
      }
    }

    return var_29
        .var_82(var_82)
        .var_25(var_25, var_34);
  }

  private static class class_1 extends RequestBody {
    private final RequestBody var_87;
    private final MediaType var_30;

    var_86(RequestBody param_18, MediaType param_3) {
      this.var_87 = var_87;
      this.var_30 = var_30;
    }

    @var_88 public MediaType method_0() {
      return var_30;
    }

    @var_88 public long method_10() throws IOException {
      return var_87.var_89();
    }

    @var_88 public void method_11(BufferedSink param_19) throws IOException {
      var_87.var_90(var_91);
    }
  }
}
