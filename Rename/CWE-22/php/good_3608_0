<?php




class class_0
{
	
	private $var_0;

	
	private $var_1;

	
	private $var_2;

	public function fn_0()
	{
		
		if(!defined('NAMED_APPLICATION')) define('NAMED_APPLICATION', 'frontend');

		
		$var_3->fn_1(SpoonFilter::getGetValue('module', null, ''));

		
		$var_3->fn_2(SpoonFilter::getGetValue('file', null, ''));

		
		$var_3->fn_3(SpoonFilter::getGetValue('language', FrontendLanguage::getActiveLanguages(), var_7));

		
		$var_8 = new class_1();

		
		$var_8->setAddSlashes(true);

		
		SpoonHTTP::setHeaders('content-type: application/javascript');

		
		if($var_3->var_2 == 'core') $var_10 = var_11 . '/js/' . $var_3->fn_4();
		else $var_10 = var_13 . '/' . $var_3->fn_5() . '/js/' . $var_3->fn_4();

		
		$var_8->display(FrontendTheme::getPath($var_10), true);
	}

	
	public function fn_4()
	{
		return $var_3->var_0;
	}

	
	public function fn_6()
	{
		return $var_3->var_1;
	}

	
	public function fn_5()
	{
		return $var_3->var_2;
	}

	
	private function fn_2($var_16)
	{
		
		$var_3->var_0 = (string) $var_16;

		
		if(substr_count($var_3->var_0, '../') > 0)
		{
			
			SpoonHTTP::setHeadersByCode(400);

			
			if(var_17) throw new class_2('Invalid file.');

			
			else exit(var_18);
		}

		
		$var_19 = true;

		
		if($var_3->var_2 == 'core')
		{
			
			$var_20 = realpath(var_11 . '/js/' . $var_3->var_0);

			
			if(substr($var_20, 0, strlen(realpath(var_11 . '/js/'))) != realpath(var_11 . '/js/')) $var_19 = false;
		}

		
		else
		{
			
			$var_20 = realpath(var_13 . '/' . $var_3->fn_5() . '/js/' . $var_3->var_0);

			
			if(substr($var_20, 0, strlen(realpath(var_13 . '/' . $var_3->fn_5() . '/js/'))) != realpath(var_13 . '/' . $var_3->fn_5() . '/js/')) $var_19 = false;
		}

		
		if(!$var_19)
		{
			
			SpoonHTTP::setHeadersByCode(400);

			
			if(var_17) throw new class_2('Invalid file.');

			
			else exit(var_18);
		}

		
		if(!SpoonFile::exists($var_20))
		{
			
			SpoonHTTP::setHeadersByCode(404);

			
			if(var_17) throw new class_2('File not present.');

			
			else exit(var_18);
		}
	}

	
	private function fn_3($var_16)
	{
		
		$var_3->var_1 = (string) $var_16;

		
		define('FRONTEND_LANGUAGE', $var_3->var_1);

		
		FrontendLanguage::setLocale($var_3->var_1);
	}

	
	private function fn_1($var_16)
	{
		$var_21 = (array) FrontendModel::getModules();
		
		if(!in_array((string) $var_16, $var_21))
		{
			
			if(var_17) throw new class_2('Invalid file.');

			
			else exit(var_18);
		}
		
		$var_3->var_2 = (string) $var_16;
	}
}
