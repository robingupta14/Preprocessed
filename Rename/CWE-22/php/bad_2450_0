<?php

if (!defined('BASEPATH')) {
    exit('No direct script access allowed');
}



class class_0 extends var_0
{
    
    private $var_1 = null;

    
    private $var_2 = [
        'upload' . var_3 . 'themes' . var_3 . 'survey' . var_3 . 'generalfiles',
        'upload' . var_3 . 'global',
    ];

    public function fn_0() {
        return Yii::app()->getConfig('allowedfileuploads');
    }

    
    public function fn_1($var_5 = null)
    {
        $var_6 = $var_7->fn_2($var_5);

        $var_9 = [
            'File management' => gT('File management'),
            'Upload' => gT('Upload'),
            'Cancel move' => gT('Cancel move'),
            'Cancel copy' => gT('Cancel copy'),
            'Move' => gT('Move'),
            'Copy' => gT('Copy'),
            'Upload a file' => gT('Upload a file'),
            'File could not be uploaded' => gT('File could not be uploaded'),
            'Drag and drop here, or click once to start uploading' => gT('Drag and drop here, or click once to start uploading'),
            'File is uploaded to currently selected folder' => gT('File is uploaded to currently selected folder'),
            'An error has happened and no files could be located' => gT('An error has happened and no files could be located'),
            'An error has occured and the file list could not be loaded:' => gT('An error has occured and the file list could not be loaded:'),
            'An error has occured and the folders could not be loaded:' => gT('An error has occured and the folders could not be loaded:'),
            'An error has occured and the file(s) could not be uploaded:' => gT('An error has occured and the folders could not be loaded:'),
            'An error has occured and the selected files could not be downloaded.' => gT('An error has occured and the selected files could not be downloaded.'),
            'File name' => gT('File name'),
            'Type' => gT('Type'),
            'Size' => gT('Size'),
            'Mod time' => gT('Mod time'),
            'Action' => gT('Action'),
            'Delete file' => gT('Delete file'),
            'Copy file' => gT('Copy file'),
            'Move file' => gT('Move file'),
            'Allowed file extensions' => gT('Allowed file extensions'),
            'File formats' => '.'.gT(implode(", .", $var_7->var_10)) 
        ];

        Yii::app()->getClientScript()->registerPackage('filemanager');
        $var_21['jsData'] = [
            'surveyid' => $var_5,
            'possibleFolders' => $var_6,
            'i10N' => $var_9,
            'allowedFileTypes' => $var_7->var_10,
            'baseUrl' => $var_7->getController()->createUrl('admin/filemanager', ['sa' => '']),
        ];
        $var_15 = $var_5 == null ? 'view' : 'surveyview';

        if ($var_5 !== null) {
            $var_16 = Survey::model()->findByPk($var_5);
            $var_21['surveyid'] = $var_5;
            $var_21['presetFolder'] = 'upload' . var_3 . 'surveys' . var_3 . $var_5;
            $var_21['surveybar']['buttons']['view'] = true;
            $var_21['title_bar']['title'] = $var_16->var_18->var_19 . " (" . gT("ID") . ":" . $var_5 . ")";
            $var_21['subaction'] = gT("File manager");
        }

        $var_7->_renderWrappedTemplate('SurveyFiles', $var_15, $var_21);
    }

    public function fn_3($var_5 = null)
    {
        $var_22 = $var_7->fn_4($var_5);
        $var_24 = [];

        foreach ($var_22 as $var_25) {
            $var_24[$var_25] = $var_7->fn_5($var_25);
        }

        $var_7->fn_6($var_24);
        return;
    }

    
    public function fn_7($var_25, $var_28 = null)
    {
        $var_29 = $var_7->fn_8($var_25, $var_28);

        if ($var_29 === false) {
            $var_7->fn_9();
            return;
        }

        $var_32 = $var_7->fn_5($var_29);

        $var_7->fn_6($var_32);
        return;
    }

    public function fn_10($var_28 = null)
    {
        $var_33 = $var_7->fn_11($var_28);

        $var_7->fn_6($var_33);
        return;
    }

    public function fn_12()
    {
        $var_28 = Yii::app()->var_35->getPost('surveyid');
        $var_37 = Yii::app()->var_35->getPost('file');
        $var_25 = dirname($var_37['path']);
        $var_38 = $var_7->fn_8($var_25, $var_28);
        
        if ($var_38 === false) {
            $var_7->fn_9();
            return;
        }
        
        $var_39 = dirname(Yii::app()->var_40) . var_3 . $var_37['path'];
        
        
        if (!$var_7->fn_13($var_39)) {
            $var_7->fn_14(
                "FILE_NOT_EXISTING",
                gT("The file does not exist")
            );
            $var_7->fn_9();
        }

        if (!unlink($var_39)) {
            $var_7->fn_14(
                "DELETE_FILE_ERROR",
                gT("The file could not be deleted")
            );
            $var_7->fn_9();
        }
        $var_7->fn_6(
            [
                'success' => true,
                'message' => sprintf(gT("File successfully deleted"), $var_37['shortName']),
            ]
        );
    }

    public function fn_15()
    {
        $var_25 = Yii::app()->var_35->getPost('targetFolder');
        $var_28 = Yii::app()->var_35->getPost('surveyid');
        $var_43 = Yii::app()->var_35->getPost('files');
        $var_44 = Yii::app()->var_35->getPost('action');

        $var_38 = $var_7->fn_8($var_25, $var_28);
        
        foreach($var_43 as $var_37) {
            $var_7->fn_16($var_37);

            $var_46 = dirname(Yii::app()->var_40) . var_3 . $var_25;
            $var_47 = realpath($var_46) . var_3 . $var_37['shortName'];

            $var_39 = dirname(Yii::app()->var_40) . var_3 . $var_37['path'];
            $var_48 = realpath($var_39);

            if ($var_7->fn_13($var_47) && Yii::app()->getConfig('overwritefiles') == 0) {
                $var_49 = pathinfo($var_47, var_50);
                $var_51 = hash('adler32', microtime());
                $var_47 = preg_replace("/\." . $var_49 . "/", "-" . $var_51 . "." . $var_49, $var_47);
            }

            if ($var_44 == 'copy') {
                if (!copy($var_48, $var_47)) {
                    $var_7->fn_14(
                        'COPY_FAILED',
                        gT("Your file could not be copied")
                    );
                    $var_7->fn_9();
                    return;
                }
            } else if ($var_44 == 'move') {
                if (!@rename($var_48, $var_47)) {
                    $var_7->fn_14(
                        'MOVE_FAILED',
                        gT("Your file could not be moved")
                    );
                    $var_7->fn_9();
                    return;
                }
            }
        }

        $var_52 = $var_44 == 'copy' ? gT("Files successfully copied") : gT("Files successfully moved");
        $var_7->fn_6([
            'success' => true,
            'message' => $var_52,
        ]);
        return;

    }

    
    public function fn_17()
    {
        $var_25 = Yii::app()->var_35->getPost('folder');
        $var_28 = Yii::app()->var_35->getPost('surveyid', null);

        if (($var_28 == 'null' || $var_28 == null) && !preg_match("/generalfiles/", $var_25)) {
            $var_28 = null;
            $var_25 = 'upload' . var_3 . 'global';
        }

        $var_29 = $var_7->fn_8($var_25, $var_28);

        if ($var_29 === false) {
            $var_7->fn_9();
            return;
        }

        $var_68[] = $var_53;

        if ($var_53['file']['error'] == 1 || $var_53['file']['error'] == 2) {
            $var_7->fn_14(
                'MAX_FILESIZE_REACHED',
                sprintf(gT("Sorry, this file is too large. Only files up to %01.2f MB are allowed."), getMaximumFileUploadSize() / 1024 / 1024)
            );
            $var_7->fn_9();
            return;
        }

        $var_54 = $var_53['file']['name'];
        $var_49 = pathinfo($var_54, var_50);

        

        if ($var_7->fn_18($var_49, 'upload') === false) {
            $var_7->fn_14(
                'FILETYPE_NOT_ALLOWED',
                gT("Sorry, this file type is not allowed. Please contact your administrator for a list of allowed filetypes.")
            );
            $var_7->fn_9();
            return;
        }

        $var_56 = dirname(Yii::app()->var_40) . var_3 . $var_25;

        $var_57 = sanitize_filename($var_53['file']['name'], false, false, false); 
        $var_58 = $var_56 . var_3 . $var_57;
        $var_58 = preg_replace("%".var_3.var_3."%", var_3, $var_58);

        if ($var_7->fn_13($var_58) && Yii::app()->getConfig('overwritefiles') == 0) {
            $var_49 = pathinfo($var_58, var_50);
            $var_51 = hash('adler32', microtime());
            $var_58 = preg_replace("/\." . $var_49 . "/", "-" . $var_51 . ".", $var_58);
        }

        

        $var_68[] = $var_56;
        $var_68[] = $var_57;
        $var_68[] = $var_58;

        if (!is_writable($var_56)) {
            $var_7->fn_14(
                'FILE_DESTINATION_UNWRITABLE',
                sprintf(gT("An error occurred uploading your file. The folder (%s) is not writable for the webserver."), $var_25)
            );
            $var_7->fn_9();
            return;
        }

        
        if($var_49 == 'zip') {
            App()->loadLibrary('admin.pclzip');
            $var_60 = new class_1($var_53['file']['tmp_name']);
            $var_61 = $var_60->extract(var_63, $var_56, var_64, 'resourceExtractFilter');
            
            if ($var_61 === 0) {
                $var_7->fn_14(
                    'FILE_NOT_A_VALID_ARCHIVE',
                    gT("This file is not a valid ZIP file archive. Import failed.")
                );
                $var_7->fn_9();
                return;
            };

            $var_65 = 'about:blank';
            $var_66 = sprintf(gT("File %s uploaded and %s files unpacked"), $var_57, safecount($var_61));
        } else {
            if (
                !move_uploaded_file(
                    $var_53['file']['tmp_name'], 
                    $var_58 
                )
            ) {
                $var_7->fn_14(
                    'FILE_COULD NOT_BE_MOVED',
                    sprintf(gT("An error occurred uploading your file. This may be caused by incorrect permissions for the target folder. (%s)"), $var_25)
                );
                $var_7->fn_9();
                return;
            }
            $var_66 = sprintf(gT("File %s uploaded"), $var_57);
            $var_65 = Yii::app()->var_67 . '/' . $var_25 . '/' . $var_57;
        }

        


        $var_7->fn_6(
            [
                'success' => true,
                'message' => $var_66,
                'src' => $var_65,
                'debug' => $var_68,
            ]
        );

    }

    public function fn_19() {
        App()->loadLibrary('admin.pclzip');
        
        $var_25 = basename(Yii::app()->var_35->getPost('folder', 'global'));
        $var_43 = Yii::app()->var_35->getPost('files');

        $var_69 = Yii::app()->getConfig('tempdir');
        $var_70 = $var_25.'_'.substr(md5(time()),3,13).'.zip';
        $var_71 = $var_69.var_3.$var_70;
        $var_72 = array_map( function($var_37){ return $var_37['path']; }, $var_43);
        $var_73 = new class_1($var_71);
        $var_74 = $var_73->create($var_72, var_76);
        $var_77 = Yii::app()->getUrlManager()->getUrlFormat();
        $var_80 = Yii::app()->createUrl('admin/filemanager/sa/getZipFile');
        if($var_77 == 'path') {
            $var_80 .= '?path='.$var_71;
        } else {
            $var_80 .= '&path='.$var_71;
        }

        $var_7->fn_6(
            [
                'success' => true,
                'message' => sprintf(gT("Files are ready for download in archive %s."), $var_70),
                'downloadLink' => $var_80 ,
            ]
        );
    }

    public function fn_20($var_54) {
        $var_57 = basename($var_54);

        
        
        
        
        
        if (is_file($var_54) || true) {
            
            header("Expires: 0");
            header("Cache-Control: must-revalidate");
            header("Content-Type: application/force-download");
            header("Content-Disposition: attachment; filename=$var_57");
            header("Content-Description: File Transfer");

            @readfile($var_54);

            
            unlink($var_54);
        }
    }

    

    
    private function fn_18($var_81, $var_82 = 'show')
    {
        if($var_82 == 'upload') {
            return in_array($var_81, $var_7->var_10) || $var_81 == 'zip';
        }

        if ($var_82 == 'show') {
            return in_array($var_81, $var_7->var_10);
        }
    }

    private function fn_13($var_47)
    {
        return is_file($var_47);
    }

    private function fn_8($var_83, $var_28 = null)
    {

        $var_33 = $var_7->fn_4($var_28);
        $var_84 = false;

        foreach ($var_33 as $var_85 => $var_86) {
            $var_84 = (preg_match('%/?' . preg_quote($var_86) . '/?%', $var_83)) || $var_84;
        }

        if (!$var_84) {
            $var_7->fn_14('NO_PERMISSION', gT("You don't have permission to this folder"), null, [
                "sFolderPath" => $var_83,
                "aAllowedFolders" => $var_33,
            ]);
            return false;
        }

        $var_87 = dirname(Yii::app()->var_40) . var_3 . $var_83;
        if (!is_dir($var_87)) {
            mkdir($var_87);
        }

        return $var_83;
    }

    
    private function fn_5($var_86)
    {
        $var_88 = array();

        $var_87 = dirname(Yii::app()->var_40) . var_3 . $var_86;
        if (empty($var_87) || !is_dir($var_87)) {
            return $var_88;
        }

        $var_43 = scandir($var_87);
        $var_89 = finfo_open(var_90);

        foreach ($var_43 as $var_37) {
            if ($var_37 == '.' || $var_37 == '..') {continue;}

            $var_91 = $var_86 . var_3 . $var_37;
            $var_92 = dirname(Yii::app()->var_40) . var_3 . $var_91;
            $var_93 = @is_dir($var_92);
            $var_94 = strpos(finfo_file($var_89, $var_92), 'image') !== false;
            if ($var_93) {
                continue;
            } else {

                $var_95 = strtolower(pathinfo($var_92, var_50));
                if (!$var_7->fn_18($var_95)) {continue;}

                $var_96 = LsDefaultDataSets::fileTypeIcons();
                $var_97 = filesize($var_92);
                if (isset($var_96[$var_95])) {
                    $var_98 = $var_96[$var_95];
                } else {
                    $var_98 = $var_96['blank'];
                }
            }

            $var_99 = getDateFormatData(Yii::app()->session['dateformat']);
            $var_100 = filemtime($var_92);

            $var_65 = Yii::app()->getBaseUrl(true) . '/' . $var_86 . '/' . rawurlencode($var_37);
            $var_102 = hash_file('md5', $var_92);

            $var_88[$var_37] = [
                'iconClass' => $var_98,
                'isImage' => $var_94,
                'src' => $var_65,
                'hash' => $var_102,
                'path' => $var_91,
                'size' => $var_97,
                'shortName' => $var_37,
                'mod_time' => date($var_99['phpdate'] . ' H:i', $var_100),
            ];
        }
        return $var_88;

    }

    
    private function fn_2($var_28 = null)
    {
        $var_22 = $var_7->var_2;

        if ($var_28 != null) {
            $var_22[] = 'upload' . var_3 . 'surveys' . var_3 . $var_28;
        } else {
            $var_103 = Yii::app()->var_104->createCommand()->select('sid')->from('{{surveys}}')->queryColumn();
            foreach ($var_103 as $var_109) {
                if (
                    Permission::model()->hasGlobalPermission('superadmin', 'read')
                    || Permission::model()->hasGlobalPermission('surveys', 'update')
                    || Permission::model()->hasSurveyPermission($var_109, 'surveylocale', 'update')
                ) {
                    $var_22[] = 'upload' . var_3 . 'surveys' . var_3 . $var_109;
                }

            }
        }

        return $var_22;
    }

    
    private function fn_4($var_28 = null)
    {
        $var_22 = $var_7->var_2;

        if ($var_28 != null) {
            $var_22[] = 'upload' . var_3 . 'surveys' . var_3 . $var_28;
        } else {
            $var_103 = Yii::app()->var_104->createCommand()->select('sid')->from('{{surveys}}')->queryColumn();
            foreach ($var_103 as $var_109) {
                if (
                    Permission::model()->hasGlobalPermission('superadmin', 'read')
                    || Permission::model()->hasGlobalPermission('surveys', 'update')
                    || Permission::model()->hasSurveyPermission($var_109, 'surveylocale', 'update')
                ) {
                    $var_22[] = 'upload' . var_3 . 'surveys' . var_3 . $var_109;
                }

            }
        }
        $var_112 = [];
        foreach ($var_22 as $var_25) {
            $var_7->fn_21($var_25, $var_22, $var_112);
        }

        return $var_22;
    }

    
    private function fn_21($var_25, &$var_114, &$var_112)
    {
        $var_87 = dirname(Yii::app()->var_40) . var_3 . $var_25;
        if (!file_exists($var_87)) {
            return $var_114;
        }

        $var_115 = scandir($var_87);
        foreach ($var_115 as $var_116) {
            if ($var_116 == '.' || $var_116 == '..') {continue;}

            $var_117 = $var_25 . var_3 . $var_116;
            $var_118 = realpath(Yii::getPathOfAlias('basePath') . $var_117);
            $var_119 = is_dir($var_118);

            if ($var_119) {
                $var_114[] = $var_117;
                $var_7->fn_21($var_117, $var_114, $var_112);
            } else {
                $var_112[] = $var_117;
            }
        }
    }

    
    private function fn_11($var_28 = null)
    {
        $var_22 = $var_7->fn_2($var_28);
        $var_120 = [];
        foreach ($var_22 as $var_25) {
            $var_120[] = $var_7->fn_22($var_25);
        }
        return $var_120;
    }

    
    private function fn_22($var_25, $var_122='0')
    {

        $var_87 = dirname(Yii::app()->var_40) . var_3 . $var_25;
        if (!file_exists($var_87)) {
            $var_7->fn_23($var_87, 750, true);
        }
        $var_124 = scandir($var_87);

        $var_125 = [];
        foreach ($var_124 as $var_126) {

            if ($var_126 == '.' || $var_126 == '..') {continue;}

            $var_117 = $var_25 . var_3 . $var_126;
            $var_118 = realpath(Yii::getPathOfAlias('basePath') . $var_117);
            $var_119 = is_dir($var_118);

            if (!$var_119) {continue;}

            $var_125[] = $var_7->fn_22($var_117, ($var_122+1));

        }

        $var_127 = explode("/", $var_25);
        $var_128 = end($var_127);

        $var_129 = [
            'key' => $var_128.'_'.$var_122,
            'folder' => $var_25,
            'realPath' => $var_87,
            'shortName' => $var_128,
            'children' => $var_125,
        ];
        return $var_129;
    }

    private function fn_23($var_25, $var_130=755) {
        $var_22 = explode(var_3, $var_25);
        $var_131 = array_shift($var_22).var_3;
        foreach ($var_22 as $var_25) {
            $var_131.= var_3.$var_25;
            if (!is_dir($var_131) && strlen($var_131) > 0 && !preg_match("/^[A-Za-z]:$/", $var_131)) {
                mkdir($var_131, $var_130);
            }
        }
    }

    
    private function fn_14($var_132, $var_66, $var_133 = '', $var_68 = null)
    {
        $var_7->var_1 = new class_2();
        $var_7->var_1->var_132 = $var_132;
        $var_7->var_1->var_66 = $var_66;
        $var_7->var_1->var_133 = $var_133;
        $var_7->var_1->var_68 = $var_68;
    }

    
    private function fn_6($var_134)
    {
        $var_7->getController()->renderPartial(
            '/admin/super/_renderJson', [
                'success' => true,
                'data' => $var_134,
        ]);
    }

    
    private function fn_9()
    {
        throw new class_3(
            500,
            (Yii::app()->getConfig('debug') > 0 ? $var_7->var_1->var_132.': ' : '')
            .$var_7->var_1->var_66,
            0
        );
    }

    
    private function fn_16(array $var_37)
    {
        
        $var_136 = explode('/', $var_37['path']);
        
        $var_137 = $var_136[count($var_136) - 1];

        if ($var_137 !== $var_37['shortName']) {
            $var_7->fn_14(
                "FILENAME_CHANGED",
                gT("The destination file name is not the same as the source file name")
            );
            $var_7->fn_9();
        }
    }
}

class class_2
{
    public $var_66;
    public $var_133;
    public $var_132;
}
