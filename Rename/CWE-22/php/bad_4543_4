<?php



class class_0 implements var_0
{
    public $var_1;
    protected $var_2;
    protected $var_3;
    protected $var_4;

    
    private $var_5;

    public function fn_0(var_6 $var_5, $var_1, $var_4, $var_3)
    {
        if (null === $var_4) {
            throw new \var_7('Stream wrapper must be configured.');
        }

        $var_8->var_5 = $var_5;
        $var_8->var_1 = $var_1;
        $var_8->var_3 = $var_3;
        $var_8->var_4 = $var_4;
    }

    public function fn_1($var_9, $var_3 = null)
    {
        $var_3 = $var_3 ?: $var_8->var_3;
        $var_10 = $var_8->var_5->listContents($var_3, true);

        $var_12 = time();
        $var_13 = [];

        
        
        
        
        foreach ($var_10 as $var_14) {
            $var_15 = $var_14['path'];
            $var_16 = isset($var_14['timestamp']) ? $var_14['timestamp'] : $var_8->var_5->getTimestamp($var_15);

            if ($var_9 <= $var_12 - $var_16) {
                $var_13[] = $var_15;
            }
        }

        foreach ($var_13 as $var_15) {
            
            
            try {
                $var_8->var_5->delete($var_15);
            } catch (\var_19 $var_20) {
                continue;
            }
        }
    }

    public function fn_2($var_21, $var_22, var_23 $var_24, $var_25)
    {
        $var_8->var_2 = [
            'uuid' => $var_21,
            'index' => $var_22,
            'chunk' => $var_24,
            'original' => $var_25,
        ];
    }

    public function fn_3($var_26, $var_27, $var_28)
    {
        
        $var_15 = $var_8->var_3.'/'.$var_8->var_2['uuid'].'/';
        $var_29 = $var_8->var_2['index'].'_'.$var_8->var_2['original'];

        if (empty($var_26)) {
            $var_30 = $var_29;
        } else {
            sort($var_26, var_31 | var_32);
            $var_30 = pathinfo($var_26[0]['path'], var_33);
        }

        $var_34 = 'ab';
        if (0 === $var_8->var_2['index']) {
            
            
            $var_34 = 'wb';
        }

        $var_35 = fopen($var_8->var_2['chunk']->getPathname(), 'rb');
        $var_37 = fopen($var_8->var_4.'/'.$var_15.$var_30, $var_34);

        stream_copy_to_stream($var_35, $var_37);

        fclose($var_35);
        fclose($var_37);

        if ($var_28) {
            $var_38 = $var_8->var_2['original'];
            
            if ($var_8->var_5->has($var_15.$var_38)) {
                $var_8->var_5->delete($var_15.$var_38);
            }

            $var_8->var_5->rename($var_15.$var_30, $var_15.$var_38);
            $var_30 = $var_38;
        }
        $var_41 = $var_8->var_5->get($var_15.$var_30);

        if (!$var_28) {
            return $var_41;
        }

        return new class_1($var_41, $var_8->var_5, $var_8->var_4);
    }

    public function fn_4($var_15)
    {
        try {
            $var_8->var_5->delete($var_15);
        } catch (var_43 $var_20) {}
    }

    public function fn_5($var_21)
    {
        return $var_8->var_5->listFiles($var_8->var_3.'/'.$var_21);
    }

    public function fn_6()
    {
        return $var_8->var_5;
    }

    public function fn_7()
    {
        return $var_8->var_4;
    }
}
