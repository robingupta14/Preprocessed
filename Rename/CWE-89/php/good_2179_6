<?php


if (!isset($var_0)) {
    exit();
 }


function var_1($var_2) {
    $var_2 = str_replace('
    $arg = str_replace('
    $var_2 = str_replace('
    $arg = str_replace('
    $var_2 = str_replace('
    return html_entity_decode($arg, ENT_QUOTES, "UTF-8");
}

$cmdId = 0;
$serviceTplId = null;
$service = array();
$serviceObj = new CentreonService($pearDB);
if (($o == "c" || $o == "w") && $service_id) {
    if (isset($lockedElements[$service_id])) {
        $o = "w";
    }            
    $DBRESULT = $pearDB->query("SELECT * FROM service, extended_service_information esi WHERE service_id = '".$var_3."' AND esi.service_service_id = service_id LIMIT 1");
    
    $var_4 = $var_5->fetchRow();
    $var_7 = array_map("myDecodeSvTP", $var_4);
    $var_8 = $var_7['service_template_model_stm_id'];
    $var_9 = $var_7['command_command_id'];

    
    $var_5 = $var_10->query("SELECT * FROM host_service_relation hsr WHERE hsr.service_service_id = '".$var_3."'");
    while ($var_12 = $var_5->fetchRow())	{
        if ($var_12["host_host_id"]) {
            $var_7["service_hPars"][$var_12["host_host_id"]] = $var_12["host_host_id"];
        } var_13 ($var_12["hostgroup_hg_id"]) {
            $var_7["service_hgPars"][$var_12["hostgroup_hg_id"]] = $var_12["hostgroup_hg_id"];
        }
    }
    
    $var_14 = explode(',', $var_7["service_notification_options"]);
    foreach ($var_14 as $var_15 => $var_16) {
        $var_7["service_notifOpts"][trim($var_16)] = 1;
    }

    
    $var_14 = explode(',', $var_7["service_stalking_options"]);
    foreach ($var_14 as $var_15 => $var_16) {
        $var_7["service_stalOpts"][trim($var_16)] = 1;
    }
    $var_5->free();

    
    $var_5 = $var_10->query("SELECT DISTINCT contactgroup_cg_id FROM contactgroup_service_relation WHERE service_service_id = '".$var_3."'");
    for ($var_18 = 0; $var_19 = $var_5->fetchRow(); $var_18++) {
        $var_7["service_cgs"][$var_18] = $var_19["contactgroup_cg_id"];
    }
    $var_5->free();

    
    $var_5 = $var_10->query("SELECT DISTINCT contact_id FROM contact_service_relation WHERE service_service_id = '".$var_3."'");
    for ($var_18 = 0; $var_20 = $var_5->fetchRow(); $var_18++) {
        $var_7["service_cs"][$var_18] = $var_20["contact_id"];
    }
    $var_5->free();

    
    $var_5 = $var_10->query("SELECT DISTINCT servicegroup_sg_id FROM servicegroup_relation WHERE service_service_id = '".$var_3."'");
    for ($var_18 = 0; $var_21 = $var_5->fetchRow(); $var_18++) {
        $var_7["service_sgs"][$var_18] = $var_21["servicegroup_sg_id"];
    }
    $var_5->free();

    
    $var_5 = $var_10->query("SELECT DISTINCT traps_id FROM traps_service_relation WHERE service_id = '".$var_3."'");
    for ($var_18 = 0; $var_22 = $var_5->fetchRow(); $var_18++) {
        $var_7["service_traps"][$var_18] = $var_22["traps_id"];
    }
    $var_5->free();

    
    $var_5 = $var_10->query('SELECT DISTINCT scr.sc_id 
                    FROM service_categories_relation scr, service_categories sc
                    WHERE scr.sc_id = sc.sc_id
                    AND sc.level IS NULL
                    AND scr.service_service_id = \''.$var_3.'\'');
    for ($var_18 = 0; $var_23 = $var_5->fetchRow(); $var_18++) {
        $var_7["service_categories"][$var_18] = $var_23["sc_id"];
    }
    $var_5->free();
                
    
    $var_24 = $var_10->query("SELECT sc.sc_id 
                            FROM service_categories sc, service_categories_relation scr
                            WHERE scr.service_service_id = " . $var_10->escape($var_3). "
                            AND scr.sc_id = sc.sc_id
                            AND sc.level IS NOT NULL
                            ORDER BY sc.level ASC
                            LIMIT 1");
    if ($var_24->numRows()) {
        $var_27 = $var_24->fetchRow();
        $var_7['criticality_id'] = $var_27['sc_id'];
    }
 }


$var_28 = CentreonData::getInstance();
$var_29 = $var_30->getCustomMacro(isset($var_3) ? $var_3 : null);
$var_28->addJsData('clone-values-macro', htmlspecialchars(
                                                         json_encode($var_29), 
                                                         var_33
                                                         )
                  );
$var_28->addJsData('clone-count-macro', count($var_29));




$var_34 = array();
$var_5 = $var_10->query("SELECT host_id, host_name FROM host WHERE host_register = '0' ORDER BY host_name");
while ($var_35 = $var_5->fetchRow()) {
    $var_34[$var_35["host_id"]] = $var_35["host_name"];
 }
$var_5->free();


$var_36 = array();
if (isset($_GET["service_id"]) && $_GET["service_id"]) {
    $var_5 = $var_10->query("SELECT service_description, service_id FROM service WHERE service_template_model_stm_id = '".$var_10->escape($_GET["service_id"])."'");
    while ($var_37 = $var_5->fetchRow()) {
        $var_36[$var_37["service_id"]] = $var_37["service_description"];
    }
    $var_5->free();
 }


$var_38 = array(NULL => NULL);
$var_5 = $var_10->query("SELECT service_id, service_description, service_template_model_stm_id FROM service WHERE service_register = '0' AND service_id != '".$var_3."' ORDER BY service_description");
while ($var_39 = $var_5->fetchRow())	{
    if (!$var_39["service_description"]) {
        $var_39["service_description"] = getMyServiceName($var_39["service_template_model_stm_id"])."'";
    } var_40 {
        $var_39["service_description"] = str_replace('
        $svTpl["service_description"] = str_replace('
    }
    if (!isset($var_36[$var_39["service_id"]]) || !$var_36[$var_39["service_id"]]) {
        $var_38[$var_39["service_id"]] = $var_39["service_description"];
    }
 }
$var_5->free();


$var_41 = array(NULL=>NULL);
$var_5 = $var_10->query("SELECT tp_id, tp_name FROM timeperiod ORDER BY tp_name");
while ($var_42 = $var_5->fetchRow()) {
    $var_41[$var_42["tp_id"]] = $var_42["tp_name"];
 }
$var_5->free();


$var_43 = array(NULL=>NULL);
$var_5 = $var_10->query("SELECT command_id, command_name FROM command WHERE command_type = '2' ORDER BY command_name");
while ($var_44 = $var_5->fetchRow()) {
    $var_43[$var_44["command_id"]] = $var_44["command_name"];
 }
$var_5->free();


$var_45 = array(null => null);
$var_5 = $var_10->query("SELECT command_id, command_name FROM command WHERE command_type = '2' OR command_type = '3' ORDER BY command_name");
while ($var_44 = $var_5->fetchRow()) {
    $var_45[$var_44["command_id"]] = $var_44["command_name"];
 }
$var_5->free();


$var_46 = array();
$var_47 = new class_0($var_10);
$var_46 = $var_47->getListContactgroup(true);


$var_49 = array();
$var_5 = $var_10->query("SELECT contact_id, contact_name FROM contact WHERE contact_register = 1 ORDER BY contact_name");
while ($var_20 = $var_5->fetchRow()) {
    $var_49[$var_20["contact_id"]] = $var_20["contact_name"];
 }
$var_5->free();


$var_50 = array();
$var_5 = $var_10->query("SELECT sg_id, sg_name FROM servicegroup ORDER BY sg_name");
while ($var_21 = $var_5->fetchRow()) {
    $var_50[$var_21["sg_id"]] = $var_21["sg_name"];
 }
$var_5->free();


$var_51 = array(NULL=>NULL);
$var_5 = $var_10->query("SELECT graph_id, name FROM giv_graphs_template ORDER BY name");
while ($var_52 = $var_5->fetchRow()) {
    $var_51[$var_52["graph_id"]] = $var_52["name"];
 }
$var_5->free();


$var_53 = array();
$var_5 = $var_10->query("SELECT traps_id, traps_name FROM traps ORDER BY traps_name");
while ($var_22 = $var_5->fetchRow()) {
    $var_53[$var_22["traps_id"]] = $var_22["traps_name"];
 }
$var_5->free();


$var_54 = array();
$var_5 = $var_10->query("SELECT sc_name, sc_id FROM service_categories WHERE level IS NULL ORDER BY sc_name");
while ($var_55 = $var_5->fetchRow()) {
    $var_54[$var_55["sc_id"]] = $var_55["sc_name"];
 }
$var_5->free();



$var_56 = array();
$var_56 = return_image_list(1);






$var_57 		= array("size"=>"30");
$var_58		= array("size"=>"6");
$var_59 	= array("size"=>"60");
$var_60 = array("style" => "width: 300px; height: 70px;");
$var_61 = array("style" => "width: 300px; height: 100px;");
$var_62 = array("style" => "width: 300px; height: 200px;");
$var_63 	= array("rows"=>"5", "cols"=>"40");
$var_64	= '<table><tr><td><div class="ams">{label_2}</div>{unselected}</td><td align="center">{add}<br /><br /><br />{remove}</td><td><div class="ams">{label_3}</div>{selected}</td></tr></table>';




$var_65 = new class_1('Form', 'post', "?p=".$var_66);
if ($var_67 == "a") {
    $var_65->addElement('header', 'title', _("Add a Service Template Model"));
 } elseif ($var_67 == "c") {
     $var_65->addElement('header', 'title', _("Modify a Service Template Model"));
 } elseif ($var_67 == "w") {
     $var_65->addElement('header', 'title', _("View a Service Template Model"));
 } elseif ($var_67 == "mc") {
     $var_65->addElement('header', 'title', _("Massive Change"));
 }




$var_65->addElement('header', 'information', _("General Information"));

if ($var_67 != "mc") {
    $var_65->addElement('text', 'service_description', _("Service Template Name"), $var_57);
 }
$var_65->addElement('text', 'service_alias', _("Alias"), $var_57);

$var_65->addElement('select', 'service_template_model_stm_id', _("Service Template Model"), $var_38, array('id'=>'svcTemplate', 'onChange'=>'changeServiceTemplate(this.value)'));
$var_65->addElement('static', 'tplText', _("Using a Template Model allows you to have multi-level Template connections"));

$var_69 = $var_65->addElement('advmultiselect', 'service_hPars', array(_("Linked to host templates"), _("Available"), _("Selected")), $var_34, $var_62, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);





$var_65->addElement('header', 'check', _("Service State"));

$var_74[] = class_1::createElement('radio', 'service_is_volatile', null, _("Yes"), '1');
$var_74[] = class_1::createElement('radio', 'service_is_volatile', null, _("No"), '0');
$var_74[] = class_1::createElement('radio', 'service_is_volatile', null, _("Default"), '2');
$var_65->addGroup($var_74, 'service_is_volatile', _("Is volatile"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_is_volatile' => '2'));
 }

if ($var_67 == "mc") {
    $var_65->addElement('select', 'command_command_id', _("Check Command"), $var_43, 'onchange=setArgument(this.form,"command_command_id","example1")');
 } var_40 {
    $var_65->addElement('select', 'command_command_id', _("Check Command"), $var_43, array('id' => "checkCommand", 'onChange' => "changeCommand(this.value);"));
 }
$var_65->addElement('text', 'command_command_id_arg', _("Args"), $var_59);
$var_65->addElement('text', 'service_max_check_attempts', _("Max Check Attempts"), $var_58);
$var_65->addElement('text', 'service_normal_check_interval', _("Normal Check Interval"), $var_58);
$var_65->addElement('text', 'service_retry_check_interval', _("Retry Check Interval"), $var_58);

$var_75[] = class_1::createElement('radio', 'service_event_handler_enabled', null, _("Yes"), '1');
$var_75[] = class_1::createElement('radio', 'service_event_handler_enabled', null, _("No"), '0');
$var_75[] = class_1::createElement('radio', 'service_event_handler_enabled', null, _("Default"), '2');
$var_65->addGroup($var_75, 'service_event_handler_enabled', _("Event Handler Enabled"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_event_handler_enabled' => '2'));
 }
$var_65->addElement('select', 'command_command_id2', _("Event Handler"), $var_45, 'onchange=setArgument(this.form,"command_command_id2","example2")');
$var_65->addElement('text', 'command_command_id_arg2', _("Args"), $var_59);

$var_76[] = class_1::createElement('radio', 'service_active_checks_enabled', null, _("Yes"), '1');
$var_76[] = class_1::createElement('radio', 'service_active_checks_enabled', null, _("No"), '0');
$var_76[] = class_1::createElement('radio', 'service_active_checks_enabled', null, _("Default"), '2');
$var_65->addGroup($var_76, 'service_active_checks_enabled', _("Active Checks Enabled"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_active_checks_enabled' => '2'));
 }

$var_77[] = class_1::createElement('radio', 'service_passive_checks_enabled', null, _("Yes"), '1');
$var_77[] = class_1::createElement('radio', 'service_passive_checks_enabled', null, _("No"), '0');
$var_77[] = class_1::createElement('radio', 'service_passive_checks_enabled', null, _("Default"), '2');
$var_65->addGroup($var_77, 'service_passive_checks_enabled', _("Passive Checks Enabled"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_passive_checks_enabled' => '2'));
 }

$var_65->addElement('select', 'timeperiod_tp_id', _("Check Period"), $var_41);

$var_78 = array();
$var_78[] = $var_65->addElement(
                                     'text', 
                                     'macroInput[
                                     _('var_79 var_80'),
                                     array(
                                           'id' => 'macroInput_
                                           'var_81' => 25
                                           )
                                     );
$var_78[] = $var_65->var_68(
                                     'var_82', 
                                     'var_83[
                                     var_84('var_79 var_16'),
                                     array(
                                           'var_85' => 'var_86
                                           'var_81' => 25
                                           )
                                     );
$var_78[] = $var_65->var_68(
                'var_87',
                'var_88[
                var_84('var_89'),
                null,
                array(
                    'var_85' => 'var_90
                    'var_91' => 'var_92:var_93(var_94, false)'
                )
        );




$var_65->addElement('header', 'notification', _("Notification"));
$var_95[] = class_1::createElement('radio', 'service_notifications_enabled', null, _("Yes"), '1');
$var_95[] = class_1::createElement('radio', 'service_notifications_enabled', null, _("No"), '0');
$var_95[] = class_1::createElement('radio', 'service_notifications_enabled', null, _("Default"), '2');
$var_65->addGroup($var_95, 'service_notifications_enabled', _("Notification Enabled"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_notifications_enabled' => '2'));
 }

if ($var_67 == "mc")	{
    $var_97 = array();
    $var_97[] = class_1::createElement('radio', 'mc_mod_cgs', null, _("Incremental"), '0');
    $var_97[] = class_1::createElement('radio', 'mc_mod_cgs', null, _("Replacement"), '1');
    $var_65->addGroup($var_97, 'mc_mod_cgs', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_cgs'=>'0'));
 }




$var_65->addElement('header', 'inherit_contacts_from_host', _("Inherit contacts from host"));
$var_98[] = class_1::createElement('radio', 'service_inherit_contacts_from_host', null, _("Yes"), '1');
$var_98[] = class_1::createElement('radio', 'service_inherit_contacts_from_host', null, _("No"), '0');
$var_65->addGroup($var_98, 'service_inherit_contacts_from_host', _("Inherit contacts from host"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_inherit_contacts_from_host' => '1'));
 }


$var_65->addElement('checkbox', 'contact_additive_inheritance', _('Contact additive inheritance'));
$var_65->addElement('checkbox', 'cg_additive_inheritance', _('Contact group additive inheritance'));


$var_69 = $var_65->addElement('advmultiselect', 'service_cs', array(_("Implied Contacts"), _("Available"), _("Selected")), $var_49, $var_61, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);



$var_69 = $var_65->addElement('advmultiselect', 'service_cgs', array(_("Implied Contact Groups"), _("Available"), _("Selected")), $var_46, $var_61, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);


if ($var_67 == "mc")	{
    $var_99 = array();
    $var_99[] = &class_1::createElement('radio', 'mc_mod_notifopt_first_notification_delay', null, _("Incremental"), '0');
    $var_99[] = &class_1::createElement('radio', 'mc_mod_notifopt_first_notification_delay', null, _("Replacement"), '1');
    $var_65->addGroup($var_99, 'mc_mod_notifopt_first_notification_delay', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_notifopt_first_notification_delay'=>'0'));
 }

$var_65->addElement('text', 'service_first_notification_delay', _("First notification delay"), $var_58);

if ($var_67 == "mc")	{
    $var_100 = array();
    $var_100[] = &class_1::createElement('radio', 'mc_mod_notifopt_notification_interval', null, _("Incremental"), '0');
    $var_100[] = &class_1::createElement('radio', 'mc_mod_notifopt_notification_interval', null, _("Replacement"), '1');
    $var_65->addGroup($var_100, 'mc_mod_notifopt_notification_interval', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_notifopt_notification_interval'=>'0'));
 }

$var_65->addElement('text', 'service_notification_interval', _("Notification Interval"), $var_58);

if ($var_67 == "mc")	{
    $var_101 = array();
    $var_101[] = &class_1::createElement('radio', 'mc_mod_notifopt_timeperiod', null, _("Incremental"), '0');
    $var_101[] = &class_1::createElement('radio', 'mc_mod_notifopt_timeperiod', null, _("Replacement"), '1');
    $var_65->addGroup($var_101, 'mc_mod_notifopt_timeperiod', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_notifopt_timeperiod'=>'0'));
 }

$var_65->addElement('select', 'timeperiod_tp_id2', _("Notification Period"), $var_41);

if ($var_67 == "mc")	{
    $var_102 = array();
    $var_102[] = &class_1::createElement('radio', 'mc_mod_notifopts', null, _("Incremental"), '0');
    $var_102[] = &class_1::createElement('radio', 'mc_mod_notifopts', null, _("Replacement"), '1');
    $var_65->addGroup($var_102, 'mc_mod_notifopts', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_notifopts'=>'0'));
 }

$var_103[] = class_1::createElement('checkbox', 'w', '&nbsp;', _("Warning"));
$var_103[] = class_1::createElement('checkbox', 'u', '&nbsp;', _("Unknown"));
$var_103[] = class_1::createElement('checkbox', 'c', '&nbsp;', _("Critical"));
$var_103[] = class_1::createElement('checkbox', 'r', '&nbsp;', _("Recovery"));
$var_103[] = class_1::createElement('checkbox', 'f', '&nbsp;', _("Flapping"));
$var_103[] = class_1::createElement('checkbox', 's', '&nbsp;', _("Downtime Scheduled"));
$var_65->addGroup($var_103, 'service_notifOpts', _("Notification Type"), '&nbsp;&nbsp;');

$var_104[] = class_1::createElement('checkbox', 'o', '&nbsp;', _("Ok"));
$var_104[] = class_1::createElement('checkbox', 'w', '&nbsp;', _("Warning"));
$var_104[] = class_1::createElement('checkbox', 'u', '&nbsp;', _("Unknown"));
$var_104[] = class_1::createElement('checkbox', 'c', '&nbsp;', _("Critical"));
$var_65->addGroup($var_104, 'service_stalOpts', _("Stalking Options"), '&nbsp;&nbsp;');




$var_65->addElement('header', 'furtherInfos', _("Additional Information"));
$var_105[] = class_1::createElement('radio', 'service_activate', null, _("Enabled"), '1');
$var_105[] = class_1::createElement('radio', 'service_activate', null, _("Disabled"), '0');
$var_65->addGroup($var_105, 'service_activate', _("Status"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_activate' => '1'));
 }
$var_65->addElement('textarea', 'service_comment', _("Comments"), $var_63);




if ($var_67 == "a") {
    $var_65->addElement('header', 'title2', _("Add relations"));
 } elseif ($var_67 == "c") {
     $var_65->addElement('header', 'title2', _("Modify relations"));
 } elseif ($var_67 == "w") {
     $var_65->addElement('header', 'title2', _("View relations"));
 } elseif ($var_67 == "mc") {
     $var_65->addElement('header', 'title2', _("Massive Change"));
 }

$var_65->addElement('header', 'links', _("Relations"));

if ($var_67 == "mc")	{
    $var_106 = array();
    $var_106[] = class_1::createElement('radio', 'mc_mod_traps', null, _("Incremental"), '0');
    $var_106[] = class_1::createElement('radio', 'mc_mod_traps', null, _("Replacement"), '1');
    $var_65->addGroup($var_106, 'mc_mod_traps', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_traps'=>'0'));
 }
$var_65->addElement('header', 'traps', _("SNMP Traps"));
$var_69 = $var_65->addElement('advmultiselect', 'service_traps', array(_("Service Trap Relation"), _("Available"), _("Selected")), $var_53, $var_62, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);


if ($var_67 == "mc")	{
    $var_107 = array();
    $var_107[] = class_1::createElement('radio', 'mc_mod_Pars', null, _("Incremental"), '0');
    $var_107[] = class_1::createElement('radio', 'mc_mod_Pars', null, _("Replacement"), '1');
    $var_65->addGroup($var_107, 'mc_mod_Pars', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_Pars'=>'0'));
 }
$var_69 = $var_65->addElement('advmultiselect', 'service_hPars', array(_("Linked to host templates"), _("Available"), _("Selected")), $var_34, $var_62, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);



$var_108 = array(null => null);
$var_5 = $var_10->query("SELECT id, alias FROM traps_vendor order by alias");
while ($var_109 = $var_5->fetchRow()) {
    $var_108[$var_109["id"]] = html_entity_decode($var_109["alias"], var_33, "UTF-8");
 }
$var_108[""] = "_"._("ALL")."_";
$var_5->free();
$var_110 = array(
                'onchange'=>"javascript: " .
				" 	getTrap(this.form.elements['mnftr'].value); return false; ");
$var_65->addElement('select', 'mnftr', _("Vendor Name"), $var_108, $var_110);





if ($var_67 == "a") {
    $var_65->addElement('header', 'title3', _("Add Data Processing"));
 } elseif ($var_67 == "c") {
     $var_65->addElement('header', 'title3', _("Modify Data Processing"));
 } elseif ($var_67 == "w") {
     $var_65->addElement('header', 'title3', _("View Data Processing"));
 } elseif ($var_67 == "mc") {
     $var_65->addElement('header', 'title2', _("Massive Change"));
 }

$var_65->addElement('header', 'treatment', _("Data Processing"));

$var_111[] = class_1::createElement('radio', 'service_parallelize_check', null, _("Yes"), '1');
$var_111[] = class_1::createElement('radio', 'service_parallelize_check', null, _("No"), '0');
$var_111[] = class_1::createElement('radio', 'service_parallelize_check', null, _("Default"), '2');
$var_65->addGroup($var_111, 'service_parallelize_check', _("Parallel Check"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_parallelize_check' => '2'));
 }

$var_112[] = class_1::createElement('radio', 'service_obsess_over_service', null, _("Yes"), '1');
$var_112[] = class_1::createElement('radio', 'service_obsess_over_service', null, _("No"), '0');
$var_112[] = class_1::createElement('radio', 'service_obsess_over_service', null, _("Default"), '2');
$var_65->addGroup($var_112, 'service_obsess_over_service', _("Obsess Over Service"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_obsess_over_service' => '2'));
 }

$var_113[] = class_1::createElement('radio', 'service_check_freshness', null, _("Yes"), '1');
$var_113[] = class_1::createElement('radio', 'service_check_freshness', null, _("No"), '0');
$var_113[] = class_1::createElement('radio', 'service_check_freshness', null, _("Default"), '2');
$var_65->addGroup($var_113, 'service_check_freshness', _("Check Freshness"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_check_freshness' => '2'));
 }

$var_114[] = class_1::createElement('radio', 'service_flap_detection_enabled', null, _("Yes"), '1');
$var_114[] = class_1::createElement('radio', 'service_flap_detection_enabled', null, _("No"), '0');
$var_114[] = class_1::createElement('radio', 'service_flap_detection_enabled', null, _("Default"), '2');
$var_65->addGroup($var_114, 'service_flap_detection_enabled', _("Flap Detection Enabled"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_flap_detection_enabled' => '2'));
 }

$var_65->addElement('text', 'service_freshness_threshold', _("Freshness Threshold"), $var_58);
$var_65->addElement('text', 'service_low_flap_threshold', _("Low Flap Threshold"), $var_58);
$var_65->addElement('text', 'service_high_flap_threshold', _("High Flap Threshold"), $var_58);

$var_115[] = class_1::createElement('radio', 'service_process_perf_data', null, _("Yes"), '1');
$var_115[] = class_1::createElement('radio', 'service_process_perf_data', null, _("No"), '0');
$var_115[] = class_1::createElement('radio', 'service_process_perf_data', null, _("Default"), '2');
$var_65->addGroup($var_115, 'service_process_perf_data', _("Process Perf Data"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_process_perf_data' => '2'));
 }

$var_116[] = class_1::createElement('radio', 'service_retain_status_information', null, _("Yes"), '1');
$var_116[] = class_1::createElement('radio', 'service_retain_status_information', null, _("No"), '0');
$var_116[] = class_1::createElement('radio', 'service_retain_status_information', null, _("Default"), '2');
$var_65->addGroup($var_116, 'service_retain_status_information', _("Retain Status Information"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_retain_status_information' => '2'));
 }

$var_117[] = class_1::createElement('radio', 'service_retain_nonstatus_information', null, _("Yes"), '1');
$var_117[] = class_1::createElement('radio', 'service_retain_nonstatus_information', null, _("No"), '0');
$var_117[] = class_1::createElement('radio', 'service_retain_nonstatus_information', null, _("Default"), '2');
$var_65->addGroup($var_117, 'service_retain_nonstatus_information', _("Retain Non Status Information"), '&nbsp;');
if ($var_67 != "mc") {
    $var_65->setDefaults(array('service_retain_nonstatus_information' => '2'));
 }




if ($var_67 == "a") {
    $var_65->addElement('header', 'title4', _("Add an Extended Info"));
 } elseif ($var_67 == "c") {
     $var_65->addElement('header', 'title4', _("Modify an Extended Info"));
 } elseif ($var_67 == "w") {
     $var_65->addElement('header', 'title4', _("View an Extended Info"));
 } elseif ($var_67 == "mc") {
     $var_65->addElement('header', 'title2', _("Massive Change"));
 }

$var_65->addElement('header', 'nagios', _("Monitoring Engine"));
$var_65->addElement('text', 'esi_notes', _("Notes"), $var_57);
$var_65->addElement('text', 'esi_notes_url', _("URL"), $var_57);
$var_65->addElement('text', 'esi_action_url', _("Action URL"), $var_57);
$var_65->addElement('select', 'esi_icon_image', _("Icon"), $var_56, array("id"=>"esi_icon_image", "onChange"=>"showLogo('esi_icon_image_img',this.value)", "onkeyup" => "this.blur();this.focus();"));
$var_65->addElement('text', 'esi_icon_image_alt', _("Alt icon"), $var_57);


$var_118 = new class_2($var_10);
$var_119 = $var_118->getList(null, "level", 'ASC', null, null, true);
$var_121 = array(null => null);
foreach($var_119 as $var_122 => $var_123) {
    $var_121[$var_122] = $var_123['sc_name'].' ('.$var_123['level'].')';
}
$var_65->addElement('select', 'criticality_id', _('Severity level'), $var_121);

$var_65->addElement('header', 'oreon', _("Centreon"));
$var_65->addElement('select', 'graph_id', _("Graph Template"), $var_51);

if ($var_67 == "mc")	{
    $var_124 = array();
    $var_124[] = class_1::createElement('radio', 'mc_mod_sc', null, _("Incremental"), '0');
    $var_124[] = class_1::createElement('radio', 'mc_mod_sc', null, _("Replacement"), '1');
    $var_65->addGroup($var_124, 'mc_mod_sc', _("Update mode"), '&nbsp;');
    $var_65->setDefaults(array('mc_mod_sc'=>'0'));
 }
$var_69 = $var_65->addElement('advmultiselect', 'service_categories', array(_("Categories"), _("Available"), _("Selected")), $var_54, $var_60, var_70);
$var_69->setButtonAttributes('add', array('value' =>  _("Add")));
$var_69->setButtonAttributes('remove', array('value' => _("Remove")));
$var_69->setElementTemplate($var_64);



if ($var_67 == "a") {
    $var_65->addElement('header', 'title5', _("Add macros"));
 } elseif ($var_67 == "c") {
     $var_65->addElement('header', 'title5', _("Modify macros"));
 } elseif ($var_67 == "w") {
     $var_65->addElement('header', 'title5', _("View macros"));
 } elseif ($var_67 == "mc") {
     $var_65->addElement('header', 'title5', _("Massive Change"));
 }

$var_65->addElement('header', 'macro', _("Macros"));

$var_65->addElement('text', 'add_new', _("Add a new macro"), $var_58);
$var_65->addElement('text', 'macroName', _("Macro name"), $var_58);
$var_65->addElement('text', 'macroValue', _("Macro value"), $var_58);
$var_65->addElement('text', 'macroDelete', _("Delete"), $var_58);

$var_65->addElement('header', 'macro', _("Macros"));

$var_65->addElement('text', 'add_new', _("Add a new macro"), $var_58);
$var_65->addElement('text', 'macroName', _("Macro name"), $var_58);
$var_65->addElement('text', 'macroValue', _("Macro value"), $var_58);
$var_65->addElement('text', 'macroDelete', _("Delete"), $var_58);

$var_125 = array();
$var_125[] = class_1::createElement('radio', 'action', null, _("List"), '1');
$var_125[] = class_1::createElement('radio', 'action', null, _("Form"), '0');
$var_65->addGroup($var_125, 'action', _("Post Validation"), '&nbsp;');
$var_65->setDefaults(array('action' => '1'));

$var_65->addElement('hidden', 'service_id');
$var_126 = $var_65->addElement('hidden', 'service_register');
$var_126->setValue("0");
$var_128 = 0;
$var_129 = $var_65->addElement('hidden', 'o');
$var_129->setValue($var_67);
if (is_array($var_130)) {
    $var_131 = null;
    foreach ($var_130 as $var_15 => $var_16) {
        $var_131 .= $var_15.",";
    }
    $var_132 = $var_65->addElement('hidden', 'select');
    $var_132->setValue($var_131);
 }


function fn_0()
{
    global $var_65;
    return (str_replace(" ", "_", $var_65->getSubmitValue("service_description")));
}

function fn_1() {
    global $var_65;
    return (str_replace(" ", "_", $var_65->getSubmitValue("service_alias")));
}

$var_65->applyFilter('__ALL__', 'myTrim');
$var_65->applyFilter('service_description', 'myReplace');
$var_65->applyFilter('service_alias', 'myReplaceAlias');
$var_135 = false;
if ($var_67 != "mc")	{
    $var_65->addRule('service_description', _("Compulsory Name"), 'required');
    $var_65->addRule('service_alias', _("Compulsory Name"), 'required');
    $var_65->registerRule('exist', 'callback', 'testServiceTemplateExistence');
    $var_65->addRule('service_description', _("Name is already in use"), 'exist');
 } elseif ($var_67 == "mc")	{
     if ($var_65->getSubmitValue("submitMC")) {
         $var_135 = false;
     } else {
         $var_135 = true;
     }
 }

$var_138 = $var_65->addElement("hidden", "argChecker");
$var_138->setValue(1);
$var_65->registerRule("argHandler", "callback", "argHandler");
$var_65->addRule("argChecker", _("You must either fill all the arguments or leave them all empty"), "argHandler");

$var_65->setRequiredNote("<font style='color: red;'>*</font>&nbsp;". _("Required fields"));






$var_140 = new class_3();
$var_140 = initSmartyTpl($var_141, $var_140);


if ($var_67 == "w")	{
    if (!$var_142 && $var_0->var_143->var_144->page($var_66) != 2 && !isset($lockedElements[$var_3])) {
        $var_65->addElement("button", "change", _("Modify"), array("onClick"=>"javascript:window.location.href='?p=".$var_66."&o=c&service_id=".$var_3."'"));
    }
    $var_65->setDefaults($var_7);
    $var_65->freeze();
 } elseif ($var_67 == "c")	{ 
     $var_147 = $var_65->addElement('submit', 'submitC', _("Save"));
     $var_24 = $var_65->addElement('reset', 'reset', _("Reset"));
     $var_65->setDefaults($var_7);
 } elseif ($var_67 == "a")	{ 
     $var_148 = $var_65->addElement('submit', 'submitA', _("Save"));
     $var_24 = $var_65->addElement('reset', 'reset', _("Reset"));
 } elseif ($var_67 == "mc")	{ 
     $var_149 = $var_65->addElement('submit', 'submitMC', _("Save"));
     $var_24 = $var_65->addElement('reset', 'reset', _("Reset"));
 }


$var_140->assign('msg', array ("nagios"=>$var_151->var_143->get_version(), "tpl"=>1));
$var_140->assign("sort1", _("Service Configuration"));
$var_140->assign("sort2", _("Relations"));
$var_140->assign("sort3", _("Data Processing"));
$var_140->assign("sort4", _("Service Extended Info"));
$var_140->assign("sort5", _("Macros"));
$var_140->assign('javascript', '
            <script type="text/javascript" src="./include/common/javascript/showLogo.js"></script>
            <script type="text/javascript" src="./include/common/javascript/centreon/macroPasswordField.js"></script>
');
$var_140->assign('time_unit', " * ".$var_151->optGen["interval_length"]." "._("seconds"));
$var_140->var_150("helpattr", 'TITLE, "'._("Help").'", CLOSEBTN, true, FIX, [this, 0, 5], BGCOLOR, "


$helptext = "";
foreach ($help as $key => $text) {
    $helptext .= '<var_153 var_154="var_155:var_156" var_85="var_157:'.$var_15.'">'.$var_82.'</span>'."\n";
}
$var_140->assign("helptext", $var_158);

$var_159 = false;
if ($var_65->validate() && $var_135 == false)	{
    $var_30 = $var_65->getElement('service_id');
    if ($var_65->getSubmitValue("submitA")) {
        $var_30->setValue(insertServiceInDB());
    } elseif ($var_65->getSubmitValue("submitC")) {
        updateServiceInDB($var_30->getValue());
    } elseif ($var_65->getSubmitValue("submitMC")) {
        $var_130 = explode(",", $var_130);
        foreach ($var_130 as $var_15=>$var_16) {
            if ($var_16) {
                updateServiceInDB($var_16, true);
            }
        }
    }
    $var_163 = $var_65->getSubmitValue("action");
    if (!$var_163["action"]["action"]) {
        $var_67 = "w";
    } var_40 {
        $var_67 = null;
    }
    if ($var_0->var_143->var_144->page($var_66) != 2) {
        $var_65->addElement("button", "change", _("Modify"), array("onClick"=>"javascript:window.location.href='?p=".$var_66."&o=c&service_id=".$var_30->getValue()."'"));
    }
    $var_65->freeze();
    $var_159 = true;
 } var_13 ($var_65->isSubmitted()) {
     $var_140->assign("argChecker", "<font color='red'>". $var_65->getElementError("argChecker") . "</font>");
 }

$var_163 = $var_65->getSubmitValue("action");
if ($var_159 && $var_163["action"]["action"]) {
 } else {
    
    $var_166 = new class_4($var_140, true);
    $var_166->setRequiredTemplate('{$label}&nbsp;<font color="red" size="1">*</font>');
    $var_166->setErrorTemplate('<font color="red">{$error}</font><br />{$html}');
    $var_65->accept($var_166);
    $var_140->assign('is_not_template', $var_128);
    $var_140->assign('form', $var_166->toArray());
    $var_140->assign('o', $var_67);
    $var_140->assign('v', $var_151->var_143->get_version());

    $var_140->assign("Freshness_Control_options", _("Freshness Control options"));
    $var_140->assign("Flapping_Options", _("Flapping options"));
    $var_140->assign("Perfdata_Options", _("Perfdata Options"));
    $var_140->assign("History_Options", _("History Options"));
    $var_140->assign("Event_Handler", _("Event Handler"));
    $var_140->assign("topdoc", _("Documentation"));
    $var_140->assign("seconds", _("seconds"));
    $var_140->assign('custom_macro_label', _('Custom macros'));
    $var_140->assign('cloneSetMacro', $var_78);
    $var_140->assign('centreon_path', $var_0->optGen['oreon_path']);
    $var_140->assign('isServiceTemplate', 1);
    $var_140->display("formService.ihtml");
    ?>
<var_171 var_172="var_82/var_92">
    setTimeout('transformForm()', 200);
    showLogo('esi_icon_image_img', var_173.getElementById('esi_icon_image').var_16);
</var_171>
<?php } ?>
