<?php

class class_0 extends var_0 {

	static $var_1 = 'assets';
	
	static $var_2 = '/$Action/$ID';
	
	static $var_3 = 'Files & Images';

	public static $var_4 = 'File';
	
	
	public static $var_5;
	
	static $var_6 = array(
		'addfolder',
		'deletefolder',
		'deletemarked',
		'DeleteItemsForm',
		'doUpload',
		'getfile',
		'getsubtree',
		'movemarked',
		'removefile',
		'savefile',
		'sync',
		'uploadiframe',
		'UploadForm',
		'deleteUnusedThumbnails' => 'ADMIN',
		'SitetreeAsUL'
	);
	
	
	public static $var_7 = false;
	
	
	public function fn_0() {
		if(isset($_REQUEST['ID']) && is_numeric($_REQUEST['ID']))	{
			return $_REQUEST['ID'];
		} elseif (is_numeric($var_9->var_95['ID'])) {
			return $var_9->var_95['ID'];
		} elseif(is_numeric(Session::get("{$var_9->var_10}.currentPage"))) {
			return Session::get("{$var_9->var_10}.currentPage");
		} else {
			return "root";
		}
	}

	
	function fn_1() {
		parent::fn_1();
		
		if(!file_exists(var_11)) {
			mkdir(var_11);
		}

		
		Requirements::css(var_12 . "/greybox/greybox.css");
		Requirements::css(var_13 . "/css/ComplexTableField.css");

		Requirements::javascript(var_14 . "/javascript/AssetAdmin.js");
		
		Requirements::javascript(var_12 . "/greybox/AmiJS.js");
		Requirements::javascript(var_12 . "/greybox/greybox.js");
		Requirements::css(var_12 . "/greybox/greybox.css");
		
		Requirements::css(var_14 . "/css/AssetAdmin.css");

		Requirements::customScript(<<<JS
			_TREE_ICONS = {};
			_TREE_ICONS['Folder'] = {
					fileIcon: 'sapphire/javascript/tree/images/page-closedfolder.gif',
					openFolderIcon: 'sapphire/javascript/tree/images/page-openfolder.gif',
					closedFolderIcon: 'sapphire/javascript/tree/images/page-closedfolder.gif'
			};
JS
		);
	}
	
	
	function fn_2() {
		Requirements::clear();
		
		Requirements::javascript(var_13 . "/thirdparty/prototype/prototype.js");
		Requirements::javascript(var_13 . '/javascript/loader.js');
		Requirements::javascript(var_13 . "/thirdparty/behaviour/behaviour.js");
		Requirements::javascript(var_13 . "/javascript/prototype_improvements.js");
		Requirements::javascript(var_13 . "/javascript/layout_helpers.js");
		Requirements::javascript(var_14 . "/javascript/LeftAndMain.js");
		Requirements::javascript(var_14 . "/thirdparty/multifile/multifile.js");
		Requirements::css(var_14 . "/thirdparty/multifile/multifile.css");
		Requirements::javascript(var_13 . "/thirdparty/jquery/jquery.js");
		Requirements::javascript(var_13 . "/javascript/jquery_improvements.js");
		Requirements::css(var_14 . "/css/typography.css");
		Requirements::css(var_14 . "/css/layout.css");
		Requirements::css(var_14 . "/css/cms_left.css");
		Requirements::css(var_14 . "/css/cms_right.css");
		
		if(isset($var_24['ID']) && $var_24['ID'] != 'root') $var_15 = DataObject::get_by_id("Folder", $var_24['ID']);
		else $var_15 = singleton('Folder');
		
		return array( 'CanUpload' => $var_15->canEdit());
	}
	
	
	function fn_3() {
		if(!self::$var_7) return;
		
		$var_17 = singleton('File')->uploadMetadataFields();

		
		$var_19 = '';
		foreach($var_17 as $var_20) $var_19 = $var_19 . $var_20->FieldHolder();
		$var_19 = preg_replace('/(name|for|id)="(.+?)"/', '$1="$2[__X__]"', $var_19);

		
		$var_19 = preg_replace('/-([a-zA-Z0-9]+?)\[__X__\]/', '[__X__]-$1', $var_19);

		return $var_19;
	}
	
	
	function fn_4() {
		$var_22 = new class_1($var_9,'UploadForm', new class_2(
			new class_3("ID", "", $var_9->fn_0()),
			new class_3("FolderID", "", $var_9->fn_0()),
			
			new class_3(), 
			new class_4("Files[0]" , _t('AssetAdmin.CHOOSEFILE','Choose file: ')),
			new class_5('UploadButton',"
				<input type=\"submit\" value=\"". _t('AssetAdmin.UPLOAD', 'Upload Files Listed Below'). "\" name=\"action_upload\" id=\"Form_UploadForm_action_upload\" class=\"action\" />
			"),
			new class_5('MultifileCode',"
				<p>" . _t('AssetAdmin.FILESREADY','Files ready to upload:') ."</p>
				<div id=\"Form_UploadForm_FilesList\"></div>
			")
		), new class_2(
		));
		
		
		$var_22->disableSecurityToken();
		
		return $var_22;
	}
	
	
	function fn_5($var_24, $var_22) {
		$var_25 = array();
		$var_26 = array();
		$var_27 = array();
		$var_28 = '';
		$var_29 = '';
		$var_30 = '';
		$var_31 = '';
		$var_32 = '';
		$var_33 = array();

		foreach($var_24['Files'] as $var_34 => $var_35) {
			if(!is_array($var_35)) $var_35 = array($var_35);
			foreach($var_35 as $var_36 => $var_37) {
				$var_33[$var_36][$var_34] = $var_37;
			}
		}
		
		
		$var_38 = array();
		foreach($var_24 as $var_39 => $var_37) {
			if ($var_39 == 'Files') continue;
			if (is_array($var_37)) {
				$var_40 = 0;
				foreach($var_37 as $var_41 => $var_42) {
					if (!isset($var_38[$var_40])) $var_38[$var_40] = array();
					$var_38[$var_40][$var_39] = $var_42;
					$var_40++;
				}
			}
		}
		$var_38 = array_reverse($var_38);
				
		if($var_24['FolderID'] && $var_24['FolderID'] != '') $var_15 = DataObject::get_by_id("Folder", $var_24['FolderID']);
		else $var_15 = singleton('Folder');

		foreach($var_33 as $var_43 => $var_44) {
			if($var_44['error'] == var_45) {
				$var_31 = 'bad';
				$var_32 = _t('AssetAdmin.NOTEMP', 'There is no temporary folder for uploads. Please set upload_tmp_dir in php.ini.');
				break;
			}
		
			if($var_44['tmp_name']) {
				
				if(ini_get("open_basedir")) {
					$var_46 = var_47 . '/' . $var_44['name'];
					move_uploaded_file($var_44['tmp_name'], $var_46);
					$var_44['tmp_name'] = $var_46;
				}
				
				
				if(!var_48::$var_49 && Permission::check('ADMIN')) {
					$var_50 = true;
				} else {
					
					
					$var_51 = new class_6();
					$var_51->setAllowedExtensions(var_48::$var_53);
					$var_51->setAllowedMaxFileSize(self::$var_5);
					
					
					$var_55 = new class_7();
					$var_55->setValidator($var_51);
					$var_50 = $var_55->validate($var_44);
					if(!$var_50) {
						$var_58 = $var_55->getErrors();
						if($var_58) foreach($var_58 as $var_60) {
							$var_30 .= "alert('" . Convert::raw2js($var_60) . "');";
						}
					}
				}
				
				
				if($var_50) {
					$var_61 = $var_15->addUploadToFolder($var_44);
					
					if(self::$var_7 && isset($var_38[$var_43])) {
						$var_63 = DataObject::get_by_id('File', $var_61);
						$var_64 = new class_1($var_9, 'MetadataForm', $var_63->uploadMetadataFields(), new class_2());
						$var_64->loadDataFrom($var_38[$var_43]);
						$var_64->saveInto($var_63);
						$var_63->write();
					}
					
					$var_25[] = $var_61;
				}
			}
		}
		
		if($var_25) {
			$var_68 = sizeof($var_25);
			$var_32 = sprintf(_t('AssetAdmin.UPLOADEDX',"Uploaded %s files"),$var_68);
			$var_31 = "good";
		} else if($var_31 != 'bad') {
			$var_32 = _t('AssetAdmin.NOTHINGTOUPLOAD','There was nothing to upload');
			$var_31 = "";
		}

		$var_69 = false;
		foreach($var_25 as $var_61) {
			$var_26[] = $var_61;
			$var_69 = DataObject::get_one('File', "\"File\".\"ID\"=$var_61");
			
			if (method_exists($var_69, 'onAfterUpload')) $var_69->onAfterUpload();
			$var_27[] = $var_69->var_71;
		}
		
		
		
		
		if(isset($var_24['UploadMode']) && $var_24['UploadMode'] == "CMSEditor" && $var_69) {
			
			
			$var_72 = (is_a($var_69, 'Image')) ? $var_69->getWidth() : '100';
			$var_74 = (is_a($var_69, 'Image')) ? $var_69->getHeight() : '100';
			
			$var_76 = array(
				'Filename' => $var_69->var_77,
				'Width' => $var_72,
				'Height' => $var_74
			);
			
			return Convert::raw2json($var_76);
		}
		
		$var_78 = implode(',', $var_26);
		$var_79 = implode(',', $var_27);

		
			var_80.statusMessage("{$var_32}","{$var_31}");
			$var_30
			var_80.var_81.getElementById('sitetree').getTreeNodeByIdx( "{$var_15->var_82}" ).getElementsByTagName('a')[0].var_83 += ' contents';
			var_22.getPageFromServer(var_22.var_84.var_82.var_37);
			</var_85>
var_86;
	}

	
	public function fn_6() {
		$var_88 = $var_9->fn_0();
		if($var_88 && is_numeric($var_88)) {
			return DataObject::get_by_id($var_9->stat('tree_class'), $var_88);
		} else if($var_88 == 'root') {
			return singleton($var_9->stat('tree_class'));
		}
	}
	
	
	function fn_7($var_88) {
		if($var_88 && $var_88 != "root") {
			$var_90 = DataObject::get_by_id("File", $var_88);
		} else {
			$var_90 = singleton("Folder");
		}

		if($var_90) {
			$var_17 = $var_90->getCMSFields();
			$var_92 = new class_2();
			
			
			if($var_90->canEdit() && $var_88 != 'root') {
				$var_92 = new class_2(
					new class_8('save',_t('AssetAdmin.SAVEFOLDERNAME','Save folder name'))
				);
			}
			
			$var_22 = new class_1($var_9, "EditForm", $var_17, $var_92);
			if($var_90->var_82) {
				$var_22->loadDataFrom($var_90);
			} else {
				$var_22->loadDataFrom(array(
					"ID" => "root",
					"URL" => Director::absoluteBaseURL() . 'assets/',
				));
			}
			
			if(!$var_90->canEdit()) {
				$var_22->makeReadonly();
			}

			$var_9->extend('updateEditForm', $var_22);

			return $var_22;
		}
	}
	
	
	public function fn_8($var_95, $var_22) {
		if($_REQUEST['DestFolderID'] && (is_numeric($_REQUEST['DestFolderID']) || ($_REQUEST['DestFolderID']) == 'root')) {
			$var_96 = ($_REQUEST['DestFolderID'] == 'root') ? 0 : $_REQUEST['DestFolderID'];
			$var_97 = "'" . ereg_replace(' *, *',"','",trim(Convert::raw2sql($_REQUEST['FileIDs']))) . "'";
			$var_68 = 0;
	
			if($var_97 != "''") {
				$var_35 = DataObject::get("File", "\"File\".\"ID\" IN ($var_97)");
				if($var_35) {
					foreach($var_35 as $var_98) {
						if($var_98 instanceof var_99) {
							$var_98->deleteFormattedImages();
						}
						$var_98->var_101 = $var_96;
						$var_98->write();
						$var_68++;
					}
				} else {
					user_error("No files in $var_97 could be found!", var_102);
				}
			}

			$var_103 = sprintf(_t('AssetAdmin.MOVEDX','Moved %s files'),$var_68);
			
			FormResponse::status_message($var_103, "good");
			FormResponse::add("$('Form_EditForm_Files').refresh();");

			return FormResponse::respond();
		}
	}

	
	public function fn_9($var_95, $var_22) {
		$var_97 = "'" . ereg_replace(' *, *',"','",trim(Convert::raw2sql($_REQUEST['FileIDs']))) . "'";
		$var_68 = 0;
		$var_104 = 0;
		$var_105 = '';
		$var_106 = '';

		if($var_97 != "''") {
			$var_35 = DataObject::get("File", "\"File\".\"ID\" IN ($var_97)");
			if($var_35) {
				$var_107 = array();
				foreach($var_35 as $var_98) {
					$var_107 = array_merge($var_107, $var_98->BackLinkTracking()->toArray());
					if($var_98 instanceof var_99) {
						$var_98->deleteFormattedImages();
					}
					if(!$var_104) {
						$var_104 = $var_98->var_101;
					}
					$var_98->delete();
					$var_68++;
				}
				if($var_107) {
					$var_106 = "  ". _t('AssetAdmin.NOWBROKEN', 'These pages now have broken links:') . '</ul>';
					foreach($var_107 as $var_111) {
						$var_106 .= "<li style=&quot;font-size: 65%&quot;>" . $var_111->Breadcrumbs(3, true) . '</li>';
					}
					$var_106 .= '</ul>';
				} else {
					$var_106 = '';
				}
				
				$var_105 = '';
				if($var_104) {
					$var_113 = DB::query("SELECT COUNT(*) FROM \"File\" WHERE \"ParentID\" = $var_104")->value();
					if(!$var_113) $var_105 .= "Element.removeClassName(\$('sitetree').getTreeNodeByIdx('$var_104').getElementsByTagName('a')[0],'contents');";
				}
			} else {
				user_error("No files in $var_97 could be found!", var_102);
			}
		}
		
		$var_103 = sprintf(_t('AssetAdmin.DELETEDX',"Deleted %s files.%s"),$var_68,$var_106) ;
		
		FormResponse::add($var_105);
		FormResponse::status_message($var_103, "good");
		FormResponse::add("$('Form_EditForm').getPageFromServer($('Form_EditForm_ID').value)");
		
		return FormResponse::respond();	
	}
	
	
	
	public function fn_10() {
		SSViewer::setOption('rewriteHashlinks', false);

		
		if (is_object($var_9->getSubForm($var_9->var_95['ID']))) {
			return $var_9->getSubForm($var_9->var_95['ID'])->formHtmlContent();
		}
		else return null;
	}
	
	
	public function fn_11($var_24, $var_22) {
		$var_90 = DataObject::get_by_id("File", $var_24['ID']);
		$var_22->saveInto($var_90);
		$var_90->write();
		$var_116 = Convert::raw2js($var_90->var_117);
		$var_118 = Convert::raw2js($var_90->var_71);
		$var_119 = sprintf(_t('AssetAdmin.SAVEDFILE','Saved file %s'),"
		
			$('record-$var_24[var_82]').getElementsByTagName('td')[1].innerHTML = "$var_116";
			$('record-$data[ID]').getElementsByTagName('td')[2].var_120 = "$var_118";
var_121;
	}
	
	public function fn_12() {
		
	}
	
	
	public function fn_13() {
		$var_122 = singleton('Folder');
		$var_122->setMarkingFilter('ClassName', ClassInfo::subclassesFor('Folder'));
		$var_122->markPartialTree(30, null, "ChildFolders");

		if($var_125 = $var_9->fn_6()) $var_122->markToExpose($var_125);

		
		$var_127 = $var_122->getChildrenAsUL(
			'',
			'"<li id=\"record-$child->ID\" class=\"$child->class" . $child->markingClasses() .  ($extraArg->isCurrentPage($child) ? " current" : "") . "\">" . ' .
			'"<a href=\"" . Controller::join_links(substr($extraArg->Link(),0,-1), "show", $child->ID) . "\" class=\"" . ($child->hasChildFolders() ? " contents" : "") . "\" >" . $child->TreeTitle() . "</a>" ',
			$var_9,
			true,
			"ChildFolders"
		);	

		
		$var_129 = $var_9->Link() . 'show/root';
		$var_131 = Director::absoluteBaseURL() . "assets";
		if(!isset($var_132)) {
			$var_133 = "<ul id=\"sitetree\" class=\"tree unformatted\"><li id=\"record-root\" class=\"Root\"><a href=\"$var_129\"><strong>{$var_131}</strong></a>"
			. $var_127 . "</li></ul>";
		}

		return $var_133;
	}

	
	public function fn_14() {
		$var_122 = DataObject::get_by_id('Folder', $_REQUEST['ID']);
		$var_122->setMarkingFilter('ClassName', ClassInfo::subclassesFor('Folder'));
		$var_122->markPartialTree();

		$var_134 = $var_122->getChildrenAsUL(
			'',
			'"<li id=\"record-$child->ID\" class=\"$child->class" . $child->markingClasses() .  ($extraArg->isCurrentPage($child) ? " current" : "") . "\">" . ' .
			'"<a href=\"" . Controller::join_links(substr($extraArg->Link(),0,-1), "show", $child->ID) . "\" >" . $child->TreeTitle() . "</a>" ',
			$var_9,
			true
		);

		return substr(trim($var_134), 4, -5);
	}
	

	

	

	
	public function fn_15($var_135) {
		
		if(!SecurityToken::inst()->checkRequest($var_135)) return $var_9->httpError(400);
		
		$var_80 = ($_REQUEST['ParentID'] && is_numeric($_REQUEST['ParentID'])) ? (int)$_REQUEST['ParentID'] : 0;
		$var_118 = (isset($_REQUEST['Name'])) ? basename($_REQUEST['Name']) : _t('AssetAdmin.NEWFOLDER',"NewFolder");
		
		if($var_80) {
			$var_138 = DataObject::get_by_id('File', $var_80);
			if(!$var_138 || !$var_138->var_82) $var_80 = 0;
		}
		
		
		if(isset($var_138->var_82)) $var_139 = $var_138->var_140 . $var_118;
		else $var_139 = var_11 . '/' . $var_118;

		
		if(!file_exists(var_11)) {
			mkdir(var_11);
		}
		
		$var_125 = new class_9();
		$var_125->var_101 = $var_80;
		$var_125->var_71 = $var_125->var_117 = basename($var_139);
		
		
		$var_40 = 2;
		$var_141 = substr($var_125->var_77, 0, -1) . '-';
		while(file_exists($var_125->var_140)) {
			$var_125->var_77 = $var_141 . $var_40 . '/';
			$var_40++;
		}
		
		$var_125->write();
		
		mkdir($var_125->var_140);
		chmod($var_125->var_140, var_142::$var_143);
		
		if(isset($_REQUEST['returnID'])) {
			return $var_125->var_82;
		} else {
			return $var_9->returnItemToUser($var_125);
		}
		
	}
	
	
	function fn_16() {
		$var_22 = new class_1(
			$var_9,
			'DeleteItemsForm',
			new class_2(
				new class_5('SelectedPagesNote',
					sprintf('<p>%s</p>', _t('AssetAdmin_left.ss.SELECTTODEL','Select the folders that you want to delete and then click the button below'))
				),
				new class_3('csvIDs')
			),
			new class_2(
				new class_8('deletefolder', _t('AssetAdmin_left.ss.DELFOLDERS','Delete the selected folders'))
			)
		);
		$var_22->addExtraClass('actionparams');
		
		return $var_22;
	}
	
	
	public function fn_17($var_24, $var_22) {
		$var_146 = split(' *, *', $_REQUEST['csvIDs']);
		
		if(!$var_146) return false;
		$var_85 = '';
		
		foreach($var_146 as $var_88) {
			if(is_numeric($var_88)) {
				$var_90 = DataObject::get_by_id($var_9->stat('tree_class'), $var_88);
				if($var_90) {
					$var_85 .= $var_9->deleteTreeNodeJS($var_90);
					$var_90->delete();
					$var_90->destroy();
				}
			}
		}
		
		$var_149 = sizeof($var_146);
		if($var_149 > 1) {
		  $var_103 = $var_149.' '._t('AssetAdmin.FOLDERSDELETED', 'folders deleted.');
		} else {
		  $var_103 = $var_149.' '._t('AssetAdmin.FOLDERDELETED', 'folder deleted.');
		}
		
		$var_85 .= "statusMessage('$var_103');";

		return $var_85;
	}
	
	public function fn_18($var_135){
		
		if(!SecurityToken::inst()->checkRequest($var_135)) return $var_9->httpError(400);
		
		if($var_150 = $var_9->var_95['ID']) {
			$var_98 = DataObject::get_by_id('File', $var_150);
			
			if($var_98 instanceof var_99) {
				$var_98->deleteFormattedImages();
			}
			$var_98->delete();
			$var_98->destroy();

			if(Director::is_ajax()) {
				
				statusMessage('removed file', 'good');
var_121;
			} else {
				Director::redirectBack();
			}
		} else {
			user_error("AssetAdmin::removefile: Bad parameters: File=$var_150", var_102);
		}
	}
	
	public function fn_19($var_95, $var_22) {
		
		if($_REQUEST['ID'] == 'root') {
			FormResponse::status_message('Saved', 'good');
			return FormResponse::respond();
		}
		
		$var_22->dataFieldByName('Name')->var_152 = $var_22->dataFieldByName('Title')->Value();
		
		return parent::fn_19($var_95, $var_22);
	}
	
	
	
	
	public function fn_20($var_135) {
		
		if(!SecurityToken::inst()->checkRequest($var_135)) return $var_9->httpError(400);
		
		$var_153 = 0;
		$var_154 = $var_9->fn_21();
		
		if($var_154) {
			foreach($var_154 as $var_156) {
				unlink(var_11 . "/" . $var_156);
				$var_153++;
			}
		}
		
		$var_103 = sprintf(_t('AssetAdmin.THUMBSDELETED', '%s unused thumbnails have been deleted'), $var_153);
		FormResponse::status_message($var_103, 'good');
		
	}
	
	
	private function fn_21() {
		$var_157 = array();
		$var_158 = array();
		$var_159 = new class_10(new class_11(var_11));
		$var_160 = ClassInfo::subclassesFor('SiteTree');
		
		if($var_159) {
			foreach($var_159 as $var_98) {
				if($var_98->isFile()) {
					if(strpos($var_98->getPathname(), '_resampled') !== false) {
						$var_163 = pathinfo($var_98->getPathname());
						if(in_array(strtolower($var_163['extension']), array('jpeg', 'jpg', 'jpe', 'png', 'gif'))) {
							$var_164 = str_replace('\\','/', $var_98->getPathname());
							$var_157[] = substr($var_164, strpos($var_164, '/assets/') + 8);
						}
					}
				}
			}
		}
		
		if($var_160) {
			foreach($var_160 as $var_83) {
				$var_165 = singleton($var_83);
				$var_166 = DataObject::get($var_83);
				
				if($var_166 !== NULL) {
					foreach($var_166 as $var_167) {
						foreach($var_165->db() as $var_169 => $var_170) {
							if($var_170 == 'HTMLText') {
								$var_171 = HTTP::findByTagAndAttribute($var_167->$var_169,array('img' => 'src'));
								
								if($var_171 != NULL) {
									$var_158[] = substr($var_171[0], strpos($var_171[0], '/assets/') + 8);
								}
								
								if($var_167->var_172 > 0) {
									$var_167 = Versioned::get_latest_version($var_83, $var_167->var_82);
									$var_173 = HTTP::findByTagAndAttribute($var_167->$var_169, array('img' => 'src'));
									
									if($var_173 != NULL) {
										$var_158[] = substr($var_173[0], strpos($var_173[0], '/assets/') + 8);
									}
								}
							}
						}
					}
				}
			}
		}
		
		return array_diff($var_157, $var_158);
	}
	
}
?>
