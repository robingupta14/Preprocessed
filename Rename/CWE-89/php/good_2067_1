<?php









function fn_0( $var_0, $var_1, $var_2, $var_3, $var_4, $var_5, $var_6 ) {
	$var_7 = mci_check_login( $var_0, $var_1 );
	if ( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}
	
	if ( $var_2 != var_8 && !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	if ( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_9 = mci_get_user_lang( $var_7 );

	$var_10 = $var_5 < 1 ? 1 : $var_5;
	$var_11 = 0;
	$var_12 = 0;
	$var_13 = mci_get_user_id( $var_4 );
	$var_14 = true;

	if ( strcasecmp( $var_3, 'assigned' ) == 0 ) {
		$var_15 = filter_create_assigned_to_unresolved( $var_2, $var_13 );
	} else if ( strcasecmp( $var_3, 'reported' ) == 0 ) {
		
		if ( $var_13 == 0 ) {
			return SoapObjectsFactory::newSoapFault( 'Client', "Target user id must be specified for 'reported' filter." );
		}

		$var_15 = filter_create_reported_by( $var_2, $var_13 );
	} else if ( strcasecmp( $var_3, 'monitored' ) == 0 ) {
		$var_15 = filter_create_monitored_by( $var_2, $var_13 );
	} else {
		return SoapObjectsFactory::newSoapFault( 'Client', "Unknown filter type '$var_3'." );
	}

	$var_16 = filter_get_bug_rows( $var_5, $var_6, $var_11, $var_12, $var_15, $var_2, $var_13, $var_14 );
	
	$var_17 = array();
	
	
	if ( $var_10 > $var_5 ) {
	    return $var_17;	
	}

	foreach( $var_16 as $var_18 ) {
		$var_17[] = mci_issue_data_as_array( $var_18, $var_7, $var_9 );
	}

	return $var_17;
}

function fn_1( $var_0, $var_1, $var_2, $var_5, $var_6 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}
	
	$var_9 = mci_get_user_lang( $var_7 );
	
	if( $var_2 != var_8 && !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_10 = $var_5 < 1 ? 1 : $var_5;
	$var_11 = 0;
	$var_12 = 0;
	$var_19 = $var_2;

	$var_16 = filter_get_bug_rows( $var_5, $var_6, $var_11, $var_12, null, $var_2 );
	
	$var_17 = array();
	
	
	if ( $var_10 > $var_5 )
	    return $var_17;	

	foreach( $var_16 as $var_18 ) {
		$var_17[] = mci_issue_data_as_array( $var_18, $var_7, $var_9 );
	}

	return $var_17;
}


function fn_2( $var_0, $var_1 ) {
	$var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !mci_has_readonly_access( $var_7 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_9 = mci_get_user_lang( $var_7 );

	$var_17 = array();
	foreach( user_get_accessible_projects( $var_7 ) as $var_20 ) {
		$var_21 = project_cache_row( $var_20 );
		$var_22 = array();
		$var_22['id'] = $var_20;
		$var_22['name'] = $var_21['name'];
		$var_22['status'] = mci_enum_get_array_by_id( $var_21['status'], 'project_status', $var_9 );
		$var_22['enabled'] = $var_21['enabled'];
		$var_22['view_state'] = mci_enum_get_array_by_id( $var_21['view_state'], 'project_view_state', $var_9 );
		$var_22['access_min'] = mci_enum_get_array_by_id( $var_21['access_min'], 'access_levels', $var_9 );
		$var_22['file_path'] = array_key_exists( 'file_path', $var_21 ) ? $var_21['file_path'] : "";
		$var_22['description'] = array_key_exists( 'description', $var_21 ) ? $var_21['description'] : "";
		$var_22['subprojects'] = mci_user_get_accessible_subprojects( $var_7, $var_20, $var_9 );
		$var_17[] = $var_22;
	}

	return $var_17;
}


function fn_3( $var_0, $var_1, $var_2 ) {
    global $var_19;
	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}
	$var_19 = $var_2;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_17 = array();
	$var_23 = category_get_all_rows( $var_2 );
	foreach( $var_23 as $var_24 ) {
		$var_17[] = $var_24['name'];
	}
	return $var_17;
}



function fn_4($var_0, $var_1, $var_2, $var_25 ) {
        global $var_19;
        $var_7 = mci_check_login( $var_0, $var_1 );

        if( $var_7 === false ) {
                return mci_soap_fault_access_denied();
        }

        if( !project_exists( $var_2 ) ) {
                return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
        }
        $var_19 = $var_2;

        if( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_2 ) ) {
                return mci_soap_fault_access_denied();
        }

        return category_add( $var_2, $var_25 );
}



function fn_5 ($var_0, $var_1, $var_2, $var_25) {
        global $var_19;
        $var_7 = mci_check_login( $var_0, $var_1 );

        if( $var_7 === false ) {
                return mci_soap_fault_access_denied();
        }

        if( !project_exists( $var_2 ) ) {
                return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
        }

        $var_19 = $var_2;

        if( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_2 ) ) {
                return mci_soap_fault_access_denied();
        }

        
        $var_26 = category_get_id_by_name( $var_25, $var_2 );

        
        return category_remove( $var_26, config_get('default_category_for_moves') );
}



function fn_6( $var_0, $var_1, $var_2, $var_25, $var_27, $var_28 ) {
        global $var_19;
        $var_7 = mci_check_login( $var_0, $var_1 );

        if ( null === $var_28 ) {
                return SoapObjectsFactory::newSoapFault( 'Client', 'p_assigned_to needed' );
        }

        if( $var_7 === false ) {
                return mci_soap_fault_access_denied();
        }

        if( !project_exists( $var_2 ) ) {
                return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
        }

        $var_19 = $var_2;

        if( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_2 ) ) {
                return mci_soap_fault_access_denied();
        }

        
        $var_26 = category_get_id_by_name( $var_25, $var_2 );

        
        return category_update( $var_26, $var_27, $var_28 );
}


function fn_7( $var_0, $var_1, $var_2 ) {
    global $var_19;
	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}
	$var_19 = $var_2;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}
	
	$var_17 = array();
	foreach( version_get_all_rows( $var_2, var_29 ) as $var_30 ) {
		$var_17[] = mci_project_version_as_array ( $var_30 );
	}

	return $var_17;
}


function fn_8( $var_0, $var_1, $var_2 ) {
	global $var_19;
    $var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}
	
	$var_19 = $var_2;
	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_17 = array();

	foreach( version_get_all_rows( $var_2, var_31 ) as $var_30 ) {
		$var_17[] = mci_project_version_as_array ( $var_30 );
	}

	return $var_17;
}


function fn_9( $var_0, $var_1, $var_2 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}
	$var_19 = $var_2;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_17 = array();

	foreach( version_get_all_rows( $var_2, var_32 ) as $var_30 )
		$var_17[] = mci_project_version_as_array ( $var_30 );

	return $var_17;
}


function fn_10( $var_0, $var_1, $var_33 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}
	
	$var_33 = SoapObjectsFactory::unwrapObject( $var_33 );

	$var_20 = $var_33['project_id'];
	$var_19 = $var_20;
	$var_34 = $var_33['name'];
	$var_35 = $var_33['released'];
	$var_36 = $var_33['description'];
	$var_37 =  $var_33['date_order'];
	if ( is_blank( $var_37 ) ) 
	    $var_37 = null;
	else 
		$var_37 = SoapObjectsFactory::parseDateTimeString($var_37);
	
	$var_38 = isset ( $var_33['obsolete'] ) ? $var_33['obsolete'] : false;
	
	if ( is_blank( $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "project_id" was missing' );
	}

	if ( !project_exists( $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault('Client', "Project '$var_20' does not exist." );
	}

	if ( !mci_has_readwrite_access( $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if ( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if ( is_blank( $var_34 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "name" was missing' );
	}

	if ( !version_is_unique( $var_34, $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client',  'Version exists for project');
	}

	if ( $var_35 === false ) {
		$var_35 = var_32;
	} else {
		$var_35 = var_31;
	}
	
	if ( version_add( $var_20, $var_34, $var_35, $var_36, $var_37, $var_38 ) )
		return version_get_id( $var_34, $var_20 );

	return null;
}


function fn_11( $var_0, $var_1, $var_39, $var_33 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( is_blank( $var_39 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "version_id" was missing' );
	}

	if( !version_exists( $var_39 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Version '$var_39' does not exist." );
	}
	
	$var_33 = SoapObjectsFactory::unwrapObject( $var_33 );

	$var_20 = $var_33['project_id'];
	$var_19 = $var_20;
	$var_34 = $var_33['name'];
	$var_35 = $var_33['released'];
	$var_36 = $var_33['description'];
	$var_37 = isset ( $var_33['date_order']) ? SoapObjectsFactory::parseDateTimeString($var_33['date_order']) : null;
	$var_38 = isset ( $var_33['obsolete'] ) ? $var_33['obsolete'] : false;

	if ( is_blank( $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "project_id" was missing' );
	}

	if ( !project_exists( $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_20' does not exist." );
	}

	if ( !mci_has_readwrite_access( $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if ( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if ( is_blank( $var_34 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "name" was missing' );
	}

	
	$var_40 = version_get_field( $var_39, 'version' );
	if ( ( strtolower( $var_40 ) != strtolower( $var_34 ) ) && !version_is_unique( $var_34, $var_20 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Version exists for project' );
	}

	if ( $var_35 === false ) {
		$var_35 = var_32;
	} else {
		$var_35 = var_31;
	}

	$var_41 = new class_0();
	$var_41->var_42 = $var_39;
	$var_41->var_43 = $var_20;
	$var_41->var_44 = $var_34;
	$var_41->var_45 = $var_36;
	$var_41->var_46 = $var_35;
	$var_41->var_47 = $var_37;
	$var_41->var_48 = $var_38;

	return version_update( $var_41 );
}


function fn_12( $var_0, $var_1, $var_39 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( is_blank( $var_39 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Mandatory field "version_id" was missing' );
	}

	if( !version_exists( $var_39 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Version '$var_39' does not exist." );
	}

	$var_20 = version_get_field( $var_39, 'project_id' );
	$var_19 = $var_20;

	if( !mci_has_readwrite_access( $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if( !mci_has_access( config_get( 'manage_project_threshold' ), $var_7, $var_20 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	return version_remove( $var_39 );
}


function fn_13( $var_0, $var_1, $var_2 ) {
	global $var_19;

    $var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	$var_19 = $var_2;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_17 = array();
	$var_49 = custom_field_get_linked_ids( $var_2 );

	foreach( custom_field_get_linked_ids( $var_2 ) as $var_50 ) {
		$var_51 = custom_field_get_definition( $var_50 );
		if( access_has_project_level( $var_51['access_level_r'], $var_2 ) ) {
			$var_17[] = array(
				'field' => array(
					'id' => $var_51['id'],
					'name' => $var_51['name'],
				),
				'type' => $var_51['type'],
				'default_value' => $var_51['default_value'],
				'possible_values' => $var_51['possible_values'],
				'valid_regexp' => $var_51['valid_regexp'],
				'access_level_r' => $var_51['access_level_r'],
				'access_level_rw' => $var_51['access_level_rw'],
				'length_min' => $var_51['length_min'],
				'length_max' => $var_51['length_max'],
				'display_report' => $var_51['display_report'],
				'display_update' => $var_51['display_update'],
				'display_resolved' => $var_51['display_resolved'],
				'display_closed' => $var_51['display_closed'],
				'require_report' => $var_51['require_report'],
				'require_update' => $var_51['require_update'],
				'require_resolved' => $var_51['require_resolved'],
				'require_closed' => $var_51['require_closed'],
			);
		}
	}

	return $var_17;
}


function fn_14( $var_0, $var_1, $var_2 ) {
    global $var_19;

    $var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	$var_19 = $var_2;

	
	if( var_52 == config_get( 'enable_project_documentation' ) || !file_is_uploading_enabled() ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	$var_53 = db_get_table( 'mantis_project_file_table' );
	$var_54 = db_get_table( 'mantis_project_table' );
	$var_55 = db_get_table( 'mantis_project_user_list_table' );
	$var_56 = db_get_table( 'mantis_user_table' );
	$var_57 = var_58;
	$var_59 = var_60;
	$var_61 = config_get_global( 'admin_site_threshold' );

	if( $var_2 == var_8 ) {
		
		$var_62 = user_get_accessible_projects( $var_7 );
	} else {
		
		$var_62 = array(
			$var_2,
		);
	}

	$var_62[] = var_8; 


	$var_63 = config_get( 'view_proj_doc_threshold' );
	if( is_array( $var_63 ) ) {
		if( 1 == count( $var_63 ) ) {
			$var_64 = "= " . array_shift( $var_63 ) . " ";
		} else {
			$var_64 = "IN (" . implode( ',', $var_63 ) . ")";
		}
	} else {
		$var_64 = ">= $var_63 ";
	}

	$var_65 = "SELECT pft.id, pft.project_id, pft.filename, pft.file_type, pft.filesize, pft.title, pft.description, pft.date_added, pft.user_id
		FROM $var_53 pft
		LEFT JOIN $var_54 pt ON pft.project_id = pt.id
		LEFT JOIN $var_55 pult
		ON pft.project_id = pult.project_id AND pult.user_id = " . db_param() . "
		LEFT JOIN $var_56 ut ON ut.id = " . db_param() . "
		WHERE pft.project_id in (" . implode( ',', $var_62 ) . ") AND
		( ( ( pt.view_state = " . db_param() . " OR pt.view_state is null ) AND pult.user_id is null AND ut.access_level $var_64 ) OR
		( ( pult.user_id = " . db_param() . " ) AND ( pult.access_level $var_64 ) ) OR
		( ut.access_level = " . db_param() . " ) )
		ORDER BY pt.name ASC, pft.title ASC";
	$var_66 = db_query_bound( $var_65, array( $var_7, $var_7, $var_57, $var_7, $var_61 ) );
	$var_67 = db_num_rows( $var_66 );

	$var_17 = array();
	for( $var_68 = 0;$var_68 < $var_67;$var_68++ ) {
		$var_69 = db_fetch_array( $var_66 );

		$var_70 = array();
		$var_70['id'] = $var_69['id'];
		$var_70['filename'] = $var_69['filename'];
		$var_70['title'] = $var_69['title'];
		$var_70['description'] = $var_69['description'];
		$var_70['size'] = $var_69['filesize'];
		$var_70['content_type'] = $var_69['file_type'];
		$var_70['date_submitted'] = SoapObjectsFactory::newDateTimeVar( $var_69['date_added'] );
		$var_70['download_url'] = mci_get_mantis_path() . 'file_download.php?file_id=' . $var_69['id'] . '&amp;type=doc';
		$var_70['user_id'] = $var_69['user_id'];
		$var_17[] = $var_70;
	}

	return $var_17;
}

function fn_15( $var_0, $var_1, $var_2 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_access_denied();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	$var_19 = $var_2;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	return user_get_all_accessible_subprojects( $var_7, $var_2 );
}


function fn_16( $var_2 ) {
	$var_17 = array();
	$var_17['id'] = $var_2;
	$var_17['name'] = project_get_name( $var_2 );
	return $var_17;
}


function fn_17( $var_0, $var_1, $var_71 ) {
        $var_7 = mci_check_login( $var_0, $var_1 );
        if( $var_7 === false ) {
                return mci_soap_fault_login_failed();
        }
        
        return project_get_id_by_name ( $var_71 );
}





function fn_18( $var_0, $var_1, $var_72 ) {
	$var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !mci_has_administrator_access( $var_7 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}
	
	$var_72 = SoapObjectsFactory::unwrapObject( $var_72 );
	

	if ( !isset( $var_72['name'] ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Required field "name" is missing' );
	} else {
		$var_34 = $var_72['name'];
	}
	
	if( isset( $var_72['status'] ) ) {
		$var_73 = $var_72['status'];
	} else {
		$var_73 = array( 'name' => 'development' ); 
	}
	
	if( isset( $var_72['view_state'] ) ) {
		$var_74 = $var_72['view_state'];
	} else {
		$var_74 = array( 'id' => var_58 );
	}
	
	if ( isset( $var_72['enabled'] ) ) {
		$var_75 = $var_72['enabled'];
	} else {
		$var_75 = true;
	}
	
	if ( isset( $var_72['description'] ) ) {
		$var_36 = $var_72['description'];
	} else {
		$var_36 = '';
	}
	
	if ( isset( $var_72['file_path'] ) ) {	
		$var_76 = $var_72['file_path'];
	} else { 
		$var_76 = '';
	}
	
	if ( isset( $var_72['inherit_global'] ) ) { 
		$var_77 = $var_72['inherit_global'];
	} else {
		$var_77 = true;
	}
	
	
	if( !project_is_name_unique( $var_34 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', 'Project name exists');
	}

	$var_78 = mci_get_project_status_id( $var_73 );
	$var_79 = mci_get_project_view_state_id( $var_74 );

	
	return project_create( $var_34, $var_36, $var_78, $var_79, $var_76, $var_75, $var_77 );
}


function fn_19( $var_0, $var_1, $var_2, $var_72 ) {
    global $var_19;

    $var_7 = mci_check_login( $var_0, $var_1 );
    if( $var_7 === false ) {
        return mci_soap_fault_access_denied();
    }

    if( !mci_has_administrator_access( $var_7, $var_2 ) ) {
        return mci_soap_fault_access_denied( $var_7 );
    }

    if( !project_exists( $var_2 ) ) {
        return SoapObjectsFactory::newSoapFault("Client", "Project '$var_2' does not exist." );
    }

    $var_19 = $var_2;

    $var_72 = SoapObjectsFactory::unwrapObject( $var_72 );

    if ( !isset( $var_72['name'] ) ) {
        return SoapObjectsFactory::newSoapFault( 'Client', 'Missing required field \'name\'.');
    } else {
        $var_34 = $var_72['name'];
    }

    
    if ( $var_34 != project_get_name( $var_2 ) ) {
        if( !project_is_name_unique( $var_34 ) ) {
            return SoapObjectsFactory::newSoapFault('Client', 'Project name exists');
        }
    }

    if ( !isset( $var_72['description'] ) ) {
        $var_36 = project_get_field( $var_2, 'description' );
    } else {
        $var_36 = $var_72['description'];
    }

    if ( !isset( $var_72['status'] ) ) {
        $var_73 = project_get_field( $var_2, 'status' );
    } else {
        $var_73 = $var_72['status'];
    }

    if ( !isset( $var_72['view_state'] ) ) {
        $var_74 = project_get_field( $var_2, 'view_state' );
    } else {
        $var_74 = $var_72['view_state'];
    }

    if ( !isset( $var_72['file_path'] ) ) {
        $var_76 = project_get_field( $var_2, 'file_path' );
    } else {
        $var_76 = $var_72['file_path'];
    }

    if ( !isset( $var_72['enabled'] ) ) {
        $var_75 = project_get_field( $var_2, 'enabled' );
    } else {
        $var_75 = $var_72['enabled'];
    }

    if ( !isset( $var_72['inherit_global'] ) ) {
        $var_77 = project_get_field( $var_2, 'inherit_global' );
    } else {
        $var_77 = $var_72['inherit_global'];
    }

    $var_78 = mci_get_project_status_id( $var_73 );
    $var_79 = mci_get_project_view_state_id( $var_74 );

    return project_update( $var_2, $var_34, $var_36, $var_78, $var_79, $var_76, $var_75, $var_77 );
}


function fn_20( $var_0, $var_1, $var_2 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	if( !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	$var_19 = $var_2;

	if( !mci_has_administrator_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}

	return project_delete( $var_2 );
}

function fn_21( $var_0, $var_1, $var_2, $var_5, $var_6 ) {
    global $var_19;

    $var_7 = mci_check_login( $var_0, $var_1 );
	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}
	if( $var_2 != var_8 && !project_exists( $var_2 ) ) {
		return SoapObjectsFactory::newSoapFault( 'Client', "Project '$var_2' does not exist." );
	}

	$var_19 = $var_2;;

	if( !mci_has_readonly_access( $var_7, $var_2 ) ) {
		return mci_soap_fault_access_denied( $var_7 );
	}
	
	$var_10 = $var_5 < 1 ? 1 : $var_5;
	$var_11 = 0;
	$var_12 = 0;

	$var_16 = filter_get_bug_rows( $var_5, $var_6, $var_11, $var_12, null, $var_2 );
	$var_17 = array();
	
	
	if ( $var_10 > $var_5 )
	    return $var_17;

	foreach( $var_16 as $var_18 ) {
		$var_17[] = mci_issue_data_as_header_array( $var_18);
	}

	return $var_17;
}


function fn_22( $var_0, $var_1, $var_2, $var_80 ) {
    global $var_19;

	$var_7 = mci_check_login( $var_0, $var_1 );

	if( $var_7 === false ) {
		return mci_soap_fault_login_failed();
	}

	$var_81 = array();

	$var_19 = $var_2;

	$var_81 = project_get_all_user_rows( $var_2, $var_80 ); 

	$var_82 = array();
	$var_83 = array();
	$var_84 = ( var_85 == config_get( 'show_realname' ) );
	$var_86 = ( var_85 == config_get( 'sort_by_last_name' ) );
	foreach( $var_81 as $var_87 ) {
		$var_88 = string_attribute( $var_87['username'] );
		$var_89 = strtolower( $var_88 );
		if( $var_84 && ( $var_87['realname'] <> "" ) ) {
			$var_88 = string_attribute( $var_87['realname'] );
			if( $var_86 ) {
				$var_90 = explode( ' ', strtolower( $var_88 ), 2 );
				$var_89 = ( isset( $var_90[1] ) ? $var_90[1] . ', ' : '' ) . $var_90[0];
			} else {
				$var_89 = strtolower( $var_88 );
			}
		}
		$var_82[] = $var_88;
		$var_83[] = $var_89;
	}
	array_multisort( $var_83, var_91, var_92, $var_81, $var_82 );

	$var_17 = array();
	for( $var_68 = 0;$var_68 < count( $var_83 );$var_68++ ) {
		$var_93 = $var_81[$var_68];

		
		
		
		$var_17[] = mci_account_get_array_by_id( $var_93['id'] );
	}
	return $var_17;
}
