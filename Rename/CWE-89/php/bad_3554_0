<?php

class var_0 extends var_1 {
	
	static $var_2 = "\"Sort\"";
	
	
	static function fn_0($var_3) {
		
		if(!file_exists(var_4)) Filesystem::makeFolder(var_4);

		$var_3 = trim(Director::makeRelative($var_3));
		
		$var_3 = preg_replace('/^\/?(.*)\/?$/', '$1', $var_3);
		$var_5 = explode("/",$var_3);

		$var_6 = 0;
		$var_7 = null;
		foreach($var_5 as $var_8) {
			if(!$var_8) continue; 
			$var_7 = DataObject::get_one("Folder", "\"Name\" = '$var_8' AND \"ParentID\" = $var_6");
			if(!$var_7) {
				$var_7 = new class_0();
				$var_7->var_9 = $var_6;
				$var_7->var_10 = $var_8;
				$var_7->var_11 = $var_8;
				$var_7->write();
			}
			if(!file_exists($var_7->getFullPath())) {
				Filesystem::makeFolder($var_7->getFullPath());
			}
			$var_6 = $var_7->var_14;
		}

		return $var_7;
	}
	
	
	function fn_1() {
		$var_6 = (int)$var_16->var_14; 
		$var_17 = 0;
		$var_18 = 0;

		
		$var_19 = DB::query("SELECT \"Name\" FROM \"File\" WHERE \"ParentID\" = $var_6 GROUP BY \"Name\" HAVING count(*) > 1")->column();
		if($var_19) foreach($var_19 as $var_21) {
			$var_21 = DB::getConn()->addslashes($var_21);
			
			$var_23 = DB::query("SELECT \"ID\" FROM \"File\" WHERE \"Name\" = '$var_21' AND \"ParentID\" = $var_6")->column();
			if($var_23) {
				$var_24 = array_shift($var_23);
				foreach($var_23 as $var_25) {
					DB::query("UPDATE \"File\" SET \"ParentID\" = $var_24 WHERE \"ParentID\" = $var_25");
					DB::query("DELETE FROM \"File\" WHERE \"ID\" = $var_25");
				}
			} else {
				user_error("Inconsistent database issue: SELECT ID FROM \"File\" WHERE Name = '$var_21' AND ParentID = $var_6 should have returned data", var_26);
			}
		}

		
		
		
		$var_27 = DB::query("SELECT * FROM \"File\" WHERE \"ParentID\" = $var_6");
		$var_28 = array();
		if($var_27) {
			foreach($var_27 as $var_29) {
				$var_30 = $var_29['ClassName'];
				if(!$var_30) $var_30 = "File";
				$var_28[$var_29['Name']] = new $var_30($var_29);
			}
		}
		$var_31 = $var_28;
		
		
		
		$var_32 = $var_16->var_33;
		
		if(!$var_16->var_34) die($var_16->var_14 . " - " . $var_16->var_33);
		

		if(file_exists($var_32)) {
			$var_35 = scandir($var_32);
			foreach($var_35 as $var_36) {
				if($var_36[0] == '.' || $var_36[0] == '_' || substr($var_36,0,6) == 'Thumbs' || $var_36 == 'web.config') {
					continue;
				}

				
				if(isset($var_28[$var_36])) {
					$var_37 = $var_28[$var_36];
					if(( !( $var_37 instanceof var_0 ) && is_dir($var_32 . $var_36) ) 
					|| (( $var_37 instanceof var_0 ) && !is_dir($var_32 . $var_36)) ) {
						DB::query("DELETE FROM \"File\" WHERE \"ID\" = $var_37->var_14");
						unset($var_28[$var_36]);						
					}
				}
				
				
				if(isset($var_28[$var_36])) {
					$var_37 = $var_28[$var_36];
					unset($var_31[$var_36]);
				} else {
					$var_17++;
					$var_38 = $var_16->fn_2($var_36);
					$var_37 = DataObject::get_by_id("File", $var_38);
				}
					
				if( $var_37 && is_dir($var_32 . $var_36)) {
					$var_40 = $var_37->fn_1();
					$var_17 += $var_40['added'];
					$var_18 += $var_40['deleted'];
				}
				
				
				$var_37->destroy();
				$var_37 = null;
			}
			
			
			if(isset($var_31)) foreach($var_31 as $var_42) {
				DB::query("DELETE FROM \"File\" WHERE \"ID\" = $var_42->var_14");
				$var_18++;
			}
		} else {
			DB::query("DELETE FROM \"File\" WHERE \"ID\" = $var_16->var_14");
		}
		
		return array('added' => $var_17, 'deleted' => $var_18);
	}

	
	function fn_2($var_43) {
		
		$var_32 = $var_16->var_33;
		if(is_dir($var_32 . $var_43)) {
			$var_30 = "Folder";
		} else {
			
			$var_44 = strtolower(substr($var_43,strrpos($var_43,'.')+1));
			switch($var_44) {
				case "gif": case "jpg": case "jpeg": case "png": $var_30 = "Image"; break;
				default: $var_30 = "File";
			}
		}

		if(Member::currentUser()) $var_45 = Member::currentUser()->var_14;
		else $var_45 = 0;
		
		$var_46 = DB::getConn()->addslashes($var_16->var_34 . $var_43);
		if($var_30 == 'Folder' ) $var_46 .= '/';

		$var_43 = DB::getConn()->addslashes($var_43);
		
		DB::query("INSERT INTO \"File\" 
			(\"ClassName\", \"ParentID\", \"OwnerID\", \"Name\", \"Filename\", \"Created\", \"LastEdited\", \"Title\")
			VALUES ('$var_30', $var_16->var_14, $var_45, '$var_43', '$var_46', " . DB::getConn()->now() . ',' . DB::getConn()->now() . ", '$var_43')");
			
		return DB::getGeneratedID("File");
	}

	
	function fn_3($var_48) {
		if(!is_array($var_48)) {
			user_error("Folder::addUploadToFolder() Not passed an array.  Most likely, the form hasn't got the right enctype", var_49);
		}
		if(!isset($var_48['size'])) {
			return;
		}
		
		$var_50 = var_51;
		

		
		$var_52 = str_replace(' ', '-',$var_48['name']);
		$var_52 = ereg_replace('[^A-Za-z0-9+.-]+','',$var_52);
		$var_52 = ereg_replace('-+', '-',$var_52);

		while($var_52[0] == '_' || $var_52[0] == '.') {
			$var_52 = substr($var_52, 1);
		}

		$var_52 = $var_16->var_53 . $var_52;
		Filesystem::makeFolder(dirname("$var_50/$var_52"));
		
		$var_54 = array('.gz', '.bz', '.bz2');
		
		$var_44 = "";
		if(preg_match('/^(.*)(\.[^.]+)$/', $var_52, $var_55)) {
			$var_52 = $var_55[1];
			$var_44 = $var_55[2];
			
			if(in_array($var_44, $var_54) && preg_match('/^(.*)(\.[^.]+)$/', $var_52, $var_55)) {
				$var_52 = $var_55[1];
				$var_44 = $var_55[2] . $var_44;
			}
		}
		$var_56 = $var_52;

		$var_57 = 1;
		while(file_exists("$var_50/$var_52$var_44")) {
			$var_57++;
			$var_58 = $var_52;
			
			if(strpos($var_52, '.') !== false) {
				$var_52 = ereg_replace('[0-9]*(\.[^.]+$)', $var_57 . '\\1', $var_52);
			} elseif(strpos($var_52, '_') !== false) {
				$var_52 = ereg_replace('_([^_]+$)', '_' . $var_57, $var_52);
			} else {
				$var_52 .= "_$var_57";
			}
			
			if($var_58 == $var_52 && $var_57 > 2) user_error("Couldn't fix $var_52$var_44 with $var_57", var_49);
		}
		
		if (move_uploaded_file($var_48['tmp_name'], "$var_50/$var_52$var_44")) {
			
			return $var_16->fn_2(basename($var_52 . $var_44));
		} else {
			if(!file_exists($var_48['tmp_name'])) user_error("Folder::addUploadToFolder: '$var_48[var_59]' doesn't exist", var_49);
			else user_error("Folder::addUploadToFolder: Couldn't copy '$var_48[var_59]' to '$var_50/$var_52$var_44'", var_49);
			return false;
		}
	}
	
	function fn_4() {
		return new class_1(true);
	}
	
	
	

	function fn_5() {
		return parent::fn_5() . "/";
	}
		
	function var_60() {
		if($var_16->var_14 && ($var_23 = $var_16->AllChildren())) {
			foreach($var_23 as $var_37) {
				if(!$var_16->var_34 || !$var_16->var_10 || !file_exists($var_16->getFullPath())) {
					$var_37->setField('Name',null);
					$var_37->var_34 = null;
				}
				$var_37->delete();
			}
		}

		
		if($var_16->var_34 && $var_16->var_10 && file_exists($var_16->getFullPath())) {
			$var_64 = glob( $var_16->getFullPath() . '
	function deleteDatabaseOnly() {
		if($children = $this->myChildren()) {
			foreach($children as $child) $child->deleteDatabaseOnly();
		}

		parent::deleteDatabaseOnly();
	}
	
	public function myChildren() {
		
		$ancestors = ClassInfo::ancestry($this->class);
		foreach($ancestors as $i => $a) {
			if(isset($baseClass) && $baseClass === -1) {
				$baseClass = $a;
				break;
			}
			if($a == "DataObject") $baseClass = -1;
		}
		
		$g = DataObject::get($baseClass, "\"ParentID\" = " . $this->ID);
		return $g;
	}
	
	
	public function hasChildren() {
		return (bool)DB::query("SELECT COUNT(*) FROM \"File\" WHERE ParentID = "
			. (int)$this->ID)->value();
	}

	
	public function hasChildFolders() {
		$SQL_folderClasses = Convert::raw2sql(ClassInfo::subclassesFor('var_0'));
		
		return (bool)DB::query("SELECT COUNT(*) FROM \"File\" WHERE \"ParentID\" = " . (int)$var_16->var_14
			. " AND \"ClassName\" IN ('" . implode("','", $var_65) . "')")->value();
	}
	
	
	public function fn_6() {
		parent::fn_6();

		
		
		if($var_16->var_14 && ($var_23 = $var_16->AllChildren())) {
			foreach($var_23 as $var_37) {
				$var_37->fn_6();
				$var_37->write();
			}
		}
	}
	
	
	function fn_7(){
		
	}

	
	function fn_8() {
		$var_68 = new class_2(
			$var_16,
			"Files",
			"File", 
			array("Title" => _t('Folder.TITLE', "Title"), "Filename" => _t('Folder.FILENAME', "Filename")),
			""
		);
		$var_68->setFolder($var_16);
		$var_68->setPopupCaption(_t('Folder.VIEWEDITASSET', "View/Edit Asset"));

		$var_71 = ($var_16->var_14 && $var_16->var_14 != "root") ? new class_3();
		if( $var_16->canEdit() ) {
			$var_73 = new class_4('deletemarked',_t('Folder.DELSELECTED','Delete selected files'), 'delete');
			$var_73->includeDefaultJS(false);
		} else {
			$var_73 = new class_5('deletemarked');
		}

		$var_75 = new class_6(
			new class_5(),
			new class_7("Root", 
				new class_8(),
					$var_71,
					$var_68,
					$var_73,
					new class_5(),
					new class_5()
				),
				new class_8(), 
					new class_9("URL", _t('Folder.URL', 'URL')),
					new class_9("ClassName", _t('Folder.TYPE','Type')),
					new class_9("Created", _t('Folder.CREATED','First Uploaded')),
					new class_9("LastEdited", _t('Folder.LASTEDITED','Last Updated'))
				),
				new var_76(),
					new class_10("UploadIframe",
						$var_16->fn_9()
					)
				)
				
			),
			new class_5()
		);
		
		if(!$var_16->canEdit()) {
			$var_75->removeFieldFromTab("Root", "Upload");
		}

		$var_16->extend('updateCMSFields', $var_75);
		
		return $var_75;
	}
	
	
	public function fn_10() {
		$var_81 = DB::query("SELECT DISTINCT \"FileID\" FROM \"SiteTree_ImageTracking\"");
		$var_82 = array();
		$var_83 = '';
		$var_84 = ClassInfo::subclassesFor('SiteTree');
		
		if($var_81->numRecords() > 0) {
			while($var_86 = $var_81->next()) {
				$var_83 .= $var_86['FileID'] . ','; 
			}
		}

		foreach($var_84 as $var_30) {
			$var_88 = singleton($var_30)->extendedSQL();
			$var_90 = $var_88->execute()->column();
			if(!count($var_90)) continue;
			
			foreach(singleton($var_30)->has_one() as $var_93 => $var_94) {
				if($var_94 == 'Image' || $var_94 == 'File') {
					$var_95 = $var_93 .'ID';
					$var_88 = singleton($var_30)->extendedSQL("$var_95 > 0");
					$var_88->var_96 = true;
					$var_88->var_97 = array($var_95);
					$var_82 = array_merge($var_82, $var_88->execute()->column());

				} elseif($var_94 == 'Folder') {
 					
				}
			}
		}
		
		if($var_82) {
 			return "\"File\".\"ID\" NOT IN (" . implode(', ', $var_82) . ") AND (\"ClassName\" = 'File' OR \"ClassName\" = 'Image')";

		} else {
			return "(\"ClassName\" = 'File' OR \"ClassName\" = 'Image')";
		}
		return $var_83;
	}

	
	function fn_9() {
		return <<<HTML
		<iframe name="AssetAdmin_upload" src="admin/assets/uploadiframe/{$var_16->var_14}" id="AssetAdmin_upload" border="0" style="border-style none !important; width: 97%; min-height: 300px; height: 100%; height: expression(document.body.clientHeight) !important;">
		</iframe>
HTML;
	}
	
	
	function fn_11() {
		return DataObject::get("Folder", "\"ParentID\" = " . (int)$var_16->var_14);
	}
}


class class_11 extends var_98 {
	protected $var_99;
	
	public function fn_12($var_99) {
		$var_16->var_99 = $var_99;
		parent::fn_12(new class_6());
	}
		
	public function fn_13() {
		if($var_16->var_23->Count() == 0) {
			$var_102 = new class_4("delete_unused_thumbnails", _t('Folder.DELETEUNUSEDTHUMBNAILS', 'Delete unused thumbnails'));
			$var_102->includeDefaultJS(false) ;

			$var_16->var_23 = new class_6(
				new class_10(),
				$var_16->fn_14(),
				new class_12(
					new class_10(),
					$var_102
				)
			);
			$var_16->var_23->setForm($var_16->var_105);
		}
		return $var_16->var_23;
	}
	
	public function fn_15() {
		$var_107 = "";
		foreach($var_16->fn_13() as $var_37) {
			$var_107 .= $var_37->fn_15();
		}
		return $var_107;
	}


	
	protected function fn_14() {
		$var_83 = $var_16->var_99->fn_10();
        $var_108 = new class_2(
            $var_16->var_99,
            "AssetList",
            "File", 
			array("Title" => _t('Folder.TITLE', "Title"), "LinkedURL" => _t('Folder.FILENAME', "Filename")), 
            "",
            $var_83
        );
		$var_108->setPopupCaption(_t('Folder.VIEWASSET', "View Asset"));
        $var_108->setPermissions(array("show","delete"));
        $var_108->var_110 = false;
        return $var_108;
	}
}
?>
