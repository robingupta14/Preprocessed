<?php



















class class_0 extends var_0 {
    public $var_1 = 'order';
    private $var_2 = array('productinfo', 'specials', 'form', 'wizards', 'newsletter', 'confirmation', 'postprocess');

    public $var_3 = array(
        'show'                         => 'Show Shopping Cart',
    );

        
    public $var_4 = array(
        'aggregation',
        'categories',
        'comments',
        'ealerts',
        'facebook',
        'files',
        'pagination',
        'rss',
        'tags',
        'twitter',
    );  

    static function fn_0() {
        return gt("e-Commerce Shopping Cart");
    }

    static function fn_1() {
        return gt("Displays the shopping cart contents from your store.");
    }

    function fn_2() {
        global $var_5;

        $var_6 = isset($var_7->var_19['product_type']) ? $var_7->var_19['product_type'] : 'product';
        $var_8      = new class_1();

        
        $var_9 = new class_2();
        if (isset($var_7->var_19['product_id']) && empty($var_7->var_19['children'])) $var_9 = $var_8->find('first', 'parent_id=' . $var_7->var_19['product_id']);
        if (!empty($var_9->var_11)) {
            flash('message', gt("Please select a product and quantity from the options listed below to add to your cart."));
            redirect_to(array('controller'=> 'store', 'action'=> 'show', 'id'=> $var_7->var_19['product_id']));
        }

        
        if (isset($var_7->var_19['prod-quantity'])) {
            
            

            foreach ($var_7->var_19['prod-quantity'] as $var_12=> &$var_13) {
                if (in_array($var_12, $var_7->var_19['prod-check'])) {
                    
                    $var_14 = new $var_6($var_12);
                    
                    $var_7->var_19['children'][$var_12] = $var_13;
                }
                if (isset($var_14)) $var_7->var_19['product_id'] = $var_14->var_15;
            }
        }

        $var_8 = new $var_6($var_7->var_19['product_id'], true, true); 

        
        if (isset($var_7->var_19['quantity'])) {
            if (((int)$var_7->var_19['quantity']) < $var_8->var_16) {
                flash('message', gt("Please enter a quantity equal or greater than the minimum order quantity."));
                redirect_to(array('controller'=> 'store', 'action'=> 'show', 'id'=> $var_7->var_19['product_id']));
            } else {

            }
            
            if ($var_8->var_17 && ((int)$var_7->var_19['quantity']) % $var_8->var_17) {
                flash('message', gt("Please enter a quantity in multiples of") . ' ' . $var_8->var_17);
                redirect_to(array('controller'=> 'store', 'action'=> 'show', 'id'=> $var_7->var_19['product_id']));
            } else {

            }
        }

        





















        
        
        if ($var_8->addToCart($var_7->var_19)) {
            
            if (ecomconfig::getConfig('show_cart') || !empty($var_7->var_19['quick'])) {
                







                
                
                redirect_to(array('controller'=>'cart', 'action'=>'show'));
                

            } else {
                
                if ($var_8->var_6 == "donation") {
                    $var_20 = ' '.gt('Donation');
                } elseif ($var_8->var_6 == "eventregistration") {
                    $var_20 = ' '.gt('Event');
                } else {
                    $var_20 = '';
                }
                flash('message', gt("Added") . " " . $var_8->var_21 . $var_20 . " " . gt("to your cart.") . " <a href='" . $var_5->makeLink(array('controller'=> 'cart', 'action'=> 'checkout'), false, true) . "'>" . gt("Click here to checkout now.") . "</a>");
            }
        } else {
            return false;
        }
        expHistory::back();
    }

    function fn_3() {
        global $var_24;
        if (expJavascript::inAjaxAction()) {
            
            $var_11      = str_replace('quantity-', '', $var_7->var_19['id']);
            $var_25    = new class_4($var_11);
            $var_27 = new class_2();
            if (!empty($var_25->var_11)) {
                
                $var_28 = $var_25->var_8->fn_3($var_7->var_19['value']);
                if ($var_28 > $var_25->var_8->var_13) {
                    if ($var_25->var_8->var_29 == 1) {
                        $var_30             = ($var_25->var_8->var_13 <= 0) ? $var_28 : $var_28 - $var_25->var_8->var_13;
                        $var_27->var_31 = 'Only ' . $var_25->var_8->var_13 . ' ' . $var_25->var_32 . ' are currently in stock. Shipping may be delayed on the other ' . $var_30;
                    } elseif ($var_25->var_8->var_29 == 2) {
                        $var_27->var_31    = $var_25->var_32 . ' only has ' . $var_25->var_8->var_13 . ' on hand. You can not add any more than that to your cart.';
                        $var_27->var_33 = expCore::getCurrencySymbol() . number_format($var_24->getCartTotal(), 2);
                        $var_27->var_35 = expCore::getCurrencySymbol() . number_format($var_25->getTotal(), 2);
                        $var_27->var_37    = $var_11;
                        $var_27->var_13   = $var_25->var_8->var_13;
                        
                        return true;
                    }
                }
                $var_25->var_13 = $var_28;
                $var_25->save();
                $var_24->refresh();
                $var_27->var_33 = expCore::getCurrencySymbol() . number_format($var_24->getCartTotal(), 2);
                $var_27->var_35 = expCore::getCurrencySymbol() . number_format($var_25->getTotal(), 2);
                $var_27->var_37    = $var_11;
                $var_27->var_13   = $var_25->var_13;
                
            }
        } else {
            if (empty($var_7->var_19['quantity']) && !empty($var_7->var_19['qtyr'])) $var_7->var_19['quantity'] = $var_7->var_19['qtyr'];
            if (!is_numeric($var_7->var_19['quantity'])) {
                flash('error', gt('Please enter a valid quantity.'));
                expHistory::back();
            }

            $var_25 = new class_4($var_7->var_19['id']);

            if (!empty($var_25->var_11)) {
                
                $var_28 = $var_7->var_19['quantity'];
                
                
                $var_40 = 0; 
                
                
                foreach ($var_24->var_26 as $var_41) {
                    if ($var_41->var_42 == $var_25->var_42) $var_40 += $var_41->var_13;
                }
                
                
                
                
                $var_43 = '';
                if ($var_28 < $var_25->var_8->var_16) {
                    $var_43 = $var_25->var_8->var_21 . ' has a minimum order quantity of ' . $var_25->var_8->var_16 . '. The quantity has been adjusted and added to your cart.<br/><br/>';
                    $var_28     = $var_25->var_8->var_16;
                }
                
                if ($var_28 % $var_25->var_8->var_17) {
                    $var_43 = $var_25->var_8->var_21 . ' must be ordered in multiples of ' . $var_25->var_8->var_17 . '. The quantity has been adjusted up and added to your cart.<br/><br/>';
                    $var_44 = $var_28 % $var_25->var_8->var_17;
                    $var_28     = $var_28 - $var_44 + $var_25->var_8->var_17;
                }

                $var_45 = '';
                if (($var_40 + ($var_28 - $var_25->var_13)) > $var_25->var_8->var_13) {
                    if ($var_25->var_8->var_29 == 1) {
                        $var_30        = ($var_25->var_8->var_13 <= 0) ? $var_28 : $var_28 - $var_25->var_8->var_13;
                        $var_45 = gt('Only') . ' ' . $var_25->var_8->var_13 . ' ' . $var_25->var_32 . ' ' . gt('are currently in stock. Shipping may be delayed on the other') . ' ' . $var_30 . "<br/><br/>";
                        
                    } elseif ($var_25->var_8->var_29 == 2) {
                        flash('error', $var_25->var_32 . ' ' . gt('only has') . ' ' . $var_25->var_8->var_13 . ' ' . gt('on hand. You can not add any more than that to your cart.'));
                        
                        expHistory::back();
                    }
                } else if ($var_28 <= 0) {
                    $var_25->delete();
                    flash('message', $var_25->var_32 . ' ' . gt('has been removed from your cart.'));
                    expHistory::back();
                }
                $var_25->var_13 = $var_28;
                $var_25->save();
                $var_24->refresh();

                
                
            }
            
            flash('message', $var_43 . $var_45 . $var_25->var_32 . ' ' . gt('quantity has been updated.'));
            expHistory::back();
        }
    }

    function fn_4() {
        global $var_24;
        foreach ($var_24->var_26 as $var_25) {
            if ($var_25->var_11 == intval($var_7->var_19['id'])) {
                $var_8 = new  $var_25->var_6($var_25->var_42);
                $var_8->fn_4($var_25);
                $var_25->delete();
            }
        }

        expHistory::back();
    }

    function fn_5() {
        global $var_24;

        
        
        
        expHistory::set('viewable', $var_7->var_19);
        
        if (isset($var_24)) {
            
            


            $var_24->calculateGrandTotal();

            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            

            
            $var_50    = new class_5();
            $var_52 = $var_50->find('all', 'enabled=1');
            if (empty($var_52)) {
                
                assign_to_template(array(
                    'noactivediscounts'=> '1'
                ));
                $var_51 = null;
            } else {
                
                $var_51 = $var_24->validateDiscounts();
            }
        } else {
            $var_24              = new class_2();
            $var_24->var_26   = new class_2();
            $var_54              = null;
            $var_51          = null;

        }
        assign_to_template(array(
            'items'    => $var_24->var_26,
            'order'    => $var_24,
            'discounts'=> $var_51,
            
        ));

    }

    function fn_6() {
        $var_7->fn_5();
    }

    function fn_7() {
        $var_7->fn_5();
    }

    function fn_8() {
        global $var_56, $var_24, $var_5;

        if (empty($var_24)) {
            flash('error', gt('There is an error with your shopping cart.'));
            expHistory::back();
        }



        $var_24->calculateGrandTotal();
        $var_24->validateDiscounts(array('controller'=> 'cart', 'action'=> 'checkout'));

        if (!expSession::get('customer-signup') && !$var_56->isLoggedin()) {  
            expHistory::set('viewable', $var_7->var_19);
            expSession::set('customer-login', true);
            flash('message', gt("Please select how you would like to continue with the checkout process."));
            expHistory::redirecto_login(makeLink(array('module'=> 'cart', 'action'=> 'checkout'), 'secure'),true);
        }




        if ($var_24->var_58 < intval(ecomconfig::getConfig('min_order'))) {
            flashAndFlow('error',gt("Note: Thank you for your decision to purchase. However, our minimum order for merchandise is ").expCore::getCurrencySymbol() . number_format(ecomconfig::getConfig('min_order'), 2, ".", ",") . ". ".gt("Please increase your quantity or continue shopping."));
        }

        if (empty($var_24->var_26)) flashAndFlow('error',gt('There are no items in your cart.'));

        if (!class_3::getDefaultOrderType()) {
            flashAndFlow('error', gt('This store is not yet fully configured to allow checkouts.')."<br>".gt('You Must Create a Default Order Type').' <a href="'.expCore::makeLink(array('controller'=>'order_type','action'=>'manage')).'">'.gt('Here').'</a>');
        }
        if (!class_3::getDefaultOrderStatus()) {
            flashAndFlow('error', gt('This store is not yet fully configured to allow checkouts.')."<br>".gt('You Must Create a Default Order Status').' <a href="'.expCore::makeLink(array('controller'=>'order_status','action'=>'manage')).'">'.gt('Here').'</a>');
        }

        $var_59 = new class_6();
        
        if (count($var_59->var_60) < 1) {
            flashAndFlow('error', gt('This store is not yet fully configured to allow checkouts.')."<br>".gt('You Must Activate a Payment Option').' <a href="'.expCore::makeLink(array('controller'=>'billing','action'=>'manage')).'">'.gt('Here').'</a>');
        }
        
        expHistory::set('viewable', $var_7->var_19);

        
        
        

        
        
        $var_50    = new class_5();
        $var_52 = $var_50->find('all', 'enabled=1');
        if (empty($var_52)) {
            
            assign_to_template(array(
                'noactivediscounts'=> '1'
            ));
            $var_51 = null;
        } else {
            
            $var_51 = $var_24->getOrderDiscounts();
        }
        
        
        
        foreach ($var_24->var_26 as $var_25) {
            $var_8 = new $var_25->var_6($var_25->var_42);
            $var_8->fn_8();
        }

        
        $var_62 = $var_7->fn_9();

        
        $var_64 = new class_7();
        
        $var_65 = $var_64->find('first', 'user_id=' . $var_56->var_11 . ' AND is_shipping=1');
        if (empty($var_65) || !$var_56->isLoggedin()) {  
            expSession::set('customer-signup', false);
            flash('message', gt('Enter your primary address info now.') .
                '<br><br>' .
                gt('You may also optionally provide a password if you would like to return to our store at a later time to view your order history or make additional purchases.') .
                '<br><br>' .
                gt('If you need to add another billing or shipping address you will be able to do so on the following page.'));
            redirect_to(array('controller'=> 'address', 'action'=> 'edit'));
        }

        
        $var_66 = new class_8();
        
        if (count($var_66->var_60) < 1) {
            flashAndFlow('error', gt('This store is not yet fully configured to allow checkouts.')."<br>".gt('You Must Activate a Shipping Option').' <a href="'.expCore::makeLink(array('controller'=>'shipping','action'=>'manage')).'">'.gt('Here').'</a>');
        }

        
        $var_66->getRates();

        if (strpos($var_5->var_68, 'https:
            flash('var_69', gt('This page appears to be unsecured!  Personal information may become compromised!'));

        assign_to_template(array(

            
            
            'shipping'            => $var_66,
            'user'                => $var_56,
            'billing'             => $var_59,
            'discounts'           => $var_51,
            'order'               => $var_24,
            'order_types'         => class_3::getOrderTypes(),
            'default_order_type'  => class_3::getDefaultOrderType(),
            'order_statuses'      => class_3::getOrderStatuses(),
            'default_order_status'=> class_3::getDefaultOrderStatus(),
            'sales_reps'          => class_3::getSalesReps()
            
        ));
    }

    
    public function fn_10() {
        
        global $var_24, $var_56, $var_71;









        
        
        
        $var_66 = new class_8();
        $var_59  = new class_6();
        
        $var_59->var_72->update($var_7->var_19);
        
        $var_59 = new class_6();

        if (!$var_56->isLoggedIn()) {
            flash('message', gt("It appears that your session has expired. Please log in to continue the checkout process."));
            expHistory::redirecto_login(makeLink(array('module'=> 'cart', 'action'=> 'checkout'), true));
        }

        
        if (empty($var_24->var_26)) {
            flash('error', gt('There are no items in your cart.'));
        }
        if (empty($var_66->var_75->var_11) && !$var_66->var_76) {
            flash('error', gt('You must pick a shipping method'));
        }
        if (empty($var_66->var_64->var_11) && !$var_66->var_76) {
            flash('error', gt('You must pick a shipping address'));
        }
        if (empty($var_59->var_75->var_11)) {
            flash('error', gt('You must pick a billing method'));
        }
        if (empty($var_59->var_64->var_11)) {
            flash('error', gt('You must select a billing address'));
        }

        
        foreach ($var_24->getShippingMethods() as $var_78) {
            $var_79       = new class_9($var_78);
            $var_81 = $var_71->selectValue('shippingcalculator', 'calculator_name', 'id=' . $var_79->var_83);
            $var_84     = new $var_81($var_79->var_83);
            $var_85      = $var_84->meetsCriteria($var_79);
            if (is_string($var_85)) {
                flash('error', $var_85);
            }
        }

        
        if (!expQueue::isQueueEmpty('error')) {
            redirect_to(array('controller'=>'cart', 'action'=>'checkout'));

        }

         
        $var_24->calculateGrandTotal();
        $var_24->setOrderType($var_7->var_19);
        $var_24->setOrderStatus($var_7->var_19);
        

        
        if ($var_59->var_75 != null) {
            if (isset($var_7->var_19['cc_type_' . $var_59->var_75->var_89])) {
                $var_7->var_19['cc_type'] = $var_7->var_19['cc_type_' . $var_59->var_75->var_89];
                unset($var_7->var_19['cc_type_' . $var_59->var_75->var_89]);
            }
            $var_90 = $var_59->var_75->userFormUpdate($var_7->var_19);
            
            
            

            
            
            $var_92 = $var_59->var_75->fn_10($var_59->var_72, $var_90, $var_7->var_19, $var_24);
        } else {  
            if (substr($var_7->var_19['cash_amount'], 0, strlen(expCore::getCurrencySymbol())) == expCore::getCurrencySymbol()) {
                $var_7->var_19['cash_amount'] = substr($var_7->var_19['cash_amount'], strlen(expCore::getCurrencySymbol()));
            }
            $var_90 = new class_2();
            $var_90->var_93 = $var_7->var_19["cash_amount"];

            if ($var_90->var_93 < $var_24->var_94) $var_90->var_95 = $var_24->var_94 - $var_90->var_93;
            $var_59->var_72->update(array('billing_options' => serialize($var_90)));
        }
        
        expSession::set('billing_options', $var_90);  
        
        
        

        
        
        



        if (empty($var_92->var_96)) {  
			redirect_to(array('controller'=>'cart', 'action'=>'confirm'));

        } else {
            flash('error', gt('An error was encountered while processing your transaction.') . '<br /><br />' . $var_92->var_31);
            expHistory::back();
        }
    }

    public function fn_11() {
        global $var_24;

        
        if (empty($var_24->var_26)) flashAndFlow('error',gt('There are no items in your cart.'));

        
        $var_24->calculateGrandTotal();

        
        
        
        $var_66 = new class_8();
        $var_59  = new class_6();

        $var_90 = expSession::get('billing_options');
        













        assign_to_template(array(
            'shipping'   => $var_66,
            'billing'    => $var_59,
            'order'      => $var_24,
            'total'      => $var_24->var_58,
            'billinginfo'=> $var_59->getBillingInfo($var_90),
        ));
    }

    public function fn_12() {

        global $var_24, $var_56;

        
        if (!$var_56->isLoggedIn() && empty($var_7->var_19['nologin'])) {
            flash('message', gt("It appears that your session has expired. Please log in to continue the checkout process."));
            expHistory::back();

            
        }
        
        
        
        if (empty($var_24->var_26)) flash('error', gt('There are no items in your cart.'));
        if (!expQueue::isQueueEmpty('error')) redirect_to(array('controller'=> 'store', 'action'=> 'showall'));

        
        $var_24->update($var_7->var_19);

        
        $var_99 = new class_10();

        $var_99->var_100   = $var_24->var_101;
        $var_99->var_102      = $var_24->var_11;
        $var_99->save();

        

        $var_59  = new class_6();

        
        $var_24->calculateGrandTotal();
        
        $var_24->var_103 = $var_24->getInvoiceNumber(false);  
        

        if ($var_59->var_75 != null) {

            $var_92 = $var_59->var_75->fn_12($var_59->var_72, expSession::get('billing_options'), $var_7->var_19, $var_24);
        } else {
            
            $var_90 = expSession::get('billing_options');
            $var_105 = new class_2();
            $var_105->var_96 = $var_90->var_92->var_96 = 0;
            $var_90->var_92->var_106 = gt("complete");
            if ($var_90->var_93 < $var_24->var_94) $var_90->var_92->var_106 = gt("payment due");
            $var_59->var_72->update(array('billing_options' => serialize($var_90),'transaction_state'=>$var_90->var_92->var_106));


            $var_107 = number_format($var_24->var_94, 2, '.', '');
            $var_108 = new class_11();
            $var_108->var_109 = $var_59->var_72->var_11;
            $var_108->var_110 = $var_59->var_72->var_110;
            $var_108->var_111 = $var_107;
            $var_108->var_112  = serialize($var_90->var_92);
            $var_108->var_113 = '';
            $var_108->var_114 = $var_90->var_92->var_106;
            $var_108->save();
            $var_92 = $var_90;
        }


        if (empty($var_92->var_96)) {
            
            
            
            $var_59->var_72->update(array('billing_cost'=> $var_24->var_94));

            
            
            

            
            $var_115 = $var_24->getInvoiceNumber();  

            $var_24->update(array('invoice_id'=> $var_115, 'purchased'=> time(), 'updated'=> time()));
            
            
            $var_24->refresh();

            
            foreach ($var_24->var_26 as $var_25) {
                $var_8 = new $var_25->var_6($var_25->var_42);
                $var_8->fn_12($var_25, $var_24->var_116->var_117);
            }

            if ($var_59->var_75 != null) {
                $var_59->var_75->postProcess($var_24, $var_7->var_19);
            }
            orderController::clearCartCookie();
        } else {
            flash('error', gt('An error was encountered while processing your transaction.') . '<br /><br />' . $var_92->var_31);
            expHistory::back();

            
        }


            
        if ($var_24->var_116->var_119)
            $var_120 = renderAction(array('controller'=> 'order', 'action'=> 'email', 'id'=> $var_24->var_11));



        expSession::un_set('record');
        
        flash('message', gt('Your order has been submitted.'));
        redirect_to(array('controller'=> 'order', 'action'=> 'myOrder', 'id'=> $var_24->var_11, 'tc'=> 1));
    }

    function fn_13() {
        global $var_24, $var_56;

        if ($var_24->var_121) redirect_to(array('controller'=> 'cart', 'action'=> 'checkout'),true);
        if (empty($var_24->var_26)) flashAndFlow('error',gt('There are no items in your cart.'));

        
        expHistory::set('viewable', $var_7->var_19);

        
        foreach ($var_24->var_26 as $var_25) {
            $var_8 = new $var_25->var_6($var_25->var_42);
            $var_8->fn_8();
        }

        

        if ($var_24->var_122) {
            $var_59 = new class_6();
            assign_to_template(array(
                'billing'=> $var_59
            ));
        }


        if ($var_24->var_121) {  
            $var_66            = new class_8();
            $var_66->var_123 = $var_66->listPrices();
            assign_to_template(array(
                'shipping'=> $var_66
            ));
        }

        assign_to_template(array(
            'product'=> $var_8,
            'user'   => $var_56,
            'order'  => $var_24
        ));
    }

    function fn_14() {
        global $var_24, $var_56;

        if ($var_24->var_121 || $var_24->var_94) redirect_to(array('controller'=> 'cart', 'action'=> 'checkout'),true);
        if (empty($var_24->var_26)) flashAndFlow('error',gt('There are no items in your cart.'));

        
        expHistory::set('viewable', $var_7->var_19);

        
        foreach ($var_24->var_26 as $var_25) {
            $var_8 = new $var_25->var_6($var_25->var_42);
            $var_8->fn_8();
        }

        assign_to_template(array(
            'product'=> $var_8,
            'user'   => $var_56,
            'order'  => $var_24
        ));
    }

    function fn_15() {
        global $var_24, $var_125;

        
        $var_126 = $var_125->var_127->var_128;
        $var_125 = expTemplate::get_template_for_action($var_7, 'confirm', $var_7->var_129);
        $var_125->var_127->var_128 = array_merge($var_126,$var_125->var_127->var_128);

        if (!empty($var_7->var_19['billing'])) {
            $var_59 = new class_6();
            $var_59->var_72->setAddress($var_7->var_19['billing']);
        }

        if (!empty($var_7->var_19['shipping'])) {
            die('NEED TO IMPLEMENT THE SHIPPING PIECE!!'); 
            $var_66 = new class_8();
            $var_66->var_131->setAddress($var_7->var_19['shipping']);
            assign_to_template(array(
                'shipping'=> $var_66
            ));
        }

        $var_90 = $var_59->var_75->userFormUpdate($var_7->var_19);
        $var_24->calculateGrandTotal();
        expSession::set('billing_options', $var_90);  
        assign_to_template(array(
            'billing'    => $var_59,
            'order'      => $var_24,
            'total'      => $var_24->var_58,

            'billinginfo'=> $var_59->getBillingInfo($var_90),
            'nologin'    => 1
        ));
    }

    public function fn_16() {
        global $var_56, $var_24;

        expHistory::set('viewable', $var_7->var_19);

        
        $var_64      = new class_7(null, false, false);
        $var_132 = $var_64->dropdownByUser($var_56->var_11);

        if (count($var_132) < 2) {
            expHistory::set('viewable', $var_7->var_19);
            flash('error', gt('You must have more than 1 address to split your shipment.  Please add another now.'));
            redirect_to(array('controller'=> 'address', 'action'=> 'edit'));
        }

        
        $var_134 = array();
        foreach ($var_24->var_26 as $var_25) {
            if ($var_25->var_8->var_135 == true) {
                for ($var_136 = 0; $var_136 < $var_25->var_13; $var_136++) {
                    $var_134[] = $var_25;
                }
            }
        }

        if (count($var_134) < 2) {
            flashAndFlow('error',gt('You must have a minimum of 2 items in your shopping cart in order to split your shipment.'));
        }

        expHistory::set('viewable', $var_7->var_19);
        assign_to_template(array(
            'addresses_dd'=> $var_132,
            'orderitems'  => $var_134,
            'order'       => $var_24
        ));
    }

    public function fn_17() {
        global $var_71;

        $var_137            = array();
        $var_138 = '';

        foreach ($var_7->var_19['orderitems'] as $var_11=> $var_139) {
            foreach ($var_139 as $var_140) {
                if (empty($var_137[$var_140][$var_11])) {
                    $var_137[$var_140][$var_11] = 1;
                } else {
                    $var_137[$var_140][$var_11]++;
                }
            }

            if (!empty($var_138)) $var_138 .= ',';
            $var_138 .= $var_11;
        }

        foreach ($var_137 as $var_141 => $var_134) {
            $var_80 = new class_9();
            $var_80->setAddress($var_141);

            foreach ($var_134 as $var_142 => $var_143) {
                $var_26 = new class_4($var_142);
                unset(
                    $var_26->var_11,
                    $var_26->var_144
                );
                $var_26->var_144 = $var_80->var_11;
                $var_26->var_13           = $var_143;
                $var_26->save();
            }
        }

        $var_71->delete('orderitems', 'id IN (' . $var_138 . ')');
        redirect_to(array('controller'=>'cart', 'action'=>'selectShippingMethods'));

    }

    public function fn_18() {
        global $var_24;

        expHistory::set('editable', $var_7->var_19);
        $var_66          = new class_8();
        $var_145 = $var_24->getShippingMethods();

        $var_146 = array();
        foreach ($var_145 as $var_11) {
            $var_146[$var_11] = new class_3();
            $var_146[$var_11]->var_147    = new class_9($var_11);
            $var_146[$var_11]->var_26 = $var_24->getOrderitemsByShippingmethod($var_11);
            foreach ($var_146[$var_11]->var_26 as $var_149=> $var_25) {
                if ($var_25->var_8->var_135 == false) {
                    unset($var_146[$var_11]->var_26[$var_149]);
                }
            }

            if (empty($var_146[$var_11]->var_26)) {
                unset($var_146[$var_11]);
            } else {
                foreach ($var_66->var_60 as $var_150=> $var_151) {
                    if (class_exists($var_151)) {
                        $var_84 = new $var_151($var_150);
                        $var_146[$var_11]->prices[$var_150] = $var_84->getRates($var_146[$var_11]);
                        
                    }
                }
            }
        }

        assign_to_template(array(
            'shipping_items'=> $var_146,
            'shipping'      => $var_66
        ));
    }

    public function fn_19() {
        if (expSession::get('customer-login')) expSession::un_set('customer-login');
        expSession::set('customer-signup', true);
        redirect_to(array('controller'=>'cart', 'action'=>'checkout'));

    }

    public function fn_20() {
        global $var_24;

        $var_66               = new class_8();
        $var_24->var_152 = array();

        
        if (empty($var_7->var_19['methods'])) {
            expValidator::failAndReturnToForm(gt("You did not pick any shipping options"), $var_7->var_19);
        }

        
        if (count($var_7->var_19['methods']) < count($var_7->var_19['calcs'])) {
            expValidator::failAndReturnToForm(gt("You must select a shipping options for all of your packages."), $var_7->var_19);
        }

        foreach ($var_7->var_19['methods'] as $var_11=> $var_147) {
            $var_153           = $var_7->var_19['cost'][$var_147];
            $var_21          = $var_7->var_19['title'][$var_147];
            $var_80 = new class_9($var_11);
            $var_80->update(array(
                'option'               => $var_147,
                'option_title'         => $var_21,
                'shipping_cost'        => $var_153,
                'shippingcalculator_id'=> $var_7->var_19['calcs'][$var_11],
            ));

            $var_24->var_152[] = $var_80->var_11;
        }

        redirect_to(array('controller'=>'cart', 'action'=>'checkout'));

    }

    function fn_21() {

        global $var_56;

        if ($var_56->isLoggedIn()) {
            
            $var_64 = new class_7();
            $var_154   = $var_64->find('count', 'user_id=' . $var_56->var_11);
            if ($var_154 == 0) $var_7->var_19['is_default'] = 1;
            $var_7->var_19['user_id'] = $var_56->var_11;
            $var_64->update($var_7->var_19);

            
            if (isset($var_7->var_19['addresstype'])) {
                if ($var_7->var_19['addresstype'] == 'shipping') {
                    $var_66 = new class_8();
                    $var_66->var_80->setAddress($var_64);
                } elseif ($var_7->var_19['addresstype'] == 'billing') {
                    $var_59 = new class_6();
                    $var_59->var_72->setAddress($var_64);
                }
            }

        }

		redirect_to(array('controller'=>'cart', 'action'=>'checkout'));

    }

    function fn_9() {
        
        return null;
    }

    

    function fn_22($var_155) {
        
        if ($var_155 == '12345') {
            
            
            
            
            

            return true;
        } else {
            return false;
        }
    }

    

    function fn_23() {

        global $var_24;
        
        

        $var_156 = new class_5();
        $var_156 = $var_156->getCouponByName($var_7->var_19['coupon_code']);

        if (empty($var_156)) {
            flash('error', gt("This discount code you entered does not exist."));
            
            expHistory::back();
        }

        
        if ($var_7->fn_24($var_156->var_11)) {
            flash('error', gt("This discount code is already in your cart."));
            
            expHistory::back();
        }

        
        $var_159 = $var_156->validateDiscount();
        if ($var_159 == "") {
            
            $var_161               = new class_12();
            $var_161->var_102    = $var_24->var_11;
            $var_161->var_162 = $var_156->var_11;
            $var_161->var_163  = $var_156->var_163;
            $var_161->var_21        = $var_156->var_21;
            $var_161->var_164         = $var_156->var_164;
            $var_161->save();
            
            flash('message', gt("The discount code has been applied to your cart."));
        } else {
            flash('error', $var_159);
        }
        
        expHistory::back();
    }

    function fn_25($var_11 = null, $var_165 = true) {
        
        if ($var_11 == null) $var_11 = $var_7->var_19['id'];
        $var_161 = new class_12($var_11);
        $var_161->delete();
        flash('message', gt("The discount code has been removed from your cart"));
        if ($var_165 == true) {
            
            expHistory::back();
        }
    }

    function fn_24($var_166) {
        global $var_24;
        $var_167 = $var_24->getOrderDiscounts();
        if (count($var_167) == 0) return false;

        foreach ($var_167 as $var_168) {
            if ($var_166 == $var_168->var_162) return true;
        }
        return false;
    }












    
    
    private function fn_26() {
        
        
        
        global $var_24;
        
        $var_54 = $var_24->var_26;
        foreach ($var_24->var_26 as $var_25) {
            $var_25->delete();
        }
        $var_24->var_26 = array();
        $var_24->refresh();
        foreach ($var_54 as $var_25) {

            for ($var_169 = 1; $var_169 <= $var_25->var_13; $var_169++) {
                $var_8   = $var_25->var_8;
                $var_170     = $var_8->getBasePrice();
                $var_172 = $var_170;
                $var_173   = array();
                if (!empty($var_25->var_90)) {
                    foreach ($var_25->var_90 as $var_174) {
                        $var_153 = $var_174[2] == '$' ? $var_174[4] : $var_172 * ($var_174[4] * 0.01);
                        $var_153 = $var_174[3] == '+' ? $var_153 : $var_153 * -1;
                        $var_170 += $var_153;
                        $var_173[] = $var_174;
                    }
                }
                $var_19['options']        = serialize($var_173);
                $var_19['products_price'] = $var_170;
                $var_19['product_id']     = $var_8->var_11;
                $var_19['product_type']   = $var_8->var_6;

                $var_175 = new class_4($var_19);
                
                $var_175->var_176 = $var_170;
                $var_175->var_173        = serialize($var_173);

                $var_79                          = $var_24->getCurrentShippingMethod();
                $var_175->var_144 = $var_79->var_11;
                $var_175->save();
                $var_24->refresh();
            }
        }
        $var_24->save();
        
        return true;

    }

    public function fn_27() {
        global $var_24;
        foreach ($var_24->var_26 as $var_41) {
            $var_41->delete();
        }
        flash('message', gt('Your shopping cart is now empty.'));
        expHistory::back();
    }









    
    function fn_28() {
        global $var_5;

        if (empty($var_5->var_19['action'])) return false;

        
        $var_179 = $var_5->var_19['action'];
        $var_178 = array('title' => '', 'keywords' => '', 'description' => '', 'canonical' => '', 'noindex' => true, 'nofollow' => true);
        $var_180 = ecomconfig::getConfig('storename');
        switch ($var_179) {
            default:
                $var_178['title'] = gt("Shopping Cart") . " - " . $var_180;
                $var_178['keywords'] = var_181;
                $var_178['description'] = var_182;


        }

        return $var_178;
    }

}

?>