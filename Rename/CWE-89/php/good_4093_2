<?php






class class_0 extends var_1 {

   public function fn_0() {
      $var_2 = new \var_0;
      
      $var_3->boolean($var_2->getFromDB(getItemByTypeName('Calendar', 'Default', true)))->isTrue();

      
      $var_7 = $var_2->ComputeEndDate("2018-11-19 10:00:00", 7 * var_9, 0, true);
      $var_3->string($var_7)->isEqualTo("2018-11-28 10:00:00");
      
      $var_7 = $var_2->ComputeEndDate("2018-11-19 10:00:00", 7 * var_9, 0, true, true);
      $var_3->string($var_7)->isEqualTo("2018-11-28 20:00:00");

      
      $var_7 = $var_2->ComputeEndDate("2018-11-19 10:00:00", -7 * var_9, 0, true);
      $var_3->string($var_7)->isEqualTo("2018-11-08 10:00:00");
      
      $var_7 = $var_2->ComputeEndDate("2018-11-19 10:00:00", -7 * var_9, 0, true, true);
      $var_3->string($var_7)->isEqualTo("2018-11-08 20:00:00");
   }

   protected function fn_1() {
      return [
         [
            'start'  => '2019-01-01 07:00:00',
            'end'    => '2019-01-01 09:00:00',
            'value'  => var_12
         ], [
            'start'  => '2019-01-01 06:00:00',
            'end'    => '2019-01-01 07:00:00',
            'value'  => 0
         ], [
            'start'  => '2019-01-01 00:00:00',
            'end'    => '2019-01-08 00:00:00',
            'value'  => 12 * var_12 * 5
         ], [
            'start'  => '2019-01-08 00:00:00',
            'end'    => '2019-01-01 00:00:00',
            'value'  => 0
         ], [
            'start'  => '2019-01-01 07:00:00',
            'end'    => '2019-01-01 09:00:00',
            'value'  => var_12 * 2,
            'day'    => true
         ], [
            'start'  => '2019-01-01 00:00:00',
            'end'    => '2019-01-08 00:00:00',
            'value'  => var_13,
            'day'    => true
         ]
      ];
   }

   
   public function fn_2($var_14, $var_15, $var_16, $var_17 = false) {
      $var_2 = new \var_0();
      $var_3->boolean($var_2->getFromDB(1))->isTrue(); 

      $var_3->variable(
         $var_2->getActiveTimeBetween(
            $var_14,
            $var_15,
            $var_17
         )
      )->isEqualTo($var_16);
   }

   protected function fn_3() {
      return [
         ['2019-01-01 00:00:00', true],
         ['2019-01-02 00:00:00', true],
         ['2019-01-03 00:00:00', true],
         ['2019-01-04 00:00:00', true],
         ['2019-01-05 00:00:00', false],
         ['2019-01-06 00:00:00', false]
      ];
   }

   
   public function fn_4($var_20, $var_21) {
      $var_2 = new \var_0();
      $var_3->boolean($var_2->getFromDB(1))->isTrue(); 

      $var_3->boolean($var_2->isAWorkingDay(strtotime($var_20)))->isIdenticalTo($var_21);
   }

   public function fn_5() {
      $var_2 = new \var_0();
      $var_3->boolean($var_2->getFromDB(1))->isTrue(); 
      $var_3->boolean($var_2->hasAWorkingDay())->isTrue();

      $var_25 = $var_2->add([
         'name'   => 'Test'
      ]);
      $var_3->integer($var_25)->isGreaterThan(0);
      $var_3->boolean($var_2->getFromDB($var_25));
      $var_3->boolean($var_2->hasAWorkingDay())->isFalse();
   }

   protected function fn_6() {
      return [
         ['2019-01-01 00:00:00', false],
         ['2019-01-02 08:30:00', true],
         ['2019-01-03 18:10:00', true],
         ['2019-01-04 21:00:00', false],
         ['2019-01-05 08:30:00', false],
         ['2019-01-06 00:00:00', false]
      ];
   }

   
   public function fn_7($var_20, $var_21) {
      $var_2 = new \var_0();
      $var_3->boolean($var_2->getFromDB(1))->isTrue(); 

      $var_3->boolean($var_2->isAWorkingHour(strtotime($var_20)))->isIdenticalTo($var_21);
   }

   private function fn_8(\var_0 $var_2) {
      $var_32 = new \var_33();
      $var_3->integer(
         (int)$var_32->add([
            'calendars_id' => $var_2->fields['id'],
            'holidays_id'  => getItemByTypeName('Holiday', 'X-Mas', true)
         ])
      )->isGreaterThan(0);

      $var_3->fn_9($var_2);
   }

   private function fn_9(\var_0 $var_2) {
      $var_3->boolean(
         $var_2->isHoliday('2018-01-01')
      )->isFalse();

      $var_3->boolean(
         $var_2->isHoliday('2019-01-01')
      )->isTrue();
   }

   public function fn_10() {
      $var_2 = new \var_0();
      
      $var_3->boolean($var_2->getFromDB(getItemByTypeName('Calendar', 'Default', true)))->isTrue();

      $var_3->fn_8($var_2);

      $var_36= [
         '2019-05-01'   => true,
         '2019-05-02'   => false,
         '2019-07-01'   => false,
         '2019-07-12'   => true
      ];

      
      foreach (array_keys($var_36) as $var_20) {
         $var_3->boolean($var_2->isHoliday($var_20))->var_29;
      }

      
      $var_32 = new \var_33();
      $var_37 = new \var_38();
      $var_39 = (int)$var_37->add([
         'name'         => '1st of may',
         'entities_id'  => 0,
         'is_recursive' => 1,
         'begin_date'   => '2019-05-01',
         'end_date'     => '2019-05-01',
         'is_perpetual' => 1
      ]);
      $var_3->integer($var_39)->isGreaterThan(0);
      $var_3->integer(
         (int)$var_32->add([
            'holidays_id'  => $var_39,
            'calendars_id' => $var_2->fields['id']
         ])
      )->isGreaterThan(0);

      $var_39 = (int)$var_37->add([
         'name'   => 'Summer vacations',
         'entities_id'  => 0,
         'is_recursive' => 1,
         'begin_date'   => '2019-07-08',
         'end_date'     => '2019-09-01',
         'is_perpetual' => 0
      ]);
      $var_3->integer($var_39)->isGreaterThan(0);
      $var_3->integer(
         (int)$var_32->add([
            'holidays_id'  => $var_39,
            'calendars_id' => $var_2->fields['id']
         ])
      )->isGreaterThan(0);

      foreach ($var_36 as $var_20 => $var_21) {
         $var_3->boolean($var_2->isHoliday($var_20))->isIdenticalTo($var_21);
      }
   }

   public function fn_11() {
      $var_2 = new \var_0();
      $var_40 = getItemByTypeName('Calendar', 'Default', true);
      
      $var_3->boolean($var_2->getFromDB($var_40))->isTrue();
      $var_3->fn_8($var_2);

      $var_41 = $var_2->clone();
      $var_3->integer($var_41)->isGreaterThan($var_40);
      $var_3->boolean($var_2->getFromDB($var_41))->isTrue();
      
      $var_3->fn_9($var_2);

      
      $var_3->boolean($var_2->update(['id' => $var_41, 'name' => "Je s\'apelle Groot"]))->isTrue();

      $var_2 = new \var_0();
      $var_3->boolean($var_2->getFromDB($var_41))->isTrue();

      $var_3->boolean($var_2->duplicate())->isTrue();
      $var_45 = $var_2->fields['id'];
      $var_3->integer($var_45)->isGreaterThan($var_41);
      $var_3->boolean($var_2->getFromDB($var_45))->isTrue();
      
      $var_3->fn_9($var_2);

   }
}
