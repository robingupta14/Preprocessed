<?php






class var_0 extends var_1
{
    
    const var_2 = 'abcdefghijklmnopqrstuvwxyz';

    
    const var_3 = 'abcdefghijklmnopqrstuvwxyz0123456789_';

    private $var_4;
    private $var_5;
    private $var_6;
    private $var_7;
    private $var_8;
    private $var_9 = ['instance', 'class', 'this'];
    private $var_10;
    private $var_11;
    private $var_12;
    private $var_13;
    private $var_14;
    private $var_15;
    private $var_16;
    private $var_17;
    private $var_18;
    private $var_19;
    private $var_20 = [];
    private $var_21 = [];

    
    private $var_22;

    
    public function fn_0(var_23 $var_24)
    {
        if (!$var_24->isCompiled()) {
            @trigger_error('Dumping an uncompiled ContainerBuilder is deprecated since Symfony 3.3 and will not be supported anymore in 4.0. Compile the container beforehand.', var_26);
        }

        parent::fn_0($var_24);
    }

    
    public function fn_1(var_27 $var_22)
    {
        $var_28->var_22 = $var_22;
    }

    
    public function var_29(array $var_30 = [])
    {
        $var_28->var_11 = null;
        $var_28->var_20 = [];
        $var_30 = array_merge([
            'class' => 'ProjectServiceContainer',
            'base_class' => 'Container',
            'namespace' => '',
            'as_files' => false,
            'debug' => true,
            'hot_path_tag' => 'container.hot_path',
            'inline_class_loader_parameter' => 'container.dumper.inline_class_loader',
            'build_time' => time(),
        ], $var_30);

        $var_28->var_16 = $var_30['namespace'];
        $var_28->var_17 = $var_30['as_files'];
        $var_28->var_18 = $var_30['hot_path_tag'];
        $var_28->var_19 = $var_30['inline_class_loader_parameter'] && $var_28->var_24->hasParameter($var_30['inline_class_loader_parameter']) && $var_28->var_24->getParameter($var_30['inline_class_loader_parameter']);

        if (0 !== strpos($var_33 = $var_30['base_class'], '\\') && 'Container' !== $var_33) {
            $var_33 = sprintf('%s\%s', $var_30['namespace'] ? '\\'.$var_30['namespace'] : '', $var_33);
            $var_34 = $var_33;
        } elseif ('Container' === $var_33) {
            $var_34 = var_35\var_36\var_37\var_38::var_39;
        } else {
            $var_34 = $var_33;
        }

        $var_28->fn_2('Container' === $var_33 ? var_35\var_36\var_37\var_38::var_39 : $var_33);

        if ($var_28->fn_3() instanceof var_42) {
            (new class_1(true, false))->process($var_28->var_24);
            try {
                (new class_2())->process($var_28->var_24);
            } catch (var_44 $var_45) {}
        }

        (new class_1(false, !$var_28->fn_3() instanceof var_42))->process($var_28->var_24);
        $var_46 = [];
        $var_28->var_21 = [];
        foreach ($var_28->var_24->getCompiler()->getServiceReferenceGraph()->getNodes() as $var_50 => $var_51) {
            if (!$var_51->getValue() instanceof var_53) {
                continue;
            }
            if (!isset($var_46[$var_50])) {
                $var_28->fn_4($var_50, $var_51->getOutEdges(), $var_46);
            }
        }
        $var_28->var_24->getCompiler()->getServiceReferenceGraph()->clear();
        $var_46 = [];

        $var_28->var_13 = $var_30['debug'] ? '*' : '';

        if (!empty($var_30['file']) && is_dir($var_57 = \var_58($var_30['file']))) {
            
            
            

            $var_57 = explode(\var_59, realpath($var_57));
            $var_60 = \var_61($var_57);

            if (3 <= $var_60) {
                $var_62 = '';
                $var_63 = $var_60 > 8 ? $var_60 - 5 : 3;
                $var_28->var_12 = $var_60 - $var_63;

                while (--$var_60 >= $var_63) {
                    $var_62 = sprintf('(%s%s)?', preg_quote(\var_59.$var_57[$var_60], '
                }

                do {
                    $regex = preg_quote(\DIRECTORY_SEPARATOR.$dir[$i], '
                } while (0 < --$var_60);

                $var_28->var_11 = '
            }
        }

        $code =
            $this->startClass($options['var_39'], $var_33, $var_34).
            $var_28->fn_5().
            $var_28->fn_6().
            $var_28->fn_7()
        ;

        if ($var_28->var_17) {
            $var_67 = <<<EOF
<?php




EOF;
            $var_68 = [];

            if ($var_69 = array_keys($var_28->var_24->getRemovedIds())) {
                sort($var_69);
                $var_71 = "<?php\n\nreturn [\n";
                foreach ($var_69 as $var_50) {
                    $var_71 .= '    '.$var_28->fn_8($var_50)." => true,\n";
                }
                $var_68['removed-ids.php'] = $var_71 .= "];\n";
            }

            foreach ($var_28->fn_9() as $var_74 => $var_71) {
                $var_68[$var_74] = $var_67.$var_71;
            }
            foreach ($var_28->fn_10() as $var_74 => $var_71) {
                $var_68[$var_74] = "<?php\n".$var_71;
            }
            $var_68[$var_30['class'].'.php'] = $var_76;
            $var_77 = ucfirst(strtr(var_35\var_36\var_37\var_23::hash($var_68), '._', 'xx'));
            $var_76 = [];

            foreach ($var_68 as $var_74 => $var_71) {
                $var_76["Container{$var_77}/{$var_74}"] = $var_71;
            }
            array_pop($var_76);
            $var_76["Container{$var_77}/{$var_30['class']}.php"] = substr_replace($var_68[$var_30['class'].'.php'], "<?php\n\nnamespace Container{$var_77};\n", 0, 6);
            $var_78 = $var_28->var_16 ? "\nnamespace {$var_28->var_16};\n" : '';
            $var_79 = $var_30['build_time'];
            $var_50 = hash('crc32', $var_77.$var_79);

            $var_76[$var_30['class'].'.php'] = <<<EOF
<?php
{$var_78}


if (\\class_exists(\\Container{$var_77}\\{$var_30['class']}::class, false)) {
    
} elseif (!include __DIR__.'/Container{$var_77}/{$var_30['class']}.php') {
    touch(__DIR__.'/Container{$var_77}.legacy');

    return;
}

if (!\\class_exists({$var_30['class']}::class, false)) {
    \\class_alias(\\Container{$var_77}\\{$var_30['class']}::class, {$var_30['class']}::class, false);
}

return new \\Container{$var_77}\\{$var_30['class']}([
    'container.build_hash' => '$var_77',
    'container.build_id' => '$var_50',
    'container.build_time' => $var_79,
], __DIR__.\\DIRECTORY_SEPARATOR.'Container{$var_77}');

EOF;
        } else {
            foreach ($var_28->fn_10() as $var_71) {
                $var_76 .= $var_71;
            }
        }

        $var_28->var_11 = null;
        $var_28->var_20 = [];
        $var_28->var_21 = [];

        $var_80 = [];
        foreach ($var_28->var_24->getEnvCounters() as $var_82 => $var_83) {
            if (!$var_83) {
                $var_80[] = $var_82;
            }
        }
        if ($var_80) {
            throw new class_3($var_80, null, 'Environment variables "%s" are never used. Please, check your container\'s configuration.');
        }

        return $var_76;
    }

    
    private function fn_3()
    {
        if (!$var_28->var_22) {
            $var_28->var_22 = new class_0();
        }

        return $var_28->var_22;
    }

    private function fn_4($var_84, array $var_85, &$var_46, &$var_86 = [])
    {
        $var_46[$var_84] = true;
        $var_86[$var_84] = $var_84;

        foreach ($var_85 as $var_87) {
            $var_51 = $var_87->getDestNode();
            $var_50 = $var_51->getId();

            if (!$var_51->getValue() instanceof var_53 || $var_84 === $var_50 || $var_87->isLazy() || $var_87->isWeak()) {
                
            } elseif (isset($var_86[$var_50])) {
                $var_92 = $var_50;
                foreach (array_reverse($var_86) as $var_93) {
                    $var_28->var_21[$var_93][$var_92] = $var_92;
                    if ($var_93 === $var_50) {
                        break;
                    }
                    $var_92 = $var_93;
                }
            } elseif (!isset($var_46[$var_50])) {
                $var_28->fn_4($var_50, $var_51->getOutEdges(), $var_46, $var_86);
            } elseif (isset($var_28->var_21[$var_50])) {
                $var_28->fn_11($var_50, $var_86);
            }
        }
        unset($var_86[$var_84]);
    }

    private function fn_11($var_84, &$var_86, &$var_95 = [])
    {
        $var_95[$var_84] = $var_84;
        $var_86[$var_84] = $var_84;

        foreach ($var_28->var_21[$var_84] as $var_50) {
            if (isset($var_86[$var_50])) {
                $var_92 = $var_50;
                foreach (array_reverse($var_86) as $var_93) {
                    $var_28->var_21[$var_93][$var_92] = $var_92;
                    if ($var_93 === $var_50) {
                        break;
                    }
                    $var_92 = $var_93;
                }
            } elseif (!isset($var_95[$var_50]) && isset($var_28->var_21[$var_50])) {
                $var_28->fn_11($var_50, $var_86, $var_95);
            }
        }
        unset($var_86[$var_84]);
        unset($var_95[$var_84]);
    }

    private function fn_12($var_39, array &$var_97)
    {
        if (isset($var_97[$var_39])) {
            return;
        }
        if (!$var_98 = $var_28->var_24->getReflectionClass($var_39, false)) {
            return;
        }
        if ($var_28->var_24 instanceof $var_39) {
            return;
        }
        $var_74 = $var_98->getFileName();
        if (!$var_74 || $var_28->fn_8($var_74) === $var_101 = $var_28->fn_13($var_74)) {
            return;
        }

        if ($var_103 = $var_98->getParentClass()) {
            $var_28->fn_12($var_103->var_105, $var_97);
        }

        foreach ($var_98->getInterfaces() as $var_103) {
            $var_28->fn_12($var_103->var_105, $var_97);
        }

        foreach ($var_98->getTraits() as $var_103) {
            $var_28->fn_12($var_103->var_105, $var_97);
        }

        $var_97[$var_39] = substr($var_101, 1, -1);
    }

    private function fn_10()
    {
        $var_108 = [];
        $var_109 = $var_28->var_24->getDefinitions();
        $var_111 = '' === $var_28->var_13 && method_exists('Symfony\Component\HttpKernel\Kernel', 'stripComments');
        $var_22 = $var_28->fn_3();
        ksort($var_109);
        foreach ($var_109 as $var_112) {
            if (!$var_22->isProxyCandidate($var_112)) {
                continue;
            }
            if (isset($var_108[$var_39 = $var_112->getClass()])) {
                continue;
            }
            $var_108[$var_39] = true;
            
            $var_28->var_24->getReflectionClass($var_39);
            if ("\n" === $var_115 = "\n".$var_22->getProxyCode($var_112)) {
                continue;
            }
            if ($var_111) {
                $var_115 = "<?php\n".$var_115;
                $var_115 = substr(var_35\var_36\var_117\var_118::stripComments($var_115), 5);
            }
            yield sprintf('%s.php', explode(' ', $var_115, 3)[1]) => $var_115;
        }
    }

    
    private function fn_14($var_120, var_53 $var_112)
    {
        $var_76 = '';

        if ($var_28->var_19 && !$var_28->fn_15($var_112)) {
            $var_97 = [];
            foreach ($var_28->var_7 as $var_122) {
                if (!$var_122->isDeprecated() && \var_124($var_39 = \var_125($var_126 = $var_122->getFactory()) && \var_124($var_126[0]) ? $var_126[0] : $var_122->getClass())) {
                    $var_28->fn_12($var_39, $var_97);
                }
            }

            foreach ($var_28->var_8 as $var_50 => list($var_128, $var_129)) {
                if ('service_container' !== $var_50 && $var_50 !== $var_120
                    && var_35\var_36\var_37\var_130::var_131 !== $var_129
                    && $var_28->var_24->has($var_50)
                    && $var_28->fn_16($var_122 = $var_28->var_24->findDefinition($var_50))
                    && \var_124($var_39 = \var_125($var_126 = $var_122->getFactory()) && \var_124($var_126[0]) ? $var_126[0] : $var_122->getClass())
                ) {
                    $var_28->fn_12($var_39, $var_97);
                }
            }

            foreach (array_diff_key(array_flip($var_97), $var_28->var_20) as $var_74 => $var_39) {
                $var_76 .= sprintf("        include_once %s;\n", $var_74);
            }
        }

        foreach ($var_28->var_7 as $var_122) {
            if ($var_74 = $var_122->getFile()) {
                $var_76 .= sprintf("        include_once %s;\n", $var_28->fn_17($var_74));
            }
        }

        if ('' !== $var_76) {
            $var_76 .= "\n";
        }

        return $var_76;
    }

    
    private function fn_18($var_50, var_53 $var_112, $var_138)
    {
        $var_39 = $var_28->fn_17($var_112->getClass());

        if (0 === strpos($var_39, "'") && false === strpos($var_39, '$') && !preg_match('/^\'(?:\\\{2})?[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*(?:\\\{2}[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)*\'$/', $var_39)) {
            throw new class_4(sprintf('"%s" is not a valid class name for the "%s" service.', $var_39, $var_50));
        }

        $var_113 = $var_28->fn_3()->isProxyCandidate($var_112);
        $var_139 = '';

        if (!$var_113 && $var_112->isShared()) {
            $var_139 = "\$this->services['$var_50'] = ".($var_138 ? '' : '$instance');
        } elseif (!$var_138) {
            $var_139 = '$instance';
        }

        $var_141 = '';
        if ($var_138) {
            $var_141 = 'return ';
        } else {
            $var_139 .= ' = ';
        }

        return $var_28->fn_19($var_112, $var_141, $var_139, $var_50);
    }

    
    private function fn_16(var_53 $var_112)
    {
        if ($var_112->isSynthetic() || $var_112->getFile() || $var_112->getMethodCalls() || $var_112->getProperties() || $var_112->getConfigurator()) {
            return false;
        }
        if ($var_112->isDeprecated() || $var_112->isLazy() || $var_112->getFactory() || 3 < \var_61($var_112->getArguments())) {
            return false;
        }

        foreach ($var_112->getArguments() as $var_148) {
            if (!$var_148 || $var_148 instanceof var_149) {
                continue;
            }
            if (\var_125($var_148) && 3 >= \var_61($var_148)) {
                foreach ($var_148 as $var_150 => $var_151) {
                    if ($var_28->fn_17($var_150) !== $var_28->fn_17($var_150, false)) {
                        return false;
                    }
                    if (!$var_151 || $var_151 instanceof var_149) {
                        continue;
                    }
                    if ($var_151 instanceof var_152 && $var_28->var_24->has($var_50 = (string) $var_151) && $var_28->var_24->findDefinition($var_50)->isSynthetic()) {
                        continue;
                    }
                    if (!is_scalar($var_151) || $var_28->fn_17($var_151) !== $var_28->fn_17($var_151, false)) {
                        return false;
                    }
                }
            } elseif ($var_148 instanceof var_152 && $var_28->var_24->has($var_50 = (string) $var_148) && $var_28->var_24->findDefinition($var_50)->isSynthetic()) {
                continue;
            } elseif (!is_scalar($var_148) || $var_28->fn_17($var_148) !== $var_28->fn_17($var_148, false)) {
                return false;
            }
        }

        return true;
    }

    
    private function fn_20(var_53 $var_112, $var_154 = 'instance')
    {
        $var_155 = '';
        foreach ($var_112->getMethodCalls() as $var_156) {
            $var_157 = [];
            foreach ($var_156[1] as $var_158) {
                $var_157[] = $var_28->fn_17($var_158);
            }

            $var_155 .= $var_28->fn_21($var_156[1], sprintf("        \$%s->%s(%s);\n", $var_154, $var_156[0], implode(', ', $var_157)));
        }

        return $var_155;
    }

    private function fn_22(var_53 $var_112, $var_154 = 'instance')
    {
        $var_76 = '';
        foreach ($var_112->getProperties() as $var_105 => $var_158) {
            $var_76 .= sprintf("        \$%s->%s = %s;\n", $var_154, $var_105, $var_28->fn_17($var_158));
        }

        return $var_76;
    }

    
    private function fn_23(var_53 $var_112, $var_154 = 'instance')
    {
        if (!$var_162 = $var_112->getConfigurator()) {
            return '';
        }

        if (\var_125($var_162)) {
            if ($var_162[0] instanceof var_152
                || ($var_162[0] instanceof var_53 && $var_28->var_4->contains($var_162[0]))
            ) {
                return sprintf("        %s->%s(\$%s);\n", $var_28->fn_17($var_162[0]), $var_162[1], $var_154);
            }

            $var_39 = $var_28->fn_17($var_162[0]);
            
            if (0 === strpos($var_39, "'") && false === strpos($var_39, '$')) {
                return sprintf("        %s::%s(\$%s);\n", $var_28->fn_24($var_39), $var_162[1], $var_154);
            }

            if (0 === strpos($var_39, 'new ')) {
                return sprintf("        (%s)->%s(\$%s);\n", $var_28->fn_17($var_162[0]), $var_162[1], $var_154);
            }

            return sprintf("        \\call_user_func([%s, '%s'], \$%s);\n", $var_28->fn_17($var_162[0]), $var_162[1], $var_154);
        }

        return sprintf("        %s(\$%s);\n", $var_162, $var_154);
    }

    
    private function fn_25($var_50, var_53 $var_112, &$var_74 = null)
    {
        $var_28->var_4 = new \var_166();
        $var_28->var_5 = [];
        $var_28->var_6 = 0;
        $var_28->var_5[$var_50] = new class_6('instance');

        $var_141 = [];

        if ($var_39 = $var_112->getClass()) {
            $var_39 = $var_39 instanceof var_149 ? '%'.$var_39.'%' : $var_28->var_24->resolveEnvPlaceholders($var_39);
            $var_141[] = sprintf(0 === strpos($var_39, '%') ? '@return object A %1$s instance' : '@return \%s', ltrim($var_39, '\\'));
        } elseif ($var_112->getFactory()) {
            $var_126 = $var_112->getFactory();
            if (\var_124($var_126)) {
                $var_141[] = sprintf('@return object An instance returned by %s()', $var_126);
            } elseif (\var_125($var_126) && (\var_124($var_126[0]) || $var_126[0] instanceof var_53 || $var_126[0] instanceof var_152)) {
                $var_39 = $var_126[0] instanceof var_53 ? $var_126[0]->getClass() : (string) $var_126[0];
                $var_39 = $var_39 instanceof var_149 ? '%'.$var_39.'%' : $var_28->var_24->resolveEnvPlaceholders($var_39);
                $var_141[] = sprintf('@return object An instance returned by %s::%s()', $var_39, $var_126[1]);
            }
        }

        if ($var_112->isDeprecated()) {
            if ($var_141 && 0 === strpos($var_141[\var_61($var_141) - 1], '@return')) {
                $var_141[] = '';
            }

            $var_141[] = sprintf('@deprecated %s', $var_112->getDeprecationMessage($var_50));
        }

        $var_141 = str_replace("\n     * \n", "\n     *\n", implode("\n     * ", $var_141));
        $var_141 = $var_28->var_24->resolveEnvPlaceholders($var_141);

        $var_170 = $var_112->isShared() ? ' shared' : '';
        $var_171 = $var_112->isPublic() ? 'public' : 'private';
        $var_173 = $var_112->isAutowired() ? ' autowired' : '';

        if ($var_112->isLazy()) {
            unset($var_28->var_21[$var_50]);
            $var_175 = '$lazyLoad = true';
        } else {
            $var_175 = '';
        }

        $var_176 = $var_28->var_17 && $var_112->isShared() && !$var_28->fn_15($var_112);
        $var_177 = $var_28->fn_26($var_50);
        if ($var_176) {
            $var_74 = $var_177.'.php';
            $var_76 = "        
        } else {
            $var_76 = <<<EOF

    
    protected function {$var_177}($var_175)
    {

EOF;
        }

        $var_28->var_8 = [];
        $var_28->var_7 = $var_28->var_179([$var_112], null, $var_28->var_8);

        $var_76 .= $var_28->var_119($var_50, $var_112);

        if ($var_28->var_41()->isProxyCandidate($var_112)) {
            $var_180 = $var_176 ? "\$var_28->var_181('%s.php', false)" : '$var_28->%s(false)';
            $var_76 .= $var_28->var_41()->getProxyFactoryCode($var_112, $var_50, sprintf($var_180, $var_177));
        }

        if ($var_112->var_123()) {
            $var_76 .= sprintf("        @var_182(%var_183, var_26);\var_184\var_184", $var_28->var_102($var_112->var_169($var_50)));
        }

        $var_76 .= $var_28->var_185($var_50, $var_112);

        if ($var_176) {
            $var_76 = implode("\var_184", array_map(function ($var_186) { return $var_186 ? substr($var_186, 8) : $var_186; }, explode("\n", $var_76)));
        } else {
            $var_76 .= "    }\n";
        }

        $var_28->var_4 = $var_28->var_7 = null;
        $var_28->var_5 = $var_28->var_8 = null;

        return $var_76;
    }

    private function fn_29($var_50, var_53 $var_112, array $var_157, $var_188)
    {
        $var_76 = '';

        foreach ($var_157 as $var_189) {
            if (\var_125($var_189)) {
                $var_76 .= $var_28->fn_29($var_50, $var_112, $var_189, $var_188);
            } elseif ($var_189 instanceof var_152) {
                $var_76 .= $var_28->fn_30($var_50, $var_112, $var_28->var_24->normalizeId($var_189), $var_188);
            } elseif ($var_189 instanceof var_53) {
                $var_76 .= $var_28->fn_28($var_50, $var_112, $var_189, $var_188);
            }
        }

        return $var_76;
    }

    private function fn_30($var_50, var_53 $var_112, $var_192, $var_188)
    {
        list($var_128, $var_129) = $var_28->var_8[$var_192];

        while ($var_28->var_24->hasAlias($var_192)) {
            $var_192 = (string) $var_28->var_24->getAlias($var_192);
        }

        if ($var_50 === $var_192) {
            return $var_28->fn_28($var_50, $var_112, $var_112);
        }

        if ('service_container' === $var_192 || isset($var_28->var_5[$var_192])) {
            return '';
        }

        $var_195 = isset($var_28->var_21[$var_50][$var_192]);
        $var_188 = $var_188 && !isset($var_28->var_4[$var_112]);
        $var_76 = $var_195 && !$var_188 ? $var_28->fn_28($var_50, $var_112, $var_112) : '';

        if (isset($var_28->var_5[$var_192]) || (2 > $var_128 && (!$var_195 || !$var_188))) {
            return $var_76;
        }

        $var_105 = $var_28->fn_31();
        $var_28->var_5[$var_192] = new class_6($var_105);

        $var_197 = var_35\var_36\var_37\var_130::var_198 >= $var_129 ? new class_5($var_192, $var_129) : null;
        $var_76 .= sprintf("        \$%s = %s;\n", $var_105, $var_28->fn_32($var_192, $var_197));

        if (!$var_195 || !$var_188) {
            return $var_76;
        }

        $var_76 .= sprintf(<<<'EOTXT'

        if (isset($this->%s['%s'])) {
            return $this->%1$s['%2$s'];
        }

EOTXT
            ,
            'services',
            $var_50
        );

        return $var_76;
    }

    private function fn_28($var_50, var_53 $var_112, var_53 $var_200 = null, $var_188 = true)
    {
        $var_138 = $var_201 = null === $var_200;

        if (isset($var_28->var_4[$var_200 = $var_200 ?: $var_112])) {
            return '';
        }

        $var_157 = [$var_200->getArguments(), $var_200->getFactory()];

        $var_76 = $var_28->fn_29($var_50, $var_112, $var_157, $var_188);

        if ($var_157 = array_filter([$var_200->getProperties(), $var_200->getMethodCalls(), $var_200->getConfigurator()])) {
            $var_138 = false;
        } elseif ($var_112 !== $var_200 && 2 > $var_28->var_7[$var_200]) {
            return $var_76;
        }

        if (isset($var_28->var_4[$var_200])) {
            $var_138 = false;
        } else {
            $var_105 = $var_112 === $var_200 ? 'instance' : $var_28->fn_31();
            $var_28->var_4[$var_200] = new class_6($var_105);
            $var_76 .= '' !== $var_76 ? "\n" : '';

            if ('instance' === $var_105) {
                $var_76 .= $var_28->fn_18($var_50, $var_112, $var_138);
            } else {
                $var_76 .= $var_28->fn_19($var_200, '$'.$var_105, ' = ', $var_50);
            }

            if ('' !== $var_202 = $var_28->fn_29($var_50, $var_112, $var_157, false)) {
                $var_76 .= "\n".$var_202."\n";
            } elseif ($var_157 && 'instance' === $var_105) {
                $var_76 .= "\n";
            }

            $var_76 .= $var_28->fn_22($var_200, $var_105);
            $var_76 .= $var_28->fn_20($var_200, $var_105);
            $var_76 .= $var_28->fn_23($var_200, $var_105);
        }

        if ($var_201 && !$var_138) {
            $var_76 .= "\n        return \$instance;\n";
        }

        return $var_76;
    }

    
    private function fn_5()
    {
        $var_203 = $var_204 = '';
        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if ($var_112->isSynthetic() || ($var_28->var_17 && $var_112->isShared() && !$var_28->fn_15($var_112))) {
                continue;
            }
            if ($var_112->isPublic()) {
                $var_203 .= $var_28->fn_25($var_50, $var_112);
            } else {
                $var_204 .= $var_28->fn_25($var_50, $var_112);
            }
        }

        return $var_203.$var_204;
    }

    private function fn_9()
    {
        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if (!$var_112->isSynthetic() && $var_112->isShared() && !$var_28->fn_15($var_112)) {
                $var_76 = $var_28->fn_25($var_50, $var_112, $var_74);
                yield $var_74 => $var_76;
            }
        }
    }

    private function fn_19(var_53 $var_112, $var_141, $var_139, $var_50)
    {
        $var_39 = $var_28->fn_17($var_112->getClass());
        $var_141 = '        '.$var_141.$var_139;

        $var_157 = [];
        foreach ($var_112->getArguments() as $var_158) {
            $var_157[] = $var_28->fn_17($var_158);
        }

        if (null !== $var_112->getFactory()) {
            $var_162 = $var_112->getFactory();
            if (\var_125($var_162)) {
                if (!preg_match('/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/', $var_162[1])) {
                    throw new class_7(sprintf('Cannot dump definition because of invalid factory method (%s)', $var_162[1] ?: 'n/a'));
                }

                if ($var_162[0] instanceof var_152
                    || ($var_162[0] instanceof var_53 && $var_28->var_4->contains($var_162[0]))) {
                    return $var_141.sprintf("%s->%s(%s);\n", $var_28->fn_17($var_162[0]), $var_162[1], $var_157 ? implode(', ', $var_157) : '');
                }

                $var_39 = $var_28->fn_17($var_162[0]);
                
                if (0 === strpos($var_39, "'") && false === strpos($var_39, '$')) {
                    if ("''" === $var_39) {
                        throw new class_7(sprintf('Cannot dump definition: The "%s" service is defined to be created by a factory but is missing the service reference, did you forget to define the factory service id or class?', $var_50));
                    }

                    return $var_141.sprintf("%s::%s(%s);\n", $var_28->fn_24($var_39), $var_162[1], $var_157 ? implode(', ', $var_157) : '');
                }

                if (0 === strpos($var_39, 'new ')) {
                    return $var_141.sprintf("(%s)->%s(%s);\n", $var_39, $var_162[1], $var_157 ? implode(', ', $var_157) : '');
                }

                return $var_141.sprintf("\\call_user_func([%s, '%s']%s);\n", $var_39, $var_162[1], $var_157 ? ', '.implode(', ', $var_157) : '');
            }

            return $var_141.sprintf("%s(%s);\n", $var_28->fn_24($var_28->fn_17($var_162)), $var_157 ? implode(', ', $var_157) : '');
        }

        if (false !== strpos($var_39, '$')) {
            return sprintf("        \$class = %s;\n\n%snew \$class(%s);\n", $var_39, $var_141, implode(', ', $var_157));
        }

        return $var_141.sprintf("new %s(%s);\n", $var_28->fn_24($var_39), implode(', ', $var_157));
    }

    
    private function fn_33($var_39, $var_33, $var_34)
    {
        $var_205 = $var_28->var_24->isCompiled() ? 'use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;' : 'use Symfony\Component\DependencyInjection\ParameterBag\\ParameterBag;';
        $var_78 = !$var_28->var_17 && $var_28->var_16 ? "\nnamespace {$var_28->var_16};\n" : '';

        $var_76 = <<<EOF
<?php
$var_78
$var_205


class $var_39 extends $var_33
{
    private \$parameters;
    private \$targetDirs = [];

    public function __construct()
    {

EOF;
        if (null !== $var_28->var_11) {
            $var_57 = $var_28->var_17 ? '$this->targetDirs[0] = \\dirname($containerDir)' : '__DIR__';
            $var_76 .= <<<EOF
        \$dir = {$var_57};
        for (\$i = 1; \$i <= {$var_28->var_12}; ++\$i) {
            \$this->targetDirs[\$i] = \$dir = \\dirname(\$dir);
        }

EOF;
        }
        if ($var_28->var_17) {
            $var_76 = str_replace('$parameters', "\$buildParameters;\n    private \$containerDir;\n    private \$parameters", $var_76);
            $var_76 = str_replace('__construct()', '__construct(array $buildParameters = [], $containerDir = __DIR__)', $var_76);
            $var_76 .= "        \$this->buildParameters = \$buildParameters;\n";
            $var_76 .= "        \$this->containerDir = \$containerDir;\n";
        }

        if ($var_28->var_24->isCompiled()) {
            if (var_35\var_36\var_37\var_38::var_39 !== $var_34) {
                $var_98 = $var_28->var_24->getReflectionClass($var_34, false);
                if (null !== $var_98
                    && (null !== $var_206 = $var_98->getConstructor())
                    && 0 === $var_206->getNumberOfRequiredParameters()
                    && var_35\var_36\var_37\var_38::var_39 !== $var_206->getDeclaringClass()->var_105
                ) {
                    $var_76 .= "        parent::__construct();\n";
                    $var_76 .= "        \$this->parameterBag = null;\n\n";
                }
            }

            if ($var_28->var_24->getParameterBag()->all()) {
                $var_76 .= "        \$this->parameters = \$this->getDefaultParameters();\n\n";
            }

            $var_76 .= "        \$this->services = [];\n";
        } else {
            $var_157 = $var_28->var_24->getParameterBag()->all() ? 'new ParameterBag($this->getDefaultParameters())' : null;
            $var_76 .= "        parent::__construct($var_157);\n";
        }

        $var_76 .= $var_28->fn_34();
        $var_76 .= $var_28->fn_35();
        $var_76 .= $var_28->fn_36();
        $var_76 .= $var_28->var_17 ? $var_28->fn_37() : '';
        $var_76 .= $var_28->fn_38();
        $var_76 .= $var_28->fn_39();
        $var_76 .= $var_28->fn_40();
        $var_76 .= <<<'EOF'
    }

EOF;
        $var_76 .= $var_28->fn_41();

        if ($var_28->var_24->isCompiled()) {
            $var_76 .= <<<EOF

    public function compile()
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled()
    {
        return true;
    }

    public function isFrozen()
    {
        @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);

        return true;
    }

EOF;
        }

        if ($var_28->var_17) {
            $var_76 .= <<<EOF

    protected function load(\$file, \$lazyLoad = true)
    {
        return require \$this->containerDir.\\DIRECTORY_SEPARATOR.\$file;
    }

EOF;
        }

        $var_22 = $var_28->fn_3();
        foreach ($var_28->var_24->getDefinitions() as $var_112) {
            if (!$var_22->isProxyCandidate($var_112)) {
                continue;
            }
            if ($var_28->var_17) {
                $var_220 = '$this->load("{$class}.php")';
            } elseif ($var_28->var_16) {
                $var_220 = 'class_alias("'.$var_28->var_16.'\\\\{$class}", $class, false)';
            } else {
                $var_220 = '';
            }
            if ($var_220) {
                $var_220 = "class_exists(\$class, false) || {$var_220};\n\n        ";
            }
            $var_76 .= <<<EOF

    protected function createProxy(\$class, \Closure \$factory)
    {
        {$var_220}return \$factory();
    }

EOF;
            break;
        }

        return $var_76;
    }

    
    private function fn_34()
    {
        $var_76 = '';
        $var_221 = $var_28->var_24->getNormalizedIds();
        ksort($var_221);
        foreach ($var_221 as $var_50 => $var_223) {
            if ($var_28->var_24->has($var_223)) {
                $var_76 .= '            '.$var_28->fn_8($var_50).' => '.$var_28->fn_8($var_223).",\n";
            }
        }

        return $var_76 ? "        \$this->normalizedIds = [\n".$var_76."        ];\n" : '';
    }

    
    private function fn_35()
    {
        $var_76 = '';
        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if ($var_112->isSynthetic() && 'service_container' !== $var_50) {
                $var_76 .= '            '.$var_28->fn_8($var_50)." => true,\n";
            }
        }

        return $var_76 ? "        \$this->syntheticIds = [\n{$var_76}        ];\n" : '';
    }

    
    private function fn_41()
    {
        if (!$var_69 = $var_28->var_24->getRemovedIds()) {
            return '';
        }
        if ($var_28->var_17) {
            $var_76 = "require \$this->containerDir.\\DIRECTORY_SEPARATOR.'removed-ids.php'";
        } else {
            $var_76 = '';
            $var_69 = array_keys($var_69);
            sort($var_69);
            foreach ($var_69 as $var_50) {
                if (preg_match('/^\d+_[^~]++~[._a-zA-Z\d]{7}$/', $var_50)) {
                    continue;
                }
                $var_76 .= '            '.$var_28->fn_8($var_50)." => true,\n";
            }

            $var_76 = "[\n{$var_76}        ]";
        }

        return <<<EOF

    public function getRemovedIds()
    {
        return {$var_76};
    }

EOF;
    }

    
    private function fn_36()
    {
        $var_76 = '';
        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if (!$var_112->isSynthetic() && (!$var_28->var_17 || !$var_112->isShared() || $var_28->fn_15($var_112))) {
                $var_76 .= '            '.$var_28->fn_8($var_50).' => '.$var_28->fn_8($var_28->fn_26($var_50)).",\n";
            }
        }

        return $var_76 ? "        \$this->methodMap = [\n{$var_76}        ];\n" : '';
    }

    
    private function fn_37()
    {
        $var_76 = '';
        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if (!$var_112->isSynthetic() && $var_112->isShared() && !$var_28->fn_15($var_112)) {
                $var_76 .= sprintf("            %s => '%s.php',\n", $var_28->fn_8($var_50), $var_28->fn_26($var_50));
            }
        }

        return $var_76 ? "        \$this->fileMap = [\n{$var_76}        ];\n" : '';
    }

    
    private function fn_38()
    {
        $var_76 = '';

        $var_224 = $var_28->var_24->getAliases();
        ksort($var_224);
        foreach ($var_224 as $var_50 => $var_226) {
            if ($var_226->isPrivate()) {
                $var_76 .= '            '.$var_28->fn_8($var_50)." => true,\n";
            }
        }

        $var_109 = $var_28->var_24->getDefinitions();
        ksort($var_109);
        foreach ($var_109 as $var_50 => $var_112) {
            if (!$var_112->isPublic()) {
                $var_76 .= '            '.$var_28->fn_8($var_50)." => true,\n";
            }
        }

        if (empty($var_76)) {
            return '';
        }

        $var_228 = "        \$this->privates = [\n";
        $var_228 .= $var_76;
        $var_228 .= "        ];\n";

        return $var_228;
    }

    
    private function fn_39()
    {
        if (!$var_224 = $var_28->var_24->getAliases()) {
            return $var_28->var_24->isCompiled() ? "\n        \$this->aliases = [];\n" : '';
        }

        $var_76 = "        \$this->aliases = [\n";
        ksort($var_224);
        foreach ($var_224 as $var_226 => $var_50) {
            $var_50 = $var_28->var_24->normalizeId($var_50);
            while (isset($var_224[$var_50])) {
                $var_50 = $var_28->var_24->normalizeId($var_224[$var_50]);
            }
            $var_76 .= '            '.$var_28->fn_8($var_226).' => '.$var_28->fn_8($var_50).",\n";
        }

        return $var_76."        ];\n";
    }

    private function fn_40()
    {
        if (!$var_28->var_18 || !$var_28->var_19) {
            return '';
        }

        $var_97 = [];

        foreach ($var_28->var_24->findTaggedServiceIds($var_28->var_18) as $var_50 => $var_230) {
            $var_112 = $var_28->var_24->getDefinition($var_50);
            $var_7 = $var_28->fn_27([$var_112]);

            foreach ($var_7 as $var_122) {
                if (\var_124($var_39 = \var_125($var_126 = $var_122->getFactory()) && \var_124($var_126[0]) ? $var_126[0] : $var_122->getClass())) {
                    $var_28->fn_12($var_39, $var_97);
                }
            }
        }

        $var_76 = '';

        foreach ($var_97 as $var_74) {
            if (!isset($var_28->var_20[$var_74])) {
                $var_28->var_20[$var_74] = true;
                $var_76 .= sprintf("\n            include_once %s;", $var_74);
            }
        }

        return $var_76 ? sprintf("\n        \$this->privates['service_container'] = function () {%s\n        };\n", $var_76) : '';
    }

    
    private function fn_6()
    {
        if (!$var_28->var_24->getParameterBag()->all()) {
            return '';
        }

        $var_232 = [];
        $var_233 = [];
        $var_234 = [];

        foreach ($var_28->var_24->getParameterBag()->all() as $var_235 => $var_158) {
            if ($var_235 !== $var_236 = $var_28->var_24->resolveEnvPlaceholders($var_235)) {
                throw new class_4(sprintf('Parameter name cannot use env parameters: %s.', $var_236));
            }
            if ($var_235 !== $var_237 = strtolower($var_235)) {
                $var_234[] = sprintf('        %s => %s,', $var_28->fn_13($var_237), $var_28->fn_13($var_235));
            }
            $var_102 = $var_28->fn_42([$var_158]);
            $var_102 = explode('0 => ', substr(rtrim($var_102, " ]\n"), 2, -1), 2);

            if (preg_match("/\\\$this->(?:getEnv\('(?:\w++:)*+\w++'\)|targetDirs\[\d++\])/", $var_102[1])) {
                $var_233[$var_235] = sprintf('%scase %s: $value = %s; break;', $var_102[0], $var_28->fn_13($var_235), $var_102[1]);
            } else {
                $var_232[] = sprintf('%s%s => %s,', $var_102[0], $var_28->fn_13($var_235), $var_102[1]);
            }
        }

        $var_239 = sprintf("[\n%s\n%s]", implode("\n", $var_232), str_repeat(' ', 8));

        $var_76 = '';
        if ($var_28->var_24->isCompiled()) {
            $var_76 .= <<<'EOF'

    public function getParameter($name)
    {
        $name = (string) $name;
        if (isset($this->buildParameters[$name])) {
            return $this->buildParameters[$name];
        }
        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {
            $name = $this->normalizeParameterName($name);

            if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {
                throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
            }
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter($name)
    {
        $name = (string) $name;
        if (isset($this->buildParameters[$name])) {
            return true;
        }
        $name = $this->normalizeParameterName($name);

        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);
    }

    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            foreach ($this->buildParameters as $name => $value) {
                $parameters[$name] = $value;
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

EOF;
            if (!$var_28->var_17) {
                $var_76 = preg_replace('/^.*buildParameters.*\n.*\n.*\n/m', '', $var_76);
            }

            if ($var_233) {
                $var_240 = $var_28->fn_42(array_combine(array_keys($var_233), array_fill(0, \var_61($var_233), false)), '', 8);
                $var_241 = <<<'EOF'
        switch ($name) {
%s
            default: throw new InvalidArgumentException(sprintf('The dynamic parameter "%%s" must be defined.', $name));
        }
        $this->loadedDynamicParameters[$name] = true;

        return $this->dynamicParameters[$name] = $value;
EOF;
                $var_241 = sprintf($var_241, implode("\n", $var_233));
            } else {
                $var_240 = '[]';
                $var_241 = str_repeat(' ', 8).'throw new InvalidArgumentException(sprintf(\'The dynamic parameter "%s" must be defined.\', $name));';
            }

            $var_76 .= <<<EOF

    private \$loadedDynamicParameters = {$var_240};
    private \$dynamicParameters = [];

    
    private function getDynamicParameter(\$name)
    {
{$var_241}
    }


EOF;

            $var_76 .= '    private $normalizedParameterNames = '.($var_234 ? sprintf("[\n%s\n    ];", implode("\n", $var_234)) : '[];')."\n";
            $var_76 .= <<<'EOF'

    private function normalizeParameterName($name)
    {
        if (isset($this->normalizedParameterNames[$normalizedName = strtolower($name)]) || isset($this->parameters[$normalizedName]) || array_key_exists($normalizedName, $this->parameters)) {
            $normalizedName = isset($this->normalizedParameterNames[$normalizedName]) ? $this->normalizedParameterNames[$normalizedName] : $normalizedName;
            if ((string) $name !== $normalizedName) {
                @trigger_error(sprintf('Parameter names will be made case sensitive in Symfony 4.0. Using "%s" instead of "%s" is deprecated since Symfony 3.4.', $name, $normalizedName), E_USER_DEPRECATED);
            }
        } else {
            $normalizedName = $this->normalizedParameterNames[$normalizedName] = (string) $name;
        }

        return $normalizedName;
    }

EOF;
        } elseif ($var_233) {
            throw new class_7('You cannot dump a not-frozen container with dynamic parameters.');
        }

        $var_76 .= <<<EOF

    
    protected function getDefaultParameters()
    {
        return $var_239;
    }

EOF;

        return $var_76;
    }

    
    private function fn_42(array $var_239, $var_242 = '', $var_243 = 12)
    {
        $var_232 = [];
        foreach ($var_239 as $var_235 => $var_158) {
            if (\var_125($var_158)) {
                $var_158 = $var_28->fn_42($var_158, $var_242.'/'.$var_235, $var_243 + 4);
            } elseif ($var_158 instanceof var_244) {
                throw new class_4(sprintf('You cannot dump a container with parameters that contain special arguments. "%s" found in "%s".', \var_245($var_158), $var_242.'/'.$var_235));
            } elseif ($var_158 instanceof var_167) {
                throw new class_4(sprintf('You cannot dump a container with parameters that contain variable references. Variable "%s" found in "%s".', $var_158, $var_242.'/'.$var_235));
            } elseif ($var_158 instanceof var_53) {
                throw new class_4(sprintf('You cannot dump a container with parameters that contain service definitions. Definition for "%s" found in "%s".', $var_158->getClass(), $var_242.'/'.$var_235));
            } elseif ($var_158 instanceof var_152) {
                throw new class_4(sprintf('You cannot dump a container with parameters that contain references to other services (reference to service "%s" found in "%s").', $var_158, $var_242.'/'.$var_235));
            } elseif ($var_158 instanceof var_246) {
                throw new class_4(sprintf('You cannot dump a container with parameters that contain expressions. Expression "%s" found in "%s".', $var_158, $var_242.'/'.$var_235));
            } else {
                $var_158 = $var_28->fn_13($var_158);
            }

            $var_232[] = sprintf('%s%s => %s,', str_repeat(' ', $var_243), $var_28->fn_13($var_235), $var_158);
        }

        return sprintf("[\n%s\n%s]", implode("\n", $var_232), str_repeat(' ', $var_243 - 4));
    }

    
    private function fn_7()
    {
        return <<<'EOF'
}

EOF;
    }

    
    private function fn_21($var_158, $var_76)
    {
        if (!$var_247 = $var_28->fn_43($var_158)) {
            return $var_76;
        }

        
        $var_76 = implode("\n", array_map(function ($var_186) { return $var_186 ? '    '.$var_186 : $var_186; }, explode("\n", $var_76)));

        return sprintf("        if (%s) {\n%s        }\n", $var_247, $var_76);
    }

    
    private function fn_43($var_158)
    {
        $var_249 = [];
        foreach (var_35\var_36\var_37\var_23::getInitializedConditionals($var_158) as $var_250) {
            if (!$var_28->var_24->hasDefinition($var_250)) {
                return 'false';
            }
            $var_249[] = sprintf("isset(\$this->services['%s'])", $var_250);
        }
        foreach (var_35\var_36\var_37\var_23::fn_43($var_158) as $var_250) {
            if ($var_28->var_24->hasDefinition($var_250) && !$var_28->var_24->getDefinition($var_250)->isPublic()) {
                continue;
            }

            $var_249[] = sprintf("\$this->has('%s')", $var_250);
        }

        if (!$var_249) {
            return '';
        }

        return implode(' && ', $var_249);
    }

    private function fn_27(array $var_157, \var_166 $var_109 = null, array &$var_155 = [])
    {
        if (null === $var_109) {
            $var_109 = new \var_166();
        }

        foreach ($var_157 as $var_189) {
            if (\var_125($var_189)) {
                $var_28->fn_27($var_189, $var_109, $var_155);
            } elseif ($var_189 instanceof var_152) {
                $var_50 = $var_28->var_24->normalizeId($var_189);

                if (!isset($var_155[$var_50])) {
                    $var_155[$var_50] = [0, $var_189->getInvalidBehavior()];
                } else {
                    $var_155[$var_50][1] = min($var_155[$var_50][1], $var_189->getInvalidBehavior());
                }

                ++$var_155[$var_50][0];
            } elseif (!$var_189 instanceof var_53) {
                
            } elseif (isset($var_109[$var_189])) {
                $var_109[$var_189] = 1 + $var_109[$var_189];
            } else {
                $var_109[$var_189] = 1;
                $var_157 = [$var_189->getArguments(), $var_189->getFactory(), $var_189->getProperties(), $var_189->getMethodCalls(), $var_189->getConfigurator()];
                $var_28->fn_27($var_157, $var_109, $var_155);
            }
        }

        return $var_109;
    }

    
    private function fn_17($var_158, $var_253 = true)
    {
        if (\var_125($var_158)) {
            if ($var_158 && $var_253 && false !== $var_254 = array_search($var_158, $var_28->var_24->getParameterBag()->all(), true)) {
                return $var_28->fn_17("%$var_254%");
            }
            $var_76 = [];
            foreach ($var_158 as $var_150 => $var_151) {
                $var_76[] = sprintf('%s => %s', $var_28->fn_17($var_150, $var_253), $var_28->fn_17($var_151, $var_253));
            }

            return sprintf('[%s]', implode(', ', $var_76));
        } elseif ($var_158 instanceof var_244) {
            $var_255 = [$var_28->var_4, $var_28->var_5];
            $var_28->var_4 = $var_28->var_5 = null;

            try {
                if ($var_158 instanceof var_256) {
                    $var_158 = $var_158->getValues()[0];
                    $var_76 = $var_28->fn_17($var_158, $var_253);

                    if ($var_158 instanceof var_257) {
                        $var_76 = sprintf('$f = function (\\%s $v%s) { return $v; }; return $f(%s);', $var_158->getType(), var_35\var_36\var_37\var_130::var_198 !== $var_158->getInvalidBehavior() ? ' = null' : '', $var_76);
                    } else {
                        $var_76 = sprintf('return %s;', $var_76);
                    }

                    return sprintf("function () {\n            %s\n        }", $var_76);
                }

                if ($var_158 instanceof var_259) {
                    $var_260 = [0];
                    $var_76 = [];
                    $var_76[] = 'new RewindableGenerator(function () {';

                    if (!$var_261 = $var_158->getValues()) {
                        $var_76[] = '            return new \EmptyIterator();';
                    } else {
                        $var_263 = [];
                        $var_263[] = 'function () {';

                        foreach ($var_261 as $var_150 => $var_151) {
                            ($var_71 = $var_28->fn_43($var_151)) ? $var_260[] = "(int) ($var_71)" : ++$var_260[0];
                            $var_151 = $var_28->fn_21($var_151, sprintf("        yield %s => %s;\n", $var_28->fn_17($var_150, $var_253), $var_28->fn_17($var_151, $var_253)));
                            foreach (explode("\n", $var_151) as $var_151) {
                                if ($var_151) {
                                    $var_76[] = '    '.$var_151;
                                }
                            }
                        }

                        $var_263[] = sprintf('            return %s;', implode(' + ', $var_260));
                        $var_263[] = '        }';
                    }

                    $var_76[] = sprintf('        }, %s)', \var_61($var_260) > 1 ? implode("\n", $var_263) : $var_260[0]);

                    return implode("\n", $var_76);
                }
            } finally {
                list($var_28->var_4, $var_28->var_5) = $var_255;
            }
        } elseif ($var_158 instanceof var_53) {
            if (null !== $var_28->var_4 && $var_28->var_4->contains($var_158)) {
                return $var_28->fn_17($var_28->var_4[$var_158], $var_253);
            }
            if ($var_158->getMethodCalls()) {
                throw new class_7('Cannot dump definitions which have method calls.');
            }
            if ($var_158->getProperties()) {
                throw new class_7('Cannot dump definitions which have properties.');
            }
            if (null !== $var_158->getConfigurator()) {
                throw new class_7('Cannot dump definitions which have a configurator.');
            }

            $var_157 = [];
            foreach ($var_158->getArguments() as $var_189) {
                $var_157[] = $var_28->fn_17($var_189);
            }

            if (null !== $var_158->getFactory()) {
                $var_126 = $var_158->getFactory();

                if (\var_124($var_126)) {
                    return sprintf('%s(%s)', $var_28->fn_24($var_28->fn_17($var_126)), implode(', ', $var_157));
                }

                if (\var_125($var_126)) {
                    if (!preg_match('/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/', $var_126[1])) {
                        throw new class_7(sprintf('Cannot dump definition because of invalid factory method (%s)', $var_126[1] ?: 'n/a'));
                    }

                    $var_39 = $var_28->fn_17($var_126[0]);
                    if (\var_124($var_126[0])) {
                        return sprintf('%s::%s(%s)', $var_28->fn_24($var_39), $var_126[1], implode(', ', $var_157));
                    }

                    if ($var_126[0] instanceof var_53) {
                        if (0 === strpos($var_39, 'new ')) {
                            return sprintf('(%s)->%s(%s)', $var_39, $var_126[1], implode(', ', $var_157));
                        }

                        return sprintf("\\call_user_func([%s, '%s']%s)", $var_39, $var_126[1], \var_61($var_157) > 0 ? ', '.implode(', ', $var_157) : '');
                    }

                    if ($var_126[0] instanceof var_152) {
                        return sprintf('%s->%s(%s)', $var_39, $var_126[1], implode(', ', $var_157));
                    }
                }

                throw new class_7('Cannot dump definition because of invalid factory');
            }

            $var_39 = $var_158->getClass();
            if (null === $var_39) {
                throw new class_7('Cannot dump definitions which have no class nor factory.');
            }

            return sprintf('new %s(%s)', $var_28->fn_24($var_28->fn_17($var_39)), implode(', ', $var_157));
        } elseif ($var_158 instanceof var_167) {
            return '$'.$var_158;
        } elseif ($var_158 instanceof var_152) {
            $var_50 = $var_28->var_24->normalizeId($var_158);
            if (null !== $var_28->var_5 && isset($var_28->var_5[$var_50])) {
                return $var_28->fn_17($var_28->var_5[$var_50], $var_253);
            }

            return $var_28->fn_32($var_50, $var_158);
        } elseif ($var_158 instanceof var_246) {
            return $var_28->fn_44()->compile((string) $var_158, ['this' => 'container']);
        } elseif ($var_158 instanceof var_149) {
            return $var_28->fn_45($var_158);
        } elseif (true === $var_253 && \var_124($var_158)) {
            if (preg_match('/^%([^%]+)%$/', $var_158, $var_267)) {
                
                
                return $var_28->fn_45($var_267[1]);
            } else {
                $var_268 = function ($var_267) {
                    return "'.".$var_28->fn_45($var_267[2]).".'";
                };

                $var_76 = str_replace('%%', '%', preg_replace_callback('/(?<!%)(%)([^%]+)\1/', $var_268, $var_28->fn_13($var_158)));

                return $var_76;
            }
        } elseif (\var_269($var_158) || \var_270($var_158)) {
            throw new class_7('Unable to dump a service container if a parameter is an object or a resource.');
        }

        return $var_28->fn_13($var_158);
    }

    
    private function fn_24($var_39)
    {
        if (false !== strpos($var_39, '$')) {
            return sprintf('${($_ = %s) && false ?: "_"}', $var_39);
        }
        if (0 !== strpos($var_39, "'") || !preg_match('/^\'(?:\\\{2})?[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*(?:\\\{2}[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)*\'$/', $var_39)) {
            throw new class_7(sprintf('Cannot dump definition because of invalid class name (%s)', $var_39 ?: 'n/a'));
        }

        $var_39 = substr(str_replace('\\\\', '\\', $var_39), 1, -1);

        return 0 === strpos($var_39, '\\') ? $var_39 : '\\'.$var_39;
    }

    
    private function fn_45($var_105)
    {
        if ($var_28->var_24->isCompiled() && $var_28->var_24->hasParameter($var_105)) {
            $var_158 = $var_28->var_24->getParameter($var_105);
            $var_271 = $var_28->fn_17($var_158, false);

            if (!$var_158 || !\var_125($var_158)) {
                return $var_271;
            }

            if (!preg_match("/\\\$this->(?:getEnv\('(?:\w++:)*+\w++'\)|targetDirs\[\d++\])/", $var_271)) {
                return sprintf("\$this->parameters['%s']", $var_105);
            }
        }

        return sprintf("\$this->getParameter('%s')", $var_105);
    }

    
    private function fn_32($var_50, var_152 $var_197 = null)
    {
        while ($var_28->var_24->hasAlias($var_50)) {
            $var_50 = (string) $var_28->var_24->getAlias($var_50);
        }
        $var_50 = $var_28->var_24->normalizeId($var_50);

        if ('service_container' === $var_50) {
            return '$this';
        }

        if ($var_28->var_24->hasDefinition($var_50) && $var_112 = $var_28->var_24->getDefinition($var_50)) {
            if ($var_112->isSynthetic()) {
                $var_76 = sprintf('$this->get(\'%s\'%s)', $var_50, null !== $var_197 ? ', '.$var_197->getInvalidBehavior() : '');
            } elseif (null !== $var_197 && var_35\var_36\var_37\var_130::var_131 === $var_197->getInvalidBehavior()) {
                $var_76 = 'null';
                if (!$var_112->isShared()) {
                    return $var_76;
                }
            } elseif ($var_28->fn_16($var_112)) {
                $var_76 = substr($var_28->fn_19($var_112, '', '', $var_50), 8, -2);
                if ($var_112->isShared()) {
                    $var_76 = sprintf('$this->services[\'%s\'] = %s', $var_50, $var_76);
                }
                $var_76 = "($var_76)";
            } elseif ($var_28->var_17 && $var_112->isShared() && !$var_28->fn_15($var_112)) {
                $var_76 = sprintf("\$this->load('%s.php')", $var_28->fn_26($var_50));
            } else {
                $var_76 = sprintf('$this->%s()', $var_28->fn_26($var_50));
            }
        } elseif (null !== $var_197 && var_35\var_36\var_37\var_130::var_131 === $var_197->getInvalidBehavior()) {
            return 'null';
        } elseif (null !== $var_197 && var_35\var_36\var_37\var_130::var_198 !== $var_197->getInvalidBehavior()) {
            $var_76 = sprintf('$this->get(\'%s\',  %d)', $var_50, var_35\var_36\var_37\var_130::var_272);
        } else {
            $var_76 = sprintf('$this->get(\'%s\')', $var_50);
        }

        

        return "\${(\$_ = isset(\$this->services['$var_50']) ? \$this->services['$var_50'] : $var_76) && false ?: '_'}";
    }

    
    private function fn_2($var_39)
    {
        $var_28->var_14 = [];
        $var_28->var_15 = [];

        if ($var_273 = $var_28->var_24->getReflectionClass($var_39)) {
            foreach ($var_273->getMethods() as $var_275) {
                $var_28->var_15[strtolower($var_275->getName())] = true;
            }
        }
    }

    
    private function fn_26($var_50)
    {
        if (isset($var_28->var_14[$var_50])) {
            return $var_28->var_14[$var_50];
        }

        $var_60 = strrpos($var_50, '\\');
        $var_105 = var_35\var_36\var_37\var_38::camelize(false !== $var_60 && isset($var_50[1 + $var_60]) ? substr($var_50, 1 + $var_60) : $var_50);
        $var_105 = preg_replace('/[^a-zA-Z0-9_\x7f-\xff]/', '', $var_105);
        $var_177 = 'get'.$var_105.'Service';
        $var_277 = 1;

        while (isset($var_28->var_15[strtolower($var_177)])) {
            ++$var_277;
            $var_177 = 'get'.$var_105.$var_277.'Service';
        }

        $var_28->var_14[$var_50] = $var_177;
        $var_28->var_15[strtolower($var_177)] = true;

        return $var_177;
    }

    
    private function fn_31()
    {
        $var_278 = self::var_2;
        $var_279 = \var_280($var_278);
        $var_281 = self::var_3;
        $var_282 = \var_280($var_281);

        while (true) {
            $var_105 = '';
            $var_60 = $var_28->var_6;

            if ('' === $var_105) {
                $var_105 .= $var_278[$var_60 % $var_279];
                $var_60 = (int) ($var_60 / $var_279);
            }

            while ($var_60 > 0) {
                --$var_60;
                $var_105 .= $var_281[$var_60 % $var_282];
                $var_60 = (int) ($var_60 / $var_282);
            }

            ++$var_28->var_6;

            
            if (\var_283($var_105, $var_28->var_9, true)) {
                continue;
            }

            return $var_105;
        }
    }

    private function fn_44()
    {
        if (null === $var_28->var_10) {
            if (!class_exists('Symfony\Component\ExpressionLanguage\ExpressionLanguage')) {
                throw new class_7('Unable to use expressions as the Symfony ExpressionLanguage component is not installed.');
            }
            $var_284 = $var_28->var_24->getExpressionLanguageProviders();
            $var_28->var_10 = new class_8(null, $var_284, function ($var_148) {
                $var_50 = '""' === substr_replace($var_148, '', 1, -1) ? stripcslashes(substr($var_148, 1, -1)) : null;

                if (null !== $var_50 && ($var_28->var_24->hasAlias($var_50) || $var_28->var_24->hasDefinition($var_50))) {
                    return $var_28->fn_32($var_50);
                }

                return sprintf('$this->get(%s)', $var_148);
            });

            if ($var_28->var_24->isTrackingResources()) {
                foreach ($var_284 as $var_287) {
                    $var_28->var_24->addObjectResource($var_287);
                }
            }
        }

        return $var_28->var_10;
    }

    private function fn_15(var_53 $var_112)
    {
        return $var_28->var_18 && $var_112->hasTag($var_28->var_18) && !$var_112->isDeprecated();
    }

    private function fn_13($var_158)
    {
        if (null !== $var_28->var_11 && \var_124($var_158) && preg_match($var_28->var_11, $var_158, $var_290, var_291)) {
            $var_292 = $var_290[0][1] ? $var_28->fn_8(substr($var_158, 0, $var_290[0][1]), true).'.' : '';
            $var_277 = $var_290[0][1] + \var_280($var_290[0][0]);
            $var_277 = isset($var_158[$var_277]) ? '.'.$var_28->fn_8(substr($var_158, $var_277), true) : '';
            $var_58 = $var_28->var_17 ? '$this->containerDir' : '__DIR__';
            $var_293 = 1 + $var_28->var_12 - \var_61($var_290);

            if ($var_28->var_17 || 0 < $var_293) {
                $var_58 = sprintf('$this->targetDirs[%d]', $var_293);
            }

            if ($var_292 || $var_277) {
                return sprintf('(%s%s%s)', $var_292, $var_58, $var_277);
            }

            return $var_58;
        }

        return $var_28->fn_8($var_158, true);
    }

    private function fn_8($var_158, $var_294 = false)
    {
        if (\var_124($var_158) && false !== strpos($var_158, "\n")) {
            $var_295 = explode("\n", $var_158);
            $var_295 = array_map(function ($var_296) { return var_export($var_296, true); }, $var_295);
            $var_102 = implode('."\n".', $var_295);
        } else {
            $var_102 = var_export($var_158, true);
        }

        if ($var_294 && "'" === $var_102[0] && $var_102 !== $var_297 = $var_28->var_24->resolveEnvPlaceholders($var_102, "'.\$this->getEnv('string:%s').'")) {
            $var_102 = $var_297;
            if (".''" === substr($var_102, -3)) {
                $var_102 = substr($var_102, 0, -3);
                if ("'" === $var_102[1]) {
                    $var_102 = substr_replace($var_102, '', 18, 7);
                }
            }
            if ("'" === $var_102[1]) {
                $var_102 = substr($var_102, 3);
            }
        }

        return $var_102;
    }
}
