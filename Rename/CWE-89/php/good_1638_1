<?php



function fn_0($var_0, $var_1)
{
    $var_2 = array();  

    $var_3 = Survey::model()->findByPk($var_1)->var_5;
    $var_2[]=$var_3;     
    $var_2=array_merge($var_2,Survey::model()->findByPk($var_1)->var_6);
    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8==false || $var_8->var_10!='Group') throw new \var_11(500, 'This is not a valid LimeSurvey group structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['question_attributes']=0;
    $var_17['subquestions']=0;
    $var_17['conditions']=0;
    $var_17['groups']=0;

    $var_15=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_15[]=(string)$var_5;
    }

    if (!in_array($var_3,$var_15))
    {
        $var_17['fatalerror'] = gT("The languages of the imported group file must at least include the base language of this survey.");
        return $var_17;
    }
    
    


    


    $var_18 = Yii::app()->var_19->createCommand()->select('MAX(group_order)')->from('{{groups}}')->where('sid=:sid',array(':sid'=>$var_1))->queryScalar();
    if ($var_18 === false)
    {
        $var_25=0;
    }
    else
    {
        $var_25=$var_18+1;
    }

    foreach ($var_8->var_26->var_27->var_28 as $var_28)
    {
        $var_29=array();
        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }
        $var_32=$var_29['sid'];
        $var_29['sid']=$var_1;
        $var_29['group_order']=$var_25;
        $var_33=$var_29['gid']; unset($var_29['gid']); 

        
        $var_29['group_name']=translateLinks('survey', $var_32, $var_1, $var_29['group_name']);
        $var_29['description']=translateLinks('survey', $var_32, $var_1, $var_29['description']);
        
        if (isset($var_110[$var_33]))
        {
            $var_29['gid']=$var_110[$var_33];
        }
        if (isset($var_29['gid'])) switchMSSQLIdentityInsert('groups',true);

        $var_34 = Yii::app()->var_19->createCommand()->insert('{{groups}}', $var_29);

        if (isset($var_29['gid'])) switchMSSQLIdentityInsert('groups',false);
        $var_17['groups']++;

        if (!isset($var_110[$var_33]))
        {
            $var_36=getLastInsertID('{{groups}}');
            $var_110[$var_33]=$var_36; 
        }
    }


    

    
    


    $var_17['questions']=0;
    if (isset($var_8->var_37))
    {
        foreach ($var_8->var_37->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_32=$var_29['sid'];
            $var_29['sid']=$var_1;
            if (!isset($var_110[$var_29['gid']]) || trim($var_29['title'])=='') continue; 
            $var_29['gid']=$var_110[$var_29['gid']];
            $var_38=$var_29['qid']; unset($var_29['qid']); 

            
            $var_29['title']=translateLinks('survey', $var_32, $var_1, $var_29['title']);
            $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
            $var_29['help']=translateLinks('survey', $var_32, $var_1, $var_29['help']);
            
            if (isset($var_14[$var_38]))
            {
                $var_29['qid']=$var_14[$var_38];
            }
            if (isset($var_29['qid'])) switchMSSQLIdentityInsert('questions',true);

            $var_34 = Yii::app()->var_19->createCommand()->insert('{{questions}}', $var_29);
            if (isset($var_29['qid'])) switchMSSQLIdentityInsert('questions',false);
            if (!isset($var_14[$var_38]))
            {
                $var_39=getLastInsertID('{{questions}}');
                $var_14[$var_38]=$var_39; 
                $var_17['questions']++;
            }
        }
    }

    
    if (isset($var_8->var_40))
    {

        foreach ($var_8->var_40->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['sid']=$var_1;
            if (!isset($var_110[$var_29['gid']])) continue; 
            $var_29['gid']=$var_110[(int)$var_29['gid']];;
            $var_41=(int)$var_29['qid']; unset($var_29['qid']); 
            if (!isset($var_14[(int)$var_29['parent_qid']])) continue; 
            $var_29['parent_qid']=$var_14[(int)$var_29['parent_qid']]; 

            
            $var_29['title']=translateLinks('survey', $var_32, $var_1, $var_29['title']);
            $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
            $var_29['help']=translateLinks('survey', $var_32, $var_1, !empty($var_29['help']) ? $var_29['help'] : '');
            if (isset($var_14[$var_41])){
                $var_29['qid']=$var_14[$var_41];
            }
            if (isset($var_29['qid'])) switchMSSQLIdentityInsert('questions',true);

            $var_34 = Yii::app()->var_19->createCommand()->insert('{{questions}}', $var_29);
            $var_42=getLastInsertID('{{questions}}');
            if (isset($var_29['qid'])) switchMSSQLIdentityInsert('questions',true);

            if (!isset($var_29['qid']))
            {
                $var_14[$var_41]=$var_42; 
            }

            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_43))
    {


        foreach ($var_8->var_43->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if (!isset($var_14[(int)$var_29['qid']])) continue; 

            $var_29['qid']=$var_14[(int)$var_29['qid']]; 

            
            $var_34 = Yii::app()->var_19->createCommand()->insert('{{answers}}', $var_29);
            $var_17['answers']++;
        }
    }

    
    if(isset($var_8->var_44))
    {


        $var_45=questionAttributes(true);

        foreach ($var_8->var_44->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            unset($var_29['qaid']);
            if (!isset($var_14[(int)$var_29['qid']])) continue; 
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 


            if ($var_12<156 && isset($var_45[$var_29['attribute']]['i18n']) && $var_45[$var_29['attribute']]['i18n'])
            {
                foreach ($var_15 as $var_46)
                {
                    $var_29['language']=$var_46;
                    $var_34 = Yii::app()->var_19->createCommand()->insert('{{question_attributes}}', $var_29);
                }
            }
            else
            {
                $var_34 = Yii::app()->var_19->createCommand()->insert('{{question_attributes}}', $var_29);
            }
            $var_17['question_attributes']++;
        }
    }


    
    if(isset($var_8->var_47))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_47->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 
            if ($var_29['sqid']>0)
            {
                if (!isset($var_14[(int)$var_29['sqid']])) continue;  
                $var_29['sqid']=$var_14[(int)$var_29['sqid']]; 
            }

            
            $var_34 = Yii::app()->var_19->createCommand()->insert('{{defaultvalues}}', $var_29);
            $var_17['defaultvalues']++;
        }
    }

    
    if(isset($var_8->var_48))
    {


        foreach ($var_8->var_48->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            
            if (isset($var_14[$var_29['qid']]))
            {
                $var_29['qid']=$var_14[$var_29['qid']]; 
            }
            else continue; 
            if (isset($var_14[$var_29['cqid']]))
            {
                $var_29['cqid']=$var_14[$var_29['cqid']]; 
            }
            else continue; 

            list($var_49, $var_50, $var_51) = explode("X",$var_29["cfieldname"],3);

            if ($var_50 != $var_33)    
                continue;

            unset($var_29["cid"]);

            
            if (preg_match("/^\+/",$var_49))
            {
                $var_52 = '+'.$var_1 . "X" . $var_36 . "X" . $var_29["cqid"] .substr($var_51,strlen($var_38));
            }
            else
            {
                $var_52 = $var_1 . "X" . $var_36 . "X" . $var_29["cqid"] .substr($var_51,strlen($var_38));
            }

            $var_29["cfieldname"] = $var_52;
            if (trim($var_29["method"])=='')
            {
                $var_29["method"]='==';
            }

            
            $var_34 = Yii::app()->var_19->createCommand()->insert('{{conditions}}', $var_29);
            $var_17['conditions']++;
        }
    }
    LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
    LimeExpressionManager::UpgradeConditionsToRelevance($var_1);

    $var_17['newgid']=$var_36;
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    return $var_17;
}


function fn_1($var_0, $var_1, $var_36)
{

    $var_2 = array();  
    $var_3 = Survey::model()->findByPk($var_1)->var_5;
    $var_2[]=$var_3;     
    $var_2=array_merge($var_2,Survey::model()->findByPk($var_1)->var_6);
    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Question') throw new \var_11(500, 'This is not a valid LimeSurvey question structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_53=array(0=>0);

    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['question_attributes']=0;
    $var_17['subquestions']=0;

    $var_15=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_15[]=(string)$var_5;
    }

    if (!in_array($var_3,$var_15))
    {
        $var_17['fatalerror'] = gT("The languages of the imported question file must at least include the base language of this survey.");
        return $var_17;
    }
    
    


    

    
    


    $var_54 = "SELECT MAX(question_order) AS maxqo FROM {{questions}} WHERE sid=$var_1 AND gid=$var_36";
    $var_55 = Yii::app()->var_19->createCommand($var_54)->query();
    $var_56 = $var_55->read();
    $var_58 = $var_56['maxqo'] + 1;
    if (is_null($var_58))
    {
        $var_58=0;
    }
    else
    {
        $var_58++;
    }
    foreach ($var_8->var_37->var_27->var_28 as $var_28)
    {
        $var_29=array();
        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }
        $var_32=$var_29['sid'];
        $var_29['sid']=$var_1;
        $var_29['gid']=$var_36;
        $var_29['question_order']=$var_58;
        $var_38=$var_29['qid']; unset($var_29['qid']); 

        
        $var_29['title']=translateLinks('survey', $var_32, $var_1, $var_29['title']);
        $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
        $var_29['help']=translateLinks('survey', $var_32, $var_1, $var_29['help']);
        
        if (isset($var_14[$var_38]))
        {
            $var_29['qid']=$var_14[$var_38];
        }

        $var_59 = new class_0;
        if ($var_29)
            fn_9($var_29);
        foreach ($var_29 as $var_60 => $var_61)
            $var_59->$var_60 = $var_61;
        $var_34 = $var_59->save();
        if (!$var_34)
        {
            $var_17['fatalerror'] = CHtml::errorSummary($var_59,gT("The question could not be imported for the following reasons:"));
            return $var_17;
        }
        if (!isset($var_14[$var_38]))
        {
            $var_39=getLastInsertID($var_59->tableName());
            $var_14[$var_38]=$var_39; 
        }
    }

    
    if (isset($var_8->var_40))
    {
        foreach ($var_8->var_40->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['sid']=$var_1;
            $var_29['gid']=$var_36;
            $var_41=(int)$var_29['qid']; unset($var_29['qid']); 
            $var_29['parent_qid']=$var_14[(int)$var_29['parent_qid']]; 

            

            $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
            if (isset($var_29['help']))
            {
                $var_29['help']=translateLinks('survey', $var_32, $var_1, $var_29['help']);
            }
            if (isset($var_14[$var_41])){
                $var_29['qid']=$var_14[$var_41];
            }
            if ($var_29)
                fn_9($var_29);
            $var_59 = new class_0;
            foreach ($var_29 as $var_60 => $var_61)
                $var_59->$var_60 = $var_61;
            $var_34 = $var_59->save();
            $var_42=getLastInsertID($var_59->tableName());
            if (!isset($var_29['qid']))
            {
                $var_14[$var_41]=$var_42; 
            }
            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_43))
    {


        foreach ($var_8->var_43->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 

            
            $var_43 = new class_1;
            if ($var_29)
                fn_9($var_29);
            foreach ($var_29 as $var_60 => $var_61)
                $var_43->$var_60 = $var_61;
            $var_34 = $var_43->save();
            $var_17['answers']++;
        }
    }

    
    if(isset($var_8->var_44))
    {


        $var_45=questionAttributes(true);
        foreach ($var_8->var_44->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            unset($var_29['qaid']);
            $var_29['qid']=$var_14[(integer)$var_29['qid']]; 


            if ($var_12<156 && isset($var_45[$var_29['attribute']]['i18n']) && $var_45[$var_29['attribute']]['i18n'])
            {
                foreach ($var_15 as $var_46)
                {
                    $var_29['language']=$var_46;
                    $var_64 = new class_2;
                    if ($var_29)
                        fn_9($var_29);
                    foreach ($var_29 as $var_60 => $var_61)
                        $var_64->$var_60 = $var_61;
                    $var_34 = $var_64->save();
                }
            }
            else
            {
                $var_64 = new class_2;
                if ($var_29)
                    fn_9($var_29);
                foreach ($var_29 as $var_60 => $var_61)
                    $var_64->$var_60 = $var_61;
                $var_34 = $var_64->save();
            }
            $var_17['question_attributes']++;
        }
    }


    
    if(isset($var_8->var_47))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_47->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 
            $var_29['sqid']=$var_53[(int)$var_29['sqid']]; 

            
            $var_65 = new class_3;
            if ($var_29)
                fn_9($var_29);
            foreach ($var_29 as $var_60 => $var_61)
                $var_65->$var_60 = $var_61;
            $var_34 = $var_65->save();
            $var_17['defaultvalues']++;
        }
    }
    LimeExpressionManager::SetDirtyFlag(); 

    $var_17['newqid']=$var_39;
    $var_17['questions']=1;
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    return $var_17;
}


function fn_2($var_0, $var_66)
{

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Label set') throw new \var_11(500, 'This is not a valid LimeSurvey label set structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_67=buildLabelSetCheckSumArray();
    $var_68=array();
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    $var_17['warnings']=array();

    


    foreach ($var_8->var_69->var_27->var_28 as $var_28)
    {
        $var_29=array();
        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }
        $var_70=$var_29['lid'];
        unset($var_29['lid']); 

        if ($var_29)
            fn_9($var_29);
        
        $var_34 = Yii::app()->var_19->createCommand()->insert('{{labelsets}}', $var_29);
        $var_17['labelsets']++;

        $var_71=getLastInsertID('{{labelsets}}');
        $var_68[$var_70]=$var_71; 
    }


    


    if (isset($var_8->var_72->var_27->var_28))
        foreach ($var_8->var_72->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['lid']=$var_68[$var_29['lid']];
            if ($var_29)
                fn_9($var_29);
            $var_34 = Yii::app()->var_19->createCommand()->insert('{{labels}}', $var_29);
            $var_17['labels']++;
    }

    

    if (isset($_POST['checkforduplicates']))
    {
        foreach (array_values($var_68) as $var_73)
        {
            $var_74="";
            $var_75 = "SELECT code, title, sortorder, language, assessment_value
            FROM {{labels}}
            WHERE lid=".$var_73."
            ORDER BY language, sortorder, code";
            $var_76 = Yii::app()->var_19->createCommand($var_75)->query();
            foreach($var_76->readAll() as $var_78)
            {
                $var_78 = array_values($var_78);
                $var_74 .= implode('.', $var_78);
            } 
            $var_79=dechex(crc32($var_74)*1);
            unset($var_80);

            if (isset($var_67) && $var_66['checkforduplicates']=='on')
            {
                foreach($var_67 as $var_30=>$var_81)
                {
                    if ($var_81 == $var_79)
                    {
                        $var_80=$var_30;
                    }
                }
            }
            if (isset($var_80))
            {
                
                
                $var_54 = "DELETE FROM {{labels}} WHERE lid=$var_73";
                $var_34=Yii::app()->var_19->createCommand($var_54)->execute();
                $var_17['labels']=$var_17['labels']-$var_34;
                $var_54 = "DELETE FROM {{labelsets}} WHERE lid=$var_73";
                $var_34=Yii::app()->var_19->createCommand($var_54)->query();

                $var_17['labelsets']--;
                $var_73=$var_80;
                $var_17['warnings'][]=gT("Label set was not imported because the same label set already exists.")." ".sprintf(gT("Existing LID: %s"),$var_73);

            }
        }
        
    }
    return $var_17;
}

function fn_3($var_0, $var_83, $var_84=NULL, $var_85=NULL)
{
    $var_86 = pathinfo($var_0);
    if (isset($var_86['extension']))
    {
        $var_87 = strtolower($var_86['extension']);
    }
    else
    {
        $var_87 = "";
    }
    if ($var_87 == 'lss')
    {
        return fn_4($var_0, null, $var_84, $var_85, $var_83);
    }
    elseif ($var_87 == 'txt')
    {
        return fn_10($var_0);
    }
    elseif ($var_87 == 'lsa')  
    {
        Yii::import("application.libraries.admin.pclzip.pclzip", true);
        $var_88 = new class_4(array('p_zipname' => $var_0));
        $var_89 = $var_88->listContent();

        if ($var_88->extract(var_92, Yii::app()->getConfig('tempdir') . var_94, var_95, '/(lss|lsr|lsi|lst)$/') == 0)
        {
            unset($var_88);
        }
        
        foreach ($var_89 as $var_96)
        {
            if (pathinfo($var_96['filename'], var_97) == 'lss')
            {
                
                $var_98 = fn_4(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename'], null, null, null, true, false);
                
                Yii::app()->loadHelper("admin/activate");
                $var_100 = activateSurvey($var_98['newsid']);
                unlink(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename']);
                break;
            }
        }
        
        foreach ($var_89 as $var_96)
        {
            if (pathinfo($var_96['filename'], var_97) == 'lsr')
            {
                
                $var_101 = XMLImportResponses(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename'], $var_98['newsid'], $var_98['FieldReMap']);
                $var_98 = array_merge($var_101, $var_98);
                unlink(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename']);
                break;
            }
        }
        
        foreach ($var_89 as $var_96)
        {
            if (pathinfo($var_96['filename'], var_97) == 'lst')
            {
                Yii::app()->loadHelper("admin/token");
                if (Token::createTable($var_98['newsid']))
                {
                    $var_102 = array('tokentablecreated' => true);
                    $var_98 = array_merge($var_102, $var_98);
                    $var_103 = fn_6(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename'], $var_98['newsid']);
                }
                else
                {
                    $var_102 = array('tokentablecreated' => false);
                    $var_103['warnings'][] = gt("Unable to create token table");

                }
                $var_98 = array_merge_recursive($var_103, $var_98);
                $var_98['importwarnings']=array_merge($var_98['importwarnings'],$var_98['warnings']);
                unlink(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename']);
                break;
            }
        }
        
        Yii::app()->var_19->var_104->refresh();
        foreach ($var_89 as $var_96)
        {
            if (pathinfo($var_96['filename'], var_97) == 'lsi' && tableExists("survey_{$var_98['newsid']}_timings"))
            {
                $var_106 = fn_8(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename'], $var_98['newsid'], $var_98['FieldReMap']);
                $var_98 = array_merge($var_106, $var_98);
                unlink(Yii::app()->getConfig('tempdir') . var_94 . $var_96['filename']);
                break;
            }
        }
        return $var_98;
    }
    else
    {
        return null;
    }

}


function fn_4($var_0,$var_7=NULL,$var_84=NULL,$var_107=NULL, $var_108=true, $var_109=true)
{
    Yii::app()->loadHelper('database');


    $var_110 = array();
    if ($var_7 == NULL)
    {
        $var_7 = file_get_contents($var_0);
    }
    $var_8 = @simplexml_load_string($var_7,'SimpleXMLElement',var_9);

    if (!$var_8 || $var_8->var_10!='Survey')
    {
        $var_17['error'] = gT("This is not a valid LimeSurvey survey structure XML file.");
        return $var_17;
    }

    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_111=array();
    $var_112=array();
    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['surveys']=0;
    $var_17['questions']=0;
    $var_17['subquestions']=0;
    $var_17['question_attributes']=0;
    $var_17['groups']=0;
    $var_17['assessments']=0;
    $var_17['quota']=0;
    $var_17['quotals']=0;
    $var_17['quotamembers']=0;
    $var_17['survey_url_parameters']=0;
    $var_17['importwarnings']=array();


    $var_2=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_2[]=(string)$var_5;
    }
    $var_17['languages']=count($var_2);

    

    foreach ($var_8->var_113->var_27->var_28 as $var_28)
    {
        $var_29=array();

        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }

        $var_32=$var_17['oldsid']=$var_29['sid'];
        if($var_107!=NULL)
        {
            $var_29['wishSID']=fn_5($var_107);
        }
        else
        {
            $var_29['wishSID']=$var_32;
        }

        if ($var_12<145)
        {
            if(isset($var_29['private'])) $var_29['anonymized']=$var_29['private'];
            unset($var_29['private']);
            unset($var_29['notification']);
        }

        
        $var_29['active']='N';
        
        $var_29['owner_id']=App()->var_114->var_115;

        if (isset($var_29['bouncetime']) && $var_29['bouncetime'] == '')
        {
            $var_29['bouncetime'] = NULL;
        }

        if (isset($var_29['showXquestions']))
        {
            $var_29['showxquestions']=$var_29['showXquestions'];
            unset($var_29['showXquestions']);
        }
        if (isset($var_29['googleAnalyticsStyle']))
        {
            $var_29['googleanalyticsstyle']=$var_29['googleAnalyticsStyle'];
            unset($var_29['googleAnalyticsStyle']);
        }
        if (isset($var_29['googleAnalyticsAPIKey']))
        {
            $var_29['googleanalyticsapikey']=$var_29['googleAnalyticsAPIKey'];
            unset($var_29['googleAnalyticsAPIKey']);
        }
        if (isset($var_29['allowjumps']))
        {
            $var_29['questionindex']= ($var_29['allowjumps']=="Y")?1:0;
            unset($var_29['allowjumps']);
        }
        
        $var_116=Survey::model()->var_64;
        $var_116['wishSID']=null;
        $var_117=array_diff_key($var_29, $var_116);
        $var_29=array_intersect_key ($var_29,$var_116);
        
        foreach($var_117 as $var_30=>$var_31)
        {
            $var_17['importwarnings'][]=sprintf(gT("This survey setting has not been imported: %s => %s"),$var_30,$var_31);
        }

        if (false == $var_1 = $var_17['newsid'] = Survey::model()->insertNewSurvey($var_29)) {
            throw new \var_11(500, gT("Error").": Failed to insert data [1]<br />");
        }

        $var_17['surveys']++;
    }


    



    foreach ($var_8->var_119->var_27->var_28 as $var_28)
    {

        $var_29=array();
        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }
        if (!in_array($var_29['surveyls_language'],$var_2)) continue;
        
        $var_29['surveyls_survey_id']=$var_1;
        
        if ($var_84 != NULL)
        {
            $var_29['surveyls_title']=$var_84;
        }
        if ($var_108)
        {
            $var_29['surveyls_title']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_title']);
            if (isset($var_29['surveyls_description'])) $var_29['surveyls_description']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_description']);
            if (isset($var_29['surveyls_welcometext'])) $var_29['surveyls_welcometext']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_welcometext']);
            if (isset($var_29['surveyls_urldescription']))$var_29['surveyls_urldescription']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_urldescription']);
            if (isset($var_29['surveyls_email_invite'])) $var_29['surveyls_email_invite']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_email_invite']);
            if (isset($var_29['surveyls_email_remind'])) $var_29['surveyls_email_remind']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_email_remind']);
            if (isset($var_29['surveyls_email_register'])) $var_29['surveyls_email_register']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_email_register']);
            if (isset($var_29['surveyls_email_confirm'])) $var_29['surveyls_email_confirm']=translateLinks('survey', $var_32, $var_1, $var_29['surveyls_email_confirm']);
        }
        if (isset($var_29['surveyls_attributecaptions']) && substr($var_29['surveyls_attributecaptions'],0,1)!='{')
        {
            unset($var_29['surveyls_attributecaptions']);
        }



        if (false == $var_34 = SurveyLanguageSetting::model()->insertNewSurvey($var_29)) {
            throw new \var_11(500, gT("Error").": Failed to insert data [2]<br />");
        }
    }


    


    if (isset($var_8->var_26->var_27->var_28))
    {
        
        $var_27 = $var_8->var_26->var_27;

        foreach ($var_8->var_26->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if (isset($var_29['language']) && !in_array($var_29['language'],$var_2)) continue;
            $var_32=$var_29['sid'];
            $var_29['sid']=$var_1;
            $var_33 = isset($var_29['gid']) ? $var_29['gid'] : null; unset($var_29['gid']); 

            
            if ($var_108)
            {
                $var_29['group_name']=translateLinks('survey', $var_32, $var_1, $var_29['group_name']);
                $var_29['description']=translateLinks('survey', $var_32, $var_1, $var_29['description']);
            }
            
            if (isset($var_110[$var_33]))
            {
                switchMSSQLIdentityInsert('groups',true);
                $var_29['gid']=$var_110[$var_33];
            }
             var_dump($var_29); die();
            if (false == $var_36 = QuestionGroup::model()->insertRecords($var_29)){
                throw new \var_11(500, gT("Error").": Failed to insert data [3]<br />");
            }
            $var_17['groups']++;

            if (!isset($var_110[$var_33]))
            {
                $var_110[$var_33]=$var_36; 
            }
            else
            {
                switchMSSQLIdentityInsert('groups',false);
            }
        }
    }

    

    
    
    if(isset($var_8->var_37))  
    {

        foreach ($var_8->var_37->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if (!in_array($var_29['language'],$var_2) || $var_29['gid']==0) continue;
            $var_32=$var_29['sid'];
            $var_29['sid']=$var_1;
            $var_29['gid']=$var_110[$var_29['gid']];
            $var_38=$var_29['qid']; unset($var_29['qid']); 

            
            if ($var_108)
            {
                $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
                $var_29['help']=translateLinks('survey', $var_32, $var_1, $var_29['help']);
            }
            
            if (isset($var_14[$var_38]))
            {
                $var_29['qid']=$var_14[$var_38];
                switchMSSQLIdentityInsert('questions',true);

            }
            if ($var_29)
                fn_9($var_29);

            if (!$var_109)
            {
                $var_121='archiveimport';
            }
            else
            {
                $var_121='import';
            }
            $var_122 = new class_0($var_121);
            $var_122->setAttributes($var_29, false);

            
            if(!$var_122->validate(array('title')))
            {
                $var_125=$var_122->var_126;
                $var_127=preg_replace("/[^A-Za-z0-9]/", '', $var_125);
                if (is_numeric(substr($var_127,0,1)))
                {
                    $var_127='q' . $var_127;
                }
                $var_122->var_126 =$var_127;
            }

            $var_128 = 0;
            
            while (!$var_122->validate(array('title')))
            {
                if (!isset($var_129))
                {
                    $var_129 = 0;
                    $var_130 = mt_rand(0, 1024);
                }
                else
                {
                    $var_129++;
                }
                $var_127='r' . $var_130  . 'q' . $var_129;
                $var_122->var_126 = $var_127;
                $var_128++;
                if ($var_128 > 10)
                {
                    throw new \var_11(500, gT("Error").": Failed to resolve question code problems after 10 attempts.<br />");
                }
            }
            if (!$var_122->save())
            {
                
                
                
                
                
                
                continue;
            }
            
            if(isset($var_127))
            {
                $var_17['importwarnings'][] = sprintf(gT("Question code %s was updated to %s."),$var_125,$var_127);
                $var_111[$var_125]=$var_127;
                unset($var_127);
                unset($var_125);
            }
            $var_39 = $var_122->var_131;

            if (!isset($var_14[$var_38]))
            {
                $var_14[$var_38]=$var_39;
                $var_17['questions']++;
            }
            else
            {
                switchMSSQLIdentityInsert('questions',false);
            }
        }
    }

    
    if(isset($var_8->var_40))
    {
        foreach ($var_8->var_40->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if (!in_array($var_29['language'],$var_2) || $var_29['gid']==0) continue;
            if (!isset($var_29['mandatory']) || trim($var_29['mandatory'])=='')
            {
                $var_29['mandatory']='N';
            }
            $var_29['sid']=$var_1;
            $var_29['gid']=$var_110[(int)$var_29['gid']];;
            $var_41=(int)$var_29['qid']; unset($var_29['qid']); 
            $var_29['parent_qid']=$var_14[(int)$var_29['parent_qid']]; 

            
            if ($var_108)
            {
                $var_29['question']=translateLinks('survey', $var_32, $var_1, $var_29['question']);
                if (isset($var_29['help'])) $var_29['help']=translateLinks('survey', $var_32, $var_1, $var_29['help']);
            }
            if (isset($var_14[$var_41])){
                $var_29['qid']=$var_14[$var_41];
                switchMSSQLIdentityInsert('questions',true);
            }
            if ($var_29)
                fn_9($var_29);


            if (!$var_109)
            {
                $var_121='archiveimport';
            }
            else
            {
                $var_121='import';
            }
            $var_132 = new class_0($var_121);
            $var_132->setAttributes($var_29, false);
            
            if(!$var_132->validate(array('title')))
            {
                $var_125=$var_132->var_126;
                $var_127=preg_replace("/[^A-Za-z0-9]/", '', $var_125);
                if (is_numeric(substr($var_127,0,1)))
                {
                    $var_127='sq' . $var_127;
                }
                $var_132->var_126 =$var_127;
            }
            $var_128 = 0;
            
            while (!$var_132->validate(array('title')))
            {
                if (!isset($var_129))
                {
                    $var_129 = 0;
                    $var_130 = mt_rand(0, 1024);
                }
                else
                {
                    $var_129++;
                }
                $var_127='r' . $var_130  . 'sq' . $var_129;
                $var_132->var_126 = $var_127;
                $var_128++;
                if ($var_128 > 10)
                {
                    throw new \var_11(500, gT("Error").": Failed to resolve question code problems after 10 attempts.<br />");
                }
            }
            if (!$var_132->save())
            {
                
                
                
                
                
                
                continue;
            }
            
            if(isset($var_127))
            {
                $var_17['importwarnings'][] = sprintf(gT("Title of subquestion %s was updated to %s."),$var_125,$var_127);
                $var_111[$var_125]=$var_127;
                unset($var_127);
                unset($var_125);
            }
            $var_42 = $var_132->var_131;
            if (!isset($var_29['qid']))
            {
                $var_14[$var_41]=$var_42; 
            }
            else
            {
                switchMSSQLIdentityInsert('questions',false);
            }
            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_43))
    {

        foreach ($var_8->var_43->var_27->var_28 as $var_28)
        {
            $var_29=array();

            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if (!in_array($var_29['language'],$var_2) || !isset($var_14[(int)$var_29['qid']])) continue;
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 

            
            if ($var_108)
            {
                $var_29['answer']=translateLinks('survey', $var_32, $var_1, $var_29['answer']);
            }
            if ($var_29)
                fn_9($var_29);

            if (class_1::model()->insertRecords($var_29))
            {
                $var_17['answers']++;
            }
        }
    }

    
    if(isset($var_8->var_44))
    {
        $var_45=questionAttributes(true);
        foreach ($var_8->var_44->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }

            
            if ($var_12 < 170)
            {
                if (isset($var_29['attribute']))
                {
                    if ($var_29['attribute']=='dropdown_dates_year_max')
                    {
                        $var_29['attribute']='date_max';
                    }
                    if ($var_29['attribute']=='dropdown_dates_year_min')
                    {
                        $var_29['attribute']='date_min';
                    }
                }
            }
            unset($var_29['qaid']);
            if (!isset($var_14[(int)$var_29['qid']])) continue;
            $var_29['qid']=$var_14[(integer)$var_29['qid']]; 
            if ($var_12<156 && isset($var_45[$var_29['attribute']]['i18n']) && $var_45[$var_29['attribute']]['i18n'])
            {
                foreach ($var_2 as $var_46)
                {
                    $var_29['language']=$var_46;
                    if ($var_29)
                        fn_9($var_29);

                    if (false == $var_34=class_2::model()->insertRecords($var_29)) {
                        throw new \var_11(500, gT("Error").": Failed to insert data[7]<br />");
                    }
                }
            }
            else
            {
                if (false == $var_34=class_2::model()->insertRecords($var_29)) {
                    throw new \var_11(500, gT("Error").": Failed to insert data[8]<br />");
                }
            }
            $var_17['question_attributes']++;
        }
    }

    
    if(isset($var_8->var_47))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_47->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 
            if (isset($var_14[(int)$var_29['sqid']])) $var_29['sqid']=$var_14[(int)$var_29['sqid']]; 
            if ($var_29)
                fn_9($var_29);
            
            if (false == $var_34=class_3::model()->insertRecords($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[9]<br />");
            }
            $var_17['defaultvalues']++;
        }
    }
    $var_133=reverseTranslateFieldNames($var_32,$var_1,$var_110,$var_14);

    
    if(isset($var_8->var_48))
    {


        $var_17['conditions']=0;
        foreach ($var_8->var_48->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            
            if (isset($var_14[$var_29['qid']]))
            {
                $var_29['qid']=$var_14[$var_29['qid']]; 
            }
            else continue; 
            if ($var_29['cqid'] != 0)
            {
                if (isset($var_14[$var_29['cqid']]))
                {
                    $var_134 = $var_29['cqid']; 
                    $var_29['cqid']=$var_14[$var_29['cqid']]; 
                }
                else continue; 

                list($var_49, $var_50, $var_51) = explode("X",$var_29["cfieldname"],3);

                
                if (!isset($var_110[$var_50]))
                    continue;
            }

            unset($var_29["cid"]);

            
            if ($var_29['cqid'] != 0)
            {
                if (preg_match("/^\+/",$var_49))
                {
                    $var_52 = '+'.$var_1 . "X" . $var_110[$var_50] . "X" . $var_29["cqid"] .substr($var_51,strlen($var_134));
                }
                else
                {
                    $var_52 = $var_1 . "X" . $var_110[$var_50] . "X" . $var_29["cqid"] .substr($var_51,strlen($var_134));
                }
            }
            else
            { 
                $var_52 = $var_29["cfieldname"];
            }
            $var_29["cfieldname"] = $var_52;
            if (trim($var_29["method"])=='')
            {
                $var_29["method"]='==';
            }

            
            if (preg_match("/^@(.*)@$/",$var_29["value"],$var_135))
            {
                if (isset($var_133[$var_135[1]]))
                {
                    $var_136 = '@'.$var_133[$var_135[1]].'@';
                    $var_29["value"] = $var_136;
                }

            }

            
            $var_34=Condition::model()->insertRecords($var_29) or safeDie (gT("Error").": Failed to insert data[10]<br />");
            $var_17['conditions']++;
        }
    }
    

    
    if(isset($var_8->var_137))
    {


        foreach ($var_8->var_137->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            if  ($var_29['gid']>0)
            {
                $var_29['gid']=$var_110[(int)$var_29['gid']]; 
            }

            $var_29['sid']=$var_1; 
            unset($var_29['id']);
            
            if (false == $var_34=Assessment::model()->insertRecords($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[11]<br />");
            }
            $var_17['assessments']++;
        }
    }

    
    if(isset($var_8->var_138))
    {


        foreach ($var_8->var_138->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['sid']=$var_1; 
            $var_139=$var_29['id'];
            unset($var_29['id']);
            
            if (false == $var_34=Quota::model()->insertRecords($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[12]<br />");
            }
            $var_112[$var_139] = getLastInsertID('{{quota}}');
            $var_17['quota']++;
        }
    }

    
    if(isset($var_8->var_140))
    {

        foreach ($var_8->var_140->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['sid']=$var_1; 
            $var_29['qid']=$var_14[(int)$var_29['qid']]; 
            $var_29['quota_id']=$var_112[(int)$var_29['quota_id']]; 
            unset($var_29['id']);
            
            if (false  == $var_34=QuotaMember::model()->insertRecords($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[13]<br />");
            }
            $var_17['quotamembers']++;
        }
    }

    
    if(isset($var_8->var_141))
    {

        foreach ($var_8->var_141->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['quotals_quota_id']=$var_112[(int)$var_29['quotals_quota_id']]; 
            unset($var_29['quotals_id']);
            if (false == $var_34=QuotaLanguageSetting::model()->insertRecords($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data<br />");
            }
            $var_17['quotals']++;
        }
    }

    
    if(isset($var_8->var_142))
    {

        foreach ($var_8->var_142->var_27->var_28 as $var_28)
        {
            $var_29=array();
            foreach ($var_28 as $var_30=>$var_31)
            {
                $var_29[(string)$var_30]=(string)$var_31;
            }
            $var_29['sid']=$var_1; 
            if (isset($var_29['targetsqid']) && $var_29['targetsqid']!='')
            {
                $var_29['targetsqid'] =$var_14[(int)$var_29['targetsqid']]; 
            }
            if (isset($var_29['targetqid']) && $var_29['targetqid']!='')
            {
                $var_29['targetqid'] =$var_14[(int)$var_29['targetqid']]; 
            }
            unset($var_29['id']);
            if (false == $var_34=SurveyURLParameter::model()->insertRecord($var_29)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[14]<br />");
            }
            $var_17['survey_url_parameters']++;
        }
    }

    
    Permission::model()->giveAllSurveyPermissions(App()->var_114->var_115,$var_1);
    $var_133=reverseTranslateFieldNames($var_32,$var_1,$var_110,$var_14);
    $var_17['FieldReMap']=$var_133;
    LimeExpressionManager::SetSurveyId($var_1);
    translateInsertansTags($var_1,$var_32,$var_133);
    replaceExpressionCodes($var_1,$var_111);
    if (count($var_111)) {
          array_unshift($var_17['importwarnings'] , "<span class='warningtitle'>".gT('Attention: Several question codes were updated. Please check these carefully as the update  may not be perfect with customized expressions.').'</span>');
    }
    LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
    LimeExpressionManager::UpgradeConditionsToRelevance($var_1);
    return $var_17;
}


function fn_5($var_32)
{
    Yii::app()->loadHelper('database');
    $var_54 = "SELECT sid FROM {{surveys}} WHERE sid=$var_32";

    $var_145 = Yii::app()->var_19->createCommand($var_54)->queryRow();

    
    if($var_145!==false)
    {
        
        do
        {
            $var_1 = randomChars(5,'123456789');
            $var_54 = "SELECT sid FROM {{surveys}} WHERE sid=$var_1";
            $var_145 = Yii::app()->var_19->createCommand($var_54)->queryRow();
        }
        while ($var_145!==false);

        return $var_1;
    }
    else
    {
        return $var_32;
    }
}


function fn_6($var_0,$var_147,$var_148=true)
{
    Yii::app()->loadHelper('database');

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    $var_17['warnings']=array();
    if ($var_8->var_10!='Tokens')
    {
        $var_17['error'] = gT("This is not a valid token data XML file.");
        return $var_17;
    }

    if (!isset($var_8->var_149->var_150))
    {
        $var_17['tokens']=0;
        return $var_17;
    }

    $var_17['tokens']=0;
    $var_17['tokenfieldscreated']=0;

    if ($var_148)
    {
        
        $var_151=array();
        foreach ($var_8->var_149->var_150->var_152 as $var_153 )
        {
            $var_151[]=(string)$var_153;
        }
        
        $var_154=Yii::app()->var_19->getSchema()->getTable("{{tokens_$var_147}}",true);
        $var_154=array_keys($var_154->var_157);
        $var_158=array_diff($var_151, $var_154);
        Yii::app()->loadHelper('update/updatedb');

        foreach ($var_158 as $var_159)
        {
            if (strpos($var_159,'attribute')!==false)
            {
                addColumn('{{tokens_'.$var_147.'}}',$var_159, 'string');
            }
        }
    }

    switchMSSQLIdentityInsert('tokens_'.$var_147,true);
	foreach ($var_8->var_149->var_27->var_28 as $var_28)
    {
        $var_29=array();

        foreach ($var_28 as $var_30=>$var_31)
        {
            $var_29[(string)$var_30]=(string)$var_31;
        }

		$var_160 = Token::create($var_147);
		$var_160->setAttributes($var_29, false);
        if (!$var_160->save())
        {
            $var_17['warnings'][]=gT("Skipped tokens entry:").' '. implode('. ',$var_160->errors['token']);
        };
        $var_17['tokens']++;
    }
    switchMSSQLIdentityInsert('tokens_'.$var_147,false);
    if (Yii::app()->var_19->getDriverName() == 'pgsql')
    {
        try {Yii::app()->var_19->createCommand("SELECT pg_catalog.setval(pg_get_serial_sequence('{{tokens_".$var_147."}}', 'tid'), (SELECT MAX(tid) FROM {{tokens_".$var_147."}}))")->execute();} catch(var_162 $var_163) {};
    }
    return $var_17;
}


function var_164($var_0,$var_147,$var_165=array())
{
    Yii::app()->loadHelper('database');


    switchMSSQLIdentityInsert('survey_'.$var_147, true);
    $var_17['responses']=0;
    $var_166 = new class_5();
    $var_166->open($var_0);
    $var_169 = Yii::app()->var_19->var_104->getTable('{{survey_'.$var_147.'}}')->getColumnNames();
    while ($var_166->read()) {
        if ($var_166->var_171 === 'LimeSurveyDocType' && $var_166->var_172 == var_167::var_173)
        {
            $var_166->read();
            if ($var_166->var_31!='Responses')
            {
                $var_17['error'] = gT("This is not a valid response data XML file.");
                return $var_17;
            }
        }
        if ($var_166->var_171 === 'rows' && $var_166->var_172 == var_167::var_173)
        {
            while ($var_166->read()) {
                if ($var_166->var_171 === 'row' && $var_166->var_172 == var_167::var_173)
                {
                    $var_174=array();
                    while ($var_166->read() && $var_166->var_171 != 'row') {
                        $var_175=$var_166->var_171;
                        if ($var_175[0]=='_') $var_175=substr($var_175,1);
                        $var_175=str_replace('-','
                        if (isset($aFieldReMap[$sFieldname]))
                        {
                            $sFieldname=$aFieldReMap[$sFieldname];
                        }
                        if (!$oXMLReader->isEmptyElement)
                        {
                            $oXMLReader->read();
                            if(in_array($sFieldname,$DestinationFields)) 
                                $aInsertData[$sFieldname]=$oXMLReader->value;
                            $oXMLReader->read();
                        }else
                        {
                            if(in_array($sFieldname,$DestinationFields))
                                $aInsertData[$sFieldname]='';
                        }
                    }

                    if (false == $var_34 = class_6::model($var_147)->insertRecords($var_174)) {
                        throw new \var_11(500, gT("Error") . ": Failed to insert data[16]<br />");
                    }
                    $var_17['responses']++;
                }
            }

        }
    }

    switchMSSQLIdentityInsert('survey_'.$var_147,false);
    if (Yii::app()->var_19->getDriverName() == 'pgsql')
    {
        try {Yii::app()->var_19->createCommand("SELECT pg_catalog.setval(pg_get_serial_sequence('{{survey_".$var_147."}}', 'id'), (SELECT MAX(id) FROM {{survey_".$var_147."}}))")->execute();} catch(var_162 $var_163) {};
    }
    return $var_17;
}


function fn_7($var_0,$var_176,$var_177=array())
{

    
    if(!isset($var_177['bDeleteFistLine'])){$var_177['bDeleteFistLine']=true;} 
    if(!isset($var_177['sExistingId'])){$var_177['sExistingId']="ignore";} 
    if(!isset($var_177['bNotFinalized'])){$var_177['bNotFinalized']=false;} 
    if(!isset($var_177['sCharset']) || !$var_177['sCharset']){$var_177['sCharset']="utf8";}
    if(!isset($var_177['sSeparator'])){$var_177['sSeparator']="\t";}
    if(!isset($var_177['sQuoted'])){$var_177['sQuoted']="\"";}
    
    if (!array_key_exists($var_177['sCharset'], aEncodingsArray())) {
        $var_177['sCharset']="utf8";
    }

    
    $var_178=array();
    
    $var_179 = fopen($var_0, "r"); 
    while (!feof($var_179))
    {
        $var_180 = fgets($var_179); 
        $var_181[] = mb_convert_encoding($var_180, "UTF-8", $var_177['sCharset']);
    }
    
    fclose($var_179);
    if($var_177['bDeleteFistLine']){
        array_shift($var_181);
    }

    $var_182 = Yii::app()->var_19->getSchema()->getTable(class_6::model($var_176)->tableName())->getColumnNames();
    
    $var_183=str_getcsv(array_shift($var_181),$var_177['sSeparator'],$var_177['sQuoted']);
    $var_184=LimeExpressionManager::getLEMqcode2sgqa($var_176);
    $var_185=array();
    if(!$var_183){
        $var_178['errors'][]=gT("File seems empty or has only one line");
        return $var_178;
    }
    
    foreach($var_182 as $var_153){
        if(in_array($var_153,$var_183)){ 
            $var_185[$var_153]=array_search($var_153,$var_183);
        }elseif(in_array($var_153,$var_184)){ 
            $var_186=array_search($var_153,$var_184);
            if(in_array($var_186,$var_183)){
                $var_185[$var_153]=array_search($var_186,$var_183);
            }elseif($var_177['bForceImport']){
                

                
                if( ! isset($var_187)){
                    foreach($var_183 as $var_188=>$var_171){
                        if(preg_match('/^\d+X\d+X\d+/', $var_171)){
                            $var_187 = $var_188;
                            break;
                        }
                    }
                }
                
                if( ! isset($var_189)){
                    foreach($var_182 as $var_188=>$var_171){
                        if(preg_match('/^\d+X\d+X\d+/', $var_171)){
                            $var_189 = $var_188;
                            break;
                        }
                    }
                }

                
                if(isset($var_189,$var_187)){
                    $var_190 = (array_search($var_153,$var_182)-$var_189) + $var_187;
                    if($var_190 < sizeof($var_183)){
                        $var_185[$var_153] = $var_190;
                    }else{
                        $var_191 = true;
                        break;
                    }
                }
            }
        }
    }
    
    if(isset($var_191)){
        $var_178['errors'][]=gT("Import failed: Forced import was requested but the input file doesn't contain enough columns to fill the survey.");
        return $var_178;
    }

    
    foreach($var_185 as $var_192=>$var_129){
        if(preg_match('/^\d+X\d+X\d+/', $var_192)){
            $var_193 = true;
            break;
        }
    }
    if( ! isset($var_193)){
        $var_178['errors'][]=gT("Import failed: No answers could be mapped.");
        return $var_178;
    }

    
    
    $var_194=0;
    $var_195=0;
    $var_196=array();
    $var_197=array();
    $var_198=array();
    $var_199=array();

    $var_200=0; 
    
    $var_201=array_search('id', $var_183); 
    if(is_int($var_201)){unset($var_185['id']);}
    $var_202=array_search('submitdate', $var_183); 
    if(is_int($var_202)){unset($var_185['submitdate']);}
    $var_203=(is_int($var_201))?$var_201:0;

    
    while($var_204=array_shift($var_181)){
        $var_194++;
        $var_205=false;
        $var_206=str_getcsv($var_204,$var_177['sSeparator'],$var_177['sQuoted']);
        if($var_201!==false){
            $var_207 = class_6::model($var_176)->findByPk($var_206[$var_201]);
            if($var_207)
            {
                $var_205=true;
                $var_199[]=$var_206[$var_201];
                
                switch ($var_177['sExistingId'])
                {
                    case 'replace':
                        class_6::model($var_176)->deleteByPk($var_206[$var_201]);
                        class_6::sid($var_176);
                        $var_207 = new class_6;
                        break;
                    case 'replaceanswers':
                        break;
                    case 'renumber':
                        class_6::sid($var_176);
                        $var_207 = new class_6;
                        break;
                    case 'skip':
                    case 'ignore':
                    default:
                        $var_207=false; 
                        break;
                }
            }
            else
            {
                class_6::sid($var_176);
                $var_207 = new class_6;
            }
        }else{
            class_6::sid($var_176);
            $var_207 = new class_6;
        }
        if($var_207){
            
            if(is_int($var_201)) 
            {
                if(!$var_205) 
                {
                    $var_207->var_115=$var_206[$var_201];
                    $var_200=($var_206[$var_201]>$var_200)?$var_206[$var_201]:$var_200;
                }
                elseif($var_177['sExistingId']=='replace' || $var_177['sExistingId']=='replaceanswers')
                {
                    $var_207->var_115=$var_206[$var_201];
                }
            }
            if($var_177['bNotFinalized'])
            {
                $var_207->var_209=new class_7('NULL');
            }
            elseif(is_int($var_202))
            {
                if( $var_206[$var_202]=='{question_not_shown}' || trim($var_206[$var_202]=='')){
                    $var_207->var_209 = new class_7('NULL');
                }else{
                    
                    $var_207->var_209=$var_206[$var_202];
                }
            }
            foreach($var_185 as $var_153=>$var_210)
            {
                if( $var_206[$var_210]=='{question_not_shown}'){
                    $var_207->$var_153 = new class_7('NULL');
                }else{
                    $var_211=str_replace(array("{quote}","{tab}","{cr}","{newline}","{lbrace}"),array("\"","\t","\r","\n","{"),$var_206[$var_210]);
                    $var_207->$var_153 = $var_211;
                }
            }
            
            $var_212 = Yii::app()->var_19->beginTransaction();
            try
            {
                if (isset($var_207->var_115) && !is_null($var_207->var_115))
                {
                    switchMSSQLIdentityInsert('survey_'.$var_176, true);
                    $var_214=true;
                }
                if($var_207->save())
                {
                    $var_212->commit();
                    if($var_205 && $var_177['sExistingId']!='renumber')
                    {
                        $var_197[]=$var_206[$var_203];
                    }
                    else
                    {
                        $var_196[]=$var_206[$var_203];
                    }
                }
                else 
                {
                    $var_212->rollBack();
                    $var_198[]=$var_206[$var_203];
                }
                if (isset($var_214) && $var_214==true){
                    switchMSSQLIdentityInsert('survey_'.$var_176, false);
                    $var_214=false;
                }
            }
            catch(var_162 $var_163) {}

        }
    }
    
    
    
    if (Yii::app()->var_19->var_217=='pgsql')
    {

        $var_218= Yii::app()->var_19->getSchema()->getTable("{{survey_{$var_176}}}")->var_219;
        $var_220=Yii::app()->var_19->createCommand("SELECT last_value FROM  {$var_218}")->queryScalar();
        if($var_220<$var_200)
        {
            $var_221 = "SELECT setval(pg_get_serial_sequence('{{survey_{$var_176}}}', 'id'),{$var_200},false);";
            $var_34 = Yii::app()->var_19->createCommand($var_221)->execute();
        }
    }

    
    
    if($var_194){
        $var_178['success'][]=sprintf(gT("%s response lines in your file."),$var_194);
    }else{
        $var_178['errors'][]=gT("No response lines in your file.");
    }
    if(count($var_196)){
        $var_178['success'][]=sprintf(gT("%s responses were inserted."),count($var_196));
        
    }
    if(count($var_197)){
        $var_178['success'][]=sprintf(gT("%s responses were updated."),count($var_197));
    }
    if(count($var_198)){
        $var_178['errors'][]=sprintf(gT("%s responses cannot be inserted or updated."),count($var_198));
    }
    if(count($var_199) && ($var_177['sExistingId']=='skip' || $var_177['sExistingId']=='ignore'))
    {
        $var_178['warnings'][]=sprintf(gT("%s responses already exist."),count($var_199));
    }
    return $var_178;
}


function fn_8($var_0,$var_147,$var_165=array())
{

    Yii::app()->loadHelper('database');

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Timings')
    {
        $var_17['error'] = gT("This is not a valid timings data XML file.");
        return $var_17;
    }

    $var_17['responses']=0;

    $var_2=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_2[]=(string)$var_5;
    }
    $var_17['languages']=count($var_2);
     
    if (!isset($var_8->var_222->var_27))
    {
        return $var_17;
    }
    switchMSSQLIdentityInsert('survey_'.$var_147.'_timings',true);
    foreach ($var_8->var_222->var_27->var_28 as $var_28)
    {
        $var_29=array();

        foreach ($var_28 as $var_30=>$var_31)
        {
            if ($var_30[0]=='_') $var_30=substr($var_30,1);
            if (isset($var_165[substr($var_30,0,-4)]))
            {
                $var_30=$var_165[substr($var_30,0,-4)].'time';
            }
            $var_29[$var_30]=(string)$var_31;
        }

        if (false == $var_34 = SurveyTimingDynamic::model($var_147)->insertRecords($var_29)) {
            throw new \var_11(500, gT("Error").": Failed to insert data[17]<br />");
        }

        $var_17['responses']++;
    }
    switchMSSQLIdentityInsert('survey_'.$var_147.'_timings',false);

    return $var_17;
}


function fn_9(&$var_223)
{
    if(Yii::app()->getConfig('filterxsshtml') && !App()->var_114->checkAccess('superadmin'))
    {
        $var_225 = new class_8();
        $var_225->var_66 = array('URI.AllowedSchemes'=>array(
        'http' => true,
        'https' => true,
        ));
        foreach($var_223 as &$var_31)
        {
            $var_31 = $var_225->purify($var_31);
        }
    }
}


function fn_10($var_0)
{


    $var_29=array();
    $var_17=array();
    $var_17['error']=false;
    $var_227 = 'en';   

    $var_228='';
    $var_179 = fopen($var_0, 'r');
    $var_229 = fread($var_179, 2);
    rewind($var_179);
    $var_230 = questionAttributes();

    
    if($var_229 === chr(0xff).chr(0xfe)  || $var_229 === chr(0xfe).chr(0xff)){
        
        $var_228 = 'UTF-16';
    } else {
        $var_231 = fread($var_179, 1000) + 'e'; 
        
        rewind($var_179);

        $var_228 = mb_detect_encoding($var_231 , 'UTF-8, UTF-7, ASCII, EUC-JP,SJIS, eucJP-win, SJIS-win, JIS, ISO-2022-JP');
    }
    if ($var_228 && $var_228 != 'UTF-8'){
        stream_filter_append($var_179, 'convert.iconv.'.$var_228.'/UTF-8');
    }

    $var_232 = stream_get_contents($var_179);
    fclose($var_179);

    
    $var_232 = str_replace("0xC20xA0",' ',$var_232);
    $var_233 = explode("\n",$var_232);
    $var_28 = array_shift($var_233);
    $var_234 = explode("\t",$var_28);
    $var_235 = array();
    foreach ($var_234 as $var_236)
    {
        $var_235[] = trim($var_236);
    }
    
    $var_235[0] = preg_replace("/^\W+/","",$var_235[0]);
    if (preg_match('/class$/',$var_235[0]))
    {
        $var_235[0] = 'class';   
    }

    $var_237 = array();
    foreach ($var_233 as $var_238)
    {
        $var_239 = array();
        $var_28 = explode("\t",$var_238);
        for ($var_188 = 0; $var_188 < count($var_235); ++$var_188)
        {
            $var_81 = (isset($var_28[$var_188]) ? $var_28[$var_188] : '');
            
            if (preg_match('/^".*"$/',$var_81))
            {
                $var_81 = str_replace('""','"',substr($var_81,1,-1));
            }
            $var_239[$var_235[$var_188]] = $var_81;
        }
        $var_237[] = $var_239;
    }

    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['surveys']=0;
    $var_17['languages']=0;
    $var_17['questions']=0;
    $var_17['subquestions']=0;
    $var_17['question_attributes']=0;
    $var_17['groups']=0;
    $var_17['importwarnings']=array();
    
    $var_17['assessments']=0;
    $var_17['quota']=0;
    $var_17['quotamembers']=0;
    $var_17['quotals']=0;

    
    $var_240 = array();
    $var_241 = array();
    foreach ($var_237 as $var_28)
    {
        switch($var_28['class'])
        {
            case 'S':
                if (isset($var_28['text']) && $var_28['name'] != 'datecreated')
                {
                    $var_240[$var_28['name']] = $var_28['text'];
                }
                break;
            case 'SL':
                if (!isset($var_241[$var_28['language']]))
                {
                    $var_241[$var_28['language']] = array();
                }
                if (isset($var_28['text']))
                {
                    $var_241[$var_28['language']][$var_28['name']] = $var_28['text'];
                }
                break;
        }
    }

    $var_32 = 1;
    if (isset($var_240['sid']))
    {
        $var_32 = (int) $var_240['sid'];
    }

    
    $var_240['startdate']=NULL;
    $var_240['active']='N';
   
    $var_1 = Survey::model()->insertNewSurvey($var_240) ; 
    if ($var_1==false)
    {
        $var_17['error'] = Survey::model()->getErrors();
        $var_17['bFailed'] = true;
        return $var_17;
    }
    $var_240['sid']=$var_1;
    $var_17['surveys']++;
    $var_17['newsid']=$var_1;

    $var_243=0;
    $var_244=0;    
    $var_131=0;
    $var_245=0;    
    $var_246='T';
    $var_247=0;    

    
    $var_248='Missing Title';
    foreach ($var_241 as $var_249 => $var_29)
    {
        $var_29['surveyls_survey_id'] = $var_1;
        $var_29['surveyls_language'] = $var_249;
        if (isset($var_29['surveyls_title']))
        {
            $var_248 = $var_29['surveyls_title'];
        }
        else
        {
            $var_29['surveyls_title'] = $var_248;
        }


        $var_34 = SurveyLanguageSetting::model()->insertNewSurvey($var_29);
        if(!$var_34){
            $var_17['error'][] = gT("Error")." : ".gT("Failed to insert survey language");
            break;
        }
        $var_17['languages']++;
    }

    $var_250=array();
    $var_251=array();
    $var_252=array();

    if (isset($var_240['language']))
    {
        $var_227 = $var_240['language'];    
    }

    $var_253 = 1;
    $var_254='';
    foreach ($var_237 as $var_28)
    {
        $var_253 += 1;
        switch($var_28['class'])
        {
            case 'G':
                
                $var_29 = array();
                $var_29['sid'] = $var_1;
                $var_255 = ((!empty($var_28['name']) ? $var_28['name'] : 'G' . $var_244));
                $var_256 = (!empty($var_28['language']) ? $var_28['language'] : $var_227);
                
                
                
                if ($var_254!=$var_256)    
                {
                    $var_257=0;
                }
                $var_254=$var_256;
                
                $var_258=(!empty($var_28['type/scale']) ? $var_28['type/scale'] : 'G'.$var_257++);
                $var_29['group_name'] = $var_255;
                $var_29['grelevance'] = (isset($var_28['relevance']) ? $var_28['relevance'] : '');
                $var_29['description'] = (isset($var_28['text']) ? $var_28['text'] : '');
                $var_29['language'] = $var_256;
                $var_29['randomization_group'] = (isset($var_28['random_group']) ? $var_28['random_group'] : '');

                
                if (isset($var_250[$var_258]))
                {
                    $var_243 = $var_250[$var_258]['gid'];
                    $var_29['gid'] = $var_243;
                    $var_29['group_order'] = $var_250[$var_258]['group_order'];
                }
                else
                {
                    $var_29['group_order'] = $var_244;
                }
                $var_36 = QuestionGroup::model()->insertRecords($var_29);
                if(!$var_36){
                    $var_17['error'][] = gT("Error")." : ".gT("Failed to insert group").". ".gT("Text file row number ").$var_253." (".$var_255.")";
                    break;
                }
                if (!isset($var_250[$var_258]))
                {
                    $var_17['groups']++;
                    $var_243=$var_36;
                    $var_250[$var_258]['gid']=$var_243;
                    $var_250[$var_258]['group_order']=$var_244++;
                }
                $var_245=0;    
                break;

            case 'Q':
                
                $var_29 = array();
                $var_29['sid'] = $var_1;
                $var_246 = (isset($var_28['type/scale']) ? $var_28['type/scale'] : 'T');
                $var_259 = (isset($var_28['name']) ? $var_28['name'] : 'Q' . $var_245);
                $var_29['gid'] = $var_243;
                $var_29['type'] = $var_246;
                $var_29['title'] = $var_259;
                $var_29['question'] = (isset($var_28['text']) ? $var_28['text'] : '');
                $var_29['relevance'] = (isset($var_28['relevance']) ? $var_28['relevance'] : '');
                $var_29['preg'] = (isset($var_28['validation']) ? $var_28['validation'] : '');
                $var_29['help'] = (isset($var_28['help']) ? $var_28['help'] : '');
                $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                $var_29['mandatory'] = (isset($var_28['mandatory']) ? $var_28['mandatory'] : '');
                $var_260 = $var_29['other'] = (isset($var_28['other']) ? $var_28['other'] : 'N'); 
                $var_29['same_default'] = (isset($var_28['same_default']) ? $var_28['same_default'] : 0);
                $var_29['parent_qid'] = 0;

                
                $var_261="G{$var_243}_".$var_259;
                if (isset($var_251[$var_261]))
                {
                    $var_245 = $var_251[$var_261]['question_order'];
                    $var_131 = $var_251[$var_261]['qid'];
                    $var_29['qid']  = $var_131;
                    $var_29['question_order'] = $var_245;
                }
                else
                {
                    $var_29['question_order'] = $var_245;
                }
                
                $var_34 = class_0::model()->insertRecords($var_29);
                if(!$var_34){
                    $var_17['error'][] = gT("Error")." : ".gT("Could not insert question").". ".gT("Text file row number ").$var_253." (".$var_259.")";
                    break;
                }
                $var_39 = $var_34;
                if (!isset($var_251[$var_261]))
                {
                    $var_17['questions']++;
                    $var_131=$var_39; 
                    $var_251[$var_261]['qid'] = $var_131;
                    $var_251[$var_261]['question_order'] = $var_245++;
                }
                $var_247=0;    
                $var_262 = 0;    
                
                foreach ($var_28 as $var_30=>$var_81)
                {
                    switch($var_30)
                    {
                        case 'class':
                        case 'type/scale':
                        case 'name':
                        case 'text':
                        case 'validation':
                        case 'relevance':
                        case 'help':
                        case 'language':
                        case 'mandatory':
                        case 'other':
                        case 'same_default':
                        case 'default':
                            break;
                        default:
                            if ($var_30 != '' && $var_81 != '')
                            {
                                $var_29 = array();
                                $var_29['qid'] = $var_131;
                                
                                if (isset($var_230[$var_246][$var_30]['i18n']) && $var_230[$var_246][$var_30]['i18n']==1)
                                {
                                    $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                                }
                                else
                                {
                                    $var_29['language'] = NULL;
                                }
                                $var_29['attribute'] = $var_30;
                                $var_29['value'] = $var_81;
                                $var_34=class_2::model()->insertRecords($var_29);
                                if(!$var_34){
                                    $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert question attribute").". ".gT("Text file row number ").$var_253." ({$var_30})";
                                    break;
                                }
                                $var_17['question_attributes']++;
                            }
                            break;
                    }
                }

                
                if (isset($var_28['default']))
                {
                    $var_29=array();
                    $var_29['qid'] = $var_131;
                    $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                    $var_29['defaultvalue'] = $var_28['default'];
                    $var_34 = class_3::model()->insertRecords($var_29);
                    if(!$var_34){
                        $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_253;
                        break;
                    }
                    $var_17['defaultvalues']++;
                }
                break;

            case 'SQ':
                $var_263 = (isset($var_28['name']) ? $var_28['name'] : 'SQ' . $var_262);
                if ($var_246 == 'O' || $var_246 == '|')
                {
                    ;   
                }
                elseif ($var_263 == 'other' && $var_260=="Y") 
                {
                    if($var_246=="!" || $var_246=="L")
                    {
                        
                        if (isset($var_28['default']) && $var_28['default']!="")
                        {
                            $var_29=array();
                            $var_29['qid'] = $var_131;
                            $var_29['specialtype'] = 'other';
                            $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                            $var_29['defaultvalue'] = $var_28['default'];
                            $var_34 = class_3::model()->insertRecords($var_29);
                            if(!$var_34){
                                $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_253;
                                break;
                            }
                            $var_17['defaultvalues']++;
                        }
                    }
                }
                else
                {
                    $var_29 = array();
                    $var_264 = (isset($var_28['type/scale']) ? $var_28['type/scale'] : 0);
                    $var_29['sid'] = $var_1;
                    $var_29['gid'] = $var_243;
                    $var_29['parent_qid'] = $var_131;
                    $var_29['type'] = $var_246;
                    $var_29['title'] = $var_263;
                    $var_29['question'] = (isset($var_28['text']) ? $var_28['text'] : '');
                    $var_29['relevance'] = (isset($var_28['relevance']) ? $var_28['relevance'] : '');
                    $var_29['preg'] = (isset($var_28['validation']) ? $var_28['validation'] : '');
                    $var_29['help'] = (isset($var_28['help']) ? $var_28['help'] : '');
                    $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                    $var_29['mandatory'] = (isset($var_28['mandatory']) ? $var_28['mandatory'] : '');
                    $var_29['scale_id'] = $var_264;
                    
                    $var_265 = "G{$var_243}Q{$var_131}_{$var_264}_{$var_263}";
                    if (isset($var_252[$var_265]))
                    {
                        $var_245 = $var_252[$var_265]['question_order'];
                        $var_266 = $var_252[$var_265]['sqid'];
                        $var_29['question_order'] = $var_245;
                        $var_29['qid'] = $var_266;
                    }
                    else
                    {
                        $var_29['question_order'] = $var_245;
                    }
                    
                    $var_42 = class_0::model()->insertRecords($var_29);
                    if(!$var_42){
                        $var_17['error'][] = gT("Error")." : ".gT("Could not insert subquestion").". ".gT("Text file row number ").$var_253." (".$var_259.")";
                        break;
                    }
                    if (!isset($var_252[$var_265]))
                    {
                        $var_252[$var_265]['question_order'] = $var_245++;
                        $var_266=$var_42; 
                        $var_252[$var_265]['sqid'] = $var_266;
                        $var_17['subquestions']++;
                    }

                    
                    if (isset($var_28['default']) && $var_28['default']!="")
                    {
                        $var_29=array();
                        $var_29['qid'] = $var_131;
                        $var_29['sqid'] = $var_266;
                        $var_29['scale_id'] = $var_264;
                        $var_29['language'] = (isset($var_28['language']) ? $var_28['language'] : $var_227);
                        $var_29['defaultvalue'] = $var_28['default'];
                        $var_34 = class_3::model()->insertRecords($var_29);
                        if(!$var_34){
                            $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_253;
                            break;
                        }
                        $var_17['defaultvalues']++;
                    }
                }
                break;
            case 'A':
                $var_29 = array();
                $var_29['qid'] = $var_131;
                $var_29['code'] = (isset($var_28['name']) ? $var_28['name'] : 'A' . $var_247);
                $var_29['answer'] = (isset($var_28['text']) ? $var_28['text'] : '');
                $var_29['scale_id'] = (isset($var_28['type/scale']) ? $var_28['type/scale'] : 0);
                $var_29['language']= (isset($var_28['language']) ? $var_28['language'] : $var_227);
                $var_29['assessment_value'] = (int) (isset($var_28['relevance']) ? $var_28['relevance'] : '');
                $var_29['sortorder'] = ++$var_247;
                $var_34 = class_1::model()->insertRecords($var_29); 
                if(!$var_34){
                    $var_17['error'][] = gT("Error")." : ".gT("Could not insert answer").". ".gT("Text file row number ").$var_253;
                }
                $var_17['answers']++;
                break;
        }

    }

    
    if(is_array($var_17['error']))
    {
        $var_34 = Survey::model()->deleteSurvey($var_1);
    }
    else
    {
        LimeExpressionManager::SetSurveyId($var_1);
        LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
        LimeExpressionManager::UpgradeConditionsToRelevance($var_1);
    }

    return $var_17;
}
