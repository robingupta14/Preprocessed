<?php



















class class_0 extends var_0 {
    protected $var_1 = array(
        'showall'=>'Showall',
        'show'=>'Show'
    );

    static function fn_0() { return gt("Page Not Found"); }
    static function fn_1() { return gt("This controller handles routing to the appropriate place when pages are not found."); }
    static function fn_2() { return false; }
    static function fn_3() { return false; }
    static function fn_4() { return false; }

    public function fn_5() {
        global $var_2;

        $var_3 = array_merge(array('controller'=>'notfound', 'action'=>'page_not_found'), $var_2->var_4);
        header("Refresh: 0; url=".$var_2->makeLink($var_3), false, 404);
    }

    public function fn_6() {
        global $var_2;

        header(':', true, 404);
        $var_6 = $var_2->var_6;
        unset(
            $var_6['controller'],
            $var_6['action']
        );
        $var_7 = empty($var_6[0]) ? '' : $var_6[0];
        if (empty($var_7) && !empty($var_6['title'])) $var_7 = $var_6['title'];
        expCSS::pushToHead(array(

	        "link"=>$var_8->var_9."css/results.css",
	        )
	    );
        
        if (get_magic_quotes_gpc()) {
            $var_7 = stripslashes($var_7);
        }
        $var_7 = expString::escape(htmlspecialchars($var_7));

        
        if ($var_7 == var_10) {
            self::fn_7();
        } elseif ($var_7 == var_11) {
            self::fn_8();
        } elseif ($var_7 == var_12) {
            self::fn_9();
        }

        $var_13 = new class_1();
		$var_14 = new class_2(array(
			'model'=>'search',
			'controller'=>$var_8->var_6['controller'],
			'action'=>$var_8->var_6['action'],
			'records'=>$var_13->getSearchResults($var_7, false, 0, 30),
			
            'limit'=>10,
			'order'=>'score',
			'dir'=>'DESC',
            'page'=>(isset($var_8->var_6['page']) ? $var_8->var_6['page'] : 1),
        ));

        assign_to_template(array(
            'page'=>$var_14,
            'terms'=>$var_7
        ));
    }

    public static function fn_7() {
        header(':', true, 404);
        
        
    }

    public static function fn_8() {
        header(':', true, 403);
        
    }

    public static function fn_9() {
        header(':', true, 500);
        
    }

}

?>