<?php

function fn_0() {
	$var_0 = fn_2();
	$var_1 = $var_0->query("select valeur from ".$GLOBALS['pre']."misc WHERE type = 'admin' AND intitule = 'api'");
	return $var_1->fetch(var_4::var_5);
}

function fn_1() {
    $var_0 = fn_2();
	$var_6 = fn_3();
	if (count($var_6) > 0 && !array_search($_SERVER['REMOTE_ADDR'], $var_6)) {
		fn_9('IPWHITELIST');
	}
}

function fn_2() {
	try
	{
		$var_0 = new class_0("mysql:host=".$GLOBALS['server'].";dbname=".$GLOBALS['database'], $GLOBALS['user'], $GLOBALS['pass']);
		return ($var_0);
	}
	catch (var_7 $var_8) {}

}

function fn_3() {
	$var_9 = array();
	$var_0 = fn_2();
	$var_1 = $var_0->query("select value from ".$GLOBALS['pre']."api WHERE type = 'ip'");
	while ($var_10 = $var_1->fetch())
	{
		array_push($var_9, $var_10['value']);
	}

	return $var_9;
}

function fn_4() {
	$var_0 = fn_2();
	$var_1 = $var_0->query("select value from ".$GLOBALS['pre']."api WHERE type = 'key'");

	return $var_1->fetch(var_4::var_5);
}

function fn_5() {
	$var_0 = fn_2();
	$var_1 = $var_0->query("select rand_key from ".$GLOBALS['pre']."keys limit 0,1");

	$var_11 = $var_1->fetch(var_4::var_12);

	return $var_11->var_13;
}

function fn_6 () {
	header('HTTP/1.1 402 Payment Required');
}

function fn_7 () {
	if(fn_10($GLOBALS['apikey'])) {
		$var_0 = fn_2();
		$var_13 = fn_5();

		if ($GLOBALS['request'][0] == "write") {
			if($GLOBALS['request'][1] == "category") {
				$var_14 = explode(';',$GLOBALS['request'][2]);

				foreach($var_14 as $var_15) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_15,$var_16)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(count($var_14) > 1 && count($var_14) < 5) {
					for ($var_17 = count($var_14); $var_17 > 0; $var_17--) {
						$var_18 = $var_17 - 1;
						if (!$var_18) {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = 0";
						} else {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = (";
						}
					}
					for ($var_17 = 1; $var_17 < count($var_14); $var_17++) { $var_19 .= ")"; }
				} elseif (count($var_14) == 1) {
					$var_19 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}

				
				$var_1 = $var_0->query("delete from ".$GLOBALS['pre']."items where id_tree = (".$var_19.")");
				
				$var_1 = $var_0->query("delete from ".$GLOBALS['pre']."nested_tree where parent_id = (".$var_19.")");
				
				$var_1 = $var_0->query("delete from ".$GLOBALS['pre']."nested_tree where id = (".$var_19.")");

				$var_21['type'] = 'category';
				$var_21['category'] = $GLOBALS['request'][2];
				if($var_1) {
					$var_21['status'] = 'OK';
				} else {
					$var_21['status'] = 'KO';
				}

			} elseif($GLOBALS['request'][1] == "item") {
				$var_14 = explode(';',$GLOBALS['request'][2]);
				$var_20 = $GLOBALS['request'][3];

				foreach($var_14 as $var_15) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_15,$var_16)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_20,$var_16)) {
					fn_9('ITEM_MALFORMED');
				} elseif (empty($var_20) || count($var_14) == 0) {
					fn_9('MALFORMED');
				}


				if(count($var_14) > 1 && count($var_14) < 5) {
					for ($var_17 = count($var_14); $var_17 > 0; $var_17--) {
						$var_18 = $var_17 - 1;
						if (!$var_18) {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = 0";
						} else {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = (";
						}
					}
					for ($var_17 = 1; $var_17 < count($var_14); $var_17++) { $var_19 .= ")"; }
				} elseif (count($var_14) == 1) {
					$var_19 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}

				
				$var_1 = $var_0->query("delete from ".$GLOBALS['pre']."items where id_tree = (".$var_19.") and label LIKE '".$var_20."'");
				$var_21['type'] = 'item';
				$var_21['item'] = $var_20;
				$var_21['category'] = $GLOBALS['request'][2];
				if($var_1) {
					$var_21['status'] = 'OK';
				} else {
					$var_21['status'] = 'KO';
				}
			}

			if ($var_21) {
				
			} else {
				fn_9 ('EMPTY');
			}
		} else {
			fn_9 ('METHOD');
		}
	}
}

function fn_8 () {
	if(fn_10($GLOBALS['apikey'])) {
		$var_0 = fn_2();
		$var_13 = fn_5();

		if ($GLOBALS['request'][0] == "read") {
			if($GLOBALS['request'][1] == "category") {
				$var_14 = explode(';',$GLOBALS['request'][2]);

				foreach($var_14 as $var_15) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_15,$var_16)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(count($var_14) > 1 && count($var_14) < 5) {
					for ($var_17 = count($var_14); $var_17 > 0; $var_17--) {
						$var_18 = $var_17 - 1;
						if (!$var_18) {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = 0";
						} else {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = (";
						}
					}
					for ($var_17 = 1; $var_17 < count($var_14); $var_17++) { $var_19 .= ")"; }
				} elseif (count($var_14) == 1) {
					$var_19 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}
				$var_1 = $var_0->query("select id,label,login,pw from ".$GLOBALS['pre']."items where id_tree = (".$var_19.")");
				while ($var_10 = $var_1->fetch())
				{
					$var_22 = $var_10['id'];
					$var_21[$var_22]['label'] = utf8_encode($var_10['label']);
					$var_21[$var_22]['login'] = utf8_encode($var_10['login']);

				}
			} elseif($GLOBALS['request'][1] == "item") {
				$var_14 = explode(';',$GLOBALS['request'][2]);
				$var_20 = $GLOBALS['request'][3];

				foreach($var_14 as $var_15) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_15,$var_16)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_20,$var_16)) {
					fn_9('ITEM_MALFORMED');
				} elseif (empty($var_20) || count($var_14) == 0) {
					fn_9('MALFORMED');
				}


				if(count($var_14) > 1 && count($var_14) < 5) {
					for ($var_17 = count($var_14); $var_17 > 0; $var_17--) {
						$var_18 = $var_17 - 1;
						if (!$var_18) {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = 0";
						} else {
							$var_19 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[$var_18]."' AND parent_id = (";
						}
					}
					for ($var_17 = 1; $var_17 < count($var_14); $var_17++) { $var_19 .= ")"; }
				} elseif (count($var_14) == 1) {
					$var_19 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_14[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}
				$var_1 = $var_0->query("select id,label,login,pw,id_tree from ".$GLOBALS['pre']."items where id_tree = (".$var_19.") and label LIKE '".$var_20."'");
				while ($var_10 = $var_1->fetch())
				{
					$var_22 = $var_10['id'];
					$var_21[$var_22]['label'] = utf8_encode($var_10['label']);
					$var_21[$var_22]['login'] = utf8_encode($var_10['login']);
					$var_21[$var_22]['pw'] = fn_12($var_10['pw'],var_23,$var_13);
				}
			}

			if (isset($var_21) && $var_21) {
				
			} else {
				fn_9 ('EMPTY');
			}
		} else {
			fn_9 ('METHOD');
		}
	}
}

function fn_9 ($var_24,$var_25 = 'N/A') {
	switch ($var_24) {
  		case 'APIKEY':
		$var_26 = Array('err' => 'This api_key '.$GLOBALS['apikey'].' doesn\'t exist');
		header('HTTP/1.1 405 Method Not Allowed');
    		break;
  		case 'NO_CATEGORY':
		$var_26 = Array('err' => 'No category specified');
    		break;
  		case 'EMPTY':
		$var_26 = Array('err' => 'No results');
    		break;
		case 'IPWHITELIST':
		$var_26 = Array('err' => 'Ip address '.$_SERVER['REMOTE_ADDR'].' not allowed.');
		header('HTTP/1.1 405 Method Not Allowed');
		break;
		case 'MYSQLERR':
		$var_26 = Array('err' => $var_25);
		header('HTTP/1.1 500 Internal Server Error');
		break;
		case 'METHOD':
		$var_26 = Array('err' => 'Method not authorized');
		header('HTTP/1.1 405 Method Not Allowed');
		break;
		default:
		$var_26 = Array('err' => 'Something happen ... but what ?');
		header('HTTP/1.1 500 Internal Server Error');
		break;
	}

	
	exit(0);
}

function fn_10 ($var_27) {
    $var_0 = fn_2();
	$var_28 = fn_4();
	if (in_array($var_27, $var_28)) {
		var_29;
	} else {
		fn_9('APIKEY',$var_27);
	}
}

function fn_11($var_30, $var_31, $var_32, $var_33, $var_34 = 0, $var_35 = 'sha256')
{
    $var_36 = $var_34 + $var_33;
    $var_37 = '';

    for ($var_38 = 1; $var_38 <= $var_36; $var_38++) {
        $var_39 = $var_40 = hash_hmac($var_35, $var_31 . pack('N', $var_38), $var_30, true);
        for ($var_17 = 1; $var_17 < $var_32; $var_17++) {
            $var_39 ^= ($var_40 = hash_hmac($var_35, $var_40, $var_30, true));
        }
        $var_37 .= $var_39;
    }

    return substr($var_37, $var_34, $var_33);
}

function fn_12($var_41, $var_42, $var_13, $var_43 = 2072)
{
    $var_41 = base64_decode($var_41);
    $var_44 = substr($var_41, -64);
    $var_41 = substr($var_41, 0, -64);
    $var_45       = fn_11($var_42, $var_44, $var_43, 16, 32);
    $var_46        = base64_decode(substr($var_41, 0, 43) . '==');
    $var_41 = substr($var_41, 43);
    $var_47       = substr($var_41, -64);
    $var_41 = substr($var_41, 0, -64);
    if ($var_47 !== hash_hmac('sha256', $var_41, $var_42)) return null;
    return substr(rtrim(mcrypt_decrypt(var_48, $var_45, $var_41, 'ctr', $var_46), "\0\4"), strlen($var_13));
}

?>
