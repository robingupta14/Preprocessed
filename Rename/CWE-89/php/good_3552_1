<?php

abstract class class_0 extends var_1 {
	
	static $var_2;
	
	
	public static $var_3 = false;
	
	
	abstract function fn_0($var_5, $var_6 = var_7);
	
	
	abstract function fn_1($var_8);
	
	
	abstract function fn_3();
	
	
	abstract function fn_4();
	
	
	abstract function fn_5($var_9);
	
	
	abstract function fn_6($var_8, $var_11 = null, $var_12 = null);
	
	
	abstract function fn_7($var_8, $var_14 = null, $var_15 = null, $var_16 = null, $var_17 = null);
	
	
	abstract function fn_8($var_19, $var_20);
	
	
	abstract function fn_9($var_8, $var_21, $var_22);
	
	
	abstract function fn_10($var_24, $var_25, $var_26);

	
	protected abstract function fn_11($var_8);
	
	
	protected abstract function fn_12();
	
	
	abstract function fn_13($var_29);
	
	
	protected $var_28;
	
	
	protected $var_27;
	
	
	protected $var_30;
	
	
	
	protected $var_31;
	
	
	function fn_14() {
		$var_32->var_28 = $var_32->fn_12();
		$var_32->var_30 = null;
		$var_32->var_27 = null;
		$var_32->var_31 = array();
	}
	
	function fn_15() {
		foreach($var_32->var_31 as $var_24 => $var_33) {
			switch($var_33['command']) {
				case 'create':
					$var_32->fn_6($var_24, $var_33['newFields'], $var_33['newIndexes']);
					break;
				
				case 'alter':
					$var_32->fn_7($var_24, $var_33['newFields'], $var_33['newIndexes'],
						$var_33['alteredFields'], $var_33['alteredIndexes']);
					break;
			}
		}
		$var_32->var_31 = null;
	}
	
	
	
	function fn_16($var_8) {
		$var_32->var_31[$var_8] = array('command' => 'create', 'newFields' => array(), 'newIndexes' => array());
	}
	function fn_17($var_8, $var_21, $var_36) {
		$var_32->fn_18($var_8);
		$var_32->var_31[$var_8]['newFields'][$var_21] = $var_36;
	}
	function fn_19($var_8, $var_39, $var_36) {
		$var_32->fn_18($var_8);
		$var_32->var_31[$var_8]['newIndexes'][$var_39] = $var_36;
	}
	function fn_20($var_8, $var_21, $var_36) {
		$var_32->fn_18($var_8);
		$var_32->var_31[$var_8]['alteredFields'][$var_21] = $var_36;
	}
	function fn_21($var_8, $var_39, $var_36) {
		$var_32->fn_18($var_8);
		$var_32->var_31[$var_8]['alteredIndexes'][$var_39] = $var_36;
	}
	
	
	protected function fn_18($var_8) {
		if(!isset($var_32->var_31[$var_8])) {
			$var_32->var_31[$var_8] = array(
				'command' => 'alter',
				'newFields' => array(),
				'newIndexes' => array(),
				'alteredFields' => array(),
				'alteredIndexes' => array(),
			);
		}		
	}
	
	
	
	function fn_22($var_8, $var_42 = null, $var_43 = null) {
		if(!isset($var_32->var_28[strtolower($var_8)])) {
			$var_32->fn_16($var_8);
			class_0::alteration_message("Table $var_8: created","created");
		} else {
			$var_32->checkAndRepairTable($var_8);
		}

		$var_32->requireField($var_8, "ID", "int(11) not null auto_increment");

		
		if($var_42) {
			foreach($var_42 as $var_46 => $var_47) {
				$var_48 = eval(ViewableData::castingObjectCreator($var_47));
				$var_48->setTable($var_8);
				$var_48->requireField();
			}
		}	

		
		if($var_43) {
			foreach($var_43 as $var_50 => $var_51) {
				$var_32->fn_23($var_8, $var_50, $var_51);
			}
		}
	}

	
	function fn_24($var_8) {
		if(!isset($var_32->var_28)) $var_32->var_28 = $var_32->fn_12();
		if(isset($var_32->var_28[strtolower($var_8)])) {
			$var_53 = '';
			while(isset($var_32->var_28[strtolower("_obsolete_{$var_8}$var_53")])) {
				$var_53 = $var_53 ? ($var_53+1) : 2;
			}
			$var_32->fn_8($var_8, "_obsolete_{$var_8}$var_53");
			class_0::alteration_message("Table $var_8: renamed to _obsolete_{$var_8}$var_53","obsolete");
		}
	}
	
	
	function fn_23($var_8, $var_39, $var_22) {
		$var_54 = false;
		
		if($var_22 === true) {
			$var_22 = "($var_39)";
		}
		$var_22 = ereg_replace(" *, *",",",$var_22);

		if(!isset($var_32->var_28[strtolower($var_8)])) $var_54 = true;

		if(!$var_54 &&  !isset($var_32->var_30[$var_8])) {
			$var_32->var_30[$var_8] = $var_32->indexList($var_8);
		}
		if($var_54 || !isset($var_32->var_30[$var_8][$var_39])) {
			$var_32->fn_19($var_8, $var_39, $var_22);
			class_0::alteration_message("Index $var_8.$var_39: created as $var_22","created");
		} else if($var_32->var_30[$var_8][$var_39] != $var_22) {
			$var_32->fn_21($var_8, $var_39, $var_22);
			class_0::alteration_message("Index $var_8.$var_39: changed to $var_22 <i style=\"color: 
		}
	}

	
	function requireField($var_8, $var_21, $var_22) {
		$var_54 = false;
		
		Profiler::mark('requireField');
		
		
		if(!$var_32->var_55()) {
			$var_22 = eregi_replace(' *character set [^ ]+( collate [^ ]+)?( |$)','\\2',$var_22);
		}
		if(!isset($var_32->var_28[strtolower($var_8)])) $var_54 = true;

		if(!$var_54 && !isset($var_32->var_27[$var_8])) {
			$var_32->var_27[$var_8] = $var_32->var_27($var_8);
		}
		
		if($var_54 || !isset($var_32->var_27[$var_8][$var_21])) {
			Profiler::mark('createField');
			$var_32->var_35($var_8, $var_21, $var_22);
			Profiler::unmark('createField');
			Database::alteration_message("var_56 $var_8.$var_21: created as $var_22","created");
		} else if($var_32->var_27[$var_8][$var_21] != $var_22) {
			
			
			
			if(substr($var_22, 0, 4) == "enum") {
				$var_57 = substr($var_22, 5);
				$var_58 = substr($var_32->var_27[$var_8][$var_21], 5);
				$var_57 = substr($var_57, 0, strpos($var_57, ')'));
				$var_58 = substr($var_58, 0, strpos($var_58, ')'));
				$var_57 = str_replace("'", '', $var_57);
				$var_58 = str_replace("'", '', $var_58);
				$var_57 = explode(',', $var_57);
				$var_58 = explode(',', $var_58);
				$var_59 = array();
				foreach($var_58 as $var_60) {
					if(!in_array($var_60, $var_57)) {
						$var_59[] = $var_60;
					}
				}
				if(count($var_59)) {
					$var_61 = explode('default ', $var_22);
					$var_61 = $var_61[1];
					if($var_61 == "'SiteTree'") $var_61 = "'Page'";
					$var_4 = "UPDATE `$var_8` SET $var_21=$var_61 WHERE $var_21 IN (";
					for($var_62=0;$var_62+1<count($var_59);$var_62++) {
						$var_4 .= "'{$var_59[$var_62]}', ";
					}
					$var_4 .= "'{$var_59[$var_62]}')";
					DB::fn_0($var_4);
					$var_63 = DB::affectedRows();
					class_0::alteration_message("Changed $var_63 rows to default value of field $var_21 (Value: $var_61)");
				}
			}
			Profiler::mark('alterField');
			$var_32->fn_20($var_8, $var_21, $var_22);
			Profiler::unmark('alterField');
			class_0::alteration_message("Field $var_8.$var_21: changed to $var_22 <i style=\"color: 
		}
		Profiler::unmark('requireField');
	}
	
	
	function dontRequireField($var_8, $var_46) {
		$var_27 = $var_32->var_27($var_8);
		if(array_key_exists($var_46, $var_27)) {
			$var_53 = '';
			while(isset($var_27[var_64("var_65{$var_46}$var_53")])) {
				$var_53 = $var_53 ? ($var_53+1) : 2;
			}
			$var_32->fn_10($var_8, $var_46, "_obsolete_{$var_46}$var_53");
			class_0::alteration_message("Field $var_8.$var_46: renamed to $var_8._obsolete_{$var_46}$var_53","obsolete");
		}
	}

	
	function fn_25($var_66) {
		foreach($var_66 as $var_8 => $var_67) {
			if(isset($var_67['fields']) && $var_67['fields']) {
				$var_27 = array();
				foreach($var_67['fields'] as $var_46 => $var_68) {
					$var_27[] = "`$var_46` = $var_68";
				}
				$var_27 = implode(", ", $var_27);
				
				if(!isset($var_67['where']) && isset($var_67['id'])) {
					$var_67['where'] = "ID = $var_67[var_69]";
				}
				
				switch($var_67['command']) {
					case "update":
						$var_5 = "update `$var_8` SET $var_27 where $var_67[var_70]";
						$var_32->fn_0($var_5);

						
						if(!$var_32->affectedRows()) {
							if(!isset($var_67['fields']['ID']) && isset($var_67['id'])) {
								$var_27 .= ", ID = $var_67[var_69]";
							}
							$var_5 = "insert into `$var_8` SET $var_27";
							$var_32->fn_0($var_5, null);
						}
						break;

					case "insert":
						if(!isset($var_67['fields']['ID']) && isset($var_67['id'])) {
							$var_27 .= ", ID = $var_67[var_69]";
						}
						$var_27 = class_0::replace_with_null($var_27);
						$var_5 = "insert into `$var_8` SET $var_27";
						$var_32->fn_0($var_5);
						break;

					default:
						$var_5 = null;
						user_error("Database::manipulate() Can't recognise command '$var_67[var_72]'", var_7);
				}
			}
		}
	}
	
	
	static function var_73(&$var_74) {
		$var_74 = ereg_replace('= *\'\'', "= null", $var_74);
		
		if(is_array($var_74)) {
			foreach($var_74 as $var_75 => $var_76) {
				if(is_array($var_76)) {
					array_walk($var_74, array(var_0, 'replace_with_null'));
				}
			}
		}
		
		return $var_74;
	} 

	
	function fn_28($var_77, $var_6 = var_7) {
		user_error($var_77, $var_6);
	}
	
	
	function fn_29() {
		var_0::$var_3 = true;
	}
	
	static function var_78($var_79,$var_80=""){
			if(!var_0::$var_3) {
				$var_81 = "";
				switch ($var_80){
					case "created":
						$var_81 = "green";
						break;
					case "obsolete":
						$var_81 = "red";
						break;
					case "error":
						$var_81 = "red";
						break;
					case "deleted":
						$var_81 = "red";
						break;						
					case "changed":
						$var_81 = "blue";
						break;
					case "repaired":
						$var_81 = "blue";
						break;
					default:
						$var_81="";
				}
				
			}
	}
	
}


abstract class class_1 extends var_1 implements var_82 {
	
	private $var_83 = null;
	
	
	private $var_84 = -1;

	
	public function fn_30() {
		$var_85 = array();
		foreach($var_32 as $var_86) {
			$var_85[] = reset($var_86);
		}
		return $var_85;
	}

	
	public function fn_32() {
		$var_85 = array();
		foreach($var_32 as $var_86) {
			$var_29 = reset($var_86);
			$var_85[$var_29] = $var_29;
		}
		return $var_85;
	}

	
	public function fn_33() {
		$var_85 = array();
		foreach($var_32 as $var_86) {
			$var_75 = reset($var_86);
			$var_29 = fn_34($var_86);
			$var_85[$var_75] = $var_29;
		}
		return $var_85;
	}

	
	public function fn_31() {
		return $var_32->fn_34();
	}

	
	public function fn_27() {
		foreach($var_32 as $var_86) {
			return reset($var_86);
		}
	}

	
	public function fn_2() {
		$var_88 = true;
		$var_89 = "<table>\n";
		
		foreach($var_32 as $var_86) {
			if($var_88) {
				$var_89 .= "<tr>";
				foreach($var_86 as $var_90 => $var_91) {
					$var_89 .= "<th>" . Convert::raw2xml($var_90) . "</th> ";
 				}
				$var_89 .= "</tr> \n";
			}

			$var_89 .= "<tr>";
			foreach($var_86 as $var_90 => $var_91) {
				$var_89 .= "<td>" . Convert::raw2xml($var_91) . "</td> ";
			}
			$var_89 .= "</tr> \n";
			
			$var_88 = false;
		}
		
		if($var_88) return "No records found";
		return $var_89;
	}
	
	
	public function fn_36() {
		if($var_32->fn_37() > 0) {
			return $var_32->fn_38(0);
		}
	}

	
	public function fn_39() {
		if(!$var_32->var_83) {
			return $var_32->fn_34();
		} else {
			return $var_32->var_83;
		}
	}

	
	public function fn_35() {
		$var_32->fn_36();
		return $var_32->fn_39();
	}

	
	public function fn_26() {
		return $var_32->var_84;
	}

	
	public function fn_34() {
		$var_32->var_83 = $var_32->fn_40();
		$var_32->var_84++;
		return $var_32->var_83;
	}

	
	public function fn_41() {
	 	return $var_32->fn_39() !== false;
	}

	
	abstract function fn_40();

	
	abstract function fn_37();

	
	abstract function fn_38($var_84);
}

?>