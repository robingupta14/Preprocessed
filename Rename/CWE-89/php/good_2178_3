<?php


$var_0 = "../includes/settings.php";

function fn_0() {
	$var_1 = fn_2();
	$var_2 = $var_1->query("select valeur from ".$GLOBALS['pre']."misc WHERE type = 'admin' AND intitule = 'api'");
	return $var_2->fetch(var_5::var_6);
}

function fn_1() {
    $var_1 = fn_2();
	$var_7 = fn_3();
	if (count($var_7) > 0 && array_search($_SERVER['REMOTE_ADDR'], $var_7) === false) {
		fn_9('IPWHITELIST');
	}
}

function fn_2() {
	try
	{
		$var_1 = new class_0("mysql:host=".$GLOBALS['server'].";dbname=".$GLOBALS['database'], $GLOBALS['user'], $GLOBALS['pass']);
		return ($var_1);
	}
	catch (var_8 $var_9) {}

}

function fn_3() {
	$var_10 = array();
	$var_1 = fn_2();
	$var_2 = $var_1->query("select value from ".$GLOBALS['pre']."api WHERE type = 'ip'");
	while ($var_11 = $var_2->fetch())
	{
		array_push($var_10, $var_11['value']);
	}

	return $var_10;
}

function fn_4() {
	$var_1 = fn_2();
	$var_2 = $var_1->query("select value from ".$GLOBALS['pre']."api WHERE type = 'key'");

	return $var_2->fetch(var_5::var_6);
}

function fn_5() {
	$var_1 = fn_2();
	$var_2 = $var_1->query("select rand_key from ".$GLOBALS['pre']."keys limit 0,1");

	$var_12 = $var_2->fetch(var_5::var_13);

	return $var_12->var_14;
}

function fn_6 () {
	header('HTTP/1.1 402 Payment Required');
}

function fn_7 () {
	if(fn_10($GLOBALS['apikey'])) {
		$var_1 = fn_2();
		$var_14 = fn_5();

		if ($GLOBALS['request'][0] == "write") {
			if($GLOBALS['request'][1] == "category") {
				$var_15 = explode(';',$GLOBALS['request'][2]);

				foreach($var_15 as $var_16) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_16,$var_17)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(count($var_15) > 1 && count($var_15) < 5) {
					for ($var_18 = count($var_15); $var_18 > 0; $var_18--) {
						$var_19 = $var_18 - 1;
						if (!$var_19) {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = 0";
						} else {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = (";
						}
					}
					for ($var_18 = 1; $var_18 < count($var_15); $var_18++) { $var_20 .= ")"; }
				} elseif (count($var_15) == 1) {
					$var_20 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}

				
				$var_2 = $var_1->query("delete from ".$GLOBALS['pre']."items where id_tree = (".$var_20.")");
				
				$var_2 = $var_1->query("delete from ".$GLOBALS['pre']."nested_tree where parent_id = (".$var_20.")");
				
				$var_2 = $var_1->query("delete from ".$GLOBALS['pre']."nested_tree where id = (".$var_20.")");

				$var_22['type'] = 'category';
				$var_22['category'] = $GLOBALS['request'][2];
				if($var_2) {
					$var_22['status'] = 'OK';
				} else {
					$var_22['status'] = 'KO';
				}

			} elseif($GLOBALS['request'][1] == "item") {
				$var_15 = explode(';',$GLOBALS['request'][2]);
				$var_21 = $GLOBALS['request'][3];

				foreach($var_15 as $var_16) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_16,$var_17)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_21,$var_17)) {
					fn_9('ITEM_MALFORMED');
				} elseif (empty($var_21) || count($var_15) == 0) {
					fn_9('MALFORMED');
				}


				if(count($var_15) > 1 && count($var_15) < 5) {
					for ($var_18 = count($var_15); $var_18 > 0; $var_18--) {
						$var_19 = $var_18 - 1;
						if (!$var_19) {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = 0";
						} else {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = (";
						}
					}
					for ($var_18 = 1; $var_18 < count($var_15); $var_18++) { $var_20 .= ")"; }
				} elseif (count($var_15) == 1) {
					$var_20 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}

				
				$var_2 = $var_1->query("delete from ".$GLOBALS['pre']."items where id_tree = (".$var_20.") and label LIKE '".$var_21."'");
				$var_22['type'] = 'item';
				$var_22['item'] = $var_21;
				$var_22['category'] = $GLOBALS['request'][2];
				if($var_2) {
					$var_22['status'] = 'OK';
				} else {
					$var_22['status'] = 'KO';
				}
			}

			if ($var_22) {
				
			} else {
				fn_9 ('EMPTY');
			}
		} else {
			fn_9 ('METHOD');
		}
	}
}

function fn_8 () {
	if(fn_10($GLOBALS['apikey'])) {
		$var_1 = fn_2();
		$var_14 = fn_5();

		if ($GLOBALS['request'][0] == "read") {
			if($GLOBALS['request'][1] == "category") {
				
				if (strpos($GLOBALS['request'][2],",") > 0) {
					$var_23 = "id_tree IN (".$GLOBALS['request'][2].")";
				} else {
					$var_23 = "id_tree = '".$GLOBALS['request'][2]."'";
				}
				$var_2 = $var_1->query("select id,label,login,pw from ".$GLOBALS['pre']."items where ".$var_23);
				while ($var_11 = $var_2->fetch())
				{
					$var_24 = $var_11['id'];
					$var_22[$var_24]['label'] = utf8_encode($var_11['label']);
					$var_22[$var_24]['login'] = utf8_encode($var_11['login']);
					$var_22[$var_24]['pw'] = fn_12($var_11['pw'],var_25,$var_14);
				}
			} elseif($GLOBALS['request'][1] == "item") {
				$var_15 = explode(';',$GLOBALS['request'][2]);
				$var_21 = $GLOBALS['request'][3];

				foreach($var_15 as $var_16) {
					if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_16,$var_17)) {
						fn_9('CATEGORY_MALFORMED');
					}
				}

				if(!preg_match_all("/^([\w\:\'\-\sàáâãäåçèéêëìíîïðòóôõöùúûüýÿ]+)$/i", $var_21,$var_17)) {
					fn_9('ITEM_MALFORMED');
				} elseif (empty($var_21) || count($var_15) == 0) {
					fn_9('MALFORMED');
				}


				if(count($var_15) > 1 && count($var_15) < 5) {
					for ($var_18 = count($var_15); $var_18 > 0; $var_18--) {
						$var_19 = $var_18 - 1;
						if (!$var_19) {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = 0";
						} else {
							$var_20 .= "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[$var_19]."' AND parent_id = (";
						}
					}
					for ($var_18 = 1; $var_18 < count($var_15); $var_18++) { $var_20 .= ")"; }
				} elseif (count($var_15) == 1) {
					$var_20 = "select id from ".$GLOBALS['pre']."nested_tree where title LIKE '".$var_15[0]."' AND parent_id = 0";
				} else {
					fn_9 ('NO_CATEGORY');
				}
				$var_2 = $var_1->query("select id,label,login,pw,id_tree from ".$GLOBALS['pre']."items where id_tree = (".$var_20.") and label LIKE '".$var_21."'");
				while ($var_11 = $var_2->fetch())
				{
					$var_24 = $var_11['id'];
					$var_22[$var_24]['label'] = utf8_encode($var_11['label']);
					$var_22[$var_24]['login'] = utf8_encode($var_11['login']);
					$var_22[$var_24]['pw'] = fn_12($var_11['pw'],var_25,$var_14);
				}
			}

			if (isset($var_22) && $var_22) {
				
			} else {
				fn_9 ('EMPTY');
			}
		} else {
			fn_9 ('METHOD');
		}
	}
}

function fn_9 ($var_26,$var_27 = 'N/A') {
	switch ($var_26) {
  		case 'APIKEY':
		$var_28 = Array('err' => 'This api_key '.$GLOBALS['apikey'].' doesn\'t exist');
		header('HTTP/1.1 405 Method Not Allowed');
    		break;
  		case 'NO_CATEGORY':
		$var_28 = Array('err' => 'No category specified');
    		break;
  		case 'EMPTY':
		$var_28 = Array('err' => 'No results');
    		break;
		case 'IPWHITELIST':
		$var_28 = Array('err' => 'Ip address '.$_SERVER['REMOTE_ADDR'].' not allowed.');
		header('HTTP/1.1 405 Method Not Allowed');
		break;
		case 'MYSQLERR':
		$var_28 = Array('err' => $var_27);
		header('HTTP/1.1 500 Internal Server Error');
		break;
		case 'METHOD':
		$var_28 = Array('err' => 'Method not authorized');
		header('HTTP/1.1 405 Method Not Allowed');
		break;
		default:
		$var_28 = Array('err' => 'Something happen ... but what ?');
		header('HTTP/1.1 500 Internal Server Error');
		break;
	}

	
	exit(0);
}

function fn_10 ($var_29) {
    $var_1 = fn_2();
	$var_30 = fn_4();
	if (in_array($var_29, $var_30)) {
		var_31;
	} else {
		fn_9('APIKEY',$var_29);
	}
}

function fn_11($var_32, $var_33, $var_34, $var_35, $var_36 = 0, $var_37 = 'sha256')
{
    $var_38 = $var_36 + $var_35;
    $var_39 = '';

    for ($var_40 = 1; $var_40 <= $var_38; $var_40++) {
        $var_41 = $var_42 = hash_hmac($var_37, $var_33 . pack('N', $var_40), $var_32, true);
        for ($var_18 = 1; $var_18 < $var_34; $var_18++) {
            $var_41 ^= ($var_42 = hash_hmac($var_37, $var_42, $var_32, true));
        }
        $var_39 .= $var_41;
    }

    return substr($var_39, $var_36, $var_35);
}

function fn_12($var_43, $var_44, $var_14, $var_45 = 2072)
{
    $var_43 = base64_decode($var_43);
    $var_46 = substr($var_43, -64);
    $var_43 = substr($var_43, 0, -64);
    $var_47       = fn_11($var_44, $var_46, $var_45, 16, 32);
    $var_48        = base64_decode(substr($var_43, 0, 43) . '==');
    $var_43 = substr($var_43, 43);
    $var_49       = substr($var_43, -64);
    $var_43 = substr($var_43, 0, -64);
    if ($var_49 !== hash_hmac('sha256', $var_43, $var_44)) return null;
    return substr(rtrim(mcrypt_decrypt(var_50, $var_47, $var_43, 'ctr', $var_48), "\0\4"), strlen($var_14));
}