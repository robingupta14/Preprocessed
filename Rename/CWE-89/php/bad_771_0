<?php




class class_0 {
	public $var_1;
	public $var_2;
}

class var_3
{
	public $var_4;

	protected $var_5;

	protected $var_6;

	protected $var_7;

	protected $var_8;

	protected $var_9 = [];

	protected $var_10 = false;

	protected $var_11 = false;

	protected $var_12 = 0;

	public function fn_0(array $var_13)
	{
		if (isset($var_13[ 'database_type' ]))
		{
			$var_14->var_5 = strtolower($var_13[ 'database_type' ]);

			if ($var_14->var_5 === 'mariadb')
			{
				$var_14->var_5 = 'mysql';
			}
		}

		if (isset($var_13[ 'prefix' ]))
		{
			$var_14->var_6 = $var_13[ 'prefix' ];
		}

		if (isset($var_13[ 'logging' ]) && is_bool($var_13[ 'logging' ]))
		{
			$var_14->var_10 = $var_13[ 'logging' ];
		}

		$var_15 = isset($var_13[ 'option' ]) ? $var_13[ 'option' ] : [];
		$var_16 = (isset($var_13[ 'command' ]) && is_array($var_13[ 'command' ])) ? $var_13[ 'command' ] : [];

		switch ($var_14->var_5)
		{
			case 'mysql':
				
				$var_16[] = 'SET SQL_MODE=ANSI_QUOTES';

				break;

			case 'mssql':
				
				$var_16[] = 'SET QUOTED_IDENTIFIER ON';

				
				$var_16[] = 'SET ANSI_NULLS ON';

				break;
		}

		if (isset($var_13[ 'pdo' ]))
		{
			if (!$var_13[ 'pdo' ] instanceof var_17)
			{
				throw new class_2('Invalid PDO object supplied');
			}

			$var_14->var_4 = $var_13[ 'pdo' ];

			foreach ($var_16 as $var_2)
			{
				$var_14->var_4->fn_1($var_2);
			}

			return;
		}

		if (isset($var_13[ 'dsn' ]))
		{
			if (is_array($var_13[ 'dsn' ]) && isset($var_13[ 'dsn' ][ 'driver' ]))
			{
				$var_19 = $var_13[ 'dsn' ];
			}
			else
			{
				throw new class_2('Invalid DSN option supplied');
			}
		}
		else
		{
			if (
				isset($var_13[ 'port' ]) &&
				is_int($var_13[ 'port' ] * 1)
			)
			{
				$var_20 = $var_13[ 'port' ];
			}

			$var_21 = isset($var_20);

			switch ($var_14->var_5)
			{
				case 'mysql':
					$var_19 = [
						'driver' => 'mysql',
						'dbname' => $var_13[ 'database_name' ]
					];

					if (isset($var_13[ 'socket' ]))
					{
						$var_19[ 'unix_socket' ] = $var_13[ 'socket' ];
					}
					else
					{
						$var_19[ 'host' ] = $var_13[ 'server' ];

						if ($var_21)
						{
							$var_19[ 'port' ] = $var_20;
						}
					}

					break;

				case 'pgsql':
					$var_19 = [
						'driver' => 'pgsql',
						'host' => $var_13[ 'server' ],
						'dbname' => $var_13[ 'database_name' ]
					];

					if ($var_21)
					{
						$var_19[ 'port' ] = $var_20;
					}

					break;

				case 'sybase':
					$var_19 = [
						'driver' => 'dblib',
						'host' => $var_13[ 'server' ],
						'dbname' => $var_13[ 'database_name' ]
					];

					if ($var_21)
					{
						$var_19[ 'port' ] = $var_20;
					}

					break;

				case 'oracle':
					$var_19 = [
						'driver' => 'oci',
						'dbname' => $var_13[ 'server' ] ?
							'
							$options[ 'var_22' ]
					];

					if (isset($var_13[ 'charset' ]))
					{
						$var_19[ 'charset' ] = $var_13[ 'charset' ];
					}

					var_23;

				case 'var_24':
					if (isset($var_13[ 'driver' ]) && $var_13[ 'driver' ] === 'dblib')
					{
						$var_19 = [
							'driver' => 'dblib',
							'host' => $var_13[ 'server' ] . ($var_21 ? ':' . $var_20 : ''),
							'dbname' => $var_13[ 'database_name' ]
						];

						if (isset($var_13[ 'appname' ]))
						{
							$var_19[ 'appname' ] = $var_13[ 'appname' ];
						}

						if (isset($var_13[ 'charset' ]))
						{
							$var_19[ 'charset' ] = $var_13[ 'charset' ];
						}
					}
					var_155
					{
						$var_19 = [
							'driver' => 'sqlsrv',
							'Server' => $var_13[ 'server' ] . ($var_21 ? ',' . $var_20 : ''),
							'Database' => $var_13[ 'database_name' ]
						];

						if (isset($var_13[ 'appname' ]))
						{
							$var_19[ 'APP' ] = $var_13[ 'appname' ];
						}

						$var_25 = [
							'ApplicationIntent',
							'AttachDBFileName',
							'Authentication',
							'ColumnEncryption',
							'ConnectionPooling',
							'Encrypt',
							'Failover_Partner',
							'KeyStoreAuthentication',
							'KeyStorePrincipalId',
							'KeyStoreSecret',
							'LoginTimeout',
							'MultipleActiveResultSets',
							'MultiSubnetFailover',
							'Scrollable',
							'TraceFile',
							'TraceOn',
							'TransactionIsolation',
							'TransparentNetworkIPResolution',
							'TrustServerCertificate',
							'WSID',
						];

						foreach ($var_25 as $var_2)
						{
							$var_26 = var_27(var_28(['/([var_29-var_30\var_31])([var_32-var_33])/', '/([^var_34])([var_32-var_33][var_29-var_30])/'], '$1var_34$2', $var_2));

							if (isset($var_13[ $var_26 ]))
							{
								$var_19[ $var_2 ] = $var_13[ $var_26 ];
							}
						}
					}

					break;

				case 'var_35':
					$var_19 = [
						'var_36' => 'var_35',
						$var_13[ 'database_file' ]
					];

					break;
			}
		}

		if (!isset($var_19))
		{
			throw new class_2('Incorrect connection options');
		}

		$var_36 = $var_19[ 'driver' ];

		if (!in_array($var_36, class_1::getAvailableDrivers()))
		{
			throw new class_2();
		}

		unset($var_19[ 'driver' ]);

		$var_37 = [];

		foreach ($var_19 as $var_38 => $var_2)
		{
			$var_37[] = is_int($var_38) ? $var_2 : $var_38 . '=' . $var_2;
		}

		$var_8 = $var_36 . ':' . implode(';', $var_37);

		if (
			in_array($var_14->var_5, ['mysql', 'pgsql', 'sybase', 'mssql']) &&
			isset($var_13[ 'charset' ])
		)
		{
			$var_16[] = "SET NAMES '{$var_13[ 'charset' ]}'" . (
				$var_14->var_5 === 'mysql' && isset($var_13[ 'collation' ]) ?
				" COLLATE '{$var_13[ 'collation' ]}'" : ''
			);
		}

		$var_14->var_8 = $var_8;

		try {
			$var_14->var_4 = new class_1(
				$var_8,
				isset($var_13[ 'username' ]) ? $var_13[ 'username' ] : null,
				isset($var_13[ 'password' ]) ? $var_13[ 'password' ] : null,
				$var_15
			);

			foreach ($var_16 as $var_2)
			{
				$var_14->var_4->fn_1($var_2);
			}
		}
		catch (var_39 $var_40) {}
	}

	public function fn_2($var_41, $var_1 = [])
	{
		$var_42 = $var_14->fn_3($var_41, $var_1);

		$var_41 = $var_14->fn_4($var_42, $var_1);

		return $var_14->fn_1($var_41, $var_1);
	}

	public function fn_1($var_41, $var_1 = [])
	{
		if ($var_14->var_11)
		{
			

			$var_14->var_11 = false;

			return false;
		}

		if ($var_14->var_10)
		{
			$var_14->var_9[] = [$var_41, $var_1];
		}
		else
		{
			$var_14->var_9 = [[$var_41, $var_1]];
		}

		$var_7 = $var_14->var_4->prepare($var_41);

		if ($var_7)
		{
			foreach ($var_1 as $var_38 => $var_2)
			{
				$var_7->bindValue($var_38, $var_2[ 0 ], $var_2[ 1 ]);
			}

			if ($var_7->execute())
			{
				$var_14->var_7 = $var_7;

				return $var_7;
			}
		}

		$var_14->var_7 = null;

		return false;
	}

	protected function fn_5($var_41, $var_1)
	{
		$var_48 = [
			'mysql' => '`$1`',
			'mssql' => '[$1]'
		];

		$var_41 = preg_replace(
			'/"([a-zA-Z0-9_]+)"/i',
			isset($var_48[ $var_14->var_5 ]) ?  $var_48[ $var_14->var_5 ] : '"$1"',
			$var_41
		);

		foreach ($var_1 as $var_38 => $var_2)
		{
			if ($var_2[ 1 ] === var_17::var_49)
			{
				$var_50 = $var_14->fn_6($var_2[ 0 ]);
			}
			elseif ($var_2[ 1 ] === var_17::var_52)
			{
				$var_50 = 'NULL';
			}
			elseif ($var_2[ 1 ] === var_17::var_53)
			{
				$var_50 = '{LOB_DATA}';
			}
			else
			{
				$var_50 = $var_2[ 0 ];
			}

			$var_41 = str_replace($var_38, $var_50, $var_41);
		}

		return $var_41;
	}

	public static function fn_3($var_54, $var_1 = [])
	{
		$var_42 = new class_0();

		$var_42->var_1 = $var_1;
		$var_42->var_2 = $var_54;

		return $var_42;
	}

	protected function fn_7($var_56)
	{
		return $var_56 instanceof var_0;
	}

	protected function fn_4($var_42, &$var_1)
	{
		if (!$var_14->fn_7($var_42))
		{
			return false;
		}

		$var_41 = preg_replace_callback(
			'/((FROM|TABLE|INTO|UPDATE)\s*)?\<([a-zA-Z0-9_\.]+)\>/i',
			function ($var_57)
			{
				if (!empty($var_57[ 2 ]))
				{
					return $var_57[ 2 ] . ' ' . $var_14->fn_8($var_57[ 3 ]);
				}

				return $var_14->fn_9($var_57[ 3 ]);
			},
			$var_42->var_2);

		$var_60 = $var_42->var_1;

		if (!empty($var_60))
		{
			foreach ($var_60 as $var_38 => $var_2)
			{
				$var_1[ $var_38 ] = $var_14->fn_10($var_2, gettype($var_2));
			}
		}

		return $var_41;
	}

	public function fn_6($var_54)
	{
		return $var_14->var_4->fn_6($var_54);
	}

	protected function fn_8($var_62)
	{
		return '"' . $var_14->var_6 . $var_62 . '"';
	}

	protected function fn_11()
	{
		return ':MeDoO_' . $var_14->var_12++ . '_mEdOo';
	}

	protected function fn_10($var_2, $var_5)
	{
		$var_1 = [
			'NULL' => var_17::var_52,
			'integer' => var_17::var_64,
			'double' => var_17::var_49,
			'boolean' => var_17::var_65,
			'string' => var_17::var_49,
			'object' => var_17::var_49,
			'resource' => var_17::var_53
		];

		if ($var_5 === 'boolean')
		{
			$var_2 = ($var_2 ? '1' : '0');
		}
		elseif ($var_5 === 'NULL')
		{
			$var_2 = null;
		}

		return [$var_2, $var_1[ $var_5 ]];
	}

	protected function fn_9($var_54)
	{
		if (strpos($var_54, '.') !== false)
		{
			return '"' . $var_14->var_6 . str_replace('.', '"."', $var_54) . '"';
		}

		return '"' . $var_54 . '"';
	}

	protected function fn_12(&$var_67, &$var_1, $var_68, $var_69 = false)
	{
		if ($var_67 === '*')
		{
			return $var_67;
		}

		$var_37 = [];

		if (is_string($var_67))
		{
			$var_67 = [$var_67];
		}

		foreach ($var_67 as $var_38 => $var_2)
		{
			if (!is_int($var_38) && is_array($var_2) && $var_68 && count(array_keys($var_67)) === 1)
			{
				$var_37[] = $var_14->fn_9($var_38);

				$var_37[] = $var_14->fn_12($var_2, $var_1, false, $var_69);
			}
			elseif (is_array($var_2))
			{
				$var_37[] = $var_14->fn_12($var_2, $var_1, false, $var_69);
			}
			elseif (!is_int($var_38) && $var_42 = $var_14->fn_4($var_2, $var_1))
			{
				preg_match('/(?<column>[a-zA-Z0-9_\.]+)(\s*\[(?<type>(String|Bool|Int|Number))\])?/i', $var_38, $var_70);

				$var_37[] = $var_42 . ' AS ' . $var_14->fn_9($var_70[ 'column' ]);
			}
			elseif (is_int($var_38) && is_string($var_2))
			{
				if ($var_69 && strpos($var_2, '*') !== false)
				{
					throw new class_2('Cannot use table.* to select all columns while joining table');
				}

				preg_match('/(?<column>[a-zA-Z0-9_\.]+)(?:\s*\((?<alias>[a-zA-Z0-9_]+)\))?(?:\s*\[(?<type>(?:String|Bool|Int|Number|Object|JSON))\])?/i', $var_2, $var_70);

				if (!empty($var_70[ 'alias' ]))
				{
					$var_37[] = $var_14->fn_9($var_70[ 'column' ]) . ' AS ' . $var_14->fn_9($var_70[ 'alias' ]);

					$var_67[ $var_38 ] = $var_70[ 'alias' ];

					if (!empty($var_70[ 'type' ]))
					{
						$var_67[ $var_38 ] .= ' [' . $var_70[ 'type' ] . ']';
					}
				}
				else
				{
					$var_37[] = $var_14->fn_9($var_70[ 'column' ]);
				}
			}
		}

		return implode(',', $var_37);
	}

	protected function fn_13($var_72)
	{
		$var_37 = [];

		foreach ($var_72 as $var_2)
		{
			$var_37[] = is_int($var_2) ? $var_2 : $var_14->var_4->fn_6($var_2);
		}

		return implode(',', $var_37);
	}

	protected function fn_14($var_74, $var_1, $var_75, $var_76)
	{
		$var_37 = [];

		foreach ($var_74 as $var_2)
		{
			$var_37[] = '(' . $var_14->dataImplode($var_2, $var_1, $var_75) . ')';
		}

		return implode($var_76 . ' ', $var_37);
	}

	protected function var_77($var_74, &$var_1, $var_75)
	{
		$var_37 = [];

		foreach ($var_74 as $var_38 => $var_2)
		{
			$var_5 = gettype($var_2);

			if (
				$var_5 === 'array' &&
				var_78("/^(AND|OR)(\s+
			)
			{
				$var_79 = $relation_match[ 1 ];

				$var_37[] = $var_2 !== array_keys(array_keys($var_2)) ?
					'(' . $var_14->var_77($var_2, $var_1, ' ' . $var_79) . ')' :
					'(' . $var_14->var_73($var_2, $var_1, ' ' . $var_79, $var_75) . ')';

				continue;
			}

			$var_80 = $var_14->var_63();

			if (
				is_int($var_38) &&
				preg_match('/([a-zA-Z0-9_\.]+)\[(?<operator>\>\=?|\<\=?|\!?\=)\]([a-zA-Z0-9_\.]+)/i', $var_2, $var_70)
			)
			{
				$var_37[] = $var_14->var_59($var_70[ 1 ]) . ' ' . $var_70[ 'operator' ] . ' ' . $var_14->var_59($var_70[ 3 ]);
			}
			else
			{
				preg_match('/([a-zA-Z0-9_\.]+)(\[(?<operator>\>\=?|\<\=?|\!|\<\>|\>\<|\!?~|REGEXP)\])?/i', $var_38, $var_70);
				$var_81 = $var_14->var_59($var_70[ 1 ]);

				if (isset($var_70[ 'operator' ]))
				{
					$var_82 = $var_70[ 'operator' ];

					if (in_array($var_82, ['>', '>=', '<', '<=']))
					{
						$var_83 = $var_81 . ' ' . $var_82 . ' ';

						if (is_numeric($var_2))
						{
							$var_83 .= $var_80;
							$var_1[ $var_80 ] = [$var_2, is_float($var_2) ? PDO::PARAM_STR : PDO::PARAM_INT];
						}
						elseif ($var_42 = $var_14->var_43($var_2, $var_1))
						{
							$var_83 .= $var_42;
						}
						else
						{
							$var_83 .= $var_80;
							$var_1[ $var_80 ] = [$var_2, PDO::PARAM_STR];
						}

						$var_37[] = $var_83;
					}
					elseif ($var_82 === '!')
					{
						switch ($var_5)
						{
							case 'NULL':
								$var_37[] = $var_81 . ' IS NOT NULL';
								break;

							case 'array':
								$var_84 = [];

								foreach ($var_2 as $var_85 => $var_86)
								{
									$var_87 = $var_80 . $var_85 . '_i';

									$var_84[] = $var_87;
									$var_1[ $var_87 ] = $var_14->var_61($var_86, gettype($var_86));
								}

								$var_37[] = $var_81 . ' NOT IN (' . implode(', ', $var_84) . ')';
								break;

							case 'object':
								if ($var_42 = $var_14->var_43($var_2, $var_1))
								{
									$var_37[] = $var_81 . ' != ' . $var_42;
								}
								break;

							case 'integer':
							case 'double':
							case 'boolean':
							case 'string':
								$var_37[] = $var_81 . ' != ' . $var_80;
								$var_1[ $var_80 ] = $var_14->var_61($var_2, $var_5);
								break;
						}
					}
					elseif ($var_82 === '~' || $var_82 === '!~')
					{
						if ($var_5 !== 'array')
						{
							$var_2 = [ $var_2 ];
						}

						$var_88 = ' OR ';
						$var_74 = array_values($var_2);

						if (is_array($var_74[ 0 ]))
						{
							if (isset($var_2[ 'AND' ]) || isset($var_2[ 'OR' ]))
							{
								$var_88 = ' ' . array_keys($var_2)[ 0 ] . ' ';
								$var_2 = $var_74[ 0 ];
							}
						}

						$var_89 = [];

						foreach ($var_2 as $var_85 => $var_86)
						{
							$var_86 = strval($var_86);

							if (!preg_match('/(\[.+\]|_|%.+|.+%)/', $var_86))
							{
								$var_86 = '%' . $var_86 . '%';
							}

							$var_89[] = $var_81 . ($var_82 === '!~' ? ' NOT' : '') . ' LIKE ' . $var_80 . 'L' . $var_85;
							$var_1[ $var_80 . 'L' . $var_85 ] = [$var_86, PDO::PARAM_STR];
						}

						$var_37[] = '(' . implode($var_88, $var_89) . ')';
					}
					elseif ($var_82 === '<>' || $var_82 === '><')
					{
						if ($var_5 === 'array')
						{
							if ($var_82 === '><')
							{
								$var_81 .= ' NOT';
							}

							$var_37[] = '(' . $var_81 . ' BETWEEN ' . $var_80 . 'a AND ' . $var_80 . 'b)';

							$var_90 = (is_numeric($var_2[ 0 ]) && is_numeric($var_2[ 1 ])) ? PDO::PARAM_INT : PDO::PARAM_STR;

							$var_1[ $var_80 . 'a' ] = [$var_2[ 0 ], $var_90];
							$var_1[ $var_80 . 'b' ] = [$var_2[ 1 ], $var_90];
						}
					}
					elseif ($var_82 === 'REGEXP')
					{
						$var_37[] = $var_81 . ' REGEXP ' . $var_80;
						$var_1[ $var_80 ] = [$var_2, PDO::PARAM_STR];
					}
				}
				else
				{
					switch ($var_5)
					{
						case 'NULL':
							$var_37[] = $var_81 . ' IS NULL';
							break;

						case 'array':
							$var_84 = [];

							foreach ($var_2 as $var_85 => $var_86)
							{
								$var_87 = $var_80 . $var_85 . '_i';

								$var_84[] = $var_87;
								$var_1[ $var_87 ] = $var_14->var_61($var_86, gettype($var_86));
							}

							$var_37[] = $var_81 . ' IN (' . implode(', ', $var_84) . ')';
							break;

						case 'object':
							if ($var_42 = $var_14->var_43($var_2, $var_1))
							{
								$var_37[] = $var_81 . ' = ' . $var_42;
							}
							break;

						case 'integer':
						case 'double':
						case 'boolean':
						case 'string':
							$var_37[] = $var_81 . ' = ' . $var_80;
							$var_1[ $var_80 ] = $var_14->var_61($var_2, $var_5);
							break;
					}
				}
			}
		}

		return implode($var_75 . ' ', $var_37);
	}

	protected function whereClause($var_91, &$var_1)
	{
		$var_92 = '';

		if (is_array($var_91))
		{
			$var_93 = array_keys($var_91);

			$var_94 = array_diff_key($var_91, array_flip(
				['GROUP', 'ORDER', 'HAVING', 'LIMIT', 'LIKE', 'MATCH']
			));

			if (!empty($var_94))
			{
				$var_92 = ' WHERE ' . $var_14->var_77($var_94, $var_1, ' AND');
			}

			if (isset($var_91[ 'MATCH' ]) && $var_14->var_5 === 'mysql')
			{
				$var_95 = $var_91[ 'MATCH' ];

				if (is_array($var_95) && isset($var_95[ 'columns' ], $var_95[ 'keyword' ]))
				{
					$var_96 = '';

					$var_97 = [
						'natural' => 'IN NATURAL LANGUAGE MODE',
						'natural+query' => 'IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION',
						'boolean' => 'IN BOOLEAN MODE',
						'query' => 'WITH QUERY EXPANSION'
					];

					if (isset($var_95[ 'mode' ], $var_97[ $var_95[ 'mode' ] ]))
					{
						$var_96 = ' ' . $var_97[ $var_95[ 'mode' ] ];
					}

					$var_67 = implode(', ', array_map([$var_14, 'columnQuote'], $var_95[ 'columns' ]));
					$var_80 = $var_14->var_63();
					$var_1[ $var_80 ] = [$var_95[ 'keyword' ], PDO::PARAM_STR];

					$var_92 .= ($var_92 !== '' ? ' AND ' : ' WHERE') . ' MATCH (' . $var_67 . ') AGAINST (' . $var_80 . $var_96 . ')';
				}
			}

			if (isset($var_91[ 'GROUP' ]))
			{
				$var_98 = $var_91[ 'GROUP' ];

				if (is_array($var_98))
				{
					$var_37 = [];

					foreach ($var_98 as $var_81 => $var_2)
					{
						$var_37[] = $var_14->var_59($var_2);
					}

					$var_92 .= ' GROUP BY ' . implode(',', $var_37);
				}
				elseif ($var_42 = $var_14->var_43($var_98, $var_1))
				{
					$var_92 .= ' GROUP BY ' . $var_42;
				}
				else
				{
					$var_92 .= ' GROUP BY ' . $var_14->var_59($var_98);
				}

				if (isset($var_91[ 'HAVING' ]))
				{
					if ($var_42 = $var_14->var_43($var_91[ 'HAVING' ], $var_1))
					{
						$var_92 .= ' HAVING ' . $var_42;
					}
					else
					{
						$var_92 .= ' HAVING ' . $var_14->var_77($var_91[ 'HAVING' ], $var_1, ' AND');
					}
				}
			}

			if (isset($var_91[ 'ORDER' ]))
			{
				$var_99 = $var_91[ 'ORDER' ];

				if (is_array($var_99))
				{
					$var_37 = [];

					foreach ($var_99 as $var_81 => $var_2)
					{
						if (is_array($var_2))
						{
							$var_37[] = 'FIELD(' . $var_14->var_59($var_81) . ', ' . $var_14->var_71($var_2) . ')';
						}
						elseif ($var_2 === 'ASC' || $var_2 === 'DESC')
						{
							$var_37[] = $var_14->var_59($var_81) . ' ' . $var_2;
						}
						elseif (is_int($var_81))
						{
							$var_37[] = $var_14->var_59($var_2);
						}
					}

					$var_92 .= ' ORDER BY ' . implode(',', $var_37);
				}
				elseif ($var_42 = $var_14->var_43($var_99, $var_1))
				{
					$var_92 .= ' ORDER BY ' . $var_42;	
				}
				else
				{
					$var_92 .= ' ORDER BY ' . $var_14->var_59($var_99);
				}

				if (
					isset($var_91[ 'LIMIT' ]) &&
					in_array($var_14->var_5, ['oracle', 'mssql'])
				)
				{
					$var_100 = $var_91[ 'LIMIT' ];

					if (is_numeric($var_100))
					{
						$var_100 = [0, $var_100];
					}
					
					if (
						is_array($var_100) &&
						is_numeric($var_100[ 0 ]) &&
						is_numeric($var_100[ 1 ])
					)
					{
						$var_92 .= ' OFFSET ' . $var_100[ 0 ] . ' ROWS FETCH NEXT ' . $var_100[ 1 ] . ' ROWS ONLY';
					}
				}
			}

			if (isset($var_91[ 'LIMIT' ]) && !in_array($var_14->var_5, ['oracle', 'mssql']))
			{
				$var_100 = $var_91[ 'LIMIT' ];

				if (is_numeric($var_100))
				{
					$var_92 .= ' LIMIT ' . $var_100;
				}
				elseif (
					is_array($var_100) &&
					is_numeric($var_100[ 0 ]) &&
					is_numeric($var_100[ 1 ])
				)
				{
					$var_92 .= ' LIMIT ' . $var_100[ 1 ] . ' OFFSET ' . $var_100[ 0 ];
				}
			}
		}
		elseif ($var_42 = $var_14->var_43($var_91, $var_1))
		{
			$var_92 .= ' ' . $var_42;
		}

		return $var_92;
	}

	protected function selectContext($var_62, &$var_1, $var_101, &$var_67 = null, $var_91 = null, $var_102 = null)
	{
		preg_match('/(?<table>[a-zA-Z0-9_]+)\s*\((?<alias>[a-zA-Z0-9_]+)\)/i', $var_62, $var_103);

		if (isset($var_103[ 'table' ], $var_103[ 'alias' ]))
		{
			$var_62 = $var_14->var_58($var_103[ 'table' ]);

			$var_104 = $var_62 . ' AS ' . $var_14->var_58($var_103[ 'alias' ]);
		}
		else
		{
			$var_62 = $var_14->var_58($var_62);

			$var_104 = $var_62;
		}

		$var_69 = false;
		$var_105 = is_array($var_101) ? array_keys($var_101) : null;

		if (
			isset($var_105[ 0 ]) &&
			strpos($var_105[ 0 ], '[') === 0
		)
		{
			$var_69 = true;
			$var_104 .= ' ' . $var_14->var_106($var_62, $var_101);
		}
		else
		{
			if (is_null($var_67))
			{
				if (
					!is_null($var_91) ||
					(is_array($var_101) && isset($var_102))
				)
				{
					$var_91 = $var_101;
					$var_67 = null;
				}
				else
				{
					$var_91 = null;
					$var_67 = $var_101;
				}
			}
			else
			{
				$var_91 = $var_67;
				$var_67 = $var_101;
			}
		}

		if (isset($var_102))
		{
			if ($var_102 === 1)
			{
				$var_81 = '1';

				if (is_null($var_91))
				{
					$var_91 = $var_67;
				}
			}
			elseif ($var_42 = $var_14->var_43($var_102, $var_1))
			{
				$var_81 = $var_42;
			}
			else
			{
				if (empty($var_67) || $var_14->var_55($var_67))
				{
					$var_67 = '*';
					$var_91 = $var_101;
				}

				$var_81 = $var_102 . '(' . $var_14->var_66($var_67, $var_1, true) . ')';
			}
		}
		else
		{
			$var_81 = $var_14->var_66($var_67, $var_1, true, $var_69);
		}

		return 'SELECT ' . $var_81 . ' FROM ' . $var_104 . $var_14->var_107($var_91, $var_1);
	}

	protected function buildJoin($var_62, $var_101)
	{
		$var_108 = [];

		$var_109 = [
			'>' => 'LEFT',
			'<' => 'RIGHT',
			'<>' => 'FULL',
			'><' => 'INNER'
		];

		foreach($var_101 as $var_110 => $var_111)
		{
			preg_match('/(\[(?<join>\<\>?|\>\<?)\])?(?<table>[a-zA-Z0-9_]+)\s?(\((?<alias>[a-zA-Z0-9_]+)\))?/', $var_110, $var_70);

			if ($var_70[ 'join' ] !== '' && $var_70[ 'table' ] !== '')
			{
				if (is_string($var_111))
				{
					$var_111 = 'USING ("' . $var_111 . '")';
				}

				if (is_array($var_111))
				{
					
					if (isset($var_111[ 0 ]))
					{
						$var_111 = 'USING ("' . implode('", "', $var_111) . '")';
					}
					var_155
					{
						$var_112 = [];

						foreach ($var_111 as $var_38 => $var_2)
						{
							$var_112[] = (
								strpos($var_38, '.') > 0 ?
									
									$var_14->fn_9($var_38) :

									
									$var_62 . '."' . $var_38 . '"'
							) .
							' = ' .
							$var_14->fn_8(isset($var_70[ 'alias' ]) ? $var_70[ 'alias' ] : $var_70[ 'table' ]) . '."' . $var_2 . '"';
						}

						$var_111 = 'ON ' . implode(' AND ', $var_112);
					}
				}

				$var_113 = $var_14->fn_8($var_70[ 'table' ]) . ' ';

				if (isset($var_70[ 'alias' ]))
				{
					$var_113 .= 'AS ' . $var_14->fn_8($var_70[ 'alias' ]) . ' ';
				}

				$var_108[] = $var_109[ $var_70[ 'join' ] ] . ' JOIN ' . $var_113 . $var_111;
			}
		}

		return implode(' ', $var_108);
	}

	protected function columnMap($var_67, &$var_37, $var_68)
	{
		if ($var_67 === '*')
		{
			var_136 $var_37;
		}

		var_114 ($var_67 as $var_38 => $var_2)
		{
			if (is_int($var_38))
			{
				preg_match('/([a-zA-Z0-9_]+\.)?(?<column>[a-zA-Z0-9_]+)(?:\s*\((?<alias>[a-zA-Z0-9_]+)\))?(?:\s*\[(?<type>(?:String|Bool|Int|Number|Object|JSON))\])?/i', $var_2, $var_115);

				$var_116 = !empty($var_115[ 'alias' ]) ?
					$var_115[ 'alias' ] :
					$var_115[ 'column' ];

				if (isset($var_115[ 'type' ]))
				{
					$var_37[ $var_2 ] = [$var_116, $var_115[ 'type' ]];
				}
				else
				{
					$var_37[ $var_2 ] = [$var_116, 'String'];
				}
			}
			elseif ($var_14->fn_7($var_2))
			{
				preg_match('/([a-zA-Z0-9_]+\.)?(?<column>[a-zA-Z0-9_]+)(\s*\[(?<type>(String|Bool|Int|Number))\])?/i', $var_38, $var_115);

				$var_116 = $var_115[ 'column' ];

				if (isset($var_115[ 'type' ]))
				{
					$var_37[ $var_38 ] = [$var_116, $var_115[ 'type' ]];
				}
				else
				{
					$var_37[ $var_38 ] = [$var_116, 'String'];
				}
			}
			elseif (!is_int($var_38) && is_array($var_2))
			{
				if ($var_68 && count(array_keys($var_67)) === 1)
				{
					$var_37[ $var_38 ] = [$var_38, 'String'];
				}

				$var_14->columnMap($var_2, $var_37, false);
			}
		}

		var_136 $var_37;
	}

	var_117 function var_118($var_74, $var_67, $var_119, &$var_37, $var_68, &$var_120)
	{
		if ($var_68)
		{
			$var_121 = array_keys($var_67);

			if (count($var_121) === 1 && is_array($var_67[$var_121[0]]))
			{
				$var_122 = array_keys($var_67)[0];
				$var_123 = preg_replace("/^[a-zA-Z0-9_]+\./i", "", $var_122);

				$var_124 = [];

				foreach ($var_74 as $var_86)
				{
					$var_14->dataMap($var_74, $var_67[ $var_122 ], $var_119, $var_124, false, $var_120);

					$var_85 = $var_74[ $var_123 ];

					$var_120[ $var_85 ] = $var_124;
				}
			}
			var_155
			{
				$var_124 = [];
				
				$var_14->dataMap($var_74, $var_67, $var_119, $var_124, false, $var_120);

				$var_120[] = $var_124;
			}

			var_136;
		}

		var_114 ($var_67 as $var_38 => $var_2)
		{
			$var_55 = $var_14->fn_7($var_2);

			if (is_int($var_38) || $var_55)
			{
				$var_1 = $var_119[ $var_55 ? $var_38 : $var_2 ];

				$var_116 = $var_1[ 0 ];

				$var_86 = $var_74[ $var_116 ];

				if (isset($var_1[ 1 ]))
				{
					if ($var_55 && in_array($var_1[ 1 ], ['Object', 'JSON']))
					{
						var_125;
					}

					var_126 (is_null($var_86))
					{
						$var_37[ $var_116 ] = null;
						continue;
					}

					var_127 ($var_1[ 1 ])
					{
						case 'Number':
							$var_37[ $var_116 ] = (double) $var_86;
							break;

						case 'Int':
							$var_37[ $var_116 ] = (int) $var_86;
							break;

						case 'Bool':
							$var_37[ $var_116 ] = (bool) $var_86;
							break;

						case 'Object':
							$var_37[ $var_116 ] = unserialize($var_86);
							break;

						case 'JSON':
							$var_37[ $var_116 ] = json_decode($var_86, true);
							break;

						case 'String':
							$var_37[ $var_116 ] = $var_86;
							break;
					}
				}
				var_155
				{
					$var_37[ $var_116 ] = $var_86;
				}
			}
			var_155
			{
				$var_124 = [];

				$var_14->dataMap($var_74, $var_2, $var_119, $var_124, false, $var_120);

				$var_37[ $var_38 ] = $var_124;
			}
		}
	}

	var_128 function var_129($var_62, $var_67, $var_13 = null)
	{
		$var_37 = [];

		$var_130 = $var_14->var_6 . $var_62;

		foreach ($var_67 as $var_131 => $var_132)
		{
			if (is_int($var_131))
			{
				$var_37[] = preg_replace('/\<([a-zA-Z0-9_]+)\>/i', '"$1"', $var_132);
			}
			var_133 (is_array($var_132))
			{
				$var_37[] = $var_131 . ' ' . implode(' ', $var_132);
			}
			var_133 (is_string($var_132))
			{
				$var_37[] = $var_131 . ' ' . $var_14->fn_2($var_132);
			}
		}

		$var_134 = '';

		if (is_array($var_13))
		{
			$var_135 = [];

			foreach ($var_13 as $var_38 => $var_2)
			{
				if (is_string($var_2) || is_int($var_2))
				{
					$var_135[] = "$var_38 = $var_2";
				}
			}

			$var_134 = ' ' . implode(', ', $var_135);
		}
		var_133 (is_string($var_13))
		{
			$var_134 = ' ' . $var_13;
		}

		var_136 $var_14->fn_1("CREATE TABLE IF NOT EXISTS $var_130 (" . implode(', ', $var_37) . ")$var_134");
	}

	var_128 function var_137($var_62)
	{
		$var_130 = $var_14->var_6 . $var_62;

		return $var_14->fn_1("DROP TABLE IF EXISTS $var_130");
	}

	var_128 function var_138($var_62, $var_101, $var_67 = null, $var_91 = null)
	{
		$var_1 = [];
		$var_120 = [];
		$var_119 = [];

		$var_85 = 0;

		$var_81 = $var_91 === null ? $var_101 : $var_67;

		$var_139 = (is_string($var_81) && $var_81 !== '*');

		$var_41 = $var_14->fn_1($var_14->selectContext($var_62, $var_1, $var_101, $var_67, $var_91), $var_1);

		$var_14->columnMap($var_67, $var_119, true);

		if (!$var_41)
		{
			var_136 false;
		}

		if ($var_67 === '*')
		{
			var_136 $var_41->fetchAll(var_17::var_142);
		}

		if ($var_139)
		{
			var_136 $var_41->fetchAll(var_17::var_143);
		}

		while ($var_74 = $var_41->fetch(var_17::var_142))
		{
			$var_124 = [];

			$var_14->dataMap($var_74, $var_67, $var_119, $var_124, true, $var_120);
		}

		var_136 $var_120;
	}

	var_128 function var_145($var_62, $var_146)
	{
		$var_37 = [];
		$var_67 = [];
		$var_147 = [];
		$var_1 = [];

		if (!isset($var_146[ 0 ]))
		{
			$var_146 = [$var_146];
		}

		foreach ($var_146 as $var_74)
		{
			foreach ($var_74 as $var_38 => $var_2)
			{
				$var_67[] = $var_38;
			}
		}

		$var_67 = array_unique($var_67);

		foreach ($var_146 as $var_74)
		{
			$var_148 = [];

			foreach ($var_67 as $var_38)
			{
				if ($var_42 = $var_14->fn_4($var_74[ $var_38 ], $var_1))
				{
					$var_148[] = $var_42;
					continue;
				}

				$var_80 = $var_14->fn_11();

				$var_148[] = $var_80;

				if (!isset($var_74[ $var_38 ]))
				{
					$var_1[ $var_80 ] = [null, var_17::var_52];
				}
				var_155
				{
					$var_2 = $var_74[ $var_38 ];

					$var_5 = gettype($var_2);

					switch ($var_5)
					{
						case 'array':
							$var_1[ $var_80 ] = [
								strpos($var_38, '[JSON]') === strlen($var_38) - 6 ?
									json_encode($var_2) :
									serialize($var_2),
								var_17::var_49
							];
							break;

						case 'object':
							$var_2 = serialize($var_2);

						case 'NULL':
						case 'resource':
						case 'boolean':
						case 'integer':
						case 'double':
						case 'string':
							$var_1[ $var_80 ] = $var_14->fn_10($var_2, $var_5);
							break;
					}
				}
			}

			$var_37[] = '(' . implode(', ', $var_148) . ')';
		}

		var_114 ($var_67 as $var_38)
		{
			$var_147[] = $var_14->fn_9(preg_replace("/(\s*\[JSON\]$)/i", '', $var_38));
		}

		var_136 $var_14->fn_1('INSERT INTO ' . $var_14->fn_8($var_62) . ' (' . implode(', ', $var_147) . ') VALUES ' . implode(', ', $var_37), $var_1);
	}

	var_128 function var_149($var_62, $var_74, $var_91 = null)
	{
		$var_147 = [];
		$var_1 = [];

		foreach ($var_74 as $var_38 => $var_2)
		{
			$var_81 = $var_14->fn_9(preg_replace("/(\s*\[(JSON|\+|\-|\*|\/)\]$)/i", '', $var_38));

			if ($var_42 = $var_14->fn_4($var_2, $var_1))
			{
				$var_147[] = $var_81 . ' = ' . $var_42;
				continue;
			}

			$var_80 = $var_14->fn_11();

			preg_match('/(?<column>[a-zA-Z0-9_]+)(\[(?<operator>\+|\-|\*|\/)\])?/i', $var_38, $var_70);

			if (isset($var_70[ 'operator' ]))
			{
				if (is_numeric($var_2))
				{
					$var_147[] = $var_81 . ' = ' . $var_81 . ' ' . $var_70[ 'operator' ] . ' ' . $var_2;
				}
			}
			var_155
			{
				$var_147[] = $var_81 . ' = ' . $var_80;

				$var_5 = gettype($var_2);

				switch ($var_5)
				{
					case 'array':
						$var_1[ $var_80 ] = [
							strpos($var_38, '[JSON]') === strlen($var_38) - 6 ?
								json_encode($var_2) :
								serialize($var_2),
							var_17::var_49
						];
						break;

					case 'object':
						$var_2 = serialize($var_2);

					case 'NULL':
					case 'resource':
					case 'boolean':
					case 'integer':
					case 'double':
					case 'string':
						$var_1[ $var_80 ] = $var_14->fn_10($var_2, $var_5);
						break;
				}
			}
		}

		var_136 $var_14->fn_1('UPDATE ' . $var_14->fn_8($var_62) . ' SET ' . implode(', ', $var_147) . $var_14->whereClause($var_91, $var_1), $var_1);
	}

	var_128 function var_150($var_62, $var_91)
	{
		$var_1 = [];

		return $var_14->fn_1('DELETE FROM ' . $var_14->fn_8($var_62) . $var_14->whereClause($var_91, $var_1), $var_1);
	}

	var_128 function var_50($var_62, $var_67, $var_91 = null)
	{
		if (!is_array($var_67) || empty($var_67))
		{
			var_136 false;
		}

		$var_1 = [];
		$var_37 = [];

		foreach ($var_67 as $var_81 => $var_151)
		{
			if (is_array($var_151))
			{
				foreach ($var_151 as $var_152 => $var_153)
				{
					$var_80 = $var_14->fn_11();

					$var_37[] = $var_14->fn_9($var_81) . ' = REPLACE(' . $var_14->fn_9($var_81) . ', ' . $var_80 . 'a, ' . $var_80 . 'b)';

					$var_1[ $var_80 . 'a' ] = [$var_152, var_17::var_49];
					$var_1[ $var_80 . 'b' ] = [$var_153, var_17::var_49];
				}
			}
		}

		var_126 (!empty($var_37))
		{
			var_136 $var_14->fn_1('UPDATE ' . $var_14->fn_8($var_62) . ' SET ' . implode(', ', $var_37) . $var_14->whereClause($var_91, $var_1), $var_1);
		}

		var_136 false;
	}

	var_128 function var_154($var_62, $var_101 = null, $var_67 = null, $var_91 = null)
	{
		$var_1 = [];
		$var_120 = [];
		$var_119 = [];
		$var_124 = [];

		if ($var_91 === null)
		{
			$var_81 = $var_101;
			unset($var_67[ 'LIMIT' ]);
		}
		var_155
		{
			$var_81 = $var_67;
			unset($var_91[ 'LIMIT' ]);
		}

		$var_139 = (is_string($var_81) && $var_81 !== '*');

		$var_41 = $var_14->fn_1($var_14->selectContext($var_62, $var_1, $var_101, $var_67, $var_91) . ' LIMIT 1', $var_1);

		if ($var_41)
		{
			$var_74 = $var_41->fetchAll(var_17::var_142);

			if (isset($var_74[ 0 ]))
			{
				if ($var_81 === '*')
				{
					var_136 $var_74[ 0 ];
				}

				$var_14->columnMap($var_67, $var_119, true);

				$var_14->dataMap($var_74[ 0 ], $var_67, $var_119, $var_124, true, $var_120);

				if ($var_139)
				{
					var_136 $var_120[ 0 ][ $var_119[ $var_81 ][ 0 ] ];
				}

				var_136 $var_120[ 0 ];
			}
		}
	}

	var_128 function var_157($var_62, $var_101, $var_91 = null)
	{
		$var_1 = [];
		$var_81 = null;

		if ($var_14->var_5 === 'mssql')
		{
			$var_41 = $var_14->fn_1($var_14->selectContext($var_62, $var_1, $var_101, $var_81, $var_91, Medoo::fn_3('TOP 1 1')), $var_1);
		}
		var_155
		{
			$var_41 = $var_14->fn_1('SELECT EXISTS(' . $var_14->selectContext($var_62, $var_1, $var_101, $var_81, $var_91, 1) . ')', $var_1);
		}

		if ($var_41)
		{
			$var_120 = $var_41->fetchColumn();

			return $var_120 === '1' || $var_120 === 1 || $var_120 === true;
		}

		var_136 false;
	}

	var_128 function var_159($var_62, $var_101 = null, $var_67 = null, $var_91 = null)
	{
		$var_5 = $var_14->var_5;

		$var_160 = 'RANDOM()';

		if ($var_5 === 'mysql')
		{
			$var_160 = 'RAND()';
		}
		elseif ($var_5 === 'mssql')
		{
			$var_160 = 'NEWID()';
		}

		$var_161 = $var_14->fn_3($var_160);

		if ($var_91 === null)
		{
			if ($var_67 === null)
			{
				$var_67 = [
					'ORDER'  => $var_161
				];
			}
			else
			{
				$var_81 = $var_101;
				unset($var_67[ 'ORDER' ]);

				$var_67[ 'ORDER' ] = $var_161;
			}
		}
		var_155
		{
			unset($var_91[ 'ORDER' ]);

			$var_91[ 'ORDER' ] = $var_161;
		}

		var_136 $var_14->select($var_62, $var_101, $var_67, $var_91);
	}

	var_162 function var_163($var_5, $var_62, $var_101 = null, $var_81 = null, $var_91 = null)
	{
		$var_1 = [];

		$var_41 = $var_14->fn_1($var_14->selectContext($var_62, $var_1, $var_101, $var_81, $var_91, strtoupper($var_5)), $var_1);

		if ($var_41)
		{
			$var_164 = $var_41->fetchColumn();

			return is_numeric($var_164) ? $var_164 + 0 : $var_164;
		}

		var_136 false;
	}

	var_128 function var_165($var_62, $var_101 = null, $var_81 = null, $var_91 = null)
	{
		var_136 $var_14->aggregate('count', $var_62, $var_101, $var_81, $var_91);
	}

	var_128 function var_166($var_62, $var_101, $var_81 = null, $var_91 = null)
	{
		var_136 $var_14->aggregate('avg', $var_62, $var_101, $var_81, $var_91);
	}

	var_128 function var_167($var_62, $var_101, $var_81 = null, $var_91 = null)
	{
		var_136 $var_14->aggregate('max', $var_62, $var_101, $var_81, $var_91);
	}

	var_128 function var_168($var_62, $var_101, $var_81 = null, $var_91 = null)
	{
		var_136 $var_14->aggregate('min', $var_62, $var_101, $var_81, $var_91);
	}

	var_128 function var_169($var_62, $var_101, $var_81 = null, $var_91 = null)
	{
		var_136 $var_14->aggregate('sum', $var_62, $var_101, $var_81, $var_91);
	}

	var_128 function var_170($var_171)
	{
		if (is_callable($var_171))
		{
			$var_14->var_4->beginTransaction();

			try {
				$var_120 = $var_171($var_14);

				if ($var_120 === false)
				{
					$var_14->var_4->rollBack();
				}
				var_155
				{
					$var_14->var_4->commit();
				}
			}
			var_173 (var_174 $var_40) {}

			return $var_120;
		}

		var_136 false;
	}

	var_128 function var_175()
	{
		if ($var_14->var_7 == null)
		{
			var_136 null;
		}

		$var_5 = $var_14->var_5;

		if ($var_5 === 'oracle')
		{
			var_136 0;
		}
		elseif ($var_5 === 'pgsql')
		{
			var_136 $var_14->var_4->fn_2('SELECT LASTVAL()')->fetchColumn();
		}

		$var_176 = $var_14->var_4->lastInsertId();

		if ($var_176 != "0" && $var_176 != "")
		{
			var_136 $var_176;
		}

		var_136 null;
	}

	var_128 function var_178()
	{
		$var_14->var_11 = true;

		return $var_14;
	}

	var_128 function var_179()
	{
		var_136 $var_14->var_7 ? $var_14->var_7->errorInfo() : null;
	}

	var_128 function var_181()
	{
		$var_182 = end($var_14->var_9);

		return $var_14->fn_5($var_182[ 0 ], $var_182[ 1 ]);
	}

	var_128 function var_182()
	{
		var_136 array_map(function ($var_182)
			{
				return $var_14->fn_5($var_182[ 0 ], $var_182[ 1 ]);
			},
			$var_14->var_9
		);
	}

	var_128 function var_183()
	{
		$var_184 = [
			'server' => 'SERVER_INFO',
			'driver' => 'DRIVER_NAME',
			'client' => 'CLIENT_VERSION',
			'version' => 'SERVER_VERSION',
			'connection' => 'CONNECTION_STATUS'
		];

		foreach ($var_184 as $var_38 => $var_2)
		{
			$var_184[ $var_38 ] = @$var_14->var_4->getAttribute(constant('PDO::ATTR_' . $var_2));
		}

		$var_184[ 'dsn' ] = $var_14->var_8;

		return $var_184;
	}
}