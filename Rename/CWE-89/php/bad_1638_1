<?php



function fn_0($var_0, $var_1)
{
    $var_2 = array();  

    $var_3 = Survey::model()->findByPk($var_1)->var_5;
    $var_2[]=$var_3;     
    $var_2=array_merge($var_2,Survey::model()->findByPk($var_1)->var_6);
    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8==false || $var_8->var_10!='Group') throw new \var_11(500, 'This is not a valid LimeSurvey group structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['question_attributes']=0;
    $var_17['subquestions']=0;
    $var_17['conditions']=0;
    $var_17['groups']=0;

    $var_15=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_15[]=(string)$var_5;
    }

    if (!in_array($var_3,$var_15))
    {
        $var_17['fatalerror'] = gT("The languages of the imported group file must at least include the base language of this survey.");
        return $var_17;
    }
    
    


    


    $var_18 = "SELECT MAX(group_order) AS maxgo FROM {{groups}} WHERE sid=$var_1";
    $var_19 = Yii::app()->var_20->createCommand($var_18)->queryScalar();
    if ($var_19 === false)
    {
        $var_23=0;
    }
    else
    {
        $var_23=$var_19+1;
    }

    foreach ($var_8->var_24->var_25->var_26 as $var_26)
    {
        $var_27=array();
        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }
        $var_30=$var_27['sid'];
        $var_27['sid']=$var_1;
        $var_27['group_order']=$var_23;
        $var_31=$var_27['gid']; unset($var_27['gid']); 

        
        $var_27['group_name']=translateLinks('survey', $var_30, $var_1, $var_27['group_name']);
        $var_27['description']=translateLinks('survey', $var_30, $var_1, $var_27['description']);
        
        if (isset($var_107[$var_31]))
        {
            $var_27['gid']=$var_107[$var_31];
        }
        if (isset($var_27['gid'])) switchMSSQLIdentityInsert('groups',true);

        $var_32 = Yii::app()->var_20->createCommand()->insert('{{groups}}', $var_27);

        if (isset($var_27['gid'])) switchMSSQLIdentityInsert('groups',false);
        $var_17['groups']++;

        if (!isset($var_107[$var_31]))
        {
            $var_34=getLastInsertID('{{groups}}');
            $var_107[$var_31]=$var_34; 
        }
    }


    

    
    


    $var_17['questions']=0;
    if (isset($var_8->var_35))
    {
        foreach ($var_8->var_35->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_30=$var_27['sid'];
            $var_27['sid']=$var_1;
            if (!isset($var_107[$var_27['gid']]) || trim($var_27['title'])=='') continue; 
            $var_27['gid']=$var_107[$var_27['gid']];
            $var_36=$var_27['qid']; unset($var_27['qid']); 

            
            $var_27['title']=translateLinks('survey', $var_30, $var_1, $var_27['title']);
            $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
            $var_27['help']=translateLinks('survey', $var_30, $var_1, $var_27['help']);
            
            if (isset($var_14[$var_36]))
            {
                $var_27['qid']=$var_14[$var_36];
            }
            if (isset($var_27['qid'])) switchMSSQLIdentityInsert('questions',true);

            $var_32 = Yii::app()->var_20->createCommand()->insert('{{questions}}', $var_27);
            if (isset($var_27['qid'])) switchMSSQLIdentityInsert('questions',false);
            if (!isset($var_14[$var_36]))
            {
                $var_37=getLastInsertID('{{questions}}');
                $var_14[$var_36]=$var_37; 
                $var_17['questions']++;
            }
        }
    }

    
    if (isset($var_8->var_38))
    {

        foreach ($var_8->var_38->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['sid']=$var_1;
            if (!isset($var_107[$var_27['gid']])) continue; 
            $var_27['gid']=$var_107[(int)$var_27['gid']];;
            $var_39=(int)$var_27['qid']; unset($var_27['qid']); 
            if (!isset($var_14[(int)$var_27['parent_qid']])) continue; 
            $var_27['parent_qid']=$var_14[(int)$var_27['parent_qid']]; 

            
            $var_27['title']=translateLinks('survey', $var_30, $var_1, $var_27['title']);
            $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
            $var_27['help']=translateLinks('survey', $var_30, $var_1, !empty($var_27['help']) ? $var_27['help'] : '');
            if (isset($var_14[$var_39])){
                $var_27['qid']=$var_14[$var_39];
            }
            if (isset($var_27['qid'])) switchMSSQLIdentityInsert('questions',true);

            $var_32 = Yii::app()->var_20->createCommand()->insert('{{questions}}', $var_27);
            $var_40=getLastInsertID('{{questions}}');
            if (isset($var_27['qid'])) switchMSSQLIdentityInsert('questions',true);

            if (!isset($var_27['qid']))
            {
                $var_14[$var_39]=$var_40; 
            }

            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_41))
    {


        foreach ($var_8->var_41->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if (!isset($var_14[(int)$var_27['qid']])) continue; 

            $var_27['qid']=$var_14[(int)$var_27['qid']]; 

            
            $var_32 = Yii::app()->var_20->createCommand()->insert('{{answers}}', $var_27);
            $var_17['answers']++;
        }
    }

    
    if(isset($var_8->var_42))
    {


        $var_43=questionAttributes(true);

        foreach ($var_8->var_42->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            unset($var_27['qaid']);
            if (!isset($var_14[(int)$var_27['qid']])) continue; 
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 


            if ($var_12<156 && isset($var_43[$var_27['attribute']]['i18n']) && $var_43[$var_27['attribute']]['i18n'])
            {
                foreach ($var_15 as $var_44)
                {
                    $var_27['language']=$var_44;
                    $var_32 = Yii::app()->var_20->createCommand()->insert('{{question_attributes}}', $var_27);
                }
            }
            else
            {
                $var_32 = Yii::app()->var_20->createCommand()->insert('{{question_attributes}}', $var_27);
            }
            $var_17['question_attributes']++;
        }
    }


    
    if(isset($var_8->var_45))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_45->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 
            if ($var_27['sqid']>0)
            {
                if (!isset($var_14[(int)$var_27['sqid']])) continue;  
                $var_27['sqid']=$var_14[(int)$var_27['sqid']]; 
            }

            
            $var_32 = Yii::app()->var_20->createCommand()->insert('{{defaultvalues}}', $var_27);
            $var_17['defaultvalues']++;
        }
    }

    
    if(isset($var_8->var_46))
    {


        foreach ($var_8->var_46->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            
            if (isset($var_14[$var_27['qid']]))
            {
                $var_27['qid']=$var_14[$var_27['qid']]; 
            }
            else continue; 
            if (isset($var_14[$var_27['cqid']]))
            {
                $var_27['cqid']=$var_14[$var_27['cqid']]; 
            }
            else continue; 

            list($var_47, $var_48, $var_49) = explode("X",$var_27["cfieldname"],3);

            if ($var_48 != $var_31)    
                continue;

            unset($var_27["cid"]);

            
            if (preg_match("/^\+/",$var_47))
            {
                $var_50 = '+'.$var_1 . "X" . $var_34 . "X" . $var_27["cqid"] .substr($var_49,strlen($var_36));
            }
            else
            {
                $var_50 = $var_1 . "X" . $var_34 . "X" . $var_27["cqid"] .substr($var_49,strlen($var_36));
            }

            $var_27["cfieldname"] = $var_50;
            if (trim($var_27["method"])=='')
            {
                $var_27["method"]='==';
            }

            
            $var_32 = Yii::app()->var_20->createCommand()->insert('{{conditions}}', $var_27);
            $var_17['conditions']++;
        }
    }
    LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
    LimeExpressionManager::UpgradeConditionsToRelevance($var_1);

    $var_17['newgid']=$var_34;
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    return $var_17;
}


function fn_1($var_0, $var_1, $var_34)
{

    $var_2 = array();  
    $var_3 = Survey::model()->findByPk($var_1)->var_5;
    $var_2[]=$var_3;     
    $var_2=array_merge($var_2,Survey::model()->findByPk($var_1)->var_6);
    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Question') throw new \var_11(500, 'This is not a valid LimeSurvey question structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_51=array(0=>0);

    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['question_attributes']=0;
    $var_17['subquestions']=0;

    $var_15=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_15[]=(string)$var_5;
    }

    if (!in_array($var_3,$var_15))
    {
        $var_17['fatalerror'] = gT("The languages of the imported question file must at least include the base language of this survey.");
        return $var_17;
    }
    
    


    

    
    


    $var_18 = "SELECT MAX(question_order) AS maxqo FROM {{questions}} WHERE sid=$var_1 AND gid=$var_34";
    $var_52 = Yii::app()->var_20->createCommand($var_18)->query();
    $var_53 = $var_52->read();
    $var_55 = $var_53['maxqo'] + 1;
    if (is_null($var_55))
    {
        $var_55=0;
    }
    else
    {
        $var_55++;
    }
    foreach ($var_8->var_35->var_25->var_26 as $var_26)
    {
        $var_27=array();
        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }
        $var_30=$var_27['sid'];
        $var_27['sid']=$var_1;
        $var_27['gid']=$var_34;
        $var_27['question_order']=$var_55;
        $var_36=$var_27['qid']; unset($var_27['qid']); 

        
        $var_27['title']=translateLinks('survey', $var_30, $var_1, $var_27['title']);
        $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
        $var_27['help']=translateLinks('survey', $var_30, $var_1, $var_27['help']);
        
        if (isset($var_14[$var_36]))
        {
            $var_27['qid']=$var_14[$var_36];
        }

        $var_56 = new class_0;
        if ($var_27)
            fn_9($var_27);
        foreach ($var_27 as $var_57 => $var_58)
            $var_56->$var_57 = $var_58;
        $var_32 = $var_56->save();
        if (!$var_32)
        {
            $var_17['fatalerror'] = CHtml::errorSummary($var_56,gT("The question could not be imported for the following reasons:"));
            return $var_17;
        }
        if (!isset($var_14[$var_36]))
        {
            $var_37=getLastInsertID($var_56->tableName());
            $var_14[$var_36]=$var_37; 
        }
    }

    
    if (isset($var_8->var_38))
    {
        foreach ($var_8->var_38->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['sid']=$var_1;
            $var_27['gid']=$var_34;
            $var_39=(int)$var_27['qid']; unset($var_27['qid']); 
            $var_27['parent_qid']=$var_14[(int)$var_27['parent_qid']]; 

            

            $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
            if (isset($var_27['help']))
            {
                $var_27['help']=translateLinks('survey', $var_30, $var_1, $var_27['help']);
            }
            if (isset($var_14[$var_39])){
                $var_27['qid']=$var_14[$var_39];
            }
            if ($var_27)
                fn_9($var_27);
            $var_56 = new class_0;
            foreach ($var_27 as $var_57 => $var_58)
                $var_56->$var_57 = $var_58;
            $var_32 = $var_56->save();
            $var_40=getLastInsertID($var_56->tableName());
            if (!isset($var_27['qid']))
            {
                $var_14[$var_39]=$var_40; 
            }
            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_41))
    {


        foreach ($var_8->var_41->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 

            
            $var_41 = new class_1;
            if ($var_27)
                fn_9($var_27);
            foreach ($var_27 as $var_57 => $var_58)
                $var_41->$var_57 = $var_58;
            $var_32 = $var_41->save();
            $var_17['answers']++;
        }
    }

    
    if(isset($var_8->var_42))
    {


        $var_43=questionAttributes(true);
        foreach ($var_8->var_42->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            unset($var_27['qaid']);
            $var_27['qid']=$var_14[(integer)$var_27['qid']]; 


            if ($var_12<156 && isset($var_43[$var_27['attribute']]['i18n']) && $var_43[$var_27['attribute']]['i18n'])
            {
                foreach ($var_15 as $var_44)
                {
                    $var_27['language']=$var_44;
                    $var_61 = new class_2;
                    if ($var_27)
                        fn_9($var_27);
                    foreach ($var_27 as $var_57 => $var_58)
                        $var_61->$var_57 = $var_58;
                    $var_32 = $var_61->save();
                }
            }
            else
            {
                $var_61 = new class_2;
                if ($var_27)
                    fn_9($var_27);
                foreach ($var_27 as $var_57 => $var_58)
                    $var_61->$var_57 = $var_58;
                $var_32 = $var_61->save();
            }
            $var_17['question_attributes']++;
        }
    }


    
    if(isset($var_8->var_45))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_45->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 
            $var_27['sqid']=$var_51[(int)$var_27['sqid']]; 

            
            $var_62 = new class_3;
            if ($var_27)
                fn_9($var_27);
            foreach ($var_27 as $var_57 => $var_58)
                $var_62->$var_57 = $var_58;
            $var_32 = $var_62->save();
            $var_17['defaultvalues']++;
        }
    }
    LimeExpressionManager::SetDirtyFlag(); 

    $var_17['newqid']=$var_37;
    $var_17['questions']=1;
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    return $var_17;
}


function fn_2($var_0, $var_63)
{

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Label set') throw new \var_11(500, 'This is not a valid LimeSurvey label set structure XML file.');
    $var_12 = (int) $var_8->var_13;
    $var_64=buildLabelSetCheckSumArray();
    $var_65=array();
    $var_17['labelsets']=0;
    $var_17['labels']=0;
    $var_17['warnings']=array();

    


    foreach ($var_8->var_66->var_25->var_26 as $var_26)
    {
        $var_27=array();
        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }
        $var_67=$var_27['lid'];
        unset($var_27['lid']); 

        if ($var_27)
            fn_9($var_27);
        
        $var_32 = Yii::app()->var_20->createCommand()->insert('{{labelsets}}', $var_27);
        $var_17['labelsets']++;

        $var_68=getLastInsertID('{{labelsets}}');
        $var_65[$var_67]=$var_68; 
    }


    


    if (isset($var_8->var_69->var_25->var_26))
        foreach ($var_8->var_69->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['lid']=$var_65[$var_27['lid']];
            if ($var_27)
                fn_9($var_27);
            $var_32 = Yii::app()->var_20->createCommand()->insert('{{labels}}', $var_27);
            $var_17['labels']++;
    }

    

    if (isset($_POST['checkforduplicates']))
    {
        foreach (array_values($var_65) as $var_70)
        {
            $var_71="";
            $var_72 = "SELECT code, title, sortorder, language, assessment_value
            FROM {{labels}}
            WHERE lid=".$var_70."
            ORDER BY language, sortorder, code";
            $var_73 = Yii::app()->var_20->createCommand($var_72)->query();
            foreach($var_73->readAll() as $var_75)
            {
                $var_75 = array_values($var_75);
                $var_71 .= implode('.', $var_75);
            } 
            $var_76=dechex(crc32($var_71)*1);
            unset($var_77);

            if (isset($var_64) && $var_63['checkforduplicates']=='on')
            {
                foreach($var_64 as $var_28=>$var_78)
                {
                    if ($var_78 == $var_76)
                    {
                        $var_77=$var_28;
                    }
                }
            }
            if (isset($var_77))
            {
                
                
                $var_18 = "DELETE FROM {{labels}} WHERE lid=$var_70";
                $var_32=Yii::app()->var_20->createCommand($var_18)->execute();
                $var_17['labels']=$var_17['labels']-$var_32;
                $var_18 = "DELETE FROM {{labelsets}} WHERE lid=$var_70";
                $var_32=Yii::app()->var_20->createCommand($var_18)->query();

                $var_17['labelsets']--;
                $var_70=$var_77;
                $var_17['warnings'][]=gT("Label set was not imported because the same label set already exists.")." ".sprintf(gT("Existing LID: %s"),$var_70);

            }
        }
        
    }
    return $var_17;
}

function fn_3($var_0, $var_80, $var_81=NULL, $var_82=NULL)
{
    $var_83 = pathinfo($var_0);
    if (isset($var_83['extension']))
    {
        $var_84 = strtolower($var_83['extension']);
    }
    else
    {
        $var_84 = "";
    }
    if ($var_84 == 'lss')
    {
        return fn_4($var_0, null, $var_81, $var_82, $var_80);
    }
    elseif ($var_84 == 'txt')
    {
        return fn_10($var_0);
    }
    elseif ($var_84 == 'lsa')  
    {
        Yii::import("application.libraries.admin.pclzip.pclzip", true);
        $var_85 = new class_4(array('p_zipname' => $var_0));
        $var_86 = $var_85->listContent();

        if ($var_85->extract(var_89, Yii::app()->getConfig('tempdir') . var_91, var_92, '/(lss|lsr|lsi|lst)$/') == 0)
        {
            unset($var_85);
        }
        
        foreach ($var_86 as $var_93)
        {
            if (pathinfo($var_93['filename'], var_94) == 'lss')
            {
                
                $var_95 = fn_4(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename'], null, null, null, true, false);
                
                Yii::app()->loadHelper("admin/activate");
                $var_97 = activateSurvey($var_95['newsid']);
                unlink(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename']);
                break;
            }
        }
        
        foreach ($var_86 as $var_93)
        {
            if (pathinfo($var_93['filename'], var_94) == 'lsr')
            {
                
                $var_98 = XMLImportResponses(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename'], $var_95['newsid'], $var_95['FieldReMap']);
                $var_95 = array_merge($var_98, $var_95);
                unlink(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename']);
                break;
            }
        }
        
        foreach ($var_86 as $var_93)
        {
            if (pathinfo($var_93['filename'], var_94) == 'lst')
            {
                Yii::app()->loadHelper("admin/token");
                if (Token::createTable($var_95['newsid']))
                {
                    $var_99 = array('tokentablecreated' => true);
                    $var_95 = array_merge($var_99, $var_95);
                    $var_100 = fn_6(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename'], $var_95['newsid']);
                }
                else
                {
                    $var_99 = array('tokentablecreated' => false);
                    $var_100['warnings'][] = gt("Unable to create token table");

                }
                $var_95 = array_merge_recursive($var_100, $var_95);
                $var_95['importwarnings']=array_merge($var_95['importwarnings'],$var_95['warnings']);
                unlink(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename']);
                break;
            }
        }
        
        Yii::app()->var_20->var_101->refresh();
        foreach ($var_86 as $var_93)
        {
            if (pathinfo($var_93['filename'], var_94) == 'lsi' && tableExists("survey_{$var_95['newsid']}_timings"))
            {
                $var_103 = fn_8(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename'], $var_95['newsid'], $var_95['FieldReMap']);
                $var_95 = array_merge($var_103, $var_95);
                unlink(Yii::app()->getConfig('tempdir') . var_91 . $var_93['filename']);
                break;
            }
        }
        return $var_95;
    }
    else
    {
        return null;
    }

}


function fn_4($var_0,$var_7=NULL,$var_81=NULL,$var_104=NULL, $var_105=true, $var_106=true)
{
    Yii::app()->loadHelper('database');


    $var_107 = array();
    if ($var_7 == NULL)
    {
        $var_7 = file_get_contents($var_0);
    }
    $var_8 = @simplexml_load_string($var_7,'SimpleXMLElement',var_9);

    if (!$var_8 || $var_8->var_10!='Survey')
    {
        $var_17['error'] = gT("This is not a valid LimeSurvey survey structure XML file.");
        return $var_17;
    }

    $var_12 = (int) $var_8->var_13;
    $var_14=array();
    $var_108=array();
    $var_109=array();
    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['surveys']=0;
    $var_17['questions']=0;
    $var_17['subquestions']=0;
    $var_17['question_attributes']=0;
    $var_17['groups']=0;
    $var_17['assessments']=0;
    $var_17['quota']=0;
    $var_17['quotals']=0;
    $var_17['quotamembers']=0;
    $var_17['survey_url_parameters']=0;
    $var_17['importwarnings']=array();


    $var_2=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_2[]=(string)$var_5;
    }
    $var_17['languages']=count($var_2);

    

    foreach ($var_8->var_110->var_25->var_26 as $var_26)
    {
        $var_27=array();

        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }

        $var_30=$var_17['oldsid']=$var_27['sid'];
        if($var_104!=NULL)
        {
            $var_27['wishSID']=fn_5($var_104);
        }
        else
        {
            $var_27['wishSID']=$var_30;
        }

        if ($var_12<145)
        {
            if(isset($var_27['private'])) $var_27['anonymized']=$var_27['private'];
            unset($var_27['private']);
            unset($var_27['notification']);
        }

        
        $var_27['active']='N';
        
        $var_27['owner_id']=App()->var_111->var_112;

        if (isset($var_27['bouncetime']) && $var_27['bouncetime'] == '')
        {
            $var_27['bouncetime'] = NULL;
        }

        if (isset($var_27['showXquestions']))
        {
            $var_27['showxquestions']=$var_27['showXquestions'];
            unset($var_27['showXquestions']);
        }
        if (isset($var_27['googleAnalyticsStyle']))
        {
            $var_27['googleanalyticsstyle']=$var_27['googleAnalyticsStyle'];
            unset($var_27['googleAnalyticsStyle']);
        }
        if (isset($var_27['googleAnalyticsAPIKey']))
        {
            $var_27['googleanalyticsapikey']=$var_27['googleAnalyticsAPIKey'];
            unset($var_27['googleAnalyticsAPIKey']);
        }
        if (isset($var_27['allowjumps']))
        {
            $var_27['questionindex']= ($var_27['allowjumps']=="Y")?1:0;
            unset($var_27['allowjumps']);
        }
        
        $var_113=Survey::model()->var_61;
        $var_113['wishSID']=null;
        $var_114=array_diff_key($var_27, $var_113);
        $var_27=array_intersect_key ($var_27,$var_113);
        
        foreach($var_114 as $var_28=>$var_29)
        {
            $var_17['importwarnings'][]=sprintf(gT("This survey setting has not been imported: %s => %s"),$var_28,$var_29);
        }

        if (false == $var_1 = $var_17['newsid'] = Survey::model()->insertNewSurvey($var_27)) {
            throw new \var_11(500, gT("Error").": Failed to insert data [1]<br />");
        }

        $var_17['surveys']++;
    }


    



    foreach ($var_8->var_116->var_25->var_26 as $var_26)
    {

        $var_27=array();
        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }
        if (!in_array($var_27['surveyls_language'],$var_2)) continue;
        
        $var_27['surveyls_survey_id']=$var_1;
        
        if ($var_81 != NULL)
        {
            $var_27['surveyls_title']=$var_81;
        }
        if ($var_105)
        {
            $var_27['surveyls_title']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_title']);
            if (isset($var_27['surveyls_description'])) $var_27['surveyls_description']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_description']);
            if (isset($var_27['surveyls_welcometext'])) $var_27['surveyls_welcometext']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_welcometext']);
            if (isset($var_27['surveyls_urldescription']))$var_27['surveyls_urldescription']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_urldescription']);
            if (isset($var_27['surveyls_email_invite'])) $var_27['surveyls_email_invite']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_email_invite']);
            if (isset($var_27['surveyls_email_remind'])) $var_27['surveyls_email_remind']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_email_remind']);
            if (isset($var_27['surveyls_email_register'])) $var_27['surveyls_email_register']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_email_register']);
            if (isset($var_27['surveyls_email_confirm'])) $var_27['surveyls_email_confirm']=translateLinks('survey', $var_30, $var_1, $var_27['surveyls_email_confirm']);
        }
        if (isset($var_27['surveyls_attributecaptions']) && substr($var_27['surveyls_attributecaptions'],0,1)!='{')
        {
            unset($var_27['surveyls_attributecaptions']);
        }



        if (false == $var_32 = SurveyLanguageSetting::model()->insertNewSurvey($var_27)) {
            throw new \var_11(500, gT("Error").": Failed to insert data [2]<br />");
        }
    }


    


    if (isset($var_8->var_24->var_25->var_26))
    {
        
        $var_25 = $var_8->var_24->var_25;

        foreach ($var_8->var_24->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if (isset($var_27['language']) && !in_array($var_27['language'],$var_2)) continue;
            $var_30=$var_27['sid'];
            $var_27['sid']=$var_1;
            $var_31 = isset($var_27['gid']) ? $var_27['gid'] : null; unset($var_27['gid']); 

            
            if ($var_105)
            {
                $var_27['group_name']=translateLinks('survey', $var_30, $var_1, $var_27['group_name']);
                $var_27['description']=translateLinks('survey', $var_30, $var_1, $var_27['description']);
            }
            
            if (isset($var_107[$var_31]))
            {
                switchMSSQLIdentityInsert('groups',true);
                $var_27['gid']=$var_107[$var_31];
            }
             var_dump($var_27); die();
            if (false == $var_34 = QuestionGroup::model()->insertRecords($var_27)){
                throw new \var_11(500, gT("Error").": Failed to insert data [3]<br />");
            }
            $var_17['groups']++;

            if (!isset($var_107[$var_31]))
            {
                $var_107[$var_31]=$var_34; 
            }
            else
            {
                switchMSSQLIdentityInsert('groups',false);
            }
        }
    }

    

    
    
    if(isset($var_8->var_35))  
    {

        foreach ($var_8->var_35->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if (!in_array($var_27['language'],$var_2) || $var_27['gid']==0) continue;
            $var_30=$var_27['sid'];
            $var_27['sid']=$var_1;
            $var_27['gid']=$var_107[$var_27['gid']];
            $var_36=$var_27['qid']; unset($var_27['qid']); 

            
            if ($var_105)
            {
                $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
                $var_27['help']=translateLinks('survey', $var_30, $var_1, $var_27['help']);
            }
            
            if (isset($var_14[$var_36]))
            {
                $var_27['qid']=$var_14[$var_36];
                switchMSSQLIdentityInsert('questions',true);

            }
            if ($var_27)
                fn_9($var_27);

            if (!$var_106)
            {
                $var_118='archiveimport';
            }
            else
            {
                $var_118='import';
            }
            $var_119 = new class_0($var_118);
            $var_119->setAttributes($var_27, false);

            
            if(!$var_119->validate(array('title')))
            {
                $var_122=$var_119->var_123;
                $var_124=preg_replace("/[^A-Za-z0-9]/", '', $var_122);
                if (is_numeric(substr($var_124,0,1)))
                {
                    $var_124='q' . $var_124;
                }
                $var_119->var_123 =$var_124;
            }

            $var_125 = 0;
            
            while (!$var_119->validate(array('title')))
            {
                if (!isset($var_126))
                {
                    $var_126 = 0;
                    $var_127 = mt_rand(0, 1024);
                }
                else
                {
                    $var_126++;
                }
                $var_124='r' . $var_127  . 'q' . $var_126;
                $var_119->var_123 = $var_124;
                $var_125++;
                if ($var_125 > 10)
                {
                    throw new \var_11(500, gT("Error").": Failed to resolve question code problems after 10 attempts.<br />");
                }
            }
            if (!$var_119->save())
            {
                
                
                
                
                
                
                continue;
            }
            
            if(isset($var_124))
            {
                $var_17['importwarnings'][] = sprintf(gT("Question code %s was updated to %s."),$var_122,$var_124);
                $var_108[$var_122]=$var_124;
                unset($var_124);
                unset($var_122);
            }
            $var_37 = $var_119->var_128;

            if (!isset($var_14[$var_36]))
            {
                $var_14[$var_36]=$var_37;
                $var_17['questions']++;
            }
            else
            {
                switchMSSQLIdentityInsert('questions',false);
            }
        }
    }

    
    if(isset($var_8->var_38))
    {
        foreach ($var_8->var_38->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if (!in_array($var_27['language'],$var_2) || $var_27['gid']==0) continue;
            if (!isset($var_27['mandatory']) || trim($var_27['mandatory'])=='')
            {
                $var_27['mandatory']='N';
            }
            $var_27['sid']=$var_1;
            $var_27['gid']=$var_107[(int)$var_27['gid']];;
            $var_39=(int)$var_27['qid']; unset($var_27['qid']); 
            $var_27['parent_qid']=$var_14[(int)$var_27['parent_qid']]; 

            
            if ($var_105)
            {
                $var_27['question']=translateLinks('survey', $var_30, $var_1, $var_27['question']);
                if (isset($var_27['help'])) $var_27['help']=translateLinks('survey', $var_30, $var_1, $var_27['help']);
            }
            if (isset($var_14[$var_39])){
                $var_27['qid']=$var_14[$var_39];
                switchMSSQLIdentityInsert('questions',true);
            }
            if ($var_27)
                fn_9($var_27);


            if (!$var_106)
            {
                $var_118='archiveimport';
            }
            else
            {
                $var_118='import';
            }
            $var_129 = new class_0($var_118);
            $var_129->setAttributes($var_27, false);
            
            if(!$var_129->validate(array('title')))
            {
                $var_122=$var_129->var_123;
                $var_124=preg_replace("/[^A-Za-z0-9]/", '', $var_122);
                if (is_numeric(substr($var_124,0,1)))
                {
                    $var_124='sq' . $var_124;
                }
                $var_129->var_123 =$var_124;
            }
            $var_125 = 0;
            
            while (!$var_129->validate(array('title')))
            {
                if (!isset($var_126))
                {
                    $var_126 = 0;
                    $var_127 = mt_rand(0, 1024);
                }
                else
                {
                    $var_126++;
                }
                $var_124='r' . $var_127  . 'sq' . $var_126;
                $var_129->var_123 = $var_124;
                $var_125++;
                if ($var_125 > 10)
                {
                    throw new \var_11(500, gT("Error").": Failed to resolve question code problems after 10 attempts.<br />");
                }
            }
            if (!$var_129->save())
            {
                
                
                
                
                
                
                continue;
            }
            
            if(isset($var_124))
            {
                $var_17['importwarnings'][] = sprintf(gT("Title of subquestion %s was updated to %s."),$var_122,$var_124);
                $var_108[$var_122]=$var_124;
                unset($var_124);
                unset($var_122);
            }
            $var_40 = $var_129->var_128;
            if (!isset($var_27['qid']))
            {
                $var_14[$var_39]=$var_40; 
            }
            else
            {
                switchMSSQLIdentityInsert('questions',false);
            }
            $var_17['subquestions']++;
        }
    }

    
    if(isset($var_8->var_41))
    {

        foreach ($var_8->var_41->var_25->var_26 as $var_26)
        {
            $var_27=array();

            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if (!in_array($var_27['language'],$var_2) || !isset($var_14[(int)$var_27['qid']])) continue;
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 

            
            if ($var_105)
            {
                $var_27['answer']=translateLinks('survey', $var_30, $var_1, $var_27['answer']);
            }
            if ($var_27)
                fn_9($var_27);

            if (class_1::model()->insertRecords($var_27))
            {
                $var_17['answers']++;
            }
        }
    }

    
    if(isset($var_8->var_42))
    {
        $var_43=questionAttributes(true);
        foreach ($var_8->var_42->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }

            
            if ($var_12 < 170)
            {
                if (isset($var_27['attribute']))
                {
                    if ($var_27['attribute']=='dropdown_dates_year_max')
                    {
                        $var_27['attribute']='date_max';
                    }
                    if ($var_27['attribute']=='dropdown_dates_year_min')
                    {
                        $var_27['attribute']='date_min';
                    }
                }
            }
            unset($var_27['qaid']);
            if (!isset($var_14[(int)$var_27['qid']])) continue;
            $var_27['qid']=$var_14[(integer)$var_27['qid']]; 
            if ($var_12<156 && isset($var_43[$var_27['attribute']]['i18n']) && $var_43[$var_27['attribute']]['i18n'])
            {
                foreach ($var_2 as $var_44)
                {
                    $var_27['language']=$var_44;
                    if ($var_27)
                        fn_9($var_27);

                    if (false == $var_32=class_2::model()->insertRecords($var_27)) {
                        throw new \var_11(500, gT("Error").": Failed to insert data[7]<br />");
                    }
                }
            }
            else
            {
                if (false == $var_32=class_2::model()->insertRecords($var_27)) {
                    throw new \var_11(500, gT("Error").": Failed to insert data[8]<br />");
                }
            }
            $var_17['question_attributes']++;
        }
    }

    
    if(isset($var_8->var_45))
    {


        $var_17['defaultvalues']=0;
        foreach ($var_8->var_45->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 
            if (isset($var_14[(int)$var_27['sqid']])) $var_27['sqid']=$var_14[(int)$var_27['sqid']]; 
            if ($var_27)
                fn_9($var_27);
            
            if (false == $var_32=class_3::model()->insertRecords($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[9]<br />");
            }
            $var_17['defaultvalues']++;
        }
    }
    $var_130=reverseTranslateFieldNames($var_30,$var_1,$var_107,$var_14);

    
    if(isset($var_8->var_46))
    {


        $var_17['conditions']=0;
        foreach ($var_8->var_46->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            
            if (isset($var_14[$var_27['qid']]))
            {
                $var_27['qid']=$var_14[$var_27['qid']]; 
            }
            else continue; 
            if ($var_27['cqid'] != 0)
            {
                if (isset($var_14[$var_27['cqid']]))
                {
                    $var_131 = $var_27['cqid']; 
                    $var_27['cqid']=$var_14[$var_27['cqid']]; 
                }
                else continue; 

                list($var_47, $var_48, $var_49) = explode("X",$var_27["cfieldname"],3);

                
                if (!isset($var_107[$var_48]))
                    continue;
            }

            unset($var_27["cid"]);

            
            if ($var_27['cqid'] != 0)
            {
                if (preg_match("/^\+/",$var_47))
                {
                    $var_50 = '+'.$var_1 . "X" . $var_107[$var_48] . "X" . $var_27["cqid"] .substr($var_49,strlen($var_131));
                }
                else
                {
                    $var_50 = $var_1 . "X" . $var_107[$var_48] . "X" . $var_27["cqid"] .substr($var_49,strlen($var_131));
                }
            }
            else
            { 
                $var_50 = $var_27["cfieldname"];
            }
            $var_27["cfieldname"] = $var_50;
            if (trim($var_27["method"])=='')
            {
                $var_27["method"]='==';
            }

            
            if (preg_match("/^@(.*)@$/",$var_27["value"],$var_132))
            {
                if (isset($var_130[$var_132[1]]))
                {
                    $var_133 = '@'.$var_130[$var_132[1]].'@';
                    $var_27["value"] = $var_133;
                }

            }

            
            $var_32=Condition::model()->insertRecords($var_27) or safeDie (gT("Error").": Failed to insert data[10]<br />");
            $var_17['conditions']++;
        }
    }
    

    
    if(isset($var_8->var_134))
    {


        foreach ($var_8->var_134->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            if  ($var_27['gid']>0)
            {
                $var_27['gid']=$var_107[(int)$var_27['gid']]; 
            }

            $var_27['sid']=$var_1; 
            unset($var_27['id']);
            
            if (false == $var_32=Assessment::model()->insertRecords($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[11]<br />");
            }
            $var_17['assessments']++;
        }
    }

    
    if(isset($var_8->var_135))
    {


        foreach ($var_8->var_135->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['sid']=$var_1; 
            $var_136=$var_27['id'];
            unset($var_27['id']);
            
            if (false == $var_32=Quota::model()->insertRecords($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[12]<br />");
            }
            $var_109[$var_136] = getLastInsertID('{{quota}}');
            $var_17['quota']++;
        }
    }

    
    if(isset($var_8->var_137))
    {

        foreach ($var_8->var_137->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['sid']=$var_1; 
            $var_27['qid']=$var_14[(int)$var_27['qid']]; 
            $var_27['quota_id']=$var_109[(int)$var_27['quota_id']]; 
            unset($var_27['id']);
            
            if (false  == $var_32=QuotaMember::model()->insertRecords($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[13]<br />");
            }
            $var_17['quotamembers']++;
        }
    }

    
    if(isset($var_8->var_138))
    {

        foreach ($var_8->var_138->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['quotals_quota_id']=$var_109[(int)$var_27['quotals_quota_id']]; 
            unset($var_27['quotals_id']);
            if (false == $var_32=QuotaLanguageSetting::model()->insertRecords($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data<br />");
            }
            $var_17['quotals']++;
        }
    }

    
    if(isset($var_8->var_139))
    {

        foreach ($var_8->var_139->var_25->var_26 as $var_26)
        {
            $var_27=array();
            foreach ($var_26 as $var_28=>$var_29)
            {
                $var_27[(string)$var_28]=(string)$var_29;
            }
            $var_27['sid']=$var_1; 
            if (isset($var_27['targetsqid']) && $var_27['targetsqid']!='')
            {
                $var_27['targetsqid'] =$var_14[(int)$var_27['targetsqid']]; 
            }
            if (isset($var_27['targetqid']) && $var_27['targetqid']!='')
            {
                $var_27['targetqid'] =$var_14[(int)$var_27['targetqid']]; 
            }
            unset($var_27['id']);
            if (false == $var_32=SurveyURLParameter::model()->insertRecord($var_27)) {
                throw new \var_11(500, gT("Error").": Failed to insert data[14]<br />");
            }
            $var_17['survey_url_parameters']++;
        }
    }

    
    Permission::model()->giveAllSurveyPermissions(App()->var_111->var_112,$var_1);
    $var_130=reverseTranslateFieldNames($var_30,$var_1,$var_107,$var_14);
    $var_17['FieldReMap']=$var_130;
    LimeExpressionManager::SetSurveyId($var_1);
    translateInsertansTags($var_1,$var_30,$var_130);
    replaceExpressionCodes($var_1,$var_108);
    if (count($var_108)) {
          array_unshift($var_17['importwarnings'] , "<span class='warningtitle'>".gT('Attention: Several question codes were updated. Please check these carefully as the update  may not be perfect with customized expressions.').'</span>');
    }
    LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
    LimeExpressionManager::UpgradeConditionsToRelevance($var_1);
    return $var_17;
}


function fn_5($var_30)
{
    Yii::app()->loadHelper('database');
    $var_18 = "SELECT sid FROM {{surveys}} WHERE sid=$var_30";

    $var_142 = Yii::app()->var_20->createCommand($var_18)->queryRow();

    
    if($var_142!==false)
    {
        
        do
        {
            $var_1 = randomChars(5,'123456789');
            $var_18 = "SELECT sid FROM {{surveys}} WHERE sid=$var_1";
            $var_142 = Yii::app()->var_20->createCommand($var_18)->queryRow();
        }
        while ($var_142!==false);

        return $var_1;
    }
    else
    {
        return $var_30;
    }
}


function fn_6($var_0,$var_144,$var_145=true)
{
    Yii::app()->loadHelper('database');

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    $var_17['warnings']=array();
    if ($var_8->var_10!='Tokens')
    {
        $var_17['error'] = gT("This is not a valid token data XML file.");
        return $var_17;
    }

    if (!isset($var_8->var_146->var_147))
    {
        $var_17['tokens']=0;
        return $var_17;
    }

    $var_17['tokens']=0;
    $var_17['tokenfieldscreated']=0;

    if ($var_145)
    {
        
        $var_148=array();
        foreach ($var_8->var_146->var_147->var_149 as $var_150 )
        {
            $var_148[]=(string)$var_150;
        }
        
        $var_151=Yii::app()->var_20->getSchema()->getTable("{{tokens_$var_144}}",true);
        $var_151=array_keys($var_151->var_154);
        $var_155=array_diff($var_148, $var_151);
        Yii::app()->loadHelper('update/updatedb');

        foreach ($var_155 as $var_156)
        {
            if (strpos($var_156,'attribute')!==false)
            {
                addColumn('{{tokens_'.$var_144.'}}',$var_156, 'string');
            }
        }
    }

    switchMSSQLIdentityInsert('tokens_'.$var_144,true);
	foreach ($var_8->var_146->var_25->var_26 as $var_26)
    {
        $var_27=array();

        foreach ($var_26 as $var_28=>$var_29)
        {
            $var_27[(string)$var_28]=(string)$var_29;
        }

		$var_157 = Token::create($var_144);
		$var_157->setAttributes($var_27, false);
        if (!$var_157->save())
        {
            $var_17['warnings'][]=gT("Skipped tokens entry:").' '. implode('. ',$var_157->errors['token']);
        };
        $var_17['tokens']++;
    }
    switchMSSQLIdentityInsert('tokens_'.$var_144,false);
    if (Yii::app()->var_20->getDriverName() == 'pgsql')
    {
        try {Yii::app()->var_20->createCommand("SELECT pg_catalog.setval(pg_get_serial_sequence('{{tokens_".$var_144."}}', 'tid'), (SELECT MAX(tid) FROM {{tokens_".$var_144."}}))")->execute();} catch(var_159 $var_160) {};
    }
    return $var_17;
}


function var_161($var_0,$var_144,$var_162=array())
{
    Yii::app()->loadHelper('database');


    switchMSSQLIdentityInsert('survey_'.$var_144, true);
    $var_17['responses']=0;
    $var_163 = new class_5();
    $var_163->open($var_0);
    $var_166 = Yii::app()->var_20->var_101->getTable('{{survey_'.$var_144.'}}')->getColumnNames();
    while ($var_163->read()) {
        if ($var_163->var_168 === 'LimeSurveyDocType' && $var_163->var_169 == var_164::var_170)
        {
            $var_163->read();
            if ($var_163->var_29!='Responses')
            {
                $var_17['error'] = gT("This is not a valid response data XML file.");
                return $var_17;
            }
        }
        if ($var_163->var_168 === 'rows' && $var_163->var_169 == var_164::var_170)
        {
            while ($var_163->read()) {
                if ($var_163->var_168 === 'row' && $var_163->var_169 == var_164::var_170)
                {
                    $var_171=array();
                    while ($var_163->read() && $var_163->var_168 != 'row') {
                        $var_172=$var_163->var_168;
                        if ($var_172[0]=='_') $var_172=substr($var_172,1);
                        $var_172=str_replace('-','
                        if (isset($aFieldReMap[$sFieldname]))
                        {
                            $sFieldname=$aFieldReMap[$sFieldname];
                        }
                        if (!$oXMLReader->isEmptyElement)
                        {
                            $oXMLReader->read();
                            if(in_array($sFieldname,$DestinationFields)) 
                                $aInsertData[$sFieldname]=$oXMLReader->value;
                            $oXMLReader->read();
                        }else
                        {
                            if(in_array($sFieldname,$DestinationFields))
                                $aInsertData[$sFieldname]='';
                        }
                    }

                    if (false == $var_32 = class_6::model($var_144)->insertRecords($var_171)) {
                        throw new \var_11(500, gT("Error") . ": Failed to insert data[16]<br />");
                    }
                    $var_17['responses']++;
                }
            }

        }
    }

    switchMSSQLIdentityInsert('survey_'.$var_144,false);
    if (Yii::app()->var_20->getDriverName() == 'pgsql')
    {
        try {Yii::app()->var_20->createCommand("SELECT pg_catalog.setval(pg_get_serial_sequence('{{survey_".$var_144."}}', 'id'), (SELECT MAX(id) FROM {{survey_".$var_144."}}))")->execute();} catch(var_159 $var_160) {};
    }
    return $var_17;
}


function fn_7($var_0,$var_173,$var_174=array())
{

    
    if(!isset($var_174['bDeleteFistLine'])){$var_174['bDeleteFistLine']=true;} 
    if(!isset($var_174['sExistingId'])){$var_174['sExistingId']="ignore";} 
    if(!isset($var_174['bNotFinalized'])){$var_174['bNotFinalized']=false;} 
    if(!isset($var_174['sCharset']) || !$var_174['sCharset']){$var_174['sCharset']="utf8";}
    if(!isset($var_174['sSeparator'])){$var_174['sSeparator']="\t";}
    if(!isset($var_174['sQuoted'])){$var_174['sQuoted']="\"";}
    
    if (!array_key_exists($var_174['sCharset'], aEncodingsArray())) {
        $var_174['sCharset']="utf8";
    }

    
    $var_175=array();
    
    $var_176 = fopen($var_0, "r"); 
    while (!feof($var_176))
    {
        $var_177 = fgets($var_176); 
        $var_178[] = mb_convert_encoding($var_177, "UTF-8", $var_174['sCharset']);
    }
    
    fclose($var_176);
    if($var_174['bDeleteFistLine']){
        array_shift($var_178);
    }

    $var_179 = Yii::app()->var_20->getSchema()->getTable(class_6::model($var_173)->tableName())->getColumnNames();
    
    $var_180=str_getcsv(array_shift($var_178),$var_174['sSeparator'],$var_174['sQuoted']);
    $var_181=LimeExpressionManager::getLEMqcode2sgqa($var_173);
    $var_182=array();
    if(!$var_180){
        $var_175['errors'][]=gT("File seems empty or has only one line");
        return $var_175;
    }
    
    foreach($var_179 as $var_150){
        if(in_array($var_150,$var_180)){ 
            $var_182[$var_150]=array_search($var_150,$var_180);
        }elseif(in_array($var_150,$var_181)){ 
            $var_183=array_search($var_150,$var_181);
            if(in_array($var_183,$var_180)){
                $var_182[$var_150]=array_search($var_183,$var_180);
            }elseif($var_174['bForceImport']){
                

                
                if( ! isset($var_184)){
                    foreach($var_180 as $var_185=>$var_168){
                        if(preg_match('/^\d+X\d+X\d+/', $var_168)){
                            $var_184 = $var_185;
                            break;
                        }
                    }
                }
                
                if( ! isset($var_186)){
                    foreach($var_179 as $var_185=>$var_168){
                        if(preg_match('/^\d+X\d+X\d+/', $var_168)){
                            $var_186 = $var_185;
                            break;
                        }
                    }
                }

                
                if(isset($var_186,$var_184)){
                    $var_187 = (array_search($var_150,$var_179)-$var_186) + $var_184;
                    if($var_187 < sizeof($var_180)){
                        $var_182[$var_150] = $var_187;
                    }else{
                        $var_188 = true;
                        break;
                    }
                }
            }
        }
    }
    
    if(isset($var_188)){
        $var_175['errors'][]=gT("Import failed: Forced import was requested but the input file doesn't contain enough columns to fill the survey.");
        return $var_175;
    }

    
    foreach($var_182 as $var_189=>$var_126){
        if(preg_match('/^\d+X\d+X\d+/', $var_189)){
            $var_190 = true;
            break;
        }
    }
    if( ! isset($var_190)){
        $var_175['errors'][]=gT("Import failed: No answers could be mapped.");
        return $var_175;
    }

    
    
    $var_191=0;
    $var_192=0;
    $var_193=array();
    $var_194=array();
    $var_195=array();
    $var_196=array();

    $var_197=0; 
    
    $var_198=array_search('id', $var_180); 
    if(is_int($var_198)){unset($var_182['id']);}
    $var_199=array_search('submitdate', $var_180); 
    if(is_int($var_199)){unset($var_182['submitdate']);}
    $var_200=(is_int($var_198))?$var_198:0;

    
    while($var_201=array_shift($var_178)){
        $var_191++;
        $var_202=false;
        $var_203=str_getcsv($var_201,$var_174['sSeparator'],$var_174['sQuoted']);
        if($var_198!==false){
            $var_204 = class_6::model($var_173)->findByPk($var_203[$var_198]);
            if($var_204)
            {
                $var_202=true;
                $var_196[]=$var_203[$var_198];
                
                switch ($var_174['sExistingId'])
                {
                    case 'replace':
                        class_6::model($var_173)->deleteByPk($var_203[$var_198]);
                        class_6::sid($var_173);
                        $var_204 = new class_6;
                        break;
                    case 'replaceanswers':
                        break;
                    case 'renumber':
                        class_6::sid($var_173);
                        $var_204 = new class_6;
                        break;
                    case 'skip':
                    case 'ignore':
                    default:
                        $var_204=false; 
                        break;
                }
            }
            else
            {
                class_6::sid($var_173);
                $var_204 = new class_6;
            }
        }else{
            class_6::sid($var_173);
            $var_204 = new class_6;
        }
        if($var_204){
            
            if(is_int($var_198)) 
            {
                if(!$var_202) 
                {
                    $var_204->var_112=$var_203[$var_198];
                    $var_197=($var_203[$var_198]>$var_197)?$var_203[$var_198]:$var_197;
                }
                elseif($var_174['sExistingId']=='replace' || $var_174['sExistingId']=='replaceanswers')
                {
                    $var_204->var_112=$var_203[$var_198];
                }
            }
            if($var_174['bNotFinalized'])
            {
                $var_204->var_206=new class_7('NULL');
            }
            elseif(is_int($var_199))
            {
                if( $var_203[$var_199]=='{question_not_shown}' || trim($var_203[$var_199]=='')){
                    $var_204->var_206 = new class_7('NULL');
                }else{
                    
                    $var_204->var_206=$var_203[$var_199];
                }
            }
            foreach($var_182 as $var_150=>$var_207)
            {
                if( $var_203[$var_207]=='{question_not_shown}'){
                    $var_204->$var_150 = new class_7('NULL');
                }else{
                    $var_208=str_replace(array("{quote}","{tab}","{cr}","{newline}","{lbrace}"),array("\"","\t","\r","\n","{"),$var_203[$var_207]);
                    $var_204->$var_150 = $var_208;
                }
            }
            
            $var_209 = Yii::app()->var_20->beginTransaction();
            try
            {
                if (isset($var_204->var_112) && !is_null($var_204->var_112))
                {
                    switchMSSQLIdentityInsert('survey_'.$var_173, true);
                    $var_211=true;
                }
                if($var_204->save())
                {
                    $var_209->commit();
                    if($var_202 && $var_174['sExistingId']!='renumber')
                    {
                        $var_194[]=$var_203[$var_200];
                    }
                    else
                    {
                        $var_193[]=$var_203[$var_200];
                    }
                }
                else 
                {
                    $var_209->rollBack();
                    $var_195[]=$var_203[$var_200];
                }
                if (isset($var_211) && $var_211==true){
                    switchMSSQLIdentityInsert('survey_'.$var_173, false);
                    $var_211=false;
                }
            }
            catch(var_159 $var_160) {}

        }
    }
    
    
    
    if (Yii::app()->var_20->var_214=='pgsql')
    {

        $var_215= Yii::app()->var_20->getSchema()->getTable("{{survey_{$var_173}}}")->var_216;
        $var_217=Yii::app()->var_20->createCommand("SELECT last_value FROM  {$var_215}")->queryScalar();
        if($var_217<$var_197)
        {
            $var_218 = "SELECT setval(pg_get_serial_sequence('{{survey_{$var_173}}}', 'id'),{$var_197},false);";
            $var_32 = Yii::app()->var_20->createCommand($var_218)->execute();
        }
    }

    
    
    if($var_191){
        $var_175['success'][]=sprintf(gT("%s response lines in your file."),$var_191);
    }else{
        $var_175['errors'][]=gT("No response lines in your file.");
    }
    if(count($var_193)){
        $var_175['success'][]=sprintf(gT("%s responses were inserted."),count($var_193));
        
    }
    if(count($var_194)){
        $var_175['success'][]=sprintf(gT("%s responses were updated."),count($var_194));
    }
    if(count($var_195)){
        $var_175['errors'][]=sprintf(gT("%s responses cannot be inserted or updated."),count($var_195));
    }
    if(count($var_196) && ($var_174['sExistingId']=='skip' || $var_174['sExistingId']=='ignore'))
    {
        $var_175['warnings'][]=sprintf(gT("%s responses already exist."),count($var_196));
    }
    return $var_175;
}


function fn_8($var_0,$var_144,$var_162=array())
{

    Yii::app()->loadHelper('database');

    $var_7 = file_get_contents($var_0);
    $var_8 = simplexml_load_string($var_7,'SimpleXMLElement',var_9);
    if ($var_8->var_10!='Timings')
    {
        $var_17['error'] = gT("This is not a valid timings data XML file.");
        return $var_17;
    }

    $var_17['responses']=0;

    $var_2=array();
    foreach ($var_8->var_16->var_5 as $var_5)
    {
        $var_2[]=(string)$var_5;
    }
    $var_17['languages']=count($var_2);
     
    if (!isset($var_8->var_219->var_25))
    {
        return $var_17;
    }
    switchMSSQLIdentityInsert('survey_'.$var_144.'_timings',true);
    foreach ($var_8->var_219->var_25->var_26 as $var_26)
    {
        $var_27=array();

        foreach ($var_26 as $var_28=>$var_29)
        {
            if ($var_28[0]=='_') $var_28=substr($var_28,1);
            if (isset($var_162[substr($var_28,0,-4)]))
            {
                $var_28=$var_162[substr($var_28,0,-4)].'time';
            }
            $var_27[$var_28]=(string)$var_29;
        }

        if (false == $var_32 = SurveyTimingDynamic::model($var_144)->insertRecords($var_27)) {
            throw new \var_11(500, gT("Error").": Failed to insert data[17]<br />");
        }

        $var_17['responses']++;
    }
    switchMSSQLIdentityInsert('survey_'.$var_144.'_timings',false);

    return $var_17;
}


function fn_9(&$var_220)
{
    if(Yii::app()->getConfig('filterxsshtml') && !App()->var_111->checkAccess('superadmin'))
    {
        $var_222 = new class_8();
        $var_222->var_63 = array('URI.AllowedSchemes'=>array(
        'http' => true,
        'https' => true,
        ));
        foreach($var_220 as &$var_29)
        {
            $var_29 = $var_222->purify($var_29);
        }
    }
}


function fn_10($var_0)
{


    $var_27=array();
    $var_17=array();
    $var_17['error']=false;
    $var_224 = 'en';   

    $var_225='';
    $var_176 = fopen($var_0, 'r');
    $var_226 = fread($var_176, 2);
    rewind($var_176);
    $var_227 = questionAttributes();

    
    if($var_226 === chr(0xff).chr(0xfe)  || $var_226 === chr(0xfe).chr(0xff)){
        
        $var_225 = 'UTF-16';
    } else {
        $var_228 = fread($var_176, 1000) + 'e'; 
        
        rewind($var_176);

        $var_225 = mb_detect_encoding($var_228 , 'UTF-8, UTF-7, ASCII, EUC-JP,SJIS, eucJP-win, SJIS-win, JIS, ISO-2022-JP');
    }
    if ($var_225 && $var_225 != 'UTF-8'){
        stream_filter_append($var_176, 'convert.iconv.'.$var_225.'/UTF-8');
    }

    $var_229 = stream_get_contents($var_176);
    fclose($var_176);

    
    $var_229 = str_replace("0xC20xA0",' ',$var_229);
    $var_230 = explode("\n",$var_229);
    $var_26 = array_shift($var_230);
    $var_231 = explode("\t",$var_26);
    $var_232 = array();
    foreach ($var_231 as $var_233)
    {
        $var_232[] = trim($var_233);
    }
    
    $var_232[0] = preg_replace("/^\W+/","",$var_232[0]);
    if (preg_match('/class$/',$var_232[0]))
    {
        $var_232[0] = 'class';   
    }

    $var_234 = array();
    foreach ($var_230 as $var_235)
    {
        $var_236 = array();
        $var_26 = explode("\t",$var_235);
        for ($var_185 = 0; $var_185 < count($var_232); ++$var_185)
        {
            $var_78 = (isset($var_26[$var_185]) ? $var_26[$var_185] : '');
            
            if (preg_match('/^".*"$/',$var_78))
            {
                $var_78 = str_replace('""','"',substr($var_78,1,-1));
            }
            $var_236[$var_232[$var_185]] = $var_78;
        }
        $var_234[] = $var_236;
    }

    $var_17['defaultvalues']=0;
    $var_17['answers']=0;
    $var_17['surveys']=0;
    $var_17['languages']=0;
    $var_17['questions']=0;
    $var_17['subquestions']=0;
    $var_17['question_attributes']=0;
    $var_17['groups']=0;
    $var_17['importwarnings']=array();
    
    $var_17['assessments']=0;
    $var_17['quota']=0;
    $var_17['quotamembers']=0;
    $var_17['quotals']=0;

    
    $var_237 = array();
    $var_238 = array();
    foreach ($var_234 as $var_26)
    {
        switch($var_26['class'])
        {
            case 'S':
                if (isset($var_26['text']) && $var_26['name'] != 'datecreated')
                {
                    $var_237[$var_26['name']] = $var_26['text'];
                }
                break;
            case 'SL':
                if (!isset($var_238[$var_26['language']]))
                {
                    $var_238[$var_26['language']] = array();
                }
                if (isset($var_26['text']))
                {
                    $var_238[$var_26['language']][$var_26['name']] = $var_26['text'];
                }
                break;
        }
    }

    $var_30 = 1;
    if (isset($var_237['sid']))
    {
        $var_30 = (int) $var_237['sid'];
    }

    
    $var_237['startdate']=NULL;
    $var_237['active']='N';
   
    $var_1 = Survey::model()->insertNewSurvey($var_237) ; 
    if ($var_1==false)
    {
        $var_17['error'] = Survey::model()->getErrors();
        $var_17['bFailed'] = true;
        return $var_17;
    }
    $var_237['sid']=$var_1;
    $var_17['surveys']++;
    $var_17['newsid']=$var_1;

    $var_240=0;
    $var_241=0;    
    $var_128=0;
    $var_242=0;    
    $var_243='T';
    $var_244=0;    

    
    $var_245='Missing Title';
    foreach ($var_238 as $var_246 => $var_27)
    {
        $var_27['surveyls_survey_id'] = $var_1;
        $var_27['surveyls_language'] = $var_246;
        if (isset($var_27['surveyls_title']))
        {
            $var_245 = $var_27['surveyls_title'];
        }
        else
        {
            $var_27['surveyls_title'] = $var_245;
        }


        $var_32 = SurveyLanguageSetting::model()->insertNewSurvey($var_27);
        if(!$var_32){
            $var_17['error'][] = gT("Error")." : ".gT("Failed to insert survey language");
            break;
        }
        $var_17['languages']++;
    }

    $var_247=array();
    $var_248=array();
    $var_249=array();

    if (isset($var_237['language']))
    {
        $var_224 = $var_237['language'];    
    }

    $var_250 = 1;
    $var_251='';
    foreach ($var_234 as $var_26)
    {
        $var_250 += 1;
        switch($var_26['class'])
        {
            case 'G':
                
                $var_27 = array();
                $var_27['sid'] = $var_1;
                $var_252 = ((!empty($var_26['name']) ? $var_26['name'] : 'G' . $var_241));
                $var_253 = (!empty($var_26['language']) ? $var_26['language'] : $var_224);
                
                
                
                if ($var_251!=$var_253)    
                {
                    $var_254=0;
                }
                $var_251=$var_253;
                
                $var_255=(!empty($var_26['type/scale']) ? $var_26['type/scale'] : 'G'.$var_254++);
                $var_27['group_name'] = $var_252;
                $var_27['grelevance'] = (isset($var_26['relevance']) ? $var_26['relevance'] : '');
                $var_27['description'] = (isset($var_26['text']) ? $var_26['text'] : '');
                $var_27['language'] = $var_253;
                $var_27['randomization_group'] = (isset($var_26['random_group']) ? $var_26['random_group'] : '');

                
                if (isset($var_247[$var_255]))
                {
                    $var_240 = $var_247[$var_255]['gid'];
                    $var_27['gid'] = $var_240;
                    $var_27['group_order'] = $var_247[$var_255]['group_order'];
                }
                else
                {
                    $var_27['group_order'] = $var_241;
                }
                $var_34 = QuestionGroup::model()->insertRecords($var_27);
                if(!$var_34){
                    $var_17['error'][] = gT("Error")." : ".gT("Failed to insert group").". ".gT("Text file row number ").$var_250." (".$var_252.")";
                    break;
                }
                if (!isset($var_247[$var_255]))
                {
                    $var_17['groups']++;
                    $var_240=$var_34;
                    $var_247[$var_255]['gid']=$var_240;
                    $var_247[$var_255]['group_order']=$var_241++;
                }
                $var_242=0;    
                break;

            case 'Q':
                
                $var_27 = array();
                $var_27['sid'] = $var_1;
                $var_243 = (isset($var_26['type/scale']) ? $var_26['type/scale'] : 'T');
                $var_256 = (isset($var_26['name']) ? $var_26['name'] : 'Q' . $var_242);
                $var_27['gid'] = $var_240;
                $var_27['type'] = $var_243;
                $var_27['title'] = $var_256;
                $var_27['question'] = (isset($var_26['text']) ? $var_26['text'] : '');
                $var_27['relevance'] = (isset($var_26['relevance']) ? $var_26['relevance'] : '');
                $var_27['preg'] = (isset($var_26['validation']) ? $var_26['validation'] : '');
                $var_27['help'] = (isset($var_26['help']) ? $var_26['help'] : '');
                $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                $var_27['mandatory'] = (isset($var_26['mandatory']) ? $var_26['mandatory'] : '');
                $var_257 = $var_27['other'] = (isset($var_26['other']) ? $var_26['other'] : 'N'); 
                $var_27['same_default'] = (isset($var_26['same_default']) ? $var_26['same_default'] : 0);
                $var_27['parent_qid'] = 0;

                
                $var_258="G{$var_240}_".$var_256;
                if (isset($var_248[$var_258]))
                {
                    $var_242 = $var_248[$var_258]['question_order'];
                    $var_128 = $var_248[$var_258]['qid'];
                    $var_27['qid']  = $var_128;
                    $var_27['question_order'] = $var_242;
                }
                else
                {
                    $var_27['question_order'] = $var_242;
                }
                
                $var_32 = class_0::model()->insertRecords($var_27);
                if(!$var_32){
                    $var_17['error'][] = gT("Error")." : ".gT("Could not insert question").". ".gT("Text file row number ").$var_250." (".$var_256.")";
                    break;
                }
                $var_37 = $var_32;
                if (!isset($var_248[$var_258]))
                {
                    $var_17['questions']++;
                    $var_128=$var_37; 
                    $var_248[$var_258]['qid'] = $var_128;
                    $var_248[$var_258]['question_order'] = $var_242++;
                }
                $var_244=0;    
                $var_259 = 0;    
                
                foreach ($var_26 as $var_28=>$var_78)
                {
                    switch($var_28)
                    {
                        case 'class':
                        case 'type/scale':
                        case 'name':
                        case 'text':
                        case 'validation':
                        case 'relevance':
                        case 'help':
                        case 'language':
                        case 'mandatory':
                        case 'other':
                        case 'same_default':
                        case 'default':
                            break;
                        default:
                            if ($var_28 != '' && $var_78 != '')
                            {
                                $var_27 = array();
                                $var_27['qid'] = $var_128;
                                
                                if (isset($var_227[$var_243][$var_28]['i18n']) && $var_227[$var_243][$var_28]['i18n']==1)
                                {
                                    $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                                }
                                else
                                {
                                    $var_27['language'] = NULL;
                                }
                                $var_27['attribute'] = $var_28;
                                $var_27['value'] = $var_78;
                                $var_32=class_2::model()->insertRecords($var_27);
                                if(!$var_32){
                                    $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert question attribute").". ".gT("Text file row number ").$var_250." ({$var_28})";
                                    break;
                                }
                                $var_17['question_attributes']++;
                            }
                            break;
                    }
                }

                
                if (isset($var_26['default']))
                {
                    $var_27=array();
                    $var_27['qid'] = $var_128;
                    $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                    $var_27['defaultvalue'] = $var_26['default'];
                    $var_32 = class_3::model()->insertRecords($var_27);
                    if(!$var_32){
                        $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_250;
                        break;
                    }
                    $var_17['defaultvalues']++;
                }
                break;

            case 'SQ':
                $var_260 = (isset($var_26['name']) ? $var_26['name'] : 'SQ' . $var_259);
                if ($var_243 == 'O' || $var_243 == '|')
                {
                    ;   
                }
                elseif ($var_260 == 'other' && $var_257=="Y") 
                {
                    if($var_243=="!" || $var_243=="L")
                    {
                        
                        if (isset($var_26['default']) && $var_26['default']!="")
                        {
                            $var_27=array();
                            $var_27['qid'] = $var_128;
                            $var_27['specialtype'] = 'other';
                            $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                            $var_27['defaultvalue'] = $var_26['default'];
                            $var_32 = class_3::model()->insertRecords($var_27);
                            if(!$var_32){
                                $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_250;
                                break;
                            }
                            $var_17['defaultvalues']++;
                        }
                    }
                }
                else
                {
                    $var_27 = array();
                    $var_261 = (isset($var_26['type/scale']) ? $var_26['type/scale'] : 0);
                    $var_27['sid'] = $var_1;
                    $var_27['gid'] = $var_240;
                    $var_27['parent_qid'] = $var_128;
                    $var_27['type'] = $var_243;
                    $var_27['title'] = $var_260;
                    $var_27['question'] = (isset($var_26['text']) ? $var_26['text'] : '');
                    $var_27['relevance'] = (isset($var_26['relevance']) ? $var_26['relevance'] : '');
                    $var_27['preg'] = (isset($var_26['validation']) ? $var_26['validation'] : '');
                    $var_27['help'] = (isset($var_26['help']) ? $var_26['help'] : '');
                    $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                    $var_27['mandatory'] = (isset($var_26['mandatory']) ? $var_26['mandatory'] : '');
                    $var_27['scale_id'] = $var_261;
                    
                    $var_262 = "G{$var_240}Q{$var_128}_{$var_261}_{$var_260}";
                    if (isset($var_249[$var_262]))
                    {
                        $var_242 = $var_249[$var_262]['question_order'];
                        $var_263 = $var_249[$var_262]['sqid'];
                        $var_27['question_order'] = $var_242;
                        $var_27['qid'] = $var_263;
                    }
                    else
                    {
                        $var_27['question_order'] = $var_242;
                    }
                    
                    $var_40 = class_0::model()->insertRecords($var_27);
                    if(!$var_40){
                        $var_17['error'][] = gT("Error")." : ".gT("Could not insert subquestion").". ".gT("Text file row number ").$var_250." (".$var_256.")";
                        break;
                    }
                    if (!isset($var_249[$var_262]))
                    {
                        $var_249[$var_262]['question_order'] = $var_242++;
                        $var_263=$var_40; 
                        $var_249[$var_262]['sqid'] = $var_263;
                        $var_17['subquestions']++;
                    }

                    
                    if (isset($var_26['default']) && $var_26['default']!="")
                    {
                        $var_27=array();
                        $var_27['qid'] = $var_128;
                        $var_27['sqid'] = $var_263;
                        $var_27['scale_id'] = $var_261;
                        $var_27['language'] = (isset($var_26['language']) ? $var_26['language'] : $var_224);
                        $var_27['defaultvalue'] = $var_26['default'];
                        $var_32 = class_3::model()->insertRecords($var_27);
                        if(!$var_32){
                            $var_17['importwarnings'][] = gT("Warning")." : ".gT("Failed to insert default value").". ".gT("Text file row number ").$var_250;
                            break;
                        }
                        $var_17['defaultvalues']++;
                    }
                }
                break;
            case 'A':
                $var_27 = array();
                $var_27['qid'] = $var_128;
                $var_27['code'] = (isset($var_26['name']) ? $var_26['name'] : 'A' . $var_244);
                $var_27['answer'] = (isset($var_26['text']) ? $var_26['text'] : '');
                $var_27['scale_id'] = (isset($var_26['type/scale']) ? $var_26['type/scale'] : 0);
                $var_27['language']= (isset($var_26['language']) ? $var_26['language'] : $var_224);
                $var_27['assessment_value'] = (int) (isset($var_26['relevance']) ? $var_26['relevance'] : '');
                $var_27['sortorder'] = ++$var_244;
                $var_32 = class_1::model()->insertRecords($var_27); 
                if(!$var_32){
                    $var_17['error'][] = gT("Error")." : ".gT("Could not insert answer").". ".gT("Text file row number ").$var_250;
                }
                $var_17['answers']++;
                break;
        }

    }

    
    if(is_array($var_17['error']))
    {
        $var_32 = Survey::model()->deleteSurvey($var_1);
    }
    else
    {
        LimeExpressionManager::SetSurveyId($var_1);
        LimeExpressionManager::RevertUpgradeConditionsToRelevance($var_1);
        LimeExpressionManager::UpgradeConditionsToRelevance($var_1);
    }

    return $var_17;
}
