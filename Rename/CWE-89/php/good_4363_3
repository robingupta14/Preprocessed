<?php




class class_0
{
    
    private $var_0;

    
    private $var_1;

    
    private $var_2;

    
    private $var_3;

    
    public function fn_0(
        var_4 $var_0,
        $var_1,
        $var_2,
        $var_3
    ) {
        $var_5->var_0 = $var_0;
        $var_5->var_1 = $var_1;
        $var_5->var_2 = (bool) $var_2;
        $var_5->var_3 = (int) $var_3;
    }

    
    public function fn_1($var_6, $var_7, $var_8, $var_9)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->addSelect('pc.id_product, pc.id_product_comment, pc.title, pc.content, pc.customer_name, pc.date_add, pc.grade')
            ->addSelect('c.firstname, c.lastname')
            ->from($var_5->var_1 . 'product_comment', 'pc')
            ->leftJoin('pc', $var_5->var_1 . 'customer', 'c', 'pc.id_customer = c.id_customer AND c.deleted = :not_deleted')
            ->andWhere('pc.id_product = :id_product')
            ->andWhere('pc.deleted = :not_deleted')
            ->setParameter('not_deleted', 0)
            ->setParameter('id_product', $var_6)
            ->setMaxResults($var_8)
            ->setFirstResult(($var_7 - 1) * $var_8)
            ->addGroupBy('pc.id_product_comment')
            ->addOrderBy('pc.date_add', 'DESC')
        ;

        if ($var_9) {
            $var_10
                ->andWhere('pc.validate = :validate')
                ->setParameter('validate', 1)
            ;
        }

        return $var_10->execute()->fetchAll();
    }

    
    public function fn_2($var_23)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->addSelect('pcu.usefulness')
            ->from($var_5->var_1 . 'product_comment_usefulness', 'pcu')
            ->andWhere('pcu.id_product_comment = :id_product_comment')
            ->setParameter('id_product_comment', $var_23)
        ;

        $var_24 = [
            'usefulness' => 0,
            'total_usefulness' => 0,
        ];
        $var_25 = $var_10->execute()->fetchAll();
        foreach ($var_25 as $var_26) {
            if ((int) $var_26['usefulness']) {
                ++$var_24['usefulness'];
            }
            ++$var_24['total_usefulness'];
        }

        return $var_24;
    }

    
    public function fn_3($var_6, $var_9)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->select('SUM(pc.grade) / COUNT(pc.grade) AS averageGrade')
            ->from($var_5->var_1 . 'product_comment', 'pc')
            ->andWhere('pc.id_product = :id_product')
            ->andWhere('pc.deleted = :deleted')
            ->setParameter('deleted', 0)
            ->setParameter('id_product', $var_6)
        ;

        if ($var_9) {
            $var_10
                ->andWhere('pc.validate = :validate')
                ->setParameter('validate', 1)
            ;
        }

        return (float) $var_10->execute()->fetchColumn();
    }

    
    public function fn_4(array $var_29, $var_9)
    {
        $var_30 = 'SELECT';

        $var_31 = count($var_29);

        foreach ($var_29 as $var_32 => $var_33) {
            $var_34 = (int) $var_33;

            $var_30 .= ' SUM(IF(id_product = ' . $var_34 . ' AND deleted = 0';
            if ($var_9) {
                $var_30 .= ' AND validate = 1';
            }
            $var_30 .= ',grade, 0))';
            $var_30 .= ' / SUM(IF(id_product = ' . $var_34 . ' AND deleted = 0';
            if ($var_9) {
                $var_30 .= ' AND validate = 1';
            }
            $var_30 .= ',1, 0)) AS "' . $var_34 . '"';

            if ($var_31 - 1 > $var_32) {
                $var_30 .= ',';
            }
        }

        $var_30 .= ' FROM ' . $var_5->var_1 . 'product_comment';

        $var_35 = $var_5->var_0->prepare($var_30);
        $var_35->execute();

        return (array) $var_35->fetch();
    }

    
    public function fn_5($var_6, $var_9)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->select('COUNT(pc.id_product_comment) AS commentNb')
            ->from($var_5->var_1 . 'product_comment', 'pc')
            ->andWhere('pc.id_product = :id_product')
            ->andWhere('pc.deleted = :deleted')
            ->setParameter('deleted', 0)
            ->setParameter('id_product', $var_6)
        ;

        if ($var_9) {
            $var_10
                ->andWhere('pc.validate = :validate')
                ->setParameter('validate', 1)
            ;
        }

        return (int) $var_10->execute()->fetchColumn();
    }

    
    public function fn_6(array $var_29, $var_9)
    {
        $var_30 = 'SELECT';

        $var_31 = count($var_29);

        foreach ($var_29 as $var_32 => $var_33) {
            $var_34 = (int) $var_33;

            $var_30 .= ' SUM(IF(id_product = ' . $var_34 . ' AND deleted = 0';
            if ($var_9) {
                $var_30 .= ' AND validate = 1';
            }
            $var_30 .= ' ,1, 0)) AS "' . $var_34 . '"';

            if ($var_31 - 1 > $var_32) {
                $var_30 .= ',';
            }
        }

        $var_30 .= ' FROM ' . $var_5->var_1 . 'product_comment';

        

        $var_35 = $var_5->var_0->prepare($var_30);
        $var_35->execute();

        return (array) $var_35->fetch();
    }

    
    public function fn_7($var_6, $var_38, $var_39)
    {
        if (!$var_38 && !$var_5->var_2) {
            $var_40 = false;
        } else {
            $var_41 = null;
            if ($var_38) {
                $var_41 = $var_5->fn_8($var_6, $var_38);
            } elseif ($var_39) {
                $var_41 = $var_5->fn_9($var_6, $var_39);
            }
            $var_40 = true;
            if (null !== $var_41 && isset($var_41['date_add'])) {
                $var_44 = new \var_45($var_41['date_add'], new \var_46('UTC'));
                if (time() - $var_44->getTimestamp() < $var_5->var_3) {
                    $var_40 = false;
                }
            }
        }

        return $var_40;
    }

    
    public function fn_8($var_6, $var_38)
    {
        return $var_5->fn_10(['id_product' => $var_6, 'id_customer' => $var_38]);
    }

    
    public function fn_9($var_6, $var_39)
    {
        return $var_5->fn_10(['id_product' => $var_6, 'id_guest' => $var_39]);
    }

    
    public function fn_11($var_49)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->update($var_5->var_1 . 'product_comment', 'pc')
            ->set('id_customer', (string) 0)
            ->andWhere('pc.id_customer = :id_customer')
            ->setParameter('id_customer', $var_49)
        ;
        $var_10->execute();

        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->delete($var_5->var_1 . 'product_comment_report')
            ->andWhere('id_customer = :id_customer')
            ->setParameter('id_customer', $var_49)
        ;
        $var_10->execute();

        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->delete($var_5->var_1 . 'product_comment_usefulness')
            ->andWhere('id_customer = :id_customer')
            ->setParameter('id_customer', $var_49)
        ;
        $var_10->execute();
    }

    
    public function fn_12($var_49, $var_53)
    {
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->select('pl.name, pc.id_product, pc.id_product_comment, pc.title, pc.content, pc.grade, pc.validate, pc.deleted, pcu.usefulness, pc.date_add')
            ->from($var_5->var_1 . 'product_comment', 'pc')
            ->leftJoin('pc', $var_5->var_1 . 'product_comment_usefulness', 'pcu', 'pc.id_product_comment = pcu.id_product_comment')
            ->leftJoin('pc', $var_5->var_1 . 'product', 'p', 'pc.id_product = p.id_product')
            ->leftJoin('p', $var_5->var_1 . 'product_lang', 'pl', 'p.id_product = pl.id_product')
            ->leftJoin('pl', $var_5->var_1 . 'lang', 'l', 'pl.id_lang = l.id_lang')
            ->andWhere('pc.id_customer = :id_customer')
            ->andWhere('l.id_lang = :id_lang')
            ->setParameter('id_customer', $var_49)
            ->setParameter('id_lang', $var_53)
            ->addGroupBy('pc.id_product_comment')
            ->addOrderBy('pc.date_add', 'ASC')
        ;

        return $var_10->execute()->fetchAll();
    }

    
    private function fn_10(array $var_54)
    {
        
        $var_10 = $var_5->var_0->createQueryBuilder();
        $var_10
            ->select('pc.*')
            ->from($var_5->var_1 . 'product_comment', 'pc')
            ->andWhere('pc.deleted = :deleted')
            ->setParameter('deleted', 0)
            ->addOrderBy('pc.date_add', 'DESC')
            ->setMaxResults(1)
        ;

        foreach ($var_54 as $var_55 => $var_56) {
            $var_10
                ->andWhere(sprintf('pc.%s = :%s', $var_55, $var_55))
                ->setParameter($var_55, $var_56)
            ;
        }

        $var_57 = $var_10->execute()->fetchAll();

        return empty($var_57) ? [] : $var_57[0];
    }
}
