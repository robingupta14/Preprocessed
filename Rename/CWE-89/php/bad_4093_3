<?php






class class_0 extends var_1 {

   private function fn_0() {
      $var_3 = getItemByTypeName('Computer', '_test_pc01');
      $var_4   = $var_3->var_4;
      unset($var_4['id']);
      unset($var_4['date_creation']);
      unset($var_4['date_mod']);
      $var_4['name'] = $var_5->getUniqueString();
      $var_5->integer((int)$var_3->add($var_4))->isGreaterThan(0);
      return $var_3;
   }

   private function fn_1() {
      $var_11  = getItemByTypeName('Printer', '_test_printer_all');
      $var_12  = $var_11->var_4;
      unset($var_12['id']);
      unset($var_12['date_creation']);
      unset($var_12['date_mod']);
      $var_12['name'] = $var_5->getUniqueString();
      $var_5->integer((int)$var_11->add($var_12))->isGreaterThan(0);
      return $var_11;
   }

   public function fn_2() {
      global $var_13;
      $var_14 = $var_13;

      $var_3 = $var_5->fn_0();
      $var_11  = $var_5->fn_1();

      
      $var_15 = new \var_16();
      $var_17 = ['computers_id' => $var_3->getField('id'),
             'itemtype'     => $var_11->getType(),
             'items_id'     => $var_11->getID(),
      ];
      $var_5->integer((int)$var_15->add($var_17))->isGreaterThan(0);

      
      $var_13['is_contact_autoupdate']  = 1;
      $var_13['is_user_autoupdate']     = 1;
      $var_13['is_group_autoupdate']    = 1;
      $var_13['state_autoupdate_mode']  = -1;
      $var_13['is_location_autoupdate'] = 1;
      $var_17 = ['id'           => $var_3->getField('id'),
             'contact'      => $var_5->getUniqueString(),
             'contact_num'  => $var_5->getUniqueString(),
             'users_id'     => $var_5->getUniqueInteger(),
             'groups_id'    => $var_5->getUniqueInteger(),
             'states_id'    => $var_5->getUniqueInteger(),
             'locations_id' => $var_5->getUniqueInteger(),
      ];
      $var_5->boolean($var_3->update($var_17))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_11->getFromDB($var_11->getID()))->isTrue();
      unset($var_17['id']);
      foreach ($var_17 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_11->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_17 = ['id'           => $var_3->getField('id'),
             'contact'      => '',
             'contact_num'  => '',
             'users_id'     => 0,
             'groups_id'    => 0,
             'states_id'    => 0,
             'locations_id' => 0,
      ];
      $var_5->boolean($var_3->update($var_17))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_11->getFromDB($var_11->getID()))->isTrue();
      unset($var_17['id']);
      foreach ($var_17 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_11->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_13['is_contact_autoupdate']  = 0;
      $var_13['is_user_autoupdate']     = 0;
      $var_13['is_group_autoupdate']    = 0;
      $var_13['state_autoupdate_mode']  = 0;
      $var_13['is_location_autoupdate'] = 0;
      $var_30 = ['id'          => $var_3->getField('id'),
             'contact'      => $var_5->getUniqueString(),
             'contact_num'  => $var_5->getUniqueString(),
             'users_id'     => $var_5->getUniqueInteger(),
             'groups_id'    => $var_5->getUniqueInteger(),
             'states_id'    => $var_5->getUniqueInteger(),
             'locations_id' => $var_5->getUniqueInteger(),
      ];
      $var_5->boolean($var_3->update($var_30))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_11->getFromDB($var_11->getID()))->isTrue();
      unset($var_30['id']);
      foreach ($var_30 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_11->getField($var_26))->isEqualTo($var_17[$var_26]);
      }

      
      $var_3 = $var_5->fn_0();
      $var_13 = $var_14;

      
      $var_31 = new \var_32();
      $var_33 = $var_31->add(
         [
            'designation'  => 'Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz',
            'frequence'    => '1700'
         ]
      );

      $var_5->integer((int)$var_33)->isGreaterThan(0);

      $var_15 = new \var_34();
      $var_35 = $var_15->add(
         [
            'items_id'              => $var_3->getID(),
            'itemtype'              => \var_0::getType(),
            'deviceprocessors_id'   => $var_33,
            'locations_id'          => $var_3->getField('locations_id'),
            'states_id'             => $var_3->getField('status_id'),
         ]
      );

      $var_5->integer((int)$var_35)->isGreaterThan(0);

      
      $var_13['state_autoupdate_mode']  = -1;
      $var_13['is_location_autoupdate'] = 1;
      $var_17 = ['id'           => $var_3->getField('id'),
             'states_id'    => $var_5->getUniqueInteger(),
             'locations_id' => $var_5->getUniqueInteger(),
      ];
      $var_5->boolean($var_3->update($var_17))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_15->getFromDB($var_15->getID()))->isTrue();
      unset($var_17['id']);
      foreach ($var_17 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_15->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_17 = ['id'           => $var_3->getField('id'),
             'states_id'    => 0,
             'locations_id' => 0,
      ];
      $var_5->boolean($var_3->update($var_17))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_15->getFromDB($var_15->getID()))->isTrue();
      unset($var_17['id']);
      foreach ($var_17 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_15->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_13['state_autoupdate_mode']  = 0;
      $var_13['is_location_autoupdate'] = 0;
      $var_30 = ['id'          => $var_3->getField('id'),
             'states_id'    => $var_5->getUniqueInteger(),
             'locations_id' => $var_5->getUniqueInteger(),
      ];
      $var_5->boolean($var_3->update($var_30))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();
      $var_5->boolean($var_15->getFromDB($var_15->getID()))->isTrue();
      unset($var_30['id']);
      foreach ($var_30 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_15->getField($var_26))->isEqualTo($var_17[$var_26]);
      }

      
      $var_13 = $var_14;
   }

   
   public function fn_3() {
      global $var_13;

      $var_3 = $var_5->fn_0();
      $var_14 = $var_13;

      $var_13['is_contact_autoupdate']  = 1;
      $var_13['is_user_autoupdate']     = 1;
      $var_13['is_group_autoupdate']    = 1;
      $var_13['state_autoupdate_mode']  = -1;
      $var_13['is_location_autoupdate'] = 1;

      
      $var_17 = ['id'           => $var_3->getField('id'),
             'contact'      => $var_5->getUniqueString(),
             'contact_num'  => $var_5->getUniqueString(),
             'users_id'     => $var_5->getUniqueInteger(),
             'groups_id'    => $var_5->getUniqueInteger(),
             'states_id'    => $var_5->getUniqueInteger(),
             'locations_id' => $var_5->getUniqueInteger(),
      ];
      $var_5->boolean($var_3->update($var_17))->isTrue();
      $var_5->boolean($var_3->getFromDB($var_3->getID()))->isTrue();

      $var_11 = new \var_36();
      $var_37 = $var_11->add(
         [
            'name'         => 'A test printer',
            'entities_id'  => $var_3->getField('entities_id')
         ]
      );

      $var_5->integer((int)$var_37)->isGreaterThan(0);

      
      $var_15 = new \var_16();
      $var_30 = ['computers_id' => $var_3->getField('id'),
             'itemtype'     => $var_11->getType(),
             'items_id'     => $var_11->getID(),
      ];
      $var_5->integer((int)$var_15->add($var_30))->isGreaterThan(0);

      $var_5->boolean($var_11->getFromDB($var_11->getID()))->isTrue();
      unset($var_17['id']);
      foreach ($var_17 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_11->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_31 = new \var_32();
      $var_33 = $var_31->add(
         [
            'designation'  => 'Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz',
            'frequence'    => '1700'
         ]
      );

      $var_5->integer((int)$var_33)->isGreaterThan(0);

      $var_15 = new \var_34();
      $var_35 = $var_15->add(
         [
            'items_id'              => $var_3->getID(),
            'itemtype'              => \var_0::getType(),
            'deviceprocessors_id'   => $var_33
         ]
      );

      $var_5->integer((int)$var_35)->isGreaterThan(0);

      $var_38 = ['states_id'    => $var_17['states_id'],
              'locations_id' => $var_17['locations_id'],
      ];

      $var_5->boolean($var_15->getFromDB($var_15->getID()))->isTrue();
      foreach ($var_38 as $var_26 => $var_27) {
         
         $var_5->variable($var_3->getField($var_26))->isEqualTo($var_27);
         
         $var_5->variable($var_15->getField($var_26))->isEqualTo($var_27);
      }

      
      $var_13 = $var_14;
   }

   public function fn_4() {
      global $var_39;

      $var_40 = $var_39->request(['SELECT' => 'id',
                            'FROM'   => 'glpi_computers']);
      $var_42 = false;
      foreach (\var_0::getFromIter($var_40) as $var_43) {
         $var_5->object($var_43)->isInstanceOf('Computer');
         $var_5->array($var_43->var_4)
            ->hasKey('name')
            ->var_50['name']->isNotEqualTo($var_42);
         $var_42 = $var_43->var_4['name'];
      }
      $var_5->boolean((bool)$var_42)->isTrue(); 
   }

   public function fn_5() {
      $var_43 = new \var_0();
      $var_5->boolean($var_43->getFromDBByCrit(['name' => '_test_pc01']))->isTrue();
      $var_5->string($var_43->getField('name'))->isIdenticalTo('_test_pc01');

      $var_5->exception(
         function () use ($var_43) {
            $var_5->boolean($var_43->getFromDBByCrit(['name' => ['LIKE', '_test%']]))->isFalse();
         }
      )->var_54->contains('getFromDBByCrit expects to get one result, 8 found!');
   }

   public function fn_6() {
      $var_5->login();
      $var_5->setEntity('_test_root_entity', true);

      $var_58 = date('Y-m-d H:i:s');
      $_SESSION['glpi_currenttime'] = $var_58;

      
      $var_3 = $var_5->fn_0();
      $var_59 = $var_3->var_4['id'];

      
      $var_60 = new \var_61();
      $var_5->integer(
         $var_60->add([
            'itemtype'  => 'Computer',
            'items_id'  => $var_59
         ])
      )->isGreaterThan(0);

      
      $var_62 = new \var_63();
      $var_64 = $var_62->add([
         'name'   => 'My own OS'
      ]);
      $var_5->integer($var_64)->isGreaterThan(0);

      $var_65 = new \var_66();
      $var_5->integer(
         $var_65->add([
            'itemtype'  => 'Computer',
            'items_id'  => $var_59
         ])
      )->isGreaterThan(0);

      
      $var_67 = new \var_68();
      $var_5->integer(
         $var_67->add([
            'itemtype'  => 'Computer',
            'items_id'  => $var_59
         ])
      )->isGreaterThan(0);

      
      $var_31 = new \var_32();
      $var_33 = $var_31->add(
         [
            'designation'  => 'Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz',
            'frequence'    => '1700'
         ]
      );

      $var_5->integer((int)$var_33)->isGreaterThan(0);

      $var_15 = new \var_34();
      $var_35 = $var_15->add(
         [
            'items_id'              => $var_59,
            'itemtype'              => 'Computer',
            'deviceprocessors_id'   => $var_33
         ]
      );
      $var_5->integer((int)$var_35)->isGreaterThan(0);

      
      $var_69 = new \var_70();
      $var_71 = (int)$var_69->add(['name' => 'Test link document']);
      $var_5->integer($var_71)->isGreaterThan(0);

      $var_72 = new \var_73();
      $var_5->integer(
         $var_72->add([
            'documents_id' => $var_71,
            'itemtype'     => 'Computer',
            'items_id'     => $var_59
         ])
      )->isGreaterThan(0);

      
      $var_74 = $var_3->clone();
      $var_5->integer((int)$var_74)->isGreaterThan(0);
      $var_5->integer($var_74)->isNotEqualTo($var_3->var_4['id']);

      $var_76 = new \var_0();
      $var_5->boolean($var_76->getFromDB($var_74))->isTrue();

      $var_4 = $var_3->var_4;

      
      foreach ($var_4 as $var_26 => $var_27) {
         switch ($var_26) {
            case 'id':
               $var_5->variable($var_76->getField($var_26))->isNotEqualTo($var_3->getField($var_26));
               break;
            case 'date_mod':
            case 'date_creation':
               $var_77 = new \var_78($var_76->getField($var_26));
               $var_79 = new \var_78($var_58);
               $var_5->dateTime($var_77)->isEqualTo($var_79);
               break;
            default:
               $var_5->variable($var_76->getField($var_26))->isEqualTo($var_3->getField($var_26));
         }
      }

      
      $var_81 = [
         \var_68::var_82 => 1,
         \var_61::var_82  => 1,
         \var_66::var_82 => 1
      ];

      foreach ($var_81 as $var_83 => $var_84) {
         $var_5->integer(
            countElementsInTable(
               $var_83::getTable(),
               ['items_id' => $var_76->var_4['id']]
            )
         )->isIdenticalTo($var_84);
      }

      
      $var_5->boolean($var_15->getFromDBByCrit(['itemtype' => 'Computer', 'items_id' => $var_74]))->isTrue();
      $var_5->boolean($var_72->getFromDBByCrit(['itemtype' => 'Computer', 'items_id' => $var_74]))->isTrue();
   }
}
