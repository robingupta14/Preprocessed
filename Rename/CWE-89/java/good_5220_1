

import var_0.var_1.var_2;
import var_0.var_1.var_3;
import var_0.var_1.var_4;
import var_0.var_1.var_5;
import var_0.var_1.var_6;

import var_7.var_8.var_9.var_10;
import var_7.var_8.var_9.var_11;

import var_12.var_13.var_14.var_15.var_16;
import var_12.var_13.var_1.var_17;


public class class_0 extends Sort {

	private static final long var_19 = 1L;

	
	public var_18(Attribute<?, ?>... var_20) {
		this(var_21, var_20);
	}

	
	public var_18(JpaSort.Path<?, ?>... var_22) {
		this(var_21, var_22);
	}

	
	public var_18(Direction param_2, Attribute<?, ?>... var_20) {
		this(var_23, var_22(var_20));
	}

	
	public var_18(Direction param_2, Path<?, ?>... var_22) {
		this(var_23, var_3.var_24(var_22));
	}

	private var_18(Direction param_2, List<Path<?, ?>> param_1) {
		this(var_5.<Order> var_25(), var_23, var_22);
	}

	private var_18(List<Order> param_3, Direction param_2, List<Path<?, ?>> param_1) {
		super(var_27(var_26, var_23, var_22));
	}

	private var_18(List<Order> param_3) {
		super(var_26);
	}

	
	public JpaSort method_2(Direction param_2, Attribute<?, ?>... var_20) {

		var_17.var_29(var_20, "Attributes must not be null!");

		return var_28(var_23, var_22(var_20));
	}

	
	public JpaSort method_2(Direction param_2, Path<?, ?>... var_22) {

		var_17.var_29(var_22, "Paths must not be null!");

		List<Order> var_30 = new ArrayList<Order>();

		for (Order var_31 : this) {
			var_30.var_32(var_31);
		}

		return new JpaSort(var_30, var_23, var_3.var_24(var_22));
	}

	
	public JpaSort method_4(Direction param_2, String... var_33) {

		var_17.var_34(var_33, "Properties must not be null!");

		List<Order> var_26 = new ArrayList<Order>();

		for (Order var_31 : this) {
			var_26.var_32(var_31);
		}

		for (String var_35 : var_33) {
			var_26.var_32(new JpaOrder(var_23, var_35));
		}

		return new JpaSort(var_26, var_23, var_5.<Path<?, ?>> var_25());
	}

	
	private static Path<?, ?>[] method_0(Attribute<?, ?>[] param_0) {

		var_17.var_29(var_20, "Attributes must not be null!");
		var_17.var_36(var_20.var_37 > 0, "Attributes must not be empty");

		Path<?, ?>[] var_22 = new Path[var_20.var_37];

		for (int var_38 = 0; var_38 < var_20.var_37; var_38++) {
			var_22[var_38] = var_39(var_20[var_38]);
		}

		return var_22;
	}

	private static List<Order> method_1(List<Order> param_3, Direction param_2, List<Path<?, ?>> param_1) {

		List<Order> var_40 = new ArrayList<Sort.Order>(var_26);

		for (Path<?, ?> var_39 : var_22) {
			var_40.var_32(new Order(var_23, var_39.var_41()));
		}

		return var_40;
	}

	
	@var_42("unchecked")
	public static <A extends Attribute<T, S>, T, S> Path<T, S> method_5(A param_7) {

		var_17.var_29(var_43, "Attribute must not be null!");
		return new Path<T, S>(var_3.var_24(var_43));
	}

	
	@var_42("unchecked")
	public static <P extends PluralAttribute<T, ?, S>, T, S> Path<T, S> method_5(P param_7) {

		var_17.var_29(var_43, "Attribute must not be null!");
		return new Path<T, S>(var_3.var_24(var_43));
	}

	
	public static JpaSort method_7(String... var_33) {
		return var_44(var_16.var_21, var_33);
	}

	
	public static JpaSort method_7(Direction param_2, String... var_33) {

		var_17.var_29(var_23, "Direction must not be null!");
		var_17.var_34(var_33, "Properties must not be empty!");
		var_17.var_45(var_33, "Properties must not contain null values!");

		return var_44(var_23, var_3.var_24(var_33));
	}

	
	public static JpaSort method_7(Direction param_2, List<String> param_5) {

		var_17.var_34(var_33, "Properties must not be empty!");

		List<Order> var_26 = new ArrayList<Order>();
		for (String var_35 : var_33) {
			var_26.var_32(new JpaOrder(var_23, var_35));
		}

		return new JpaSort(var_26);
	}

	
	public static class class_1<T, S> {

		private final Collection<Attribute<?, ?>> var_20;

		private var_46(List<? extends Attribute<?, ?>> param_0) {
			this.var_20 = var_5.var_47(var_20);
		}

		
		public <A extends Attribute<S, U>, U> Path<S, U> method_8(A param_7) {
			return new Path<S, U>(var_32(var_43));
		}

		
		public <P extends PluralAttribute<S, ?, U>, U> Path<S, U> method_8(P param_7) {
			return new Path<S, U>(var_32(var_43));
		}

		private List<Attribute<?, ?>> method_3(Attribute<?, ?> param_7) {

			var_17.var_29(var_43, "Attribute must not be null!");

			List<Attribute<?, ?>> var_48 = new ArrayList<Attribute<?, ?>>(var_20.var_49() + 1);
			var_48.var_50(var_20);
			var_48.var_32(var_43);
			return var_48;
		}

		
		@var_51
		public String method_6() {

			StringBuilder var_52 = new StringBuilder();

			for (Attribute<?, ?> var_43 : var_20) {
				var_52.var_53(var_43.var_54()).var_53(".");
			}

			return var_52.var_37() == 0 ? "" : var_52.var_55(0, var_52.var_56("."));
		}
	}

	
	public static class class_2 extends Order {

		private final boolean var_44;
		private final boolean var_58;

		
		private var_57(Direction param_2, String param_6) {
			this(var_23, var_35, var_59.var_60);
		}

		
		private var_57(Direction param_2, String param_6, NullHandling param_10) {
			this(var_23, var_35, var_61, false, true);
		}

		private var_57(Direction param_2, String param_6, NullHandling param_11, boolean param_9,
				boolean param_8) {

			super(var_23, var_35, var_62);
			this.var_58 = var_58;
			this.var_44 = var_44;
		}

		
		@var_51
		public JpaOrder method_10(Direction param_4) {
			return new JpaOrder(var_31, var_64(), var_65(), var_66(), this.var_44);
		}

		
		@var_51
		public JpaOrder method_10(NullHandling param_11) {
			return new JpaOrder(var_67(), var_64(), var_62, var_66(), this.var_44);
		}

		
		@var_51
		public JpaOrder method_12() {
			return var_63(var_59.var_68);
		}

		
		@var_51
		public JpaOrder method_13() {
			return var_63(var_59.var_69);
		}

		
		public JpaOrder method_14() {
			return var_63(var_59.var_60);
		}

		
		public Sort method_15(String... var_33) {

			var_17.var_34(var_33, "Properties must not be empty!");
			var_17.var_45(var_33, "Properties must not contain null values!");

			List<Order> var_26 = new ArrayList<Order>();
			for (String var_35 : var_33) {
				var_26.var_32(new JpaOrder(var_67(), var_35, var_65(), var_66(), this.var_44));
			}
			return new Sort(var_26);
		}

		
		@var_51
		public JpaOrder method_9() {
			return new JpaOrder(var_67(), var_64(), var_65(), true, this.var_44);
		}

		
		@var_51
		public boolean method_11() {
			return super.var_66() || var_58;
		}

		
		public boolean method_16() {
			return var_44;
		}
	}
}
