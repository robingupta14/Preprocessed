<?php defined('SYSPATH') or die('No direct script access.');



class Location_Model extends ORM
{
	
	protected $has_many = array('incident', 'media', 'incident_person', 'feed_item', 'reporter', 'checkin');
	
	
	protected $has_one = array('country');
	
	
	protected $table_name = 'location';
		
	
	public static function get_locations($where = array(), $limit = 0)
	{
		
		$table_prefix = Kohana::config('database.default.table_prefix');
		
		
		$sql = 'SELECT id, location_name AS name, country_id, latitude, longitude '
			. 'FROM '.$table_prefix.'location '
			. 'WHERE location_visible = 1 ';
		
		
		if ( ! empty($where) AND count($where) > 0)
		{
			foreach ($where as $column => $value)
			{
				if ($predicate_items = explode("=", $value))
				{
					if (count($predicate_items) == 2)
					{
						$column = $predicate_items[0];
						$value = $predicate_items[1];
					}
					else
					{
						
						throw new Kohana_Exception('Invalid value in "where" parameter');
					}
				}
				
				$sql .= 'AND '.$column.' = '.$value.' ';	
			}
		}
		
		
		$sql .= 'ORDER BY id DESC ';
		
		
		if ((int)$limit > 0)
		{
			$sql .= 'LIMIT 0, '.$limit;
		}
		
		$db = new Database();
		return $db->query($sql);
	}
	
	
	public static function is_valid_location($location_id)
	{
		return (intval($location_id) > 0)
			? ORM::factory('location', intval($location_id))->loaded
			: FALSE;
	}
}
