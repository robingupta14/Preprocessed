<?php


spl_autoload_register('web2project_autoload');
spl_autoload_register('w2p_old_autoload');


function w2p_old_autoload($class_name)
{
    $name = strtolower($class_name);
    switch ($name) {
        case 'bcode':                   
        case 'budgets':                 
        case 'cadmin_user':             
        case 'cappui':                  
        case 'ccalendar':               
        case 'cconfig':                 
        case 'cdate':                   
        case 'cfilefolder':             
        case 'cforummessage':           
        case 'cinfotabbox':             
        case 'cmonthcalendar':          
        case 'cpreferences':            
        case 'cprojectdesigneroptions': 
        case 'crole':                   
        case 'csyskey':                 
        case 'csysval':                 
        case 'ctabbox_core':            
        case 'ctasklog':                
        case 'ctitleblock':             
        case 'ctitleblock_core':        
        case 'customfields':            
        case 'cw2pobject':              
        case 'dbquery':                 
        case 'libmail':                 
        case 'smartsearch':             
        case 'w2pacl':                  
        case 'w2pajaxresponse':         
            break;

        
        case 'captcha':
            break;
        case 'contact_vcard_build':
            break;
        case 'contact_vcard_parse':
            break;
        case 'date':
        case 'date_calc':
        case 'date_human':
        case 'date_span':
        case 'date_timezone':
        case 'html_bbcodeparser_filter':
        case 'html_bbcodeparser_filter_basic':
        case 'html_bbcodeparser_filter_email':
        case 'html_bbcodeparser_filter_extended':
        case 'html_bbcodeparser_filter_links':
        case 'html_bbcodeparser_filter_lists':
            $filename = str_replace('_', '/', $class_name) . '.php';
            break;
        case 'html_bbcodeparser':
            break;
        case 'cezpdf':
            break;
        case 'cpdf':
            break;
        case 'gacl':
            break;
        case 'gacl_api':
            break;
        case 'ganttgraph':
            break;
        case 'phpmailer':
            break;
        case 'xajax':
            break;
        case 'xajaxresponse':
            break;

        default:
            if ($name[0] == 'c') {
                $name = substr($name, 1);
            }
            $pieces = (strpos($name, '_') === false) ?
                    array($name, $name) : explode('_', $name);

            
            $plural_pieces = array_map('w2p_pluralize', $pieces);
            if ('systems' == $plural_pieces[0]) {
                $plural_pieces[0] = 'system';
            }
            $path = implode('/', $plural_pieces);
            if (file_exists(W2P_BASE_DIR . '/modules/' . $path . '.class.php')) {

                return;
            }

            $path = implode('/', $pieces);
            if (file_exists(W2P_BASE_DIR . '/modules/' . $path . '.class.php')) {

                return;
            }

            break;
    }
}


function arrayMerge($a1, $a2)
{
    if (is_array($a1) && !is_array($a2)) {
        return $a1;
    }
    if (is_array($a2) && !is_array($a1)) {
        return $a2;
    }
    foreach ($a2 as $k => $v) {
        $a1[$k] = $v;
    }

    return $a1;
}


function w2PgetConfig($key, $default = null)
{
    global $w2Pconfig;

    if (isset($w2Pconfig[$key])) {
        return $w2Pconfig[$key];
    } else {
        return $default;
    }
}


function w2PgetParam(&$arr, $name, $def = null)
{
    $key = preg_replace("/[^A-Za-z0-9_]/", "", $name);

    if (isset($arr[$key])) {
        if (is_array($arr[$key])) {
            $_result = $arr[$key];
            foreach($_result as $_key => $_value) {
                $_result[$_key] = preg_replace("/<>'\"\[\]{}:;/", "", $_value);
            }
            $result  = $_result;
        } else {
            $_result = strip_tags($arr[$key]);
            $result  = preg_replace("/<>\`'\"\[\]{}():;/", "", $_result);
        }
    } else {
        $result = $def;
    }

    return $result;
}

function convert2days($durn, $units)
{
    switch ($units) {
        case 0:
        case 1:
            return $durn / w2PgetConfig('daily_working_hours');
            break;
        case 24:
            return $durn;
    }
}

function filterCurrency($number)
{

    if (substr($number, -3, 1) == ',') {
        
        $number = str_replace('.', '', $number);
        $number = str_replace(',', '.', $number);
    } else {
        
        $number = str_replace(',', '', $number);
    }

    return $number;
}

function w2pFindTaskComplete($start_date, $end_date, $percent)
{
    $start = strtotime($start_date);
    $end   = strtotime($end_date);
    $now   = time();

    if ($percent >= 100) { return 'done'; }
    if ($now < $start) { return ''; }
    if ($now > $end) { return 'late'; }
    if ($now > $start && $percent > 0) { return 'active'; }
    if ($now > $start && $percent == 0) { return 'notstarted'; }
}


function w2Psgn($x)
{
    return $x ? ($x > 0 ? 1 : -1) : 0;
}

function w2p_url($link, $text = '')
{
    $result = '';

    if ($link != '') {
        if (strpos($link, 'http') === false) {
            $link = 'http:
        }
        $text = ('' != $text) ? $text : $link;
        $result = '<a href="' . $link . '" target="_new">' . $text . '</a>';
    }

    return $result;
}

function w2p_email($email, $name = '')
{
    $result = '';

    if ($email != '') {
        $name = ('' != $name) ? $name : $email;
        $result = '<a href="mailto:' . $email . '">' . $name . '</a>';
    }

    return $result;
}

function w2p_check_email($email)
{
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

function w2p_textarea($content)
{
    $result = '';

    if ($content != '') {
        $result = $content;
        $result = htmlentities($result, ENT_QUOTES |8|ENT_IGNORE, 'UTF-8',false);

        
        $result = preg_replace("
        $result = preg_replace("
        $result = nl2br($result);
        
    }

    return $result;
}

function notifyNewExternalUser($emailAddress, $username, $logname, $logpwd, $emailUtility = null)
{
    global $AppUI;
    $emailManager = new w2p_Output_EmailManager($AppUI);
    $body = $emailManager->notifyNewExternalUser($logname, $logpwd);

    $mail = (!is_null($emailUtility)) ? $emailUtility : new w2p_Utilities_Mail();
    $mail->To($emailAddress);
    $mail->Subject('New Account Created');
    $mail->Body($body);
    return $mail->Send();
}

function notifyNewUser($emailAddress, $username, $emailUtility = null)
{
    global $AppUI;
    $emailManager = new w2p_Output_EmailManager($AppUI);
    $body = $emailManager->getNotifyNewUser($username);

    $mail = (!is_null($emailUtility)) ? $emailUtility : new w2p_Utilities_Mail();
    $mail->To($emailAddress);
    $mail->Subject('New Account Created');
    $mail->Body($body);
    return $mail->Send();
}
