<?php defined('SYSPATH') or die('No direct script access.');



class Settings_Model extends ORM {

	
	protected $table_name = 'settings';
	
	
	protected $reload_on_wakeup   = FALSE;

	
	public static function get_setting($key)
	{
		$setting = ORM::factory('settings')->where('key', $key)->find();

		return ($setting->loaded) ? $setting->value : NULL;

	}

	
	public function get($key)
	{
		return self::get_setting($key);
	}

	
	public static function save_setting($key, $value)
	{
		$setting = ORM::factory('settings')->where('key', $key)->find();
		
		$setting->value = $value;
		$setting->save();
	}

	
	public static function get_array()
	{
		$all_settings = ORM::factory('settings')->find_all();
		$settings = array();
		foreach ($all_settings as $setting)
		{
			$settings[$setting->key] = $setting->value;
		}

		return $settings;
	}

	
	public static function save_all(Validation $settings)
	{
		
		$all_settings = self::get_array();

		
		$query = sprintf("UPDATE `%ssettings` SET `value` = CASE `key` ", 
		    Kohana::config('database.default.table_prefix'));

		
		$values = array();
		$keys = array();
		
		
		$skip = array('api_live');
		foreach ($settings as $key => $value)
		{
			
			
			if (in_array($key, $skip) OR empty($key) OR ! array_key_exists($key, $all_settings))
				continue;

			
			if ($key === 'timezone' AND $value == 0)
			{
				$value = NULL;
			}

			$keys[] = sprintf("'%s'", $key);
			$values[] = sprintf("WHEN '%s' THEN '%s' ", $key, $value);
		}
		
		
		$keys[] = "'date_modify'";
		$values[] = sprintf("WHEN 'date_modify' THEN '%s' ", date("Y-m-d H:i:s",time()));
		
		
		$query .= implode(" ", $values)."END WHERE `key` IN (%s)";
		$query = sprintf($query, implode(",", $keys));
		
		
		Database::instance()->query($query);
	}


	
	public function get_settings($keys)
	{
		if ( ! is_array($keys) OR empty($keys))
			throw new Kohana_Exception();

		$selected_settings = ORM::factory('settings')
			->in('key', $keys)
			->find_all();


		$settings = array();
		foreach ($selected_settings as $setting)
		{
			$settings[$setting->key] = $setting->value;
		}

		return $settings;

	}
}
