







char *concat_path_file(const char *path, const char *filename)
{
 if (!path)
  path = "";
 const char *end = path + strlen(path);
 while (*filename == '/')
  filename++;
 return xasprintf("%s%s%s", path, (end != path && end[-1] != '/' ? "/" : ""), filename);
}

char *concat_path_basename(const char *path, const char *filename)
{
    char *abspath = realpath(filename, NULL);
    char *base = strrchr((abspath ? abspath : filename), '/');




    char buf[sizeof("tmp-"LIBREPORT_ISO_DATE_STRING_SAMPLE"-%lu")];
    if (base && base[1] != '\0' && base[1] != '.')
    {

        base++;
    }
    else
    {
        sprintf(buf, "tmp-%s-%lu", iso_date_string(NULL), (long)getpid());
        base = buf;
    }
    char *name = concat_path_file(path, base);
    free(abspath);
    return name;
}

bool str_is_correct_filename(const char *str)
{


    if ((*str < ' ' || *str == 0x7f) || *str == '/' || *str == '\0')
        return false;
    ++str;

    if ((*str < ' ' || *str == 0x7f) || *str =='/' || (*str == '\0' && *(str-1) == '.'))
        return false;
    ++str;

    if ((*str < ' ' || *str == 0x7f) || *str =='/' || (*str == '\0' && *(str-1) == '.' && *(str-2) == '.'))
        return false;
    ++str;

    for (unsigned i = 0; *str != '\0' && i < 61; ++str, ++i)
        if ((*str < ' ' || *str == 0x7f) || *str == '/')
            return false;

    return *str == '\0';


}
