
























from __future__ import unicode_literals


from django import template
from django.core.serializers import serialize
from django.db.models.query import QuerySet
from django.utils import six
from django.utils.safestring import mark_safe

from djblets.util.serializers import DjbletsJSONEncoder


register = django.template.Library()


@register.simple_tag
def form_dialog_fields(form):
    
    s = 

    for field in form:
        s += { name: '%s',  % field.name

        if field.is_hidden:
            s += hidden: true, 
        else:
            s += label: '%s',  % field.label_tag(field.label + :)

            if field.field.required:
                s += required: true, 

            if field.field.help_text:
                s += help_text: '%s',  % field.field.help_text

        s += widget: '%s' }, % django.utils.six.text_type(field)

    
    return [ %s ] % s[:-1]


@register.filter
def json_dumps(value, indent=None):
    if isinstance(value, QuerySet):
        result = serialize(json, value, indent=indent)
    else:
        result = json.dumps(value, indent=indent, cls=DjbletsJSONEncoder)

    return mark_safe(result)


@register.filter
def json_dumps_items(d, append=):
    
    if not d:
        return 

    return mark_safe(json_dumps(d)[1:-1] + append)
