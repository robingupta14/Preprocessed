<?php


define ( 'SHIBBOLETH_PLUGIN_REVISION', preg_replace( '/\$Rev: (.+) \$/', '\\1',
	'$Rev$') ); 



$shibboleth_plugin_revision = shibboleth_get_option('shibboleth_plugin_revision');
if ($shibboleth_plugin_revision === false || SHIBBOLETH_PLUGIN_REVISION != $shibboleth_plugin_revision) {
	add_action('admin_init', 'shibboleth_activate_plugin');
}


function shibboleth_auto_login() {
	$shibboleth_auto_login = shibboleth_get_option('shibboleth_auto_login');
	if ( !is_user_logged_in() && shibboleth_session_active() && $shibboleth_auto_login ) {
		do_action('login_form_shibboleth');

		$userobj = wp_signon('', true);
		if ( is_wp_error($userobj) ) {
			
		} else {
			wp_safe_redirect($_SERVER['REQUEST_URI']);
			exit();
		}
	}
}
add_action('init', 'shibboleth_auto_login');


function shibboleth_activate_plugin() {
	if ( function_exists('switch_to_blog') ) switch_to_blog($GLOBALS['current_site']->blog_id);

	shibboleth_add_option('shibboleth_login_url', get_option('home') . '/Shibboleth.sso/Login');
	shibboleth_add_option('shibboleth_default_login', false);
	shibboleth_add_option('shibboleth_auto_login', false);
	shibboleth_add_option('shibboleth_logout_url', get_option('home') . '/Shibboleth.sso/Logout');

	$headers = array(
		'username' => array( 'name' => 'eppn', 'managed' => false),
		'first_name' => array( 'name' => 'givenName', 'managed' => true),
		'last_name' => array( 'name' => 'sn', 'managed' => true),
		'nickname' => array( 'name' => 'eppn', 'managed' => true),
		'display_name' => array( 'name' => 'displayName', 'managed' => true),
		'email' => array( 'name' => 'mail', 'managed' => true),
	);
	shibboleth_add_option('shibboleth_headers', $headers);

	$roles = array(
		'administrator' => array(
			'header' => 'entitlement',
			'value' => 'urn:mace:example.edu:entitlement:wordpress:admin',
		),
		'author' => array(
			'header' => 'affiliation',
			'value' => 'faculty',
		),
		
		'default' => 'subscriber',
	);
	shibboleth_add_option('shibboleth_roles', $roles);

	shibboleth_add_option('shibboleth_update_roles', true);

	shibboleth_insert_htaccess();

	shibboleth_migrate_old_data();

	shibboleth_update_option('shibboleth_plugin_revision', SHIBBOLETH_PLUGIN_REVISION);

	if ( function_exists('restore_current_blog') ) restore_current_blog();
}
register_activation_hook('shibboleth/shibboleth.php', 'shibboleth_activate_plugin');



function shibboleth_deactivate_plugin() {
	shibboleth_remove_htaccess();
}
register_deactivation_hook('shibboleth/shibboleth.php', 'shibboleth_deactivate_plugin');



function shibboleth_migrate_old_data() {

	
	$managed = shibboleth_get_option('shibboleth_update_users');
	$headers = shibboleth_get_option('shibboleth_headers');
	$updated = false;

	foreach ($headers as $key => $value) {
		if ( is_string($value) ) {
			$headers[$key] = array(
				'name' => $value,
				'managed' => $managed,
			);
			$updated = true;
		}
	}

	if ( $updated ) {
		shibboleth_update_option('shibboleth_headers', $headers);
	}
	shibboleth_delete_option('shibboleth_update_users');

}


function shibboleth_admin_hooks() {
	if ( defined('WP_ADMIN') && WP_ADMIN === true ) {
	}
}
add_action('init', 'shibboleth_admin_hooks');



function shibboleth_session_active() { 
	$active = false;

	$session_headers = array('Shib-Session-ID', 'Shib_Session_ID', 'HTTP_SHIB_IDENTITY_PROVIDER');
	foreach ($session_headers as $header) {
		if ( array_key_exists($header, $_SERVER) && !empty($_SERVER[$header]) ) {
			$active = true;
			break;
		}
	}

	$active = apply_filters('shibboleth_session_active', $active);
	return $active;
}



function shibboleth_authenticate($user, $username, $password) {
	if ( shibboleth_session_active() ) {
		return shibboleth_authenticate_user();
	} else {
		$initiator_url = shibboleth_session_initiator_url( $_REQUEST['redirect_to'] );
		wp_redirect($initiator_url);
		exit;
	}
}



function shibboleth_login_form_shibboleth() {
	add_filter('authenticate', 'shibboleth_authenticate', 10, 3);
}
add_action('login_form_shibboleth', 'shibboleth_login_form_shibboleth');



function shibboleth_retrieve_password( $user_login ) {
	$password_reset_url = shibboleth_get_option('shibboleth_password_reset_url');

	if ( !empty($password_reset_url) ) {
		$user = get_userdatabylogin($user_login);
		if ( $user && get_usermeta($user->ID, 'shibboleth_account') ) {
			wp_redirect($password_reset_url);
			exit;
		}
	}
}
add_action('retrieve_password', 'shibboleth_retrieve_password');



function shibboleth_login_url($login_url) {
	if ( shibboleth_get_option('shibboleth_default_login') ) {
		$login_url = add_query_arg('action', 'shibboleth', $login_url);
	}

	return $login_url;
}
add_filter('login_url', 'shibboleth_login_url');



function shibboleth_logout() {
	$logout_url = shibboleth_get_option('shibboleth_logout_url');

	if ( !empty($logout_url) && shibboleth_session_active() ) {
		wp_redirect($logout_url);
		exit;
	}
}
add_action('wp_logout', 'shibboleth_logout', 20);



function shibboleth_session_initiator_url($redirect = null) {

	
	
	if ( function_exists('switch_to_blog') ) switch_to_blog($GLOBALS['current_site']->blog_id);
	$target = site_url('wp-login.php');
	if ( function_exists('restore_current_blog') ) restore_current_blog();

	$target = add_query_arg('action', 'shibboleth', $target);
	if ( !empty($redirect) ) {
		$target = add_query_arg('redirect_to', urlencode($redirect), $target);
	}

	
	$initiator_url = shibboleth_get_option('shibboleth_login_url');
	$initiator_url = add_query_arg('target', urlencode($target), $initiator_url);

	$initiator_url = apply_filters('shibboleth_session_initiator_url', $initiator_url);

	return $initiator_url;
}



function shibboleth_authenticate_user() {
	$shib_headers = shibboleth_get_option('shibboleth_headers');

	
	$user_role = shibboleth_get_user_role();

	if ( empty($user_role) ) {
		return new WP_Error('no_access', __('You do not have sufficient access.'));
	}

	$username = $_SERVER[$shib_headers['username']['name']];
	$user = new WP_User($username);

	if ( $user->ID ) {
		if ( !get_usermeta($user->ID, 'shibboleth_account') ) {
			
			
		}
	}

	
	if ( !$user->ID ) {
		$user = shibboleth_create_new_user($username);
	}

	if ( !$user->ID ) {
		$error_message = 'Unable to create account based on data provided.';
		if (defined('WP_DEBUG') && WP_DEBUG) {
			$error_message .= '<!-- ' . print_r($_SERVER, true) . ' -->';
		}
		return new WP_Error('missing_data', $error_message);
	}

	
	update_usermeta($user->ID, 'shibboleth_account', true);
	shibboleth_update_user_data($user->ID);
	if ( shibboleth_get_option('shibboleth_update_roles') ) {
		$user->set_role($user_role);
		do_action( 'shibboleth_set_user_roles', $user );
	}

	return $user;
}



function shibboleth_create_new_user($user_login) {
	if ( empty($user_login) ) return null;

	
	$user_id = wp_insert_user(array('user_login'=>$user_login));
	$user = new WP_User($user_id);
	update_usermeta($user->ID, 'shibboleth_account', true);

	
	shibboleth_update_user_data($user->ID, true);
	$user_role = shibboleth_get_user_role();
	$user->set_role($user_role);
	do_action( 'shibboleth_set_user_roles', $user );

	return $user;
}



function shibboleth_get_user_role() {
	global $wp_roles;
	if ( !$wp_roles ) $wp_roles = new WP_Roles();

	$shib_roles = apply_filters('shibboleth_roles', shibboleth_get_option('shibboleth_roles'));
	$user_role = $shib_roles['default'];

	foreach ( $wp_roles->role_names as $key => $name ) {
		$role_header = $shib_roles[$key]['header'];
		$role_value = $shib_roles[$key]['value'];

		if ( empty($role_header) || empty($role_value) ) continue;

		$values = split(';', $_SERVER[$role_header]);
		if ( in_array($role_value, $values) ) {
			$user_role = $key;
			break;
		}
	}

	$user_role = apply_filters('shibboleth_user_role', $user_role);

	return $user_role;
}



function shibboleth_get_managed_user_fields() {
	$headers = shibboleth_get_option('shibboleth_headers');
	$managed = array();

	foreach ($headers as $name => $value) {
		if ( $value['managed'] ) {
			$managed[] = $name;
		}
	}

	return $managed;
}



function shibboleth_update_user_data($user_id, $force_update = false) {

	$shib_headers = shibboleth_get_option('shibboleth_headers');

	$user_fields = array(
		'user_login' => 'username',
		'user_nicename' => 'username',
		'first_name' => 'first_name',
		'last_name' => 'last_name',
		'nickname' => 'nickname',
		'display_name' => 'display_name',
		'user_email' => 'email'
	);

	$user_data = array(
		'ID' => $user_id,
	);
	
	foreach ($user_fields as $field => $header) {
		if ( $force_update || $shib_headers[$header]['managed'] ) {
			$filter = 'shibboleth_' . ( strpos($field, 'user_') === 0 ? '' : 'user_' ) . $field;
			$user_data[$field] = apply_filters($filter, $_SERVER[$shib_headers[$header]['name']]);
		}
	}

	wp_update_user($user_data);
}



add_filter( 'shibboleth_user_nicename', 'sanitize_user' );


function shibboleth_login_form() {
	$login_url = add_query_arg('action', 'shibboleth');
	$login_url = remove_query_arg('reauth', $login_url);
	
}
add_action('login_form', 'shibboleth_login_form');



function shibboleth_insert_htaccess() {
	if ( got_mod_rewrite() ) {
		$htaccess = get_home_path() . '.htaccess';
		$rules = array('AuthType shibboleth', 'Require shibboleth');
		insert_with_markers($htaccess, 'Shibboleth', $rules);
	}
}



function shibboleth_remove_htaccess() {
	if ( got_mod_rewrite() ) {
		$htaccess = get_home_path() . '.htaccess';
		insert_with_markers($htaccess, 'Shibboleth', array());
	}
}



function shibboleth_get_option($key, $default = false ) {
	return function_exists('get_site_option') ? get_site_option($key, $default) : get_option($key, $default);
}
function shibboleth_add_option($key, $value, $autoload = 'yes') {
	if (function_exists('add_site_option')) {
		return add_site_option($key, $value);
	} else {
		return add_option($key, $value, '', $autoload);
	}
}
function shibboleth_update_option($key, $value) {
	return function_exists('update_site_option') ? update_site_option($key, $value) : update_option($key, $value);
}
function shibboleth_delete_option($key) {
	return function_exists('delete_site_option') ? delete_site_option($key) : delete_option($key);
}


function shibboleth_load_textdomain() {
	load_plugin_textdomain('shibboleth', false, dirname( plugin_basename( __FILE__ ) ) . '/localization/');
}
add_action('plugins_loaded', 'shibboleth_load_textdomain');
