<?php


















access_ensure_global_level( config_get( 'view_configuration_threshold' ) );

$t_read_write_access = access_has_global_level( config_get( 'set_configuration_threshold' ) );

html_page_top( lang_get( 'configuration_report' ) );

print_manage_menu( 'adm_config_report.php' );
print_manage_config_menu( 'adm_config_report.php' );

$t_config_types = array(
	CONFIG_TYPE_DEFAULT => 'default',
	CONFIG_TYPE_INT     => 'integer',
	CONFIG_TYPE_FLOAT   => 'float',
	CONFIG_TYPE_COMPLEX => 'complex',
	CONFIG_TYPE_STRING  => 'string',
);


function get_config_type( $p_type ) {
	global $t_config_types;

	if( array_key_exists( $p_type, $t_config_types ) ) {
		return $t_config_types[$p_type];
	} else {
		return $t_config_types[CONFIG_TYPE_DEFAULT];
	}
}


function print_config_value_as_string( $p_type, $p_value, $p_for_display = true ) {
	$t_corrupted = false;

	switch( $p_type ) {
		case CONFIG_TYPE_DEFAULT:
			return;
		case CONFIG_TYPE_FLOAT:
			
			return;
		case CONFIG_TYPE_INT:
			
			return;
		case CONFIG_TYPE_STRING:
			$t_value = string_nl2br( string_html_specialchars( config_eval( $p_value ) ) );
			if( $p_for_display ) {
				$t_value = '<p id="adm-config-value">\'' . $t_value . '\'</p>';
			}
			
			return;
		case CONFIG_TYPE_COMPLEX:
			$t_value = @json_decode( $p_value, true );
			if( $t_value === false ) {
				$t_corrupted = true;
			}
			break;
		default:
			$t_value = config_eval( $p_value );
			break;
	}

	if( $t_corrupted ) {
		$t_output = $p_for_display ? lang_get( 'configuration_corrupted' ) : '';
	} else {
		$t_output = var_export( $t_value, true );
	}

	if( $p_for_display ) {
		
	} else {
		
	}
}


function print_option_list_from_array( array $p_array, $p_filter_value ) {
	foreach( $p_array as $t_key => $t_value ) {
		
		check_selected( (string)$p_filter_value, (string)$t_key );
		
	}
}


$t_filter_save          = gpc_get_bool( 'save' );
$t_filter_default       = gpc_get_bool( 'default_filter_button', false );
$t_filter_reset         = gpc_get_bool( 'reset_filter_button', false );
if( $t_filter_default ) {
	$t_filter_user_value    = ALL_USERS;
	$t_filter_project_value = ALL_PROJECTS;
	$t_filter_config_value  = META_FILTER_NONE;
} else if( $t_filter_reset ) {
	$t_filter_user_value    = META_FILTER_NONE;
	$t_filter_project_value = META_FILTER_NONE;
	$t_filter_config_value  = META_FILTER_NONE;
} else {
	$t_filter_user_value    = gpc_get_int( 'filter_user_id', ALL_USERS );
	$t_filter_project_value = gpc_get_int( 'filter_project_id', ALL_PROJECTS );
	$t_filter_config_value  = gpc_get_string( 'filter_config_id', META_FILTER_NONE );
}


$t_cookie_name = config_get( 'manage_config_cookie' );
if( $t_filter_save ) {
	
	$t_cookie_string = implode(
		':',
		array(
			$t_filter_user_value,
			$t_filter_project_value,
			$t_filter_config_value,
		)
	);
	gpc_set_cookie( $t_cookie_name, $t_cookie_string, true );
} else {
	
	$t_cookie_string = gpc_get_cookie( $t_cookie_name, null );

	if( null !== $t_cookie_string ) {
		$t_cookie_contents = explode( ':', $t_cookie_string );

		$t_filter_user_value    = $t_cookie_contents[0];
		$t_filter_project_value = $t_cookie_contents[1];
		$t_filter_config_value  = $t_cookie_contents[2];

		if( $t_filter_project_value != META_FILTER_NONE && !project_exists( $t_filter_project_value ) ) {
			$t_filter_project_value = ALL_PROJECTS;
		}
	}
}

if( !is_blank( $t_filter_config_value ) && (int)$t_filter_config_value !== META_FILTER_NONE ) {
	
	if( @config_get_global( $t_filter_config_value ) === null ) {
		$t_cookie_path = config_get( 'cookie_path' );
		gpc_clear_cookie( $t_cookie_name, $t_cookie_path );

		trigger_error( ERROR_GENERIC, ERROR );
	}
}


$t_edit_user_id         = gpc_get_int( 'user_id', $t_filter_user_value == META_FILTER_NONE ? ALL_USERS : $t_filter_user_value );
$t_edit_project_id      = gpc_get_int( 'project_id', $t_filter_project_value == META_FILTER_NONE ? ALL_PROJECTS : $t_filter_project_value );
$t_edit_option          = gpc_get_string( 'config_option', $t_filter_config_value == META_FILTER_NONE ? '' : $t_filter_config_value );
$t_edit_type            = gpc_get_string( 'type', CONFIG_TYPE_DEFAULT );
$t_edit_value           = gpc_get_string( 'value', '' );


$t_config_table  = db_get_table( 'config' );
$t_project_table = db_get_table( 'project' );


$t_query = 'SELECT DISTINCT user_id FROM ' . $t_config_table . ' WHERE user_id <> ' . db_param() ;
$t_result = db_query_bound( $t_query, array( ALL_USERS ) );
if( $t_filter_user_value != META_FILTER_NONE && $t_filter_user_value != ALL_USERS ) {
	
	$t_users_list[$t_filter_user_value] = user_get_name( $t_filter_user_value );
} else {
	$t_users_list = array();
}
while( $t_row = db_fetch_array( $t_result ) ) {
	$t_user_id = $t_row['user_id'];
	$t_users_list[$t_user_id] = user_get_name( $t_user_id );
}
asort( $t_users_list );

$t_users_list = array(
		META_FILTER_NONE => '[' . lang_get( 'any' ) . ']',
		ALL_USERS        => lang_get( 'all_users' ),
	)
	+ $t_users_list;


$t_query = 'SELECT DISTINCT project_id, pt.name as project_name
	FROM ' . $t_config_table . ' as ct
	JOIN ' . $t_project_table . ' as pt ON pt.id = ct.project_id
	WHERE project_id!=0
	ORDER BY project_name';
$t_result = db_query_bound( $t_query );
$t_projects_list[META_FILTER_NONE] = '[' . lang_get( 'any' ) . ']';
$t_projects_list[ALL_PROJECTS] = lang_get( 'all_projects' );
while( $t_row = db_fetch_array( $t_result ) ) {
	extract( $t_row, EXTR_PREFIX_ALL, 'v' );
	$t_projects_list[$v_project_id] = $v_project_name;
}


$t_query = 'SELECT DISTINCT config_id FROM ' . $t_config_table . ' ORDER BY config_id';
$t_result = db_query_bound( $t_query );
$t_configs_list[META_FILTER_NONE] = '[' . lang_get( 'any' ) . ']';
if( $t_filter_config_value != META_FILTER_NONE ) {
	
	$t_configs_list[$t_filter_config_value] = $t_filter_config_value;
}
while( $t_row = db_fetch_array( $t_result ) ) {
	extract( $t_row, EXTR_PREFIX_ALL, 'v' );
	$t_configs_list[$v_config_id] = $v_config_id;
}


$t_where = '';
$t_param = array();
if( $t_filter_user_value != META_FILTER_NONE ) {
	$t_where .= ' AND user_id = ' . db_param();
	$t_param[] = $t_filter_user_value;
}
if( $t_filter_project_value != META_FILTER_NONE ) {
	$t_where .= ' AND project_id = ' . db_param();
	$t_param[] = $t_filter_project_value;
}
if( $t_filter_config_value != META_FILTER_NONE ) {
	$t_where .= ' AND config_id = ' . db_param();
	$t_param[] = $t_filter_config_value;
}
if( $t_where != '' ) {
	$t_where = ' WHERE 1=1 ' . $t_where;
}

$t_query = 'SELECT config_id, user_id, project_id, type, value, access_reqd
	FROM ' . $t_config_table . $t_where . ' ORDER BY user_id, project_id, config_id ';
$t_result = db_query_bound( $t_query, $t_param );
?>

<!-- FILTER FORM -->
<div id="config-filter-div" class="table-container">

<form id="filter_form" method="post">
	<?php 
		<input type="hidden" name="save" value="1" />

	<table cellspacing="1">
		<!-- Title -->
		<thead>
			<tr>
				<td class="form-title" colspan="7">
					<?php  ?><br />
				</th>
				<th>
					<?php  ?><br />
				</th>
				<th>
					<?php  ?><br />
				</th>
			</tr>
		</thead>

		<tbody>
			<tr class="row-1">
				<td>
					<select name="filter_user_id">
						<?php
						print_option_list_from_array( $t_users_list, $t_filter_user_value );
						?>
					</select>
				</td>
				<td>
					<select name="filter_project_id">
						<?php
						print_option_list_from_array( $t_projects_list, $t_filter_project_value );
						?>
					</select>
				</td>
				<td>
					<select name="filter_config_id">
						<?php
						print_option_list_from_array( $t_configs_list, $t_filter_config_value );
						?>
					</select>
				</td>
			</tr>
			<tr>
				<td colspan="3">
					<input name="apply_filter_button" type="submit" class="button-small" value="<?php 

while( $t_row = db_fetch_array( $t_result ) ) {
	extract( $t_row, EXTR_PREFIX_ALL, 'v' );

?>
<!-- Repeated Info Rows -->
			<tr width="100%">
				<td>
					<?php "><?php print_config_value_as_string( $v_type, $v_value ) ?></td>
				<td><?php 

			
			print_button(
				'adm_config_delete.php',
				lang_get( 'delete_link' ),
				array(
					'user_id'       => $v_user_id,
					'project_id'    => $v_project_id,
					'config_option' => $v_config_id,
				),
				$t_form_security_token );
		} else {
			 ?>"
						<?php check_selected( $t_edit_user_id, ALL_USERS ) ?>>
						<?php  ?>
					</option>
					<?php print_user_option_list( $t_edit_user_id ) ?>
				</select>
			</span>
			<span class="label-style"></span>
		</div>

			<!-- Project -->
			<div class="field-container">
				<label for="config-project-id"><span><?php  ?>"
							<?php check_selected( $t_edit_project_id, ALL_PROJECTS ); ?>>
							<?php  ?>
						</option>
						<?php print_project_option_list( $t_edit_project_id, false ) ?>
					</select>
				</span>
				<span class="label-style"></span>
			</div>

			<!-- Config option name -->
			<div class="field-container">
				<label for="config-option"><span><?php  ?>"
						size="64" maxlength="64" />
				</span>
				<span class="label-style"></span>
			</div>

			<!-- Option type -->
			<div class="field-container">
				<label for="config-type"><span><?php  ?>
					</select>
				</span>
				<span class="label-style"></span>
			</div>

			<!-- Option Value -->
			<div class="field-container">
				<label for="config-value"><span><?php 
					?></textarea>
				</span>
				<span class="label-style"></span>
			</div>

			<!-- Submit button -->
			<span class="submit-button"><input type="submit" name="config_set" class="button" value="<?php 
