<?php



class GravatarPlugin extends MantisPlugin {
	
	const GRAVATAR_URL        = 'http:
	const GRAVATAR_URL_SECURE = 'https:

	
	const GRAVATAR_DEFAULT_MYSTERYMAN = 'mm';
	const GRAVATAR_DEFAULT_IDENTICON  = 'identicon';
	const GRAVATAR_DEFAULT_MONSTERID  = 'monsterid';
	const GRAVATAR_DEFAULT_WAVATAR    = 'wavatar';
	const GRAVATAR_DEFAULT_RETRO      = 'retro';
	const GRAVATAR_DEFAULT_BLANK      = 'blank';

	
	const GRAVATAR_RATING_G  = 'G';
	const GRAVATAR_RATING_PG = 'PG';
	const GRAVATAR_RATING_R  = 'R';
	const GRAVATAR_RATING_X  = 'X';

	
	function register() {
		$this->name = plugin_lang_get( 'title' );
		$this->description = lang_get( 'description' );
		$this->page = '';

		$this->version = '1.0';
		$this->requires = array(
			'MantisCore' => '1.3.0',
		);

		$this->author = 'Victor Boctor';
		$this->contact = 'vboctor@mantisbt.org';
		$this->url = 'http:
	}

	
	function config() {
		return array(
			
			'rating' => self::GRAVATAR_RATING_G,

			
			'default_avatar' => self::GRAVATAR_DEFAULT_IDENTICON
		);
	}

	
	function hooks() {
		return array(
			'EVENT_USER_AVATAR' => 'user_get_avatar',
			'EVENT_CORE_HEADERS' => 'csp_headers',
		);
	}

	
	function csp_headers() {
		if( config_get( 'show_avatar' ) !== OFF ) {
			http_csp_add( 'img-src', self::getAvatarUrl() );
		}
	}

	
	function user_get_avatar( $p_event, $p_user_id, $p_size = 80 ) {
		$t_default_avatar = plugin_config_get( 'default_avatar' );

		
		
		$t_default_avatar = urlencode( $t_default_avatar );
		$t_rating = plugin_config_get( 'rating' );

		if( user_exists( $p_user_id ) ) {
			$t_email_hash = md5( strtolower( trim( user_get_email( $p_user_id ) ) ) );
		} else {
			$t_email_hash = md5( 'generic-avatar-since-user-not-found' );
		}

		
		$t_avatar_url = self::getAvatarUrl() .
			'avatar/' . $t_email_hash . '?d=' . $t_default_avatar .
			'&r=' . $t_rating . '&s=' . $p_size;

		$t_avatar = new Avatar();
		$t_avatar->image = $t_avatar_url;

		return $t_avatar;
	}

	
	private static function getAvatarUrl() {
		if( http_is_protocol_https() ) {
			$t_avatar_url = self::GRAVATAR_URL_SECURE;
		} else {
			$t_avatar_url = self::GRAVATAR_URL;
		}

		return $t_avatar_url;
	}
}
