<?php

class Varchar extends StringField {

	static $casting = array(
		"Initial" => "Text",
		"URL" => "Text",
	);
	
	protected $size;
	 
 	
 	function __construct($name, $size = 50, $options = array()) {
		$this->size = $size ? $size : 50;
		parent::__construct($name, $options);
	}
	
 	
	function requireField() {
		$parts = array(
			'datatype'=>'varchar',
			'precision'=>$this->size,
			'character set'=>'utf8',
			'collate'=>'utf8_general_ci',
			'arrayValue'=>$this->arrayValue
		);
		
		$values = array(
			'type' => 'varchar',
			'parts' => $parts
		);
			
		DB::requireField($this->tableName, $this->name, $values);
	}
	
	
	function Initial() {
		if($this->hasValue()) return $this->value[0] . '.';
	}
	
	
	function URL() {
		if(ereg('^[a-zA-Z]+:
		else return "http:
	}

	
	function RTF() {
		return str_replace("\n", '\par ', $this->value);
	}

	
	function LimitCharacters($limit = 20, $add = "...") {
		$value = trim($this->value);
		return (strlen($value) > $limit) ? substr($value, 0, $limit) . $add : $value;
	}

	
	public function scaffoldFormField($title = null, $params = null) {
		if(!$this->nullifyEmpty) {
			
			return new NullableField(new TextField($this->name, $title));
		} else {
			
			return parent::scaffoldFormField($title);
		}
	}
}

?>
