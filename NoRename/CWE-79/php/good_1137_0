<?php




	if (permission_exists('system_status_sofia_status')
		|| permission_exists('system_status_sofia_status_profile')
		|| if_group("superadmin")) {
		
	}
	else {
		
		exit;
	}


	$language = new text;
	$text = $language->get();


	$c = 0;
	$row_style["0"] = "row_style0";
	$row_style["1"] = "row_style1";


	$document['title'] = $text['title-sip-status'];

	$msg = $_GET["savemsg"];
	if ($_SESSION['event_socket_ip_address'] == "0.0.0.0") {
		$socket_ip = '127.0.0.1';
		$fp = event_socket_create($socket_ip, $_SESSION['event_socket_port'], $_SESSION['event_socket_password']);
	} else {
		$fp = event_socket_create($_SESSION['event_socket_ip_address'], $_SESSION['event_socket_port'], $_SESSION['event_socket_password']);
	}
	if (!$fp) {
		$msg = "<div align='center'>".$text['error-event-socket']."<br /></div>";
	}
	if (strlen($msg) > 0) {
		
		
		
		
		
		
		
		
		
		
	}


	$sql = "select g.domain_uuid, g.gateway, g.gateway_uuid, d.domain_name ";
	$sql .= "from v_gateways as g left ";
	$sql .= "outer join v_domains as d on d.domain_uuid = g.domain_uuid";
	$database = new database;
	$gateways = $database->select($sql, null, 'all');
	unset($sql);

	if ($fp) {
		$hostname = trim(event_socket_request($fp, 'api switchname'));
	}


	$sql = "select sip_profile_name from v_sip_profiles ";
	$sql .= "where sip_profile_enabled = 'true' ";
	if ($hostname) {
		$sql .= "and (sip_profile_hostname = :sip_profile_hostname ";
		$sql .= "or sip_profile_hostname = '' ";
		$sql .= "or sip_profile_hostname is null) ";
		$parameters['sip_profile_hostname'] = $hostname;
	}
	$sql .= "order by sip_profile_name asc ";
	$database = new database;
	$sip_profiles = $database->select($sql, (is_array($parameters) && @sizeof($parameters) != 0 ? $parameters : null), 'all');
	unset($sql, $parameters);


	if ($fp && permission_exists('system_status_sofia_status')) {
		$cmd = "api sofia xmlstatus";
		$xml_response = trim(event_socket_request($fp, $cmd));
		try {
			$xml = new SimpleXMLElement($xml_response);
		}
		catch(Exception $e) {}
		$cmd = "api sofia xmlstatus gateway";
		$xml_response = trim(event_socket_request($fp, $cmd));
		try {
			$xml_gateways = new SimpleXMLElement($xml_response);
		}
		catch(Exception $e) {}
		
		
		
		
		
		
		
		\" />\n";
		\" />\n";
		\" />\n";
		\" />\n";
		
		
		

		'>\n";
		
		' onclick=\"$('
		
		

		 margin-bottom: 30px;'>";
		
		
		
		
		
		
		
		
		foreach ($xml->profile as $row) {
			
			
			
			
			
			</td>\n";
			
			if ($c==0) { $c=1; } else { $c=0; }
		}
		foreach ($xml_gateways->gateway as $row) {
			$gateway_name = '';
			$gateway_domain_name = '';
			foreach($gateways as $field) {
				if ($field["gateway_uuid"] == strtolower($row->name)) {
					$gateway_name = $field["gateway"];
					$gateway_domain_name = $field["domain_name"];
					break;
				}
			}
			
			
			if ($_SESSION["domain_name"] == $gateway_domain_name) {
				
			}
			else if ($gateway_domain_name == '') {
				
			}
			else {
				
			}
			
			
			
			
			\" />".$text['button-stop']."</a></td>\n";
			
			if ($c==0) { $c=1; } else { $c=0; }
		}
		foreach ($xml->alias as $row) {
			
			
			
			
			
			
			</td>\n";
			
			if ($c==0) { $c=1; } else { $c=0; }
		}
		
		
		unset($xml);
	}


	if (permission_exists('system_status_sofia_status_profile')) {
		foreach ($sip_profiles as $row) {
			$sip_profile_name = $row["sip_profile_name"];

			if ($fp) {
				$cmd = "api sofia xmlstatus profile ".$sip_profile_name."";
				$xml_response = trim(event_socket_request($fp, $cmd));
				if ($xml_response == "Invalid Profile!") {
					$xml_response = "<error_msg>Invalid Profile!</error_msg>";
					$profile_state = 'stopped';
				}
				else {
					$profile_state = 'running';
				}
				$xml_response = str_replace("<profile-info>", "<profile_info>", $xml_response);
				$xml_response = str_replace("</profile-info>", "</profile_info>", $xml_response);
				try {
					$xml = new SimpleXMLElement($xml_response);
				}
				catch(Exception $e) {}
				'>\n";
				
				
				' onclick=\"$('
				
				
				if ($sip_profile_name != "external") {
					\" />\n";
				}
				\" />\n";
				if ($profile_state == 'stopped') {
					\" />\n";
				}
				if ($profile_state == 'running') {
					\" />\n";
				}
				\" />\n";
				\" />\n";
				
				
				

				 margin-bottom: 30px;'>";
				
				
				</th>\n";
				</th>\n";
				

				foreach ($xml->profile_info as $row) {
					 &nbsp;".escape($row->name)."&nbsp;</td></tr>\n";
					 &nbsp;".escape($row->{'domain-name'})."&nbsp;</td></tr>\n";
					".escape($row->{'auto-nat'})."&nbsp;</td></tr>\n";
					".escape($row->{'db-name'})."&nbsp;</td></tr>\n";
					".escape($row->{'pres-hosts'})."&nbsp;</td></tr>\n";
					".escape($row->dialplan)."&nbsp;</td></tr>\n";
					".escape($row->context)."&nbsp;</td></tr>\n";
					".escape($row->{'challenge-realm'})."&nbsp;</td></tr>\n";
					".escape($row->{'rtp-ip'})."&nbsp;</td></tr>\n";
					".escape($row->{'ext-rtp-ip'})."&nbsp;</td></tr>\n";
					".escape($row->{'sip-ip'})."&nbsp;</td></tr>\n";
					".escape($row->{'ext-sip-ip'})."&nbsp;</td></tr>\n";
					".escape($row->url)."&nbsp;</td></tr>\n";
					".escape($row->{'bind-url'})."&nbsp;</td></tr>\n";
					".escape($row->{'tls-url'})."&nbsp;</td></tr>\n";
					".escape($row->{'tls-bind-url'})."&nbsp;</td></tr>\n";
					".escape($row->{'hold-music'})."&nbsp;</td></tr>\n";
					".escape($row->{'outbound-proxy'})."&nbsp;</td></tr>\n";
					".escape($row->{'inbound-codecs'})."&nbsp;</td></tr>\n";
					".$row->{'outbound-codecs'}."&nbsp;</td></tr>\n";
					".escape($row->{'tel-event'})."&nbsp;</td></tr>\n";
					".escape($row->{'dtmf-mode'})."&nbsp;</td></tr>\n";
					".escape($row->cng)."&nbsp;</td></tr>\n";
					".escape($row->{'session-to'})."&nbsp;</td></tr>\n";
					".escape($row->{'max-dialog'})."&nbsp;</td></tr>\n";
					".escape($row->{'nomedia'})."&nbsp;</td></tr>\n";
					".escape($row->{'late-neg'})."&nbsp;</td></tr>\n";
					".escape($row->{'proxy-media'})."&nbsp;</td></tr>\n";
					".escape($row->{'aggressive-nat'})."&nbsp;</td></tr>\n";
					".escape($row->{'stun-enabled'})."&nbsp;</td></tr>\n";
					".escape($row->{'stun-auto-disable'})."&nbsp;</td></tr>\n";
					".escape($row->{'user-agent-filter'})."&nbsp;</td></tr>\n";
					".escape($row->{'max-registrations-per-extension'})."&nbsp;</td></tr>\n";
					".escape($row->{'calls-in'})."&nbsp;</td></tr>\n";
					".escape($row->{'calls-out'})."&nbsp;</td></tr>\n";
					".escape($row->{'failed-calls-in'})."&nbsp;</td></tr>\n";
					".escape($row->{'failed-calls-out'})."&nbsp;</td></tr>\n";
				}
				
				
				unset($xml);
			}
		}
	}


	if ($fp && permission_exists('sip_status_switch_status')) {
		$cmd = "api status";
		$response = event_socket_request($fp, $cmd);
		' onclick=\"$('
		 font-size: 9pt;'>";
		
		
		
		
		fclose($fp);
	}



?>
