<?php
	

	class BTXFormBuilder extends BigTreeModule {
		var $Table = "btx_form_builder_forms";
		static $SearchPageCount = false;
		
		

		static function getForm($id) {
			$id = sqlescape($id);
			$form = sqlfetch(sqlquery("SELECT * FROM btx_form_builder_forms WHERE id = '$id'"));
			if (!$form) {
				return false;
			}

			$fields = array();
			$object_count = 0;
			$field_query = sqlquery("SELECT * FROM btx_form_builder_fields WHERE form = '$id' AND `column` = '0' ORDER BY position DESC, id ASC");
			while ($field = sqlfetch($field_query)) {
				$object_count++;

				if ($field["type"] == "column") {
					
					$column_fields = array();
					$column_query = sqlquery("SELECT * FROM btx_form_builder_fields WHERE `column` = '".$field["id"]."' AND `alignment` = 'left' ORDER BY position DESC, id ASC");
					while ($sub_field = sqlfetch($column_query)) {
						$column_fields[] = $sub_field;
						$object_count++;
					}
					$field["fields"] = $column_fields;
					$fields[] = $field;

					
					$column_fields = array();
					$column_query = sqlquery("SELECT * FROM btx_form_builder_fields WHERE `column` = '".$field["id"]."' AND `alignment` = 'right' ORDER BY position DESC, id ASC");
					while ($sub_field = sqlfetch($column_query)) {
						$column_fields[] = $sub_field;
						$object_count++;
					}
					$field["fields"] = $column_fields;
					$fields[] = $field;

					
					$object_count += 3;
				} else {
					$fields[] = $field;				
				}
			}

			$form["fields"] = $fields;
			$form["object_count"] = $object_count - 1; 
			return $form;
		}

		
		
		static function getAllForms($sort = "id ASC") {
			$mod = new BigTreeModule();
			return $mod->getAll($sort);
		}

		
		
		static function getEntries($id) {
			$mod = new BigTreeModule();
			return $mod->getMatching("form",$id,"id DESC");
		}

		
		
		static function getEntry($id) {
			$mod = new BigTreeModule();
			return $mod->get($id);
		}
		
		
		
		static function parseTokens(&$token_list, $type, $label, $value, $reset = false) {
			static $duplicates = array();
			
			if ($reset) {
				$duplicates = array();
				return false;
			}
			
			if ($type !== "columns" && $type !== "captcha" && $type !== "section") {
				if (isset($duplicates[$label])) {
					$duplicates[$label]++;
					$token_list[$label."--".$duplicates[$label]] = $value;
				} else {
					if (!isset($token_list[$label])) {
						$token_list[$label] = $value;
					} else {
						$duplicates[$label] = 2;
						
						$existing_value = $token_list[$label];
						unset($token_list[$label]);
						
						$token_list[$label."--1"] = $existing_value;
						$token_list[$label."--2"] = $value;
					}
				}
			}
		}

		
		
		static function searchEntries($id,$query,$page = 1) {
			$mod = new BigTreeModule();
			$results = $mod->search($query,"id DESC");
			$form_results = array();

			
			foreach ($results as $result) {
				if ($result["form"] == $id) {
					$form_results[] = $result;
				}
			}
			
			$pages = ceil(count($form_results) / 15);
			self::$SearchPageCount = $pages ? $pages : 1;

			return array_slice($form_results,($page - 1) * 15,15);
		}
	}