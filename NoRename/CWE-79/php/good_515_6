<?php



$aggregate_actions = array(
	1 => __('Delete'),
	2 => __('Duplicate')
);


set_default_action();

switch (get_request_var('action')) {
	case 'save':
		aggregate_color_form_save();

		break;
	case 'actions':
		aggregate_color_form_actions();

		break;
	case 'template_edit':
		top_header();
		aggregate_color_template_edit();
		bottom_footer();

		break;
	default:
		top_header();
		aggregate_color_template();
		bottom_footer();

		break;
}


function draw_color_template_items_list($item_list, $filename, $url_data, $disable_controls) {
	global $config;
	global $struct_color_template_item;

	$display_text = array(
		array('display' => __('Color Item'), 'align' => 'left', 'nohide' => true),
		array('display' => __('Color'), 'align' => 'left', 'nohide' => true),
		array('display' => __('Hex'), 'align' => 'left', 'nohide' => true),
	);

	html_header($display_text, 2);

	$i = 1;
	$total_items = cacti_sizeof($item_list);

	if (cacti_sizeof($item_list)) {
		foreach ($item_list as $item) {
			
			form_alternate_row('line' . $item['color_template_item_id'], true, true);

			

			if ($disable_controls == false) {
				
			}

			
			}

			

			

			if ($disable_controls == false) {
				

				if (read_config_option('drag_and_drop') == '') {
					if ($i < $total_items && $total_items > 1) {
						
					} else {
						
					}

					if ($i > 1 && $i <= $total_items) {
						
					} else {
						
					}
				}

				

				
			}

			form_end_row();

			$i++;
		}
	} else {
		
	}
}



function aggregate_color_form_save() {
	if (isset_request_var('save_component_color')) {
		if (isset_request_var('color_template_id')) {
			$save1['color_template_id'] = get_nfilter_request_var('color_template_id');
		} else {
			$save1['color_template_id'] = 0;
		}

		$save1['name'] = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);

		cacti_log('Saved ID: ' . $save1['color_template_id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);

		if (!is_error_message()) {
			$color_template_id = sql_save($save1, 'color_templates', 'color_template_id');

			cacti_log('Saved ID: ' . $color_template_id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);

			if ($color_template_id) {
				raise_message(1);
			} else {
				raise_message(2);
			}
		}
	}

	header('Location: color_templates.php?header=false&action=template_edit&color_template_id=' . (empty($color_template_id) ? get_nfilter_request_var('color_template_id') : $color_template_id));
}



function aggregate_color_form_actions() {
	global $aggregate_actions, $config;

	
	get_filter_request_var('drp_action');
	

	
	if (isset_request_var('selected_items')) {
		$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));

		if ($selected_items != false) {
			if (get_request_var('drp_action') == '1') { 
				db_execute('DELETE FROM color_templates WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));
				db_execute('DELETE FROM color_template_items WHERE ' . array_to_sql_or($selected_items, 'color_template_id'));
			} elseif (get_nfilter_request_var('drp_action') == '2') { 
				for ($i=0;($i<cacti_count($selected_items));$i++) {
					duplicate_color_template($selected_items[$i], get_nfilter_request_var('title_format'));
				}
			}
		}

		header('Location: color_templates.php?header=false');
		exit;
	}

	
	$color_list = ''; $i = 0;

	
	foreach ($_POST as $var => $val) {
		if (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {
			
			input_validate_input_number($matches[1]);
			
			$color_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM color_templates WHERE color_template_id = ?', array($matches[1]))) . '</li>';
			$color_array[] = $matches[1];
		}
	}

	top_header();

	form_start('color_templates.php');

	html_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');

	if (isset($color_array) && cacti_sizeof($color_array)) {
		if (get_request_var('drp_action') == '1') { 
			

			$save_html = "<input type='button' class='ui-button ui-corner-all ui-widget' value='" . __esc('Cancel') . "' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='" . __esc('Continue') . "' title='" . __n('Delete Color Template', 'Delete Color Templates', cacti_sizeof($color_array)) . "'>";
		} elseif (get_request_var('drp_action') == '2') { 
			 form_text_box('title_format', '<template_title> (1)', '', '255', '30', 'text'); 

			$save_html = "<input type='button' class='ui-button ui-corner-all ui-widget' value='" . __esc('Cancel') . "' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='" . __esc('Continue') . "' title='" . __n('Duplicate Color Template', 'Duplicate Color Templates', cacti_sizeof($color_array)) . "'>";
		}
	} else {
		raise_message(40);
		header('Location: color_templates.php?header=false');
		exit;
	}

	

	html_end_box();

	form_end();

	bottom_footer();
}


function aggregate_color_item() {
	global $config;

	
	get_filter_request_var('color_template_id');
	

	if (isempty_request_var('color_template_id')) {
		$template_item_list = array();

		$header_label = __('Color Template Items [new]');
	} else {
		$template_item_list = db_fetch_assoc_prepared('SELECT
			cti.color_template_id, cti.color_template_item_id, cti.sequence, colors.hex
			FROM color_template_items AS cti
			LEFT JOIN colors
			ON cti.color_id=colors.id
			WHERE cti.color_template_id = ?
			ORDER BY cti.sequence ASC',
			array(get_request_var('color_template_id')));

		$name = db_fetch_cell_prepared('SELECT name
			FROM color_templates
			WHERE color_template_id = ?',
			array(get_request_var('color_template_id')));

		$header_label = __('Color Template Items [edit: %s]', html_escape($name));
	}

	html_start_box($header_label, '100%', '', '3', 'center', 'color_templates_items.php?action=item_edit&color_template_id=' . html_escape_request_var('color_template_id'));

	draw_color_template_items_list($template_item_list, 'color_templates_items.php', 'color_template_id=' . html_escape_request_var('color_template_id'), false);

	html_end_box();

    ?>
    <script type='text/javascript'>

    $(function() {
        $('
        $('.cdialog').remove();
        $('body').append("<div class='cdialog' id='cdialog'></div>");

		<?php if (read_config_option('drag_and_drop') == 'on') { ?>
        $('
            onDrop: function(table, row) {
                loadPageNoHeader('color_templates_items.php?action=ajax_dnd&id=<?php isset_request_var('color_template_id') ? ?>&'+$.tableDnD.serialize());
            }
        });
		<?php } ?>

        $('.delete').click(function (event) {
            event.preventDefault();

            id = $(this).attr('id').split('_');
            request = 'color_templates_items.php?action=item_remove_confirm&id='+id[0]+'&color_id='+id[1];
            $.get(request)
		.done(function(data) {
	                $('
        	        applySkin();
			$('
 		})
		.fail(function(data) {
			getPresentHTTPError(data);
		});
        }).css('cursor', 'pointer');
    });

    </script>
    <?php

}



function aggregate_color_template_edit() {
	global $config, $image_types, $fields_color_template_template_edit, $struct_aggregate;


	
	get_filter_request_var('color_template_id');
	

	if (!isempty_request_var('color_template_id')) {
		$template = db_fetch_row_prepared('SELECT * FROM color_templates WHERE color_template_id = ?', array(get_request_var('color_template_id')));
		$header_label = __('Color Template [edit: %s]', html_escape($template['name']));
	} else {
		$header_label = __('Color Template [new]');
	}

	form_start('color_templates.php', 'color_template_edit');

	html_start_box($header_label, '100%', true, '3', 'center', '');

	draw_edit_form(
		array(
			'config' => array('no_form_tag' => true),
			'fields' => inject_form_variables($fields_color_template_template_edit, (isset($template) ? $template : array()))
		)
	);

	html_end_box(true, true);

	form_hidden_box('color_template_id', (isset($template['color_template_id']) ? $template['color_template_id'] : '0'), '');
	form_hidden_box('save_component_color', '1', '');

	
	if (!isempty_request_var('color_template_id')) {
		aggregate_color_item();
	}

	form_save_button('color_templates.php', 'return', 'color_template_id');
}



function aggregate_color_template() {
	global $aggregate_actions, $item_rows, $config;

	
	$filters = array(
		'rows' => array(
			'filter' => FILTER_VALIDATE_INT,
			'pageset' => true,
			'default' => '-1'
			),
		'page' => array(
			'filter' => FILTER_VALIDATE_INT,
			'default' => '1'
			),
		'filter' => array(
			'filter' => FILTER_CALLBACK,
			'pageset' => true,
			'default' => '',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_column' => array(
			'filter' => FILTER_CALLBACK,
			'default' => 'name',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_direction' => array(
			'filter' => FILTER_CALLBACK,
			'default' => 'ASC',
			'options' => array('options' => 'sanitize_search_string')
			),
		'has_graphs' => array(
			'filter' => FILTER_VALIDATE_REGEXP,
			'options' => array('options' => array('regexp' => '(true|false)')),
			'pageset' => true,
			'default' => read_config_option('default_has') == 'on' ? 'true':'false'
			)
	);

	validate_store_request_vars($filters, 'sess_ct');
	

	if (get_request_var('rows') == -1) {
		$rows = read_config_option('num_rows_table');
	} else {
		$rows = get_request_var('rows');
	}

	form_start('color_templates.php', 'form_template');

	html_start_box(__('Color Templates'), '100%', '', '3', 'center', 'color_templates.php?action=template_edit');

	$filter_html = '<tr class="even">
		<td>
			<table class="filterTable">
				<tr>
					<td>
						' . __('Search') . '
					</td>
					<td>
						<input type="text" class="ui-state-default ui-corner-all" id="filter" size="25" value="' . html_escape_request_var('filter') . '">
					</td>
					<td>
						' . __('Color Templates') . '
					</td>
					<td>
						<select id="rows" onChange="applyFilter()">
							<option value="-1" ';
	if (get_request_var('rows') == '-1') {
		$filter_html .= 'selected';
	}

	$filter_html .= '>' . __('Default') . '</option>';

	if (cacti_sizeof($item_rows)) {
		foreach ($item_rows as $key => $value) {
			$filter_html .= "<option value='" . $key . "'";
			if (get_request_var('rows') == $key) {
				$filter_html .= ' selected';
			}
			$filter_html .= '>' . $value . "</option>\n";
		}
	}

	$filter_html .= '			</select>
					</td>
					<td>
						<span>
							<input type="checkbox" id="has_graphs" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange="applyFilter()">
							<label for="has_graphs">' . __('Has Graphs') . '</label>
						</span>
					</td>
					<td>
						<span>
							<input type="button" class="ui-button ui-corner-all ui-widget" id="refresh" value="' . __esc('Go') . '">
							<input type="button" class="ui-button ui-corner-all ui-widget" id="clear" value="' . __esc('Clear') . '">
						</span>
					</td>
				</tr>
			</table>
			</td>
		</tr>';

	

	html_end_box();

	form_end();

	
	$sql_where = '';
	if (get_request_var('filter') != '') {
		$sql_where = "WHERE (ct.name LIKE '%" . get_request_var('filter') . "%')";
	}

	if (get_request_var('has_graphs') == 'true') {
		$sql_where .= ($sql_where != '' ? ' AND ' : 'WHERE ') . ' (templates>0 OR graphs>0)';
	}

	$total_rows = db_fetch_cell("SELECT
		COUNT(ct.color_template_id)
		FROM color_templates AS ct
		LEFT JOIN (
			SELECT color_template, COUNT(*) AS templates
			FROM aggregate_graph_templates_item
			GROUP BY color_template
		) AS templates
		ON ct.color_template_id=templates.color_template
		LEFT JOIN (
			SELECT color_template, COUNT(*) AS graphs
			FROM aggregate_graphs_graph_item
			GROUP BY color_template
		) AS graphs
		ON ct.color_template_id=graphs.color_template
		$sql_where");

	$sql_order = get_order_string();
	$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;

	$template_list = db_fetch_assoc("SELECT
		ct.color_template_id, ct.name, templates.templates, graphs.graphs
		FROM color_templates AS ct
		LEFT JOIN (
			SELECT color_template, COUNT(*) AS templates
			FROM aggregate_graph_templates_item
			GROUP BY color_template
		) AS templates
		ON ct.color_template_id=templates.color_template
		LEFT JOIN (
			SELECT color_template, COUNT(*) AS graphs
			FROM aggregate_graphs_graph_item
			GROUP BY color_template
		) AS graphs
		ON ct.color_template_id=graphs.color_template
		$sql_where
		$sql_order
		$sql_limit");

	$nav = html_nav_bar('color_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Color Templates'), 'page', 'main');

	form_start('color_templates.php', 'chk');

	

	html_start_box('', '100%', '', '3', 'center', '');

	$display_text = array(
		'name'      => array(__('Template Title'), 'ASC'),
		'nosort'    => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Color Templates that are in use cannot be Deleted. In use is defined as being referenced by an Aggregate Template.')),
		'graphs'    => array('display' => __('Graphs'), 'align' => 'right', 'sort' => 'DESC'),
		'templates' => array('display' => __('Templates'), 'align' => 'right', 'sort' => 'DESC')
	);

	html_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);

	if (cacti_sizeof($template_list)) {
		foreach ($template_list as $template) {
			if ($template['templates'] > 0) {
				$disabled = true;
			} else {
				$disabled = false;
			}

			form_alternate_row('line' . $template['color_template_id'], true);

			form_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'color_templates.php?action=template_edit&color_template_id=' . $template['color_template_id'] . '&page=1'), $template['color_template_id']);
			form_selectable_cell($disabled ? __('No'):__('Yes'), $template['color_template_id'], '', 'right');
			form_selectable_cell(number_format_i18n($template['graphs']), $template['color_template_id'], '', 'right');
			form_selectable_cell(number_format_i18n($template['templates']), $template['color_template_id'], '', 'right');
			form_checkbox_cell($template['name'], $template['color_template_id'], $disabled);
			form_end_row();
		}
	} else {
		
	}

	html_end_box(false);

	if (cacti_sizeof($template_list)) {
		
	}

	
	draw_actions_dropdown($aggregate_actions);

	form_end();

	?>
	<script type='text/javascript'>

	function applyFilter() {
		strURL  = 'color_templates.php';
		strURL += '?rows=' + $('
		strURL += '&filter=' + $('
		strURL += '&has_graphs=' + $('
		strURL += '&header=false';
		loadPageNoHeader(strURL);
	}

	function clearFilter() {
		strURL = 'color_templates.php?clear=1&header=false';
		loadPageNoHeader(strURL);
	}

	$(function() {
		$('
			applyFilter();
		});

		$('
			clearFilter();
		});

		$('
			applyFilter();
		});

		$('
			event.preventDefault();
			applyFilter();
		});
	});

	</script>
	<?php
}

