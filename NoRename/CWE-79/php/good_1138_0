<?php





	if (!permission_exists('message_view')) {
		
		exit;
	}


	$language = new text;
	$text = $language->get();


	$number = preg_replace('{[\D]}', '', $_GET['number']);
	$contact_uuid = (is_uuid($_GET['contact_uuid'])) ? $_GET['contact_uuid'] : null;


	$refresh = $_GET['refresh'] == 'true' ? true : false;


	if (isset($_SESSION['message']['display_last']['text']) && $_SESSION['message']['display_last']['text'] != '') {
		$array = explode(' ',$_SESSION['message']['display_last']['text']);
		if (is_array($array) && is_numeric($array[0]) && $array[0] > 0) {
			if ($array[1] == 'messages') {
				$limit = limit_offset($array[0], 0);
			}
			else {
				$since = "and message_date >= :message_date ";
				$parameters['message_date'] = date("Y-m-d H:i:s", strtotime('-'.$_SESSION['message']['display_last']['text']));
			}
		}
	}
	if ($limit == '' && $since == '') { $limit = limit_offset(25, 0); } 
	$sql = "select ";
	$sql .= "message_uuid, ";
	$sql .= "domain_uuid, ";
	$sql .= "user_uuid, ";
	$sql .= "contact_uuid, ";
	$sql .= "message_type, ";
	$sql .= "message_direction, ";
	$sql .= "message_date at time zone :time_zone as message_date, ";
	$sql .= "message_from, ";
	$sql .= "message_to, ";
	$sql .= "message_text ";
	$sql .= "from v_messages ";
	$sql .= "where user_uuid = :user_uuid ";
	$sql .= "and (domain_uuid = :domain_uuid or domain_uuid is null) ";
	$sql .= $since;
	$sql .= "and (message_from like :message_number or message_to like :message_number) ";
	$sql .= "order by message_date desc ";
	$sql .= $limit;
	$parameters['time_zone'] = $_SESSION['domain']['time_zone']['name'];
	$parameters['user_uuid'] = $_SESSION['user_uuid'];
	$parameters['domain_uuid'] = $domain_uuid;
	$parameters['message_number'] = '%'.$number;
	$database = new database;
	$messages = $database->select($sql, $parameters, 'all');
	$messages = array_reverse($messages);
	unset($sql, $parameters);


	$sql = "select ";
	$sql .= "message_uuid, ";
	$sql .= "message_media_uuid, ";
	$sql .= "message_media_type, ";
	$sql .= "length(decode(message_media_content,'base64')) as message_media_size ";
	$sql .= "from v_message_media ";
	$sql .= "where user_uuid = :user_uuid ";
	$sql .= "and (domain_uuid = :domain_uuid or domain_uuid is null) ";
	$sql .= "and ( ";
	foreach ($messages as $index => $message) {
		$message_uuids[] = "message_uuid = :message_uuid_".$index;
		$parameters['message_uuid_'.$index] = $message['message_uuid'];
	}
	$sql .= implode(' or ', $message_uuids);
	$sql .= ") ";
	$sql .= "and message_media_type <> 'txt' ";
	$parameters['user_uuid'] = $_SESSION['user_uuid'];
	$parameters['domain_uuid'] = $domain_uuid;
	$database = new database;
	$rows = $database->select($sql, $parameters, 'all');
	unset($sql, $parameters, $index);


	if (is_array($rows) && @sizeof($rows) != 0) {
		foreach ($rows as $index => $row) {
			$message_media[$row['message_uuid']][$index]['uuid'] = $row['message_media_uuid'];
			$message_media[$row['message_uuid']][$index]['type'] = $row['message_media_type'];
			$message_media[$row['message_uuid']][$index]['size'] = $row['message_media_size'];
		}
	}


	
	
	\n";
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	

	
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	\n";
	\n";
	

	
	\n";
	\n";
	\n";
	\n";
	\n";
	

	

	if (!$refresh) {
		 overflow: auto; padding-right: 15px;'>\n";
	}

	
		if (is_array($messages) && @sizeof($messages) != 0) {
			foreach ($messages as $message) {
				
				if ($message['message_direction'] == 'inbound') {
					$message_from = $message['message_to'];
					$media_source = format_phone($message['message_from']);
				}
				if ($message['message_direction'] == 'outbound') {
					$media_source = format_phone($message['message_to']);
				}

				
					
						
							if (
								$message['message_direction'] == 'inbound' &&
								is_array($_SESSION['tmp']['messages']['contact_em'][$contact_uuid]) &&
								@sizeof($_SESSION['tmp']['messages']['contact_em'][$contact_uuid]) != 0
								) {
								
								
								
							}
						
							else if (
								is_array($_SESSION['tmp']['messages']['contact_me']) &&
								@sizeof($_SESSION['tmp']['messages']['contact_me']) != 0
								) {
								
								
								
							}
						'>\n";
						
							if ($message['message_text'] != '') {
								
							}
						
							if (is_array($message_media[$message['message_uuid']]) && @sizeof($message_media[$message['message_uuid']]) != 0) {

								foreach ($message_media[$message['message_uuid']] as $media) {
									if ($media['type'] != 'txt') {
										if ($media['type'] == 'jpg' || $media['type'] == 'jpeg' || $media['type'] == 'gif' || $media['type'] == 'png') {
											
										}
										 height: 16px; border: none; margin-right: 10px;'>";
										 white-space: nowrap;'>".strtoupper($media['type']).' &middot; '.strtoupper(byte_convert($media['size']))."</span>";
										
									}
								}
								
							}
						
							
						
					
			}
			
		}

		
		
			

	if (!$refresh) {
		

		if (permission_exists('message_add')) {
			
			
			
			
			 max-width: 100%; min-height: 55px; border: 1px solid 
			'>\n";
			
			 height: 20px; border: none; padding-right: 5px;'></td>\n";
			
			
			
			'>\n";
			
			 height: 16px; border: none; cursor: pointer;' onclick=\"refresh_thread_stop('".$number."','".$contact_uuid."');\" alt=\"".$text['label-refresh_pause']."\" title=\"".$text['label-refresh_pause']."\"></span></td>\n";
			
			
			
			

		
			
			
			\n";
			
			
			
			
			
			
			
			
			\n";
			if (!http_user_agent('mobile')) {
				
			}
			\n";
			
			\n";
			\n";
			
			
			
			\n";

			
		}
	}

?>
