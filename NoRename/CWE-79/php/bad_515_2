<?php



$aggregate_actions = array(
	1 => __('Delete')
);


set_default_action();

if (get_request_var('action') == 'save') {
	if (isset_request_var('id') && get_filter_request_var('id') == 0 && isset_request_var('graph_template_id_prev') && get_filter_request_var('graph_template_id_prev') == 0) {
		set_request_var('action', 'edit');
	}
}

switch (get_request_var('action')) {
	case 'save':
		aggregate_form_save();
		break;
	case 'actions':
		aggregate_form_actions();
		break;
	case 'edit':
		top_header();
		aggregate_template_edit();
		bottom_footer();
		break;
	default:
		top_header();
		aggregate_template();
		bottom_footer();
		break;
}



function aggregate_form_save() {
	
	if (!isset_request_var('save_component_template')) {
		header('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));
		return null;
	}

	$save1 = array();

	
	if (isset_request_var('id') && get_request_var('id') > 0) {
		$is_new = false;
		$save1['id'] = get_nfilter_request_var('id');
	} else {
		$is_new = true;
		$save1['id'] = 0;
	}

	
	if (!isset_request_var('total'))        set_request_var('total', 0);
	if (!isset_request_var('total_type'))   set_request_var('total_type', 0);
	if (!isset_request_var('order_type'))   set_request_var('order_type', 0);
	if (!isset_request_var('total_prefix')) set_request_var('total_prefix', '');

	
	$save1['name']              = form_input_validate(get_nfilter_request_var('name'), 'name', '', false, 3);
	$save1['graph_template_id'] = get_filter_request_var('graph_template_id_prev');
	$save1['gprint_prefix']     = form_input_validate(get_nfilter_request_var('gprint_prefix'), 'gprint_prefix', '', true, 3);
	$save1['graph_type']        = form_input_validate(get_nfilter_request_var('graph_type'), 'graph_type', '', false, 3);
	$save1['total']             = form_input_validate(get_nfilter_request_var('total'), 'total', '', false, 3);
	$save1['total_type']        = form_input_validate(get_nfilter_request_var('total_type'), 'total_type', '', false, 3);
	$save1['total_prefix']      = form_input_validate(get_nfilter_request_var('total_prefix'), 'total_prefix', '', true, 3);
	$save1['order_type']        = form_input_validate(get_nfilter_request_var('order_type'), 'order_type', '', false, 3);
	$save1['user_id']           = $_SESSION['sess_user_id'];

	
	if (is_error_message()) {
		header('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));
		return null;
	}

	cacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $save1['id'] . ' Name: ' . $save1['name'], false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);

	
	if ($is_new == false) {
		$old = db_fetch_row_prepared('SELECT *
			FROM aggregate_graph_templates
			WHERE id = ?',
			array($save1['id']));

		$save_me = 0;

		$save_me += ($old['name']          != $save1['name']);
		$save_me += ($old['gprint_prefix'] != $save1['gprint_prefix']);
		$save_me += ($old['graph_type']    != $save1['graph_type']);
		$save_me += ($old['total']         != $save1['total']);
		$save_me += ($old['total_prefix']  != $save1['total_prefix']);
		$save_me += ($old['order_type']    != $save1['order_type']);
	} else {
		$save_me = 1;
	}

	if ($save_me) {
		$id = sql_save($save1, 'aggregate_graph_templates', 'id');

		
		db_execute_prepared("UPDATE aggregate_graphs
			SET gprint_prefix = ?, graph_type = ?, total = ?, total_prefix = ?, order_type = ?
			WHERE aggregate_template_id = ?
			AND template_propogation='on'",
			array($save1['gprint_prefix'], $save1['graph_type'],
				$save1['total'], $save1['total_prefix'],  $save1['order_type'], $id));

		cacti_log('AGGREGATE GRAPH TEMPLATE Saved ID: ' . $id, false, 'AGGREGATE', POLLER_VERBOSITY_DEBUG);
	} else {
		$id = $save1['id'];
	}

	if (!$id) {
		raise_message(2);
		header('Location: aggregate_templates.php?header=false&action=edit&id=' . get_nfilter_request_var('id'));
		return null;
	}

	
	
	$params_new = aggregate_validate_graph_params($_POST, true);
	$params_new['aggregate_template_id'] = $id;

	
	$params_changed = false;

	$params_old = db_fetch_row_prepared('SELECT *
		FROM aggregate_graph_templates_graph
		WHERE aggregate_template_id = ?',
		array($id));

	if (!empty($params_old)) {
		foreach ($params_old as $field => $value_old) {
			if (isset($params_new[$field]) && $params_new[$field] != $value_old) {
				$params_changed = true;
				break;
			}
		}
	} else {
		$params_changed = true;
	}


	
	if (!is_error_message()) {
		sql_save($params_new, 'aggregate_graph_templates_graph', 'aggregate_template_id', false);
	}

	
	
	$graph_templates_items = array_rekey(
		db_fetch_assoc_prepared('SELECT id, sequence
			FROM graph_templates_item
			WHERE local_graph_id=0
			AND graph_template_id = ?',
			array($save1['graph_template_id'])),
		'id', array('sequence')
	);

	
	$aggregate_template_items_old = array_rekey(
		db_fetch_assoc_prepared('SELECT *
			FROM aggregate_graph_templates_item
			WHERE aggregate_template_id = ?', array($id)),
		'graph_templates_item_id', array('sequence', 'color_template', 't_graph_type_id', 'graph_type_id', 't_cdef_id', 'cdef_id', 'item_skip', 'item_total')
	);

	
	aggregate_validate_graph_items($_POST, $graph_templates_items);

	$items_changed = false;
	$items_to_save = array();

	foreach($graph_templates_items as $item_id => $data) {
		$item_new = array();
		$item_new['aggregate_template_id']   = $id;
		$item_new['graph_templates_item_id'] = $item_id;

		$item_new['color_template'] = isset($data['color_template']) ? $data['color_template']:0;
		$item_new['item_skip']      = isset($data['item_skip']) ? 'on':'';
		$item_new['item_total']     = isset($data['item_total']) ? 'on':'';
		$item_new['sequence']       = isset($data['sequence']) ? $data['sequence']:0;

		
		if (!isset($aggregate_template_items_old[$item_id])) {
			
			$items_changed = true;
		} else {
			
			$item_new = array_merge($aggregate_template_items_old[$item_id], $item_new);
			
			foreach ($data as $field => $new_value) {
				if ($aggregate_template_items_old[$item_id][$field] != $new_value)
					$items_changed = true;
			}
		}
		$items_to_save[] = $item_new;
	}

	if ($items_changed) {
		aggregate_graph_items_save($items_to_save, 'aggregate_graph_templates_item');
	}

	if ($save_me || $params_changed || $items_changed) {
		push_out_aggregates($id);
	}

	raise_message(1);

	header('Location: aggregate_templates.php?header=false&action=edit&id=' . (empty($id) ? get_nfilter_request_var('id') : $id));
}


function aggregate_get_graph_items($table, $id) {

}



function aggregate_form_actions() {
	global $aggregate_actions, $config;

	
	get_filter_request_var('drp_action');
	

	
	if (isset_request_var('selected_items')) {
		$selected_items = sanitize_unserialize_selected_items(get_nfilter_request_var('selected_items'));

		if ($selected_items != false) {
			if (get_nfilter_request_var('drp_action') == '1') { 
				db_execute('DELETE FROM aggregate_graph_templates WHERE ' . array_to_sql_or($selected_items, 'id'));
				db_execute('DELETE FROM aggregate_graph_templates_item WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));
				db_execute('DELETE FROM aggregate_graph_templates_graph WHERE ' . array_to_sql_or($selected_items, 'aggregate_template_id'));
				db_execute("UPDATE aggregate_graphs SET aggregate_template_id=0, template_propogation='' WHERE " . array_to_sql_or($selected_items, 'aggregate_template_id'));
			}
		} else {
		}

		header('Location: aggregate_templates.php?header=false');
		exit;
	}

	
	$aggregate_list = ''; $i = 0;

	
	foreach ($_POST as $var => $val) {
		if (preg_match('/^chk_([0-9]+)$/', $var, $matches)) {
			
			input_validate_input_number($matches[1]);
			
			$aggregate_list .= '<li>' . html_escape(db_fetch_cell_prepared('SELECT name FROM aggregate_graph_templates WHERE id = ?', array($matches[1]))) . '</li>';
			$aggregate_array[] = $matches[1];
		}
	}

	top_header();

	form_start('aggregate_templates.php');

	html_start_box($aggregate_actions[get_nfilter_request_var('drp_action')], '60%', '', '3', 'center', '');

	if (isset($aggregate_array) && cacti_sizeof($aggregate_array)) {
		if (get_nfilter_request_var('drp_action') == '1') { 
			

			$save_html = "<input type='button' class='ui-button ui-corner-all ui-widget' value='" . __esc('Cancel') . "' onClick='cactiReturnTo()'>&nbsp;<input type='submit' class='ui-button ui-corner-all ui-widget' value='" . __esc('Continue') . "' title='" . __esc('Delete Color Template(s)') . "'>";
		}
	} else {
		raise_message(40);
		header('Location: aggregate_templates.php?header=false');
		exit;
	}

	

	html_end_box();

	form_end();

	bottom_footer();
}


function aggregate_template_edit() {
	global $image_types, $struct_aggregate_template;

	
	get_filter_request_var('id');
	

	if (!isempty_request_var('id')) {
		$template = db_fetch_row_prepared('SELECT *
			FROM aggregate_graph_templates
			WHERE id = ?',
			array(get_request_var('id')));

		$header_label = __('Aggregate Template [edit: %s]', html_escape($template['name']));
	} else {
		$header_label = __('Aggregate Template [new]');
	}

	
	if (isset_request_var('graph_template_id') && !isset($template)) {
		
		get_filter_request_var('graph_template_id');
		
		$template['graph_template_id'] = get_nfilter_request_var('graph_template_id');
		$template['id']                = 0;
	}

	form_start('aggregate_templates.php', 'template_edit');

	html_start_box($header_label, '100%', true, '3', 'center', '');

	draw_edit_form(
		array(
			'config' => array('no_form_tag' => true),
			'fields' => inject_form_variables($struct_aggregate_template, (isset($template) ? $template : array()))
		)
	);

	html_end_box(true, true);

	if (isset($template)) {
		draw_aggregate_graph_items_list(0, $template['graph_template_id'], $template);

		
		draw_aggregate_template_graph_config($template['id'], $template['graph_template_id']);
	}

	form_hidden_box('id', (isset($template['id']) ? $template['id'] : '0'), '0');
	form_hidden_box('save_component_template', '1', '');
	form_save_button('aggregate_templates.php', 'return', 'id');

	?>
	<script type='text/javascript'>
	$(function() {
		if ($('
			$('[id^="agg_total_"]').prop('checked', true);
		}

		if ($('
			$('
			$('
			$('
			$('
			$('
			$('
			$('
			$('

			$('
				$('
			});

			$('
		} else {
			$('
			if ($('
				$('
			}
		}

		$('
			changeTotals();
		});

		$('
			changeTotalsType();
		});

		$('input[id^="agg_total"], input[id^="agg_skip"]').click(function() {
			id = $(this).attr('id');

			if (id.indexOf('skip') > 0) {
				altId = id.replace('skip', 'total');
			} else {
				altId = id.replace('total', 'skip');
			}

			if ($('
				$('
			} else {
				$('
			}
		});

		changeTotals();
	});

	function changeTotals() {
		switch ($('
			case '<?php ?>':
				$('
				$('
				$('
				break;
			case '<?php ?>':
				$('
				$('
				$('
				changeTotalsType();
				break;
			case '<?php ?>':
				$('
				$('
				
				changeTotalsType();
				break;
		}
	}

	function changeTotalsType() {
		if ($('
			if ($('
				$('
			}
		} else if ($('
			if ($('
				$('
			}
		}
	}
	</script>
	<?php
}


function aggregate_template() {
	global $aggregate_actions, $item_rows, $config;

	
	$filters = array(
		'rows' => array(
			'filter' => FILTER_VALIDATE_INT,
			'pageset' => true,
			'default' => '-1'
			),
		'page' => array(
			'filter' => FILTER_VALIDATE_INT,
			'default' => '1'
			),
		'filter' => array(
			'filter' => FILTER_CALLBACK,
			'pageset' => true,
			'default' => '',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_column' => array(
			'filter' => FILTER_CALLBACK,
			'default' => 'pgt.name',
			'options' => array('options' => 'sanitize_search_string')
			),
		'sort_direction' => array(
			'filter' => FILTER_CALLBACK,
			'default' => 'ASC',
			'options' => array('options' => 'sanitize_search_string')
			),
		'has_graphs' => array(
			'filter' => FILTER_VALIDATE_REGEXP,
			'options' => array('options' => array('regexp' => '(true|false)')),
			'pageset' => true,
			'default' => read_config_option('default_has') == 'on' ? 'true':'false'
			)
	);

	validate_store_request_vars($filters, 'sess_agg_tmp');
	

	if (get_request_var('rows') == '-1') {
		$rows = read_config_option('num_rows_table');
	} else {
		$rows = get_request_var('rows');
	}

	form_start('aggregate_templates.php', 'template');

	html_start_box(__('Aggregate Templates'), '100%', '', '3', 'center', 'aggregate_templates.php?action=edit');

	$filter_html = '<tr class="even">
		<td>
			<table class="filterTable">
				<tr>
					<td>
						' . __('Search') . '
					</td>
					<td>
						<input type="text" class="ui-state-default ui-corner-all" id="filter" size="25" value="' . html_escape_request_var('filter') . '">
					</td>
					<td>
						' . __('Templates') . '
					</td>
					<td>
						<select id="rows" onChange="applyFilter()">
						<option value="-1" ';

	if (get_request_var("rows") == "-1") {
		$filter_html .= 'selected';
	}

	$filter_html .= '>' . __('Default') . '</option>';
	if (cacti_sizeof($item_rows)) {
		foreach ($item_rows as $key => $value) {
			$filter_html .= "<option value='" . $key . "'";
			if (get_request_var("rows") == $key) {
				$filter_html .= " selected";
			}
			$filter_html .= ">" . $value . "</option>\n";
		}
	}

	$filter_html .= '</select>
					</td>
					<td>
						<span>
							<input type="checkbox" id="has_graphs" ' . (get_request_var('has_graphs') == 'true' ? 'checked':'') . ' onChange="applyFilter()">
							<label for="has_graphs">' . __('Has Graphs') . '</label>
						</span>
					</td>
					<td>
						<span>
							<input type="button" class="ui-button ui-corner-all ui-widget" value="' . __esc('Go') . '" id="refresh">
							<input type="button" class="ui-button ui-corner-all ui-widget" value="' . __esc('Clear') . '" id="clear">
						</span>
					</td>
				</tr>
			</table>
		</td>
	</tr>';

	

	html_end_box();

	form_end();

	
	$sql_where = '';
	if (get_request_var('filter') != '') {
		$sql_where = "WHERE (pgt.name LIKE '%" . get_request_var('filter') . "%' OR gt.name LIKE '%" . get_request_var('filter') . "%')";
	}

	if (get_request_var('has_graphs') == 'true') {
		$sql_where .= ($sql_where != '' ? ' AND ':'WHERE ') . 'graphs.graphs>0';
	}

	$total_rows = db_fetch_cell("SELECT
		COUNT(pgt.id)
		FROM aggregate_graph_templates AS pgt
		LEFT JOIN (
			SELECT aggregate_template_id, COUNT(*) AS graphs
			FROM aggregate_graphs
			GROUP BY aggregate_template_id
		) AS graphs
		ON pgt.id=graphs.aggregate_template_id
		LEFT JOIN graph_templates AS gt
		ON gt.id=pgt.graph_template_id
		$sql_where");

	$sql_order = get_order_string();
	$sql_limit = ' LIMIT ' . ($rows*(get_request_var('page')-1)) . ',' . $rows;

	$template_list = db_fetch_assoc("SELECT pgt.*, graphs.graphs, gt.name AS graph_template_name
		FROM aggregate_graph_templates AS pgt
		LEFT JOIN (
			SELECT aggregate_template_id, COUNT(*) AS graphs
			FROM aggregate_graphs
			GROUP BY aggregate_template_id
		) AS graphs
		ON pgt.id=graphs.aggregate_template_id
		LEFT JOIN graph_templates AS gt
		ON gt.id=pgt.graph_template_id
		$sql_where
		$sql_order
		$sql_limit");

	$nav = html_nav_bar('aggregate_templates.php', MAX_DISPLAY_PAGES, get_request_var('page'), $rows, $total_rows, 5, __('Aggregate Templates'), 'page', 'main');

	form_start('aggregate_templates.php', 'chk');

	

	html_start_box('', '100%', '', '3', 'center', '');

	$display_text = array(
		'pgt.name'            => array('display' => __('Template Title'), 'align' => 'left', 'sort' => 'ASC'),
		'nosort'              => array('display' => __('Deletable'), 'align' => 'right', 'tip' => __('Aggregate Templates that are in use can not be Deleted.  In use is defined as being referenced by an Aggregate.')),
		'graphs.graphs'       => array('display' => __('Graphs Using'), 'align' => 'right', 'sort' => 'DESC'),
		'graph_template_name' => array('display' => __('Graph Template'), 'align' => 'left', 'sort' => 'ASC')
	);

	html_header_sort_checkbox($display_text, get_request_var('sort_column'), get_request_var('sort_direction'), false);

	if (cacti_sizeof($template_list)) {
		foreach ($template_list as $template) {
			if ($template['graphs'] > 0) {
				$disabled = true;
			} else {
				$disabled = false;
			}

			form_alternate_row('line' . $template['id'], true, $disabled);
			form_selectable_cell(filter_value($template['name'], get_request_var('filter'), 'aggregate_templates.php?action=edit&id=' . $template['id'] . '&page=1'), $template['id']);
			form_selectable_cell($disabled ? 'No':'Yes', $template['id'], '', 'text-align:right');
			form_selectable_cell('<a class="linkEditMain" href="' . html_escape('aggregate_graphs.php?reset=true&template_id=' . $template['id']) . '">' . number_format_i18n($template['graphs'], '-1') . '</a>', $template['id'], '', 'text-align:right;');
			form_selectable_cell(filter_value($template['graph_template_name'], get_request_var('filter')), $template['id']);
			form_checkbox_cell($template['graph_template_name'], $template['id'], $disabled);
			form_end_row();
		}
	} else {
		
	}

	html_end_box(false);

	if (cacti_sizeof($template_list)) {
		
		
	}

	
	draw_actions_dropdown($aggregate_actions);

	form_end();

	?>
	<script type='text/javascript'>

	function applyFilter() {
		strURL  = 'aggregate_templates.php';
		strURL += '?rows=' + $('
		strURL += '&has_graphs=' + $('
		strURL += '&filter=' + $('
		strURL += '&header=false';
		loadPageNoHeader(strURL);
	}

	function clearFilter() {
		strURL = 'aggregate_templates.php?clear=1&header=false';
		loadPageNoHeader(strURL);
	}

	$(function() {
		$('
			applyFilter();
		});

		$('
			clearFilter();
		});

		$('
			applyFilter();
		});

		$('
			event.preventDefault();
			applyFilter();
		});
	});
	</script>
	<?php
}

