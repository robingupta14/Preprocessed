<?php



if (!defined('IN_PHPBB'))
{
	exit;
}


if (!defined('E_DEPRECATED'))
{
	define('E_DEPRECATED', 8192);
}
$level = E_ALL & ~E_NOTICE & ~E_DEPRECATED;
if (version_compare(PHP_VERSION, '5.4.0-dev', '>='))
{
	
	
	
	
	
	
	
	if (!defined('E_STRICT'))
	{
		define('E_STRICT', 2048);
	}
	$level &= ~E_STRICT;
}
error_reporting($level);


function deregister_globals()
{
	$not_unset = array(
		'GLOBALS'	=> true,
		'_GET'		=> true,
		'_POST'		=> true,
		'_COOKIE'	=> true,
		'_REQUEST'	=> true,
		'_SERVER'	=> true,
		'_SESSION'	=> true,
		'_ENV'		=> true,
		'_FILES'	=> true,
		'phpEx'		=> true,
		'phpbb_root_path'	=> true
	);

	
	
	
	if (!isset($_SESSION) || !is_array($_SESSION))
	{
		$_SESSION = array();
	}

	
	$input = array_merge(
		array_keys($_GET),
		array_keys($_POST),
		array_keys($_COOKIE),
		array_keys($_SERVER),
		array_keys($_SESSION),
		array_keys($_ENV),
		array_keys($_FILES)
	);

	foreach ($input as $varname)
	{
		if (isset($not_unset[$varname]))
		{
			
			if (isset($_COOKIE[$varname]))
			{
				
			}
			
			exit;
		}

		unset($GLOBALS[$varname]);
	}

	unset($input);
}


function phpbb_has_trailing_path($phpEx)
{
	
	if (!empty($_SERVER['PATH_INFO']) || !empty($_SERVER['ORIG_PATH_INFO']))
	{
		return true;
	}

	
	
	
	
	
	if (preg_match('
	{
		return true;
	}

	return false;
}


if (phpbb_has_trailing_path($phpEx))
{
	if (substr(strtolower(@php_sapi_name()), 0, 3) === 'cgi')
	{
		$prefix = 'Status:';
	}
	else if (!empty($_SERVER['SERVER_PROTOCOL']))
	{
		$prefix = $_SERVER['SERVER_PROTOCOL'];
	}
	else
	{
		$prefix = 'HTTP/1.0';
	}
	header("$prefix 404 Not Found", true, 404);
	
	exit;
}


if (version_compare(PHP_VERSION, '5.4.0-dev', '>='))
{
	
	define('STRIP', false);
}
else
{
	@set_magic_quotes_runtime(0);

	
	if (@ini_get('register_globals') == '1' || strtolower(@ini_get('register_globals')) == 'on' || !function_exists('ini_get'))
	{
		deregister_globals();
	}

	define('STRIP', (get_magic_quotes_gpc()) ? true : false);
}


if (function_exists('date_default_timezone_set') && function_exists('date_default_timezone_get'))
{
	
	

	
	
	
	

	
	
	

	
	
	

	
	

	
	
	
	date_default_timezone_set(@date_default_timezone_get());
}

$starttime = explode(' ', microtime());
$starttime = $starttime[1] + $starttime[0];
