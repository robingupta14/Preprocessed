<?php



define('PMA_MINIMUM_COMMON', true);


if (isset($_REQUEST['filename']) && isset($_REQUEST['image'])) {
    $allowed = array(
        'image/png'     => 'png',
        'image/svg+xml' => 'svg',
    );

    
    if (! isset($allowed[$_REQUEST['type']])) {
        PMA_fatalError(__('Invalid export type'));
    }

    
    $extension = $allowed[$_REQUEST['type']];
    $valid_match = '/^[^\n\r]*\.' . $extension . '$/';
    if (! preg_match($valid_match, $_REQUEST['filename'])) {
        if (! preg_match('/^[^\n\r]*$/', $_REQUEST['filename'])) {
            
            $filename = 'download.' . $extension;
        } else {
            
            $filename = $_REQUEST['filename'] . '.' . $extension;
        }
    } else {
        
        $filename = $_REQUEST['filename'];
    }

    
    $pmaString = $GLOBALS['PMA_String'];

    
    if ($extension != 'svg') {
        $data = mb_substr(
            $_REQUEST['image'],
            mb_strpos($_REQUEST['image'], ',') + 1
        );
        $data = base64_decode($data);
    } else {
        $data = $_REQUEST['image'];
    }

    
    PMA_downloadHeader(
        $filename,
        $_REQUEST['type'],
        mb_strlen($data)
    );

    
    

} else if (isset($_REQUEST['monitorconfig'])) {
    
    PMA_downloadHeader('monitor.cfg', 'application/json; charset=UTF-8');
    header('X-Content-Type-Options: nosniff');

    

} else if (isset($_REQUEST['import'])) {
    
    header('Content-Type: application/json; charset=UTF-8');
    header('X-Content-Type-Options: nosniff');

    if (!file_exists($_FILES['file']['tmp_name'])) {
        exit();
    }
    
}
