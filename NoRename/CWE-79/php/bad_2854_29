<?php


session_start();
if (!isset($_SESSION['CPM']) || $_SESSION['CPM'] != 1 ||
    !isset($_SESSION['user_id']) || empty($_SESSION['user_id']) ||
    !isset($_SESSION['key']) || empty($_SESSION['key'])
) {
    die('Hacking attempt...');
}


if (file_exists('../includes/config/tp.config.php')) {
} elseif (file_exists('./includes/config/tp.config.php')) {
} else {
    throw new Exception("Error file '/includes/config/tp.config.php' not exists", 1);
}


if (!checkUser($_SESSION['user_id'], $_SESSION['key'], "home")) {
    $_SESSION['error']['code'] = ERR_NOT_ALLOWED; 
    exit();
}

header("Content-type: text/html; charset=utf-8");
header("Cache-Control: no-cache, no-store, must-revalidate");
header("Pragma: no-cache");


$userData = DB::queryFirstRow(
    "SELECT avatar, avatar_thumb
    FROM ".prefix_table("users")."
    WHERE id=%i",
    $_SESSION['user_id']
);
$_SESSION['user_avatar'] = $userData['avatar'];
$_SESSION['user_avatar_thumb'] = $userData['avatar_thumb'];


if (isset($userData['avatar']) && !empty($userData['avatar'])) {
    if (file_exists('includes/avatars/'.$userData['avatar'])) {
        $avatar = $SETTINGS['cpassman_url'].'/includes/avatars/'.$userData['avatar'];
    } else {
        $avatar = $SETTINGS['cpassman_url'].'/includes/images/photo.jpg';
    }
} else {
    $avatar = $SETTINGS['cpassman_url'].'/includes/images/photo.jpg';
}


if (isset($LANG) === true) {
    if ($_SESSION['user_admin'] === '1') {
        $_SESSION['user_privilege'] = $LANG['god'];
    } elseif ($_SESSION['user_manager'] === '1') {
        $_SESSION['user_privilege'] = $LANG['gestionnaire'];
    } elseif ($_SESSION['user_read_only'] === '1') {
        $_SESSION['user_privilege'] = $LANG['read_only_account'];
    } else {
        $_SESSION['user_privilege'] = $LANG['user'];
    }
}


foreach (timezone_identifiers_list() as $zone) {
    $arrayTimezones[$zone] = $zone;
}


$rows = DB::query("SELECT label FROM ".prefix_table("languages")." ORDER BY label ASC");
foreach ($rows as $record) {
    $arraFlags[$record['label']] = $record['label'];
}

">
    <tr>
        <td rowspan="4" style="width:94px">
            <div id="profile_photo" class="ui-widget ui-state-highlight tip" style="padding:2px; text-align:center; cursor:pointer;" title="'.$LANG['upload_new_avatar'].'"><img src="'.$avatar.'" /></div>
        </td>
        <td style="width:70px;">&nbsp;'.$LANG['name'].':</td>
        <td><b>', isset($_SESSION['name']) && !empty($_SESSION['name']) ? $_SESSION['name'].' '.$_SESSION['lastname'] : $_SESSION['login'], '</b></td>
    </tr>
    <tr>
        <td style="width:70px;">&nbsp;'.$LANG['user_login'].':</td>
        <td><span style="">'.$_SESSION['login'].'</span></td>
    </tr>
    <tr>
        <td style="width:70px;">&nbsp;'.$LANG['email'].':</td>
        <td title="'.$LANG['click_to_change'].'"><span style="cursor:pointer;" class="editable_textarea" id="email_'.$_SESSION['user_id'].'">'.$_SESSION['user_email'].'</span>&nbsp;<i class="fa fa-pencil fa-fw jeditable-activate" style="cursor:pointer;"></i></td>
    </tr>
    <tr>
        <td style="width:70px;">&nbsp;'.$LANG['role'].':</td>
        <td>'.$_SESSION['user_privilege'].'</td>
    </tr>
</table>

<div style="float:left; margin-left:10px;">
   <ul class="menu" style="">
      <li class="menu_150" style="padding:4px; text-align:left;"><i class="fa fa-bars fa-fw"></i>&nbsp;'.$LANG['admin_actions_title'].'
         <ul class="menu_250" style="text-align:left;">';
if (!isset($SETTINGS['duo']) || $SETTINGS['duo'] == 0) {
    '.$LANG['index_change_pw'].'</li>';
}
'.$LANG['menu_title_new_personal_saltkey'].'</li>
            <li id="but_reset_psk"><i class="fa fa-eraser fa-fw"></i> &nbsp;'.$LANG['personal_saltkey_lost'].'</li>
         </ul>
      </li>
   </ul>
</div>

<div style="float:left;width:95%;margin:10px 0 5px 10px;">
    <hr>
    <div style="margin-bottom:6px;">
        <i class="fa fa-child fa-fw fa-lg"></i>&nbsp;
        '.$LANG['index_last_seen'].' ', isset($SETTINGS['date_format']) ? date($SETTINGS['date_format'], $_SESSION['derniere_connexion']) : date("d/m/Y", $_SESSION['derniere_connexion']), ' '.$LANG['at'].' ', isset($SETTINGS['time_format']) ? date($SETTINGS['time_format'], $_SESSION['derniere_connexion']) : date("H:i:s", $_SESSION['derniere_connexion']), '
    </div>';
if (isset($_SESSION['last_pw_change']) && !empty($_SESSION['last_pw_change'])) {
    ">
        <i class="fa fa-calendar fa-fw fa-lg"></i>&nbsp;'. $LANG['index_last_pw_change'].' ', isset($SETTINGS['date_format']) ? date($SETTINGS['date_format'], $_SESSION['last_pw_change']) : (isset($_SESSION['last_pw_change']) ? date("d/m/Y", $_SESSION['last_pw_change']) : "-").'. ', $_SESSION['numDaysBeforePwExpiration'] == "infinite" ? '' : $LANG['index_pw_expiration'].' '.$_SESSION['numDaysBeforePwExpiration'].' '.$LANG['days'].'
    </div>';
}
margin-top:6px;">
        <i class="fa fa-cloud-upload fa-fw fa-lg"></i>&nbsp;
        <span id="plupload_runtime2" class="ui-state-error ui-corner-all" style="width:350px;">'.$LANG['error_upload_runtime_not_found'].'</span>
        <input type="hidden" id="upload_enabled2" value="" />
    </div>
    <hr>
    <div style="margin-bottom:6px;">
        <i class="fa fa-code-fork fa-fw fa-lg"></i>&nbsp;'. $LANG['tree_load_strategy'].':&nbsp;<span style="cursor:pointer; font-weight:bold;" class="editable_select" id="treeloadstrategy_'.$_SESSION['user_id'].'" title="'.$LANG['click_to_change'].'">'.$_SESSION['user_settings']['treeloadstrategy'].'</span>&nbsp;<i class="fa fa-pencil fa-fw jeditable-activate" style="cursor:pointer;"></i>
    </div>';

if ((isset($_SESSION['user_settings']['usertimezone']) === true && $_SESSION['user_settings']['usertimezone'] !== "not_defined") || isset($SETTINGS['timezone']) === true) {
    ">
        <i class="fa fa-clock-o fa-fw fa-lg"></i>&nbsp;'. $LANG['timezone_selection'].':&nbsp;<span style="cursor:pointer; font-weight:bold;" class="editable_timezone" id="usertimezone_'.$_SESSION['user_id'].'" title="'.$LANG['click_to_change'].'">', (isset($_SESSION['user_settings']['usertimezone']) && $_SESSION['user_settings']['usertimezone'] !== "not_defined") ? $_SESSION['user_settings']['usertimezone'] : $SETTINGS['timezone'], '</span>&nbsp;<i class="fa fa-pencil fa-fw jeditable-activate" style="cursor:pointer;"></i>
    </div>';
}

">
        <i class="fa fa-language fa-fw fa-lg"></i>&nbsp;'. $LANG['user_language'].':&nbsp;<span style="cursor:pointer; font-weight:bold;" class="editable_language" id="userlanguage_'.$_SESSION['user_id'].'" title="'.$LANG['click_to_change'].'">', isset($_SESSION['user_language']) ? $_SESSION['user_language'] : $SETTINGS['default_language'], '</span>&nbsp;<i class="fa fa-pencil fa-fw jeditable-activate" style="cursor:pointer;"></i>
    </div>';


if (isset($SETTINGS['agses_authentication_enabled']) && $SETTINGS['agses_authentication_enabled'] == 1) {
    ">
        <i class="fa fa-id-card-o fa-lg"></i>&nbsp;'. $LANG['user_profile_agses_card_id'].':&nbsp;<span style="cursor:pointer; font-weight:bold;" class="editable_textarea" id="agses-usercardid_'.$_SESSION['user_id'].'" title="'.$LANG['click_to_change'].'">', isset($_SESSION['user_settings']['agses-usercardid']) ? $_SESSION['user_settings']['agses-usercardid'] : '', '</span>&nbsp;<i class="fa fa-pencil fa-fw jeditable-activate" style="cursor:pointer;"></i>
    </div>';
}

margin:3px 0 10px 0;text-align:center;padding:4px;" id="field_warning" class="ui-widget-content ui-state-error ui-corner-all"></div>

<div style="float:left;width:100%;margin-top:3px;">
    <div style="text-align:center;margin:5px;padding:3px;display:none;" id="profile_info_box" class="ui-widget ui-state-highlight ui-corner-all"></div>
    <div style="height:20px;text-align:center;margin:2px;" id="change_pwd_error" class=""></div>
    <div id="upload_container_photo" style="display:none;"></div>
    <div id="filelist_photo" style="display:none;"></div>';


if (!isset($SETTINGS['duo']) || $SETTINGS['duo'] == 0) {
     padding:5px;" class="ui-widget ui-state-default">
        <div style="text-align:center;margin:5px;padding:3px;" id="change_pwd_complexPw" class="ui-widget ui-state-active ui-corner-all"></div>
        <label for="new_pw" class="form_label">'.$LANG['index_new_pw'].' :</label>
        <input type="password" size="15" name="new_pw" id="new_pw" />
        <br />
        <label for="new_pw2" class="form_label">'.$LANG['index_change_pw_confirmation'].' :</label>
        <input type="password" size="15" name="new_pw2" id="new_pw2" />
        <div id="pw_strength" style="margin:10px 0 10px 120px;text-align:center;"></div>
        <input type="hidden" id="pw_strength_value" />
        <span class="button" id="button_change_pw">'.$LANG['index_change_pw_button'].'</span>&nbsp;
        <span id="password_change_wait" style="display:none;"><i class="fa fa-cog fa-spin"></i>&nbsp;'.$LANG['please_wait'].'</span>
    </div>';
}


padding:5px;" class="ui-widget ui-state-default">
      <div style="margin-bottom:4px; padding:6px;" class="ui-state-highlight">
         <i class="fa fa-exclamation-triangle fa-fw mi-red"></i>&nbsp;'.$LANG['new_saltkey_warning'].'
      </div>
        <label for="new_personal_saltkey" class="form_label">'.$LANG['new_saltkey'].' :</label>
      <input type="text" size="30" name="new_personal_saltkey" id="new_personal_saltkey" class="text_without_symbols tip" title="'.$LANG['text_without_symbols'].'" />
      <br />
      <label for="old_personal_saltkey" class="form_label">'.$LANG['old_saltkey'].' :</label>
      <input type="text" size="30" name="old_personal_saltkey" id="old_personal_saltkey" value="" class="text_without_symbols" />

      <div style="margin-top:4px;">
         <span class="button" id="button_change_psk">'.$LANG['index_change_pw_button'].'</span>&nbsp;
         <span id="psk_change_wait" style="display:none;"><i class="fa fa-cog fa-spin"></i>&nbsp;<span id="psk_change_wait_info">'.$LANG['please_wait'].'</span></span>
      </div>
   </div>';



padding:5px;" class="ui-widget ui-state-default">
        <div style="margin-bottom:4px; padding:6px;" class="ui-state-highlight">
            <i class="fa fa-exclamation-triangle fa-fw mi-red"></i>&nbsp;'.$LANG['new_saltkey_warning_lost'].'
        </div>

        <div style="margin-top:4px;">
            <input type="checkbox" id="reset_psk_confirm" />&nbsp;<label for="reset_psk_confirm">'.$LANG['please_confirm_operation'].'</label>
        </div>

        <div style="margin-top:4px;">
            <span class="button" id="button_reset_psk">'.$LANG['continue'].'</span>&nbsp;
            <span id="psk_reset_wait" style="display:none;"><i class="fa fa-cog fa-spin"></i>&nbsp;<span id="psk_reset_wait_info">'.$LANG['please_wait'].'</span></span>
        </div>
   </div>';



if (isset($_SESSION['user_language']) && $_SESSION['user_language'] !== "0") {
    $SETTINGS_EXT['pwComplexity'] = array(
        0=>array(0, $LANG['complex_level0']),
        25=>array(25, $LANG['complex_level1']),
        50=>array(50, $LANG['complex_level2']),
        60=>array(60, $LANG['complex_level3']),
        70=>array(70, $LANG['complex_level4']),
        80=>array(80, $LANG['complex_level5']),
        90=>array(90, $LANG['complex_level6'])
    );
}
?>
<script type="text/javascript" src="includes/js/functions.js"></script>
<script type="text/javascript">
$(function() {
    $(".tip").tooltipster({multiple: true});
    
    $("
        $("
        $("
      $("

      if ($("
         $("
         $("
      }
    });

    
    if ($("
        $("
            "requirements": {},
            "container": "
            "defaultText" : "<?php  ?>",
            "ratings": [
                {"minScore": 0,
                    "className": "meterFail",
                    "text": "<?php  ?>"
                },
                {"minScore": 25,
                    "className": "meterWarn",
                    "text": "<?php  ?>"
                },
                {"minScore": 50,
                    "className": "meterWarn",
                    "text": "<?php  ?>"
                },
                {"minScore": 60,
                    "className": "meterGood",
                    "text": "<?php  ?>"
                },
                {"minScore": 70,
                    "className": "meterGood",
                    "text": "<?php  ?>"
                },
                {"minScore": 80,
                    "className": "meterExcel",
                    "text": "<?php  ?>"
                },
                {"minScore": 90,
                    "className": "meterExcel",
                    "text": "<?php  ?>"
                }
            ]
        });
    }
    $("
        "score.simplePassMeter" : function(jQEvent, score) {
            $("
        }
    });

    
    $("
        $("
        if ($("
            if (parseInt($("
                $("
                var data = '{"new_pw":"'+sanitizeString($("
                $.post(
                    "sources/main.queries.php",
                    {
                        type                : "change_pw",
                        change_pw_origine   : "user_change",
                        complexity          : $("
                        data                : prepareExchangedData(data, "encode", "<?php  ?>")
                    },
                    function(data) {
                        if (data[0].error == "already_used") {
                            $("
                            $("
                        } else if (data[0].error == "complexity_level_not_reached") {
                            $("
                            $("
                        } else if (data[0].error == "pwd_hash_not_correct") {
                            $("
                            $("
                        } else {
                            $("
                            $("
                            $("
                        }
                        $("
                        $("

                        $(this).delay(2000).queue(function() {
                            $("
                            $(this).dequeue();
                        });
                    },
                    "json"
                );
            } else {
                $("
                $(this).delay(1000).queue(function() {
                    $("
                    $(this).dequeue();
                });
            }
        } else {
            $("
            $(this).delay(1000).queue(function() {
                $("
                $(this).dequeue();
            });
        }
    });

    
    var uploader_photo = new plupload.Uploader({
        runtimes : "gears,html5,flash,silverlight,browserplus",
        browse_button : "profile_photo",
        container : "upload_container_photo",
        max_file_size : "2mb",
        chunk_size : "1mb",
        unique_names : true,
        dragdrop : true,
        multiple_queues : false,
        multi_selection : false,
        max_file_count : 1,
        filters : [
            {title : "PNG files", extensions : "png"}
        ],
        resize : {
            width : "90",
            height : "90",
            quality : "90"
        },
        url : "sources/upload/upload.files.php",
        flash_swf_url : "includes/libraries/Plupload/plupload.flash.swf",
        silverlight_xap_url : "includes/libraries/Plupload/plupload.silverlight.xap",
        init: {
            FilesAdded: function(up, files) {
                
                $.post(
                    "sources/main.queries.php",
                    {
                        type : "save_token",
                        size : 25,
                        capital: true,
                        numeric: true,
                        ambiguous: true,
                        reason: "avatar_profile_upload",
                        duration: 10
                    },
                    function(data) {
                        $("
                        up.start();
                    },
                    "json"
                );
            },
            BeforeUpload: function (up, file) {
                var tmp = Math.random().toString(36).substring(7);

                up.settings.multipart_params = {
                    "PHPSESSID":"<?php  ?>",
                    "type_upload":"upload_profile_photo",
                    "user_token": $("
                };
            }
        }
    });

    
    uploader_photo.bind("Init", function(up, params) {
        $("
        $("
    });

    
    uploader_photo.bind("Error", function(up, err) {
        $("
            ", Message: " + err.message +
            (err.file ? ", File: " + err.file.name : "") +
            "</div>"
        );
        up.refresh(); 
    });

     
    uploader_photo.bind("FileUploaded", function(up, file, object) {
        
        var myData = prepareExchangedData(object.response, "decode", "<?php  ?>");

        
        $("
        $("
        $("
    });

    uploader_photo.init();

   $("
      $("
      $("
   });

    
    $(".editable_textarea").editable("sources/users.queries.php", {
        onsubmit: function(settings, value) {
            console.log(value);
        },
        indicator : "<img src=\'includes/images/loading.gif\' />",
        type   : "text",
        submit : "<i class=\'fa fa-check mi-green\'></i>&nbsp;",
        cancel : "<i class=\'fa fa-remove mi-red\'></i>&nbsp;",
        name   : "newValue",
        width  : 220
    });
    $(".editable_select").editable("sources/users.queries.php", {
        indicator : "<img src=\'includes/images/loading.gif\' />",
        data   : " {'full':'<?php  ?>','sequential':'<?php  ?>', 'selected':'<?php  ?>'}",
        type   : 'select',
        select : true,
        onblur : "cancel",
        submit : "<i class=\'fa fa-check mi-green\'></i>&nbsp;",
        cancel : "<i class=\'fa fa-remove mi-red\'></i>&nbsp;",
        name : "newValue"
    });
    $(".editable_language").editable("sources/users.queries.php", {
        indicator : "<img src=\'includes/images/loading.gif\' />",
        data   : '<?php  ?>',
        type   : 'select',
        select : true,
        onblur : "cancel",
        submit : "<i class=\'fa fa-check mi-green\'></i>&nbsp;",
        cancel : "<i class=\'fa fa-remove mi-red\'></i>&nbsp;",
        name : "newValue"
    });
    $(".editable_timezone").editable("sources/users.queries.php", {
        indicator : "<img src=\'includes/images/loading.gif\' />",
        data : '<?php  ?>',
        type   : 'select',
        select : true,
        onblur : "cancel",
        submit : "<i class=\'fa fa-check mi-green\'></i>&nbsp;",
        cancel : "<i class=\'fa fa-remove mi-red\'></i>&nbsp;",
        name : "newValue"
    });
    $(".editable_yesno").editable("sources/users.queries.php", {
        indicator : "<img src=\'includes/images/loading.gif\' />",
        data : '{"O":"<?php  ?>","1":"<?php  ?>"}',
        type   : 'select',
        select : true,
        onblur : "cancel",
        submit : "<i class=\'fa fa-check mi-green\'></i>&nbsp;",
        cancel : "<i class=\'fa fa-remove mi-red\'></i>&nbsp;",
        name : "newValue"
    });

    $('.jeditable-activate').click(function() {
        $(this).prev().click();
    });


    
    $("
      
      $("

      
      $("
      $("

      $("
      $("
    });

    
    $("
        $("

        if ($("
            $("
            $("

            $(this).delay(1000).queue(function() {
                $("
                $("
                $(this).dequeue();
            });
            return false;
        }

        var data_to_share = "{\"sk\":\"" + sanitizeString($("

        $("

        
        $.post(
            "sources/main.queries.php",
            {
                type            : "change_personal_saltkey",
                data_to_share   : prepareExchangedData(data_to_share, "encode", "<?php  ?>"),
                key             : "<?php  ?>"
            },
            function(data) {
                data = prepareExchangedData(data , "decode", "<?php  ?>");
                if (data.error == "no") {
                    changePersonalSaltKey(data_to_share, data.list, data.nb_total);
                } else {
                    $("
                    $("

                    $(this).delay(3000).queue(function() {
                        $("
                        $("
                        $(this).dequeue();
                    });
                    return false;
                }
            }
        );
    });


    
    $("
        
        $("

        
        $("

        $("
        $("
    });
    $("
        if ($("
            $("

            $.post(
                "sources/main.queries.php",
                {
                type    : "reset_personal_saltkey",
                key             : "<?php  ?>"
                },
                function(data) {
                    $("
                    $("

                    $(this).delay(1500).queue(function() {
                        $("
                        $("
                        $(this).dequeue();
                    });

                    $("
                    location.reload();
                }
            );
        }
    });

    $( ".button" ).button();

   $(".menu").menu({
      icon: {},
      position: { my: "left top", at: "right top" }
   });

   
   $(".text_without_symbols").bind("keydown", function (event) {
      switch (event.keyCode) {
         case 8:  
         case 9:  
         case 13: 
         case 37: 
         case 38: 
         case 39: 
         case 40: 
         break;
         default:
         var regex = new RegExp("^[a-zA-Z0-9.,/
         var key = event.key;
         if (!regex.test(key)) {
            $("
            event.preventDefault();
            return false;
         }
         break;
      }
   }).bind("paste",function(e){
      $("
      e.preventDefault();
   });
});


function changePersonalSaltKey(credentials, ids, nb_total)
{
   
   var aIds = ids.split(",");
   var currentID = aIds[0];
   aIds.shift();
   var nb = aIds.length;
   aIds = aIds.toString();

   if (nb == 0)
      $("
   else
      $("

    var data = "{\"psk\":\""+sanitizeString($("
    $.post(
      "sources/main.queries.php",
        {
           type    : "store_personal_saltkey",
           data    : prepareExchangedData(data, "encode", "<?php  ?>"),
           debug   : true
        },
        function(data){
            data = prepareExchangedData(data , "decode", "<?php  ?>");
            console.log(data);
            if (data.error !== "") {
                
                $("
                $(this).delay(4000).queue(function() {
                    $("
                    $(this).dequeue();
                });
            } else {
                $.post(
                    "sources/utils.queries.php",
                    {
                        type            : "reencrypt_personal_pwd",
                        data_to_share   : prepareExchangedData(credentials, "encode", "<?php  ?>"),
                        currentId       : currentID,
                        key             : "<?php  ?>"
                    },
                    function(data){
                        if (currentID === "") {
                            $("
                            location.reload();
                        } else {
                            if (data[0].error === "") {
                            changePersonalSaltKey(credentials, aIds, nb_total);
                            } else {
                                $("
                            }
                        }
                    },
                    "json"
                );
            }
        }
    );
}
</script>
