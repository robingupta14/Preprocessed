<?php





class PathWithBackUrlExtension extends AbstractExtension
{
    
    private $routingExtension;

    
    private $backUrlProvider;

    
    private $requestStack;

    
    public function __construct(
        RoutingExtension $routingExtension,
        BackUrlProvider $backUrlProvider,
        $requestStack
    ) {
        $this->routingExtension = $routingExtension;
        $this->backUrlProvider = $backUrlProvider;
        $this->requestStack = $requestStack;
    }

    
    public function getFunctions()
    {
        return [
            new TwigFunction(
                'pathWithBackUrl',
                [$this, 'getPathWithBackUrl']
            ),
        ];
    }

    
    public function getPathWithBackUrl($name, $parameters = [], $relative = false)
    {
        $fallbackPath = $this->routingExtension->getPath($name, $parameters, $relative);

        if (null === $this->requestStack) {
            return $fallbackPath;
        }

        $request = $this->requestStack->getCurrentRequest();

        if (null === $request) {
            return $fallbackPath;
        }

        $backUrl = $this->backUrlProvider->getBackUrl($request);

        if (!$backUrl) {
            return $fallbackPath;
        }

        return $backUrl;
    }
}
