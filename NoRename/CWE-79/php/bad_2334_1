<?php





$response = PMA_Response::getInstance();
$header   = $response->getHeader();
$scripts  = $header->getScripts();
$scripts->addFile('makegrid.js');
$scripts->addFile('sql.js');
$scripts->addFile('jqplot/jquery.jqplot.js');
$scripts->addFile('jqplot/plugins/jqplot.canvasTextRenderer.js');
$scripts->addFile('jqplot/plugins/jqplot.canvasAxisLabelRenderer.js');
$scripts->addFile('jqplot/plugins/jqplot.dateAxisRenderer.js');
$scripts->addFile('jqplot/plugins/jqplot.highlighter.js');
$scripts->addFile('jqplot/plugins/jqplot.cursor.js');
$scripts->addFile('canvg/canvg.js');
$scripts->addFile('jquery/jquery-ui-timepicker-addon.js');
$scripts->addFile('tbl_zoom_plot_jqplot.js');

$table_search = new PMA_TableSearch($db, $table, "zoom");



if (isset($_REQUEST['get_data_row']) && $_REQUEST['get_data_row'] == true) {
    $extra_data = array();
    $row_info_query = 'SELECT * FROM `' . $_REQUEST['db'] . '`.`'
        . $_REQUEST['table'] . '` WHERE ' .  $_REQUEST['where_clause'];
    $result = $GLOBALS['dbi']->query(
        $row_info_query . ";", null, PMA_DatabaseInterface::QUERY_STORE
    );
    $fields_meta = $GLOBALS['dbi']->getFieldsMeta($result);
    while ($row = $GLOBALS['dbi']->fetchAssoc($result)) {
        
        $i = 0;
        foreach ($row as $col => $val) {
            if ($fields_meta[$i]->type == 'bit') {
                $row[$col] = PMA_Util::printableBitValue(
                    $val, $fields_meta[$i]->length
                );
            }
            $i++;
        }
        $extra_data['row_info'] = $row;
    }
    PMA_Response::getInstance()->addJSON($extra_data);
    exit;
}



if (isset($_REQUEST['change_tbl_info']) && $_REQUEST['change_tbl_info'] == true) {
    $response = PMA_Response::getInstance();
    $field = $_REQUEST['field'];
    if ($field == 'pma_null') {
        $response->addJSON('field_type', '');
        $response->addJSON('field_collation', '');
        $response->addJSON('field_operators', '');
        $response->addJSON('field_value', '');
        exit;
    }
    $key = array_search($field, $table_search->getColumnNames());
    $properties = $table_search->getColumnProperties($_REQUEST['it'], $key);
    $response->addJSON('field_type', $properties['type']);
    $response->addJSON('field_collation', $properties['collation']);
    $response->addJSON('field_operators', $properties['func']);
    $response->addJSON('field_value', $properties['value']);
    exit;
}


$url_query .= '&amp;goto=tbl_select.php&amp;back=tbl_select.php';



if (! isset($goto)) {
    $goto = $GLOBALS['cfg']['DefaultTabTable'];
}

$err_url   = $goto . '?' . PMA_URL_getCommon($db, $table);


if ( !isset($_POST['zoom_submit']) || $_POST['dataLabel'] == '') {
    $dataLabel = PMA_getDisplayField($db, $table);
} else {
    $dataLabel = $_POST['dataLabel'];
}


$response->addHTML($table_search->getSecondaryTabs());
$response->addHTML($table_search->getSelectionForm($goto, $dataLabel));


if (isset($_POST['zoom_submit'])
    && $_POST['criteriaColumnNames'][0] != 'pma_null'
    && $_POST['criteriaColumnNames'][1] != 'pma_null'
    && $_POST['criteriaColumnNames'][0] != $_POST['criteriaColumnNames'][1]
) {
    
    $sql_query = $table_search->buildSqlQuery();
    $sql_query .= ' LIMIT ' . $_POST['maxPlotLimit'];

    
    $result = $GLOBALS['dbi']->query(
        $sql_query . ";", null, PMA_DatabaseInterface::QUERY_STORE
    );
    $fields_meta = $GLOBALS['dbi']->getFieldsMeta($result);
    while ($row = $GLOBALS['dbi']->fetchAssoc($result)) {
        
        
        $tmpRow = array();
        foreach ($row as $val) {
            $tmpRow[] = $val;
        }
        
        $uniqueCondition = PMA_Util::getUniqueCondition(
            $result, count($table_search->getColumnNames()), $fields_meta, $tmpRow,
            true
        );
        
        $row['where_clause'] = $uniqueCondition[0];

        $tmpData = array(
            $_POST['criteriaColumnNames'][0] =>
                $row[$_POST['criteriaColumnNames'][0]],
            $_POST['criteriaColumnNames'][1] =>
                $row[$_POST['criteriaColumnNames'][1]],
            'where_clause' => $uniqueCondition[0]
        );
        $tmpData[$dataLabel] = ($dataLabel) ? $row[$dataLabel] : '';
        $data[] = $tmpData;
    }
    unset($tmpData);

    
    $response->addHTML($table_search->getZoomResultsForm($goto, $data));
}
?>
