<?php

abstract class StringField extends DBField {
	protected $nullifyEmpty = true;

	static $casting = array(
		"LimitCharacters" => "Text",
		"Lower" => "Text",
		"Upper" => "Text",
	);

	
	function __construct($name = null, $options = array()) {
		
		if(is_array($options)){
			$this->setOptions($options);
		}
		parent::__construct($name);
	}
	
	
	function setOptions(array $options = array()) {
		if(array_key_exists("nullifyEmpty", $options)) {
			$this->nullifyEmpty = $options["nullifyEmpty"] ? true : false;
		}
	}
	
	
	function setNullifyEmpty($value) {
		$this->nullifyEmpty = ($value ? true : false);
	}
	
	function getNullifyEmpty() {
		return $this->nullifyEmpty;
	}

	
	function hasValue() {
		return ($this->value || $this->value == '0') || ( !$this->nullifyEmpty && $this->value === '');
	}

	
	function prepValueForDB($value) {
		if ( !$this->nullifyEmpty && $value === '' ) {
			return "'" . Convert::raw2sql($value) . "'";
		} else {
			return parent::prepValueForDB($value);
		}
	}

	
	
	function Lower() {
		return DBField::create(get_class($this), strtolower($this->value), $this->name);
	}

	
	function Upper() {
		return DBField::create(get_class($this), strtoupper($this->value), $this->name);
	}

}
