<?php













function titre_url($title)
{
    return trim(diacritique($title), '-');
}


function diacritique($texte)
{
    $texte = strip_tags($texte);
    $texte = html_entity_decode($texte, ENT_QUOTES, 'UTF-8'); 
    $texte = htmlentities($texte, ENT_QUOTES, 'UTF-8'); 
    $texte = preg_replace('
    $texte = preg_replace('
    $texte = preg_replace('
    $texte = preg_replace('
    $texte = preg_replace('
    $texte = strtolower($texte); 
    $texte = preg_replace('
    return $texte;
}


function parse_texte_paragraphs($texte)
{
    
    $texte_formate = preg_replace('
    
    $texte_formate = preg_replace('
    $block_elements = 'address|article|aside|audio|blockquote|canvas|dd|li|div|[oud]l|fieldset|fig(caption|ure)|footer|form|h[1-6]|header|hgroup|hr|main|nav|noscript|output|p|pre|prebtcode|section|table|thead|tbody|tfoot|tr|td|video';

    $texte_final = '';
    $finished = false;
    
    while ($finished === false) {
        $matches = array();
        
        if (preg_match('
            
            $texte_retire = $matches[0];
            
            $texte_nl2br = "\n".nl2br($texte_retire)."\n";
            
            $texte_final .= preg_replace('
            
            $texte_restant = preg_replace('
            
            $texte_restant = preg_replace('
            
            $finished = (strlen($texte_retire) === 0) ? true : false;
        } else {
            
            
            $texte_restant = preg_replace('
            
            $texte_retire = trim(substr($texte_formate, 0, -strlen($texte_restant)));
            
            if (strlen($texte_retire) === 0) {
                
                if (strlen($texte_restant) !== 0) {
                    $texte_final .= "\n".'<p>'.nl2br($texte_restant).'</p>'."\n";
                }
                
                $finished = true;

            
            } else {
                $texte_final .= "\n".'<p>'.nl2br($texte_retire).'</p>'."\n";
            }
        }

        
        $texte_restant = preg_replace('
        
        $texte_formate = $texte_restant;
    }
    
    $texte_final = preg_replace('
    return $texte_final;
}


function parse_texte_code($texte, $code_before)
{
    if ($code_before) {
        preg_match_all('
        foreach ($code_before as $i => $code) {
            $pos = strpos($texte, $code_after[$i][0]);
            if ($pos !== false) {
                 $texte = substr_replace($texte, '<pre'.((isset($code_after[$i][1])) ? $code_after[$i][1] : '').'><code>'.htmlspecialchars(htmlspecialchars_decode($code_before[$i][3])).'</code></pre>', $pos, strlen($code_after[$i][0]));
            }
        }
    }
    return $texte;
}


function markup_clean_href($matches)
{
    
    $allowed = array('http:
    
    if ((
            !filter_var($matches['2'], FILTER_VALIDATE_URL)
         || !preg_match('
        )
     && !preg_match('/^
    ) {
        return $matches['0'];
    }
    
    if (empty(trim($matches['1']))) {
        return $matches['1'].'<a href="'.$matches['2'].'">'.$matches['2'].'</a>';
    } else {
        return '<a href="'.$matches['2'].'">'.$matches['1'].'</a>';
    }
}


function markup($text)
{
    $text = preg_replace('
    $text = preg_replace("/(\r\n|\r\n\r|\n|\n\r|\r)/", "\r", $text);
    $tofind = array(
        
        
         '
         '
         '
         '
         '
         '
         '
    );
    $toreplace = array(
        
        
         '<b>$1</b>',
         '<em>$1</em>',
         '<del>$1</del>',
         '<u>$1</u>',
         '<blockquote>$1</blockquote>'."\r",
         '<prebtcode></prebtcode>'."\r",
         '<prebtcode data-language="$1"></prebtcode>'."\r",
    );

    preg_match_all('
    $texte_formate = preg_replace('
    $texte_formate = preg_replace($tofind, $toreplace, $texte_formate);
    $texte_formate = preg_replace_callback('
    $texte_formate = preg_replace_callback('
    $texte_formate = parse_texte_paragraphs($texte_formate);
    $texte_formate = parse_texte_code($texte_formate, $code_contents);

    return $texte_formate;
}


function date_formate($id, $format_force = '')
{
    $retour = '';
    $date = decode_id($id);
        $jour_l = jour_en_lettres($date['jour'], $date['mois'], $date['annee']);
        $mois_l = mois_en_lettres($date['mois']);
        $format = array (
            $date['jour'].'/'.$date['mois'].'/'.$date['annee'],          
            $date['mois'].'/'.$date['jour'].'/'.$date['annee'],          
            $date['jour'].' '.$mois_l.' '.$date['annee'],                
            $jour_l.' '.$date['jour'].' '.$mois_l.' '.$date['annee'],    
            $jour_l.' '.$date['jour'].' '.$mois_l,                       
            $mois_l.' '.$date['jour'].', '.$date['annee'],               
            $jour_l.', '.$mois_l.' '.$date['jour'].', '.$date['annee'],  
            $date['annee'].'-'.$date['mois'].'-'.$date['jour'],          
            substr($jour_l, 0, 3).'. '.$date['jour'].' '.$mois_l,        
        );

    if ($format_force != '') {
        $retour = $format[$format_force];
    } else {
        $retour = $format[$GLOBALS['format_date']];
    }
    return ucfirst($retour);
}


function heure_formate($id)
{
    $date = decode_id($id);
    $timestamp = mktime($date['heure'], $date['minutes'], $date['secondes'], $date['mois'], $date['jour'], $date['annee']);
    $format = array (
        'H:i:s',    
        'H:i',      
        'h:i:s A',  
        'h:i A',    
    );
    return date($format[$GLOBALS['format_heure']], $timestamp);
}


function date_formate_iso($id)
{
    $date = decode_id($id);
    $timestamp = mktime($date['heure'], $date['minutes'], $date['secondes'], $date['mois'], $date['jour'], $date['annee']);
    $date_iso = date('c', $timestamp);
    return $date_iso;
}


function en_lettres($captchavalue)
{
    return $GLOBALS['lang'][strval($captchavalue)];
}


function jour_en_lettres($jour, $mois, $annee)
{
    $date = date('w', mktime(0, 0, 0, $mois, $jour, $annee));
    switch ($date) {
        case 0:
            return $GLOBALS['lang']['dimanche'];
        break;
        case 1:
            return $GLOBALS['lang']['lundi'];
        break;
        case 2:
            return $GLOBALS['lang']['mardi'];
        break;
        case 3:
            return $GLOBALS['lang']['mercredi'];
        break;
        case 4:
            return $GLOBALS['lang']['jeudi'];
        break;
        case 5:
            return $GLOBALS['lang']['vendredi'];
        break;
        case 6:
            return $GLOBALS['lang']['samedi'];
        break;
    }
    return $nom;
}


function mois_en_lettres($numero, $abbrv = 0)
{
    if ($abbrv == 1) {
        switch ($numero) {
            case '01':
                return $GLOBALS['lang']['janv.'];
            break;
            case '02':
                return $GLOBALS['lang']['fev.'];
            break;
            case '03':
                return $GLOBALS['lang']['mars.'];
            break;
            case '04':
                return $GLOBALS['lang']['avr.'];
            break;
            case '05':
                return $GLOBALS['lang']['mai.'];
            break;
            case '06':
                return $GLOBALS['lang']['juin.'];
            break;
            case '07':
                return $GLOBALS['lang']['juil.'];
            break;
            case '08':
                return $GLOBALS['lang']['aout.'];
            break;
            case '09':
                return $GLOBALS['lang']['sept.'];
            break;
            case '10':
                return $GLOBALS['lang']['oct.'];
            break;
            case '11':
                return $GLOBALS['lang']['nov.'];
            break;
            case '12':
                return $GLOBALS['lang']['dec.'];
            break;
        }
    } else {
        switch ($numero) {
            case '01':
                return $GLOBALS['lang']['janvier'];
            break;
            case '02':
                return $GLOBALS['lang']['fevrier'];
            break;
            case '03':
                return $GLOBALS['lang']['mars'];
            break;
            case '04':
                return $GLOBALS['lang']['avril'];
            break;
            case '05':
                return $GLOBALS['lang']['mai'];
            break;
            case '06':
                return $GLOBALS['lang']['juin'];
            break;
            case '07':
                return $GLOBALS['lang']['juillet'];
            break;
            case '08':
                return $GLOBALS['lang']['aout'];
            break;
            case '09':
                return $GLOBALS['lang']['septembre'];
            break;
            case '10':
                return $GLOBALS['lang']['octobre'];
            break;
            case '11':
                return $GLOBALS['lang']['novembre'];
            break;
            case '12':
                return $GLOBALS['lang']['decembre'];
            break;
        }
    }
}


function nombre_objets($nb, $type)
{
    switch ($nb) {
        case 0:
            return $GLOBALS['lang']['note_no_'.$type];
        case 1:
            return $nb.' '.$GLOBALS['lang']['label_'.$type];
        default:
            return $nb.' '.$GLOBALS['lang']['label_'.$type.'s'];
    }
}
