<?php




$User->check_user_session();


$csrf = $User->Crypto->csrf_cookie ("create", "scan");


if(!is_numeric($_POST['subnetId']))                        { $Result->show("danger", "Invalid subnet Id", true); die(); }
if(!preg_match('/[^A-Za-z0-9-]*$/', $_POST['type']))       { $Result->show("danger", "Invalid scan type", true); die(); }



$cmd = $Scan->php_exec." ".dirname(__FILE__) . '/../../../functions/scan/subnet-scan-icmp-execute.php'." 'discovery' ".$_POST['subnetId'];


exec($cmd, $output, $retval);


$output = array_values(array_filter($output));
$script_result = json_decode($output[0]);


if ($User->settings->scanPingType=="fping" && isset($script_result->values->alive)) {
	
	$to_scan_hosts = $Scan->prepare_addresses_to_scan ("discovery", $_POST['subnetId']);
	
	foreach($script_result->values->alive as $rk=>$result) {
		if(!in_array($Subnets->transform_address($result, "decimal"), $to_scan_hosts)) {
			unset($script_result->values->alive[$rk]);
		}
	}
	
	if (sizeof($script_result->values->alive)==0) {
		unset($script_result->values->alive);
	}
	
	else {
		$script_result->values->alive = array_values($script_result->values->alive);
	}
}





if(json_last_error()!=0)						{ $Result->show("danger", "Invalid JSON response"." - ".$Result->json_error_decode(json_last_error()), false); }

elseif($retval!==0) 							{ $Result->show("danger", "Error executing scan! Error code - $retval", false); }

elseif($script_result->status===1)				{ $Result->show("danger", $script_result->error, false); }

elseif(!isset($script_result->values->alive)) 	{ $Result->show("danger", _("No alive host found")."!", false); }

else {
	
	$subnet = $Subnets->fetch_subnet ("id", $_POST['subnetId']);
	$nsid = $subnet===false ? false : $subnet->nameserverId;

    
    $Tools = new Tools ($Database);
    $required_fields = $Tools->fetch_custom_fields ('ipaddresses');
    if($required_fields!==false) {
        foreach ($required_fields as $k=>$f) {
            if ($f['Null']!="NO") {
                unset($required_fields[$k]);
            }
        }
    }

	
	
	

	
	
	
	
	
    
	if (isset($required_fields)) {
		foreach ($required_fields as $field) {
            
		}
    }
	
	

	
	$m=0;
	foreach($script_result->values->alive as $ip) {
		
		$hostname = $DNS->resolve_address($ip, false, true, $nsid);

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		if (isset($required_fields)) {
    		foreach ($required_fields as $field) {
    			
    			$field['nameNew'] = str_replace(" ", "___", $field['name']);

    			

    			
    			if(substr($field['type'], 0,3) == "set" || substr($field['type'], 0,4) == "enum") {
    				
    				$tmp = substr($field['type'], 0,3)=="set" ? explode(",", str_replace(array("set(", ")", "'"), "", $field['type'])) : explode(",", str_replace(array("enum(", ")", "'"), "", $field['type']));
    				
    				if($field['Null']!="NO") { array_unshift($tmp, ""); }

    				
    				foreach($tmp as $v) {
    					if($v==@$address[$field['name']])	{  }
    					else								{  }
    				}
    				
    			}
    			
    			elseif($field['type'] == "date" || $field['type'] == "datetime") {
    				
    				if($timeP==0) {
    					
    					
    					
    					
    					
    					';
    					
    					';

    					
    					
    				}
    				$timeP++;

    				
    				if($field['type'] == "date")	{ $size = 10; $class='datepicker';		$format = "yyyy-MM-dd"; }
    				else							{ $size = 19; $class='datetimepicker';	$format = "yyyy-MM-dd"; }

    				
    				if(!isset($address[$field['name']]))	{  }
    				else									{  }
    			}
    			
    			elseif($field['type'] == "tinyint(1)") {
    				
    				$tmp = array(0=>"No",1=>"Yes");
    				
    				if($field['Null']!="NO") { $tmp[2] = ""; }

    				foreach($tmp as $k=>$v) {
    					if(strlen(@$address[$field['name']])==0 && $k==2)	{  }
    					elseif($k==@$address[$field['name']])				{  }
    					else												{  }
    				}
    				
    			}
    			
    			else {
    				
    			}

                
    		}
		}
		
		
		

		$m++;
	}

    
	$colspan = 4 + sizeof(@$required_fields);

	
	
	
	
	
	

	
	
	
	
	
	

	
	
}

'><span class='muted'>Scan method: ".$Scan->settings->scanPingType."</span></dov>";


if($_POST['debug']==1) 				{  print_r($output[0]);  }